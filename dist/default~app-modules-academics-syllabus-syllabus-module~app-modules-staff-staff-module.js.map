{"version":3,"sources":["webpack:///./src/app/modules/academics/syllabus/syllabus-progress/syllabus-progress.component.html","webpack:///./src/app/modules/academics/syllabus/syllabus-progress/syllabus-progress.component.scss","webpack:///./src/app/modules/academics/syllabus/syllabus-progress/syllabus-progress.component.ts"],"names":[],"mappings":"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","file":"default~app-modules-academics-syllabus-syllabus-module~app-modules-staff-staff-module.js","sourcesContent":["module.exports = \"<div class=\\\"px-sm-40 pt-sm-24\\\">\\n  <div class=\\\"py-8 px-20 font-size-18 text-uppercase\\\" translate>Syllabus Progress</div>\\n  <div class=\\\"mat-elevation-z3 simple-table-container radius-t-20\\\">\\n    <form [formGroup]=\\\"syllabusSearchForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end end\\\" class=\\\"p-20\\\">\\n        <button type=\\\"button\\\" mat-icon-button translate (click)=\\\"getHelpText('Syllabus Progress')\\\">  <mat-icon >info</mat-icon></button>\\n      </div>\\n      <mat-divider></mat-divider>\\n      <div class=\\\"p-20\\\">\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n           <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\"\\n            class=\\\"pr-sm-20\\\">\\n            <mat-label translate #board>Board</mat-label>\\n            <mat-select formControlName=\\\"boardId\\\" (selectionChange)=\\\"boardChanged($event)\\\" required>\\n              <mat-option *ngFor=\\\"let board of availableSchoolBoards\\\" [value]=\\\"board.value\\\">\\n                {{ board.label }}</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]='board.innerText' [validationControl]=\\\"syllabusSearchForm.controls.boardId\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\"\\n            class=\\\"pr-sm-20\\\">\\n            <mat-label translate #class>Class</mat-label>\\n            <mat-select  (selectionChange)=\\\"classChanged($event)\\\" formControlName=\\\"classId\\\" required>\\n              <mat-option *ngFor=\\\"let class of availableClasses\\\" [value]=\\\"class.value\\\">\\n                {{ class.label }}</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]='class.innerText' [validationControl]=\\\"syllabusSearchForm.controls.classId\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"pr-sm-20\\\">\\n            <mat-label translate #course>Course</mat-label>\\n            <mat-select required formControlName=\\\"courseId\\\" >\\n              <mat-option *ngFor=\\\"let course of coursesList\\\" [value]=\\\"course.value\\\">\\n                {{ course.label }}</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]='course.innerText' [validationControl]=\\\"syllabusSearchForm.controls.courseId\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\">\\n            <mat-label translate #section>Section</mat-label>\\n            <mat-select required formControlName=\\\"sectionId\\\">\\n              <mat-option *ngFor=\\\"let section of availableSections\\\" [value]=\\\"section.value\\\">\\n                {{ section.label }}</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]='section.innerText' [validationControl]=\\\"syllabusSearchForm.controls.sectionId\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"my-12\\\">\\n          <button mat-raised-button type=\\\"reset\\\" color=\\\"primary\\\" class=\\\"text-uppercase mx-12\\\" (click)=\\\"onClear()\\\">\\n            {{'Reset' | translate}}\\n          </button>\\n          <button mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n            {{'Search' | translate}}\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n\\n<app-table *ngIf=\\\"tabSettings?.rows?.length && syllabusSearchForm.valid\\\" [settings]=\\\"tabSettings\\\" (getTableData)='studentsData($event)'\\n  [massActionTemplateRef]=\\\"massActions\\\" (selectedRows)='selectedRows($event)' (rowBasedAction)=\\\"rowWiseActions($event)\\\"\\n  [disabled]=\\\"disbleSubmitBtn\\\" [templateRef]=\\\"addCourseTemplate\\\" [closeAddForm]=\\\"closeAddPanel\\\"\\n   [closeRowForm]='closeAddPanel'>\\n</app-table>\\n\\n\\n<ng-template #massActions>\\n  <form #scheduleGoForm=\\\"ngForm\\\"  (ngSubmit)=\\\"onSubmit()\\\">\\n    <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-form-field class=\\\"px-20 w-200\\\">\\n        <mat-label #actions translate>Actions</mat-label>\\n        <mat-select  (selectionChange)=\\\"onSubmit()\\\" [formControl]=\\\"scheduleController\\\" required>\\n          <mat-option  [value]=\\\"item.value\\\" *ngFor=\\\"let item of statusList\\\">\\n           {{item?.label}}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          <app-validation [labelName]='actions.innerText' [validationControl]=\\\"scheduleController\\\"\\n            [doValidate]=\\\"validate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n  </form>\\n</ng-template>\\n\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N5bGxhYnVzL3N5bGxhYnVzLXByb2dyZXNzL3N5bGxhYnVzLXByb2dyZXNzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, TemplateRef, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { SchoolSyllabusService } from 'app/service/syllabus/syllabus.service';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SyllabusSchedulesService } from 'app/service/syllabus/syllabus-schedules.service';\nimport { ClassTimetableService } from 'app/service/class-schedules/class-time-table.service';\nimport { CommonService } from 'app/service/common.service';\nimport { AppSettings } from 'app/app.constants';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { RouteConfig } from 'app/url.config';\n\n@Component({\n  selector: 'app-syllabus-progress',\n  templateUrl: './syllabus-progress.component.html',\n  styleUrls: ['./syllabus-progress.component.scss'],\n  providers: [SchoolSyllabusService, SyllabusSchedulesService, ClassTimetableService, StoreService]\n})\nexport class SyllabusProgressComponent extends CommonComponent implements OnInit {\n  @ViewChild('scheduleDateTemp') scheduleDateTemp:  TemplateRef<any>;\n  @ViewChild('scheduleGoForm') scheduleGoForm: any;\n  syllabusSearchForm: FormGroup;\n  syllabusDataList: any [] = [];\n  coursesList: any [] = [];\n  filterViewModel: any;\n  validate = true;\n  currentComponent = 'SyllabusProgressComponent';\n  // table\n  tabSettings: any = {};\n  closeAddPanel = true;\n  scheduleController = new FormControl(null, [Validators.required]);\n  cols: any [] = [];\n  rows: Array<any> = [];\n  statusList: any [] = [];\n  customDialog: any;\n  progressForm: FormGroup;\n  rowsSelected: any [] = [];\n  syllabusDetails: any;\n  constructor(public _fb: FormBuilder, public syllabusService: SchoolSyllabusService,\n     public snackBar: MatSnackBar, public route: ActivatedRoute, public syllabusSchedulesService: SyllabusSchedulesService,\n      // tslint:disable-next-line: max-line-length\n      private classTimetableService: ClassTimetableService, public commonService: CommonService, public router: Router,  public dialog: MatDialog, public dialogRef: MatDialog, public storeService: StoreService, public changeDetector: ChangeDetectorRef) {\n       super();\n   }\n\n  ngOnInit(): void {\n    this.statusList = [\n      {\n        label: 'Start Progress',\n        value: 'S_P'\n      },\n      {\n        label: 'Complete',\n        value: 'C_P'\n      },\n      {\n        label: 'Clear Status',\n        value: 'C_S'\n      }\n    ];\n    this.initializeForm();\n    const modelData = this.getModelComponent(this.currentComponent);\n    if (modelData){\n        this.syllabusSearchForm.patchValue(modelData);\n        this.getAvailableClasses(this.syllabusSearchForm.value.boardId);\n        this.getAvailableSections(this.syllabusSearchForm.value.boardId, this.syllabusSearchForm.value.classId);\n        this.getCourses();\n        this.onSearch();\n    }\n    this.getAvailableSchoolBoards();\n    this.intializetableSettings();\n  }\n  getAvailableSchoolBoards(): void {\n    this.availableSchoolBoards = [];\n    this.commonService.schoolBoards().subscribe(res => {\n      if (res.listViews !== undefined && res.listViews.length) {\n        res.listViews.forEach(element => {\n          this.availableSchoolBoards.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n        if (!this.syllabusSearchForm.value.boardId){\n          this.syllabusSearchForm.patchValue({\n            boardId: this.availableSchoolBoards[0].value\n          });\n          this.currentBoardId = this.availableSchoolBoards[0].value;\n          this.getAvailableClasses(this.currentBoardId);\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  intializetableSettings(): void{\n\n    this.cols = [\n      { field: 'chapter', header: 'Chapter', sort: false, innerHTML: true },\n      { field: 'topic', header: 'Topic', sort: false, innerHTML: true },\n      { field: 'subTopic', header: 'Sub Topic', sort: false, innerHTML: true },\n      { field: 'formatedStartDate', header: 'startDate', sort: false },\n      { field: 'formatedActualCompletionDate', header: 'Actual Completion Date', sort: false },\n      { field: 'status', header: 'Status', sort: false },\n      { field: 'actions', header: 'Actions', sort: false }\n    ];\n\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      // model: this.studentsSectionSView,\n      // tablename: '',\n      componentName: this.currentComponent,\n      isMultiDeleteRequired: false\n    };\n  }\n  setFilterViewModel(): void{\n    this.filterViewModel = {\n      boardId: 0, \n      classId: 0, \n      sectionId: 0,\n      courseId: 0\n    };\n  }\n  initializeForm(): void {\n    this.syllabusSearchForm = this._fb.group({\n      boardId: [null, Validators.required],\n      classId: [null, Validators.required],\n      courseId: [null, Validators.required],\n      sectionId: [null, Validators.required]\n    });\n    this.syllabusSearchForm.valueChanges.pipe(distinctUntilChanged()).subscribe(form => {\n      if (this.tabSettings){\n        this.tabSettings['rows'] = [];\n        this.changeDetector.detectChanges();\n      }\n    });\n\n    this.progressForm = this._fb.group({\n      startDate: [null, Validators.required],\n      actualcompletionDate: [null, Validators.required]\n    });\n  }\n  boardChanged(event, onManualChange = false): void {\n    if (event.value) {\n      if (!onManualChange){\n        this.syllabusSearchForm.patchValue({\n          classId: null,\n          courseId: null,\n          sectionId: null\n        });\n        this.availableClasses = [];\n        this.coursesList = [];\n        this.availableSections = [];\n      }\n      this.getAvailableClasses(event.value);\n    }\n  }\n  classChanged(event, onManualChange= false): void {\n    if (!onManualChange){\n      this.syllabusSearchForm.patchValue({\n        courseId: null,\n        sectionId: null\n      });\n      this.coursesList = [];\n      this.availableSections = [];\n    }\n    this.getCourses();\n    this.getAvailableSections(this.syllabusSearchForm.controls.boardId, this.syllabusSearchForm.controls.classId);\n  }\n  getCourses(): void {\n    this.classTimetableService.classTimetableCoursesGet(this.syllabusSearchForm.value.boardId, this.syllabusSearchForm.value.classId).subscribe(response => {\n      if (response.commonViewModel && response.commonViewModel.length) {\n        response.commonViewModel.forEach(element => {\n          this.coursesList.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  onClear(): void{\n      this.syllabusSearchForm.reset();\n      this.setModelDataTableComponent(this.currentComponent, null);\n  }\n  setScheduleDetails(res): void{\n  }\n\n  \n\n  selectedRows(data): void{\n    this.rowsSelected = [];\n    data.forEach(element => {\n      this.rowsSelected.push(element);\n    });\n    this.scheduleController.reset();\n    let temparray = [\n      {\n        label: 'Start Progress',\n        value: 'S_P'\n      },\n      {\n        label: 'Complete',\n        value: 'C_P'\n      },\n      {\n        label: 'Clear Status',\n        value: 'C_S'\n      }\n    ];\n    if (this.rowsSelected.some(e => e.startDate)){\n      temparray = temparray.filter(e => e.value !== 'S_P');\n    }\n    if (this.rowsSelected.some(e => !e.startDate) || this.rowsSelected.some(e => e.startDate && e.actualCompletionDate)){\n      temparray = temparray.filter(e => e.value !== 'C_P');\n    }\n    if (!this.rowsSelected.every(e => e.startDate || e.actualCompletionDate)){\n       temparray = temparray.filter(e => e.value !== 'C_S');\n    }    \n    this.statusList = temparray;\n  }\n  onSubmit(): void{\n    if (this.scheduleController.valid){\n      this.scheduleGoForm.submitted = false;\n      const status = this.statusList.find(e => e.value === this.scheduleController.value);\n      this.rowWiseActions({operation: status.label}, true);\n    }\n  }\n\n  onSearch(): void{\n    if (this.syllabusSearchForm.valid){\n          this.filterViewModel = this.syllabusSearchForm.value;\n          this.setModelDataTableComponent(this.currentComponent, this.filterViewModel);\n          this.syllabusSchedulesService.syllabusProgressGet(\n            this.filterViewModel.classId,\n            this.filterViewModel.sectionId,\n            this.filterViewModel.courseId,\n            this.filterViewModel.boardId)\n          .subscribe(res => this.onSyllabusSearch(res), err => this.errorResponse(err)); \n      }\n  }\n  onSyllabusSearch(res): void{\n    this.syllabusDetails = res.academicSesssionSyllabus;\n    this.syllabusDataList = [];\n    if (res.academicSesssionSyllabus){\n      res.academicSesssionSyllabus.academicSessionSyllabusSchedules.map(e => {\n        if (e.syllabusCheckPointId){\n          e.isCheckPoint = true;\n          e.chapter = e.syllabusCheckPoint;\n          e.topic = e.checkPointTestType;\n          e.subTopic = e.isCumulative ? 'Cummulative' : 'Incremental';\n        }else{\n          e.chapter  = e.chapter ?  ('<p>' + e.chapter + this.getInnerHtmlForAttachment(e.chapterFileName) + '</p>') : '';  \n          e.topic  = e.topic ? ('<p>' + e.topic + this.getInnerHtmlForAttachment(e.topicFileName) + '</p>') : '';  \n          e.subTopic  =  e.subTopic ? ('<p>' + e.subTopic + this.getInnerHtmlForAttachment(e.subTopicFileName) + '</p>') : '';  \n        }\n      });\n      this.syllabusDataList = res.academicSesssionSyllabus.academicSessionSyllabusSchedules;\n      this.syllabusDataList.forEach(e => {\n        e.formatedStartDate = this.getFormattedDateBySchoolDateFormat(e.startDate);\n        e.formatedActualCompletionDate = this.getFormattedDateBySchoolDateFormat(e.actualCompletionDate);\n        let tempOperations = [];\n        if (e.startDate || e.actualCompletionDate){\n            if (e.actualCompletionDate){\n                e.status = 'Completed';\n            }else{\n                e.status = 'In Progress';\n            }\n            if (!e.actualCompletionDate){\n              tempOperations = [\n                {\n                  name: 'Complete',\n                  icon: AppSettings.EDIT,\n                  operationName: 'C_P'\n                }\n              ]; \n            }\n            tempOperations.push({\n                name: 'Clear Status',\n                icon: AppSettings.DELETE,\n                operationName: 'C_S'\n              },\n              {\n                name: 'View Updates',\n                icon: AppSettings.VIEW,\n                operationName: 'V_U'\n            });\n        }else{\n          tempOperations = [\n            {\n              name: 'Start Progress',\n              icon: AppSettings.EDIT,\n              operationName: 'set'\n            }\n          ];\n        }\n        e.operations = tempOperations;\n      });\n      this.tabSettings = {\n        columns: this.cols,\n        // model: this.studentsSectionSView,\n        rows: this.syllabusDataList,\n        tablename: 'Progress Details',\n        componentName: this.currentComponent,\n        visibleSelectAll: true,\n        isSelectRowRequired: true,\n        isMultiDeleteRequired: false,\n        isPaginationRequired: false\n      };\n    } else{\n      this.openSnackBar('There are no schedules assigned for selected class, section, course', true);\n      if (this.tabSettings){\n        this.tabSettings.rows = [];\n      }\n    }\n  }\n  rowWiseActions(event, fromHeaderAction = false): void{\n    event.operation = event.operation.toLowerCase();\n    if (!fromHeaderAction){\n      this.rowsSelected = [];\n      this.rowsSelected.push(event.clickedRow);\n    }\n    if (event.operation === 'view updates'){\n        this.router.navigate([RouteConfig._Syllabus_Progress_Details + event.clickedRow.academicSessionSyllabusProgressId]);\n    }else if (event.operation === 'start progress'){\n        const dialogRef = this.dialogMethod('Please confirm to Mark this Syllabus Entry as \"In Progress\"');\n        dialogRef.afterClosed().subscribe(action => {\n          if (action === AppSettings.CONFIRM) {\n              this.onPostProgress(new Date(), false);\n          }else {\n            this.closeDialog();\n          }\n        });\n    }else if (event.operation.toLowerCase() === 'complete'){\n      const dialogRef = this.dialogMethod('Please confirm to Mark this Syllabus Entry as \"Complete\"');\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.CONFIRM) {\n            this.onPostProgress(false, new Date());\n        }else {\n          this.closeDialog();\n        }\n      });\n    }else if (event.operation  === 'clear status'){\n      const dialogRef = this.dialogMethod('Please confirm to Clear the all status  update for this syllabus Entry');\n        dialogRef.afterClosed().subscribe(action => {\n          if (action === AppSettings.CONFIRM) {\n            this.onPostProgress(false, false);\n          }else {\n             this.closeDialog();\n          }\n        });\n    }\n  }\n  onPostProgress(startDate, actualDate): void{\n    const processData = {\n      classId: this.syllabusDetails.classId,\n      sectionId: this.syllabusSearchForm.value.sectionId,\n      schoolBoardId: this.syllabusSearchForm.value.boardId,\n      academicSessionSyllabusProgresses: []\n    };\n    this.rowsSelected.map(e => {\n        processData.academicSessionSyllabusProgresses.push(\n          {\n            academicSessionSyllabusScheduleId: e.academicSessionSyllabusScheduleId,\n            startDate: startDate ? startDate : (actualDate ? e.startDate : null),\n            actualCompletionDate: actualDate ? actualDate : (startDate ? e.actualCompletionDate : null),\n            academicSessionSyllabusProgressId: e.academicSessionSyllabusProgressId\n          }\n        );\n    });\n    this.syllabusSchedulesService.addAcademicSessionSyllabusScheduleProcess(processData)\n    .subscribe(res => this.onProgressUpdate(res), err => this.errorResponse(err));\n  }\n  onProgressUpdate(res): void{\n    this.scheduleController.reset();\n    this.closeDialog();\n    this.onSearch();\n  }\n  closeDialog(): void{\n    this.scheduleController.reset();\n    this.dialog.closeAll();\n  }\n  dialogMethod(dialogData: any): any {\n    return this.dialogRef.open(CustomDialogComponent, {\n      disableClose: true,\n      data: { text: this.commonService.getTranslation(dialogData), action: true, btn1Text: AppSettings.CANCEL, btn2Text: AppSettings.CONFIRM },\n    });\n  }\n  getInnerHtmlForAttachment(filename): any{\n    return filename ? ('<span class=\"pl-8\"><a target=\"_blank\" href=\"' + this.storeService.getFilePath(filename) + '\">Attachment</a></span>')  : '';\n  }\n}\n"],"sourceRoot":""}