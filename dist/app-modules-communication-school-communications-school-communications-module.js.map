{"version":3,"sources":["webpack:///./src/app/modules/communication/school-communications/communication-configuration/communication-configuration.component.html","webpack:///./src/app/modules/communication/school-communications/communication-configuration/communication-configuration.component.scss","webpack:///./src/app/modules/communication/school-communications/communication-configuration/communication-configuration.component.ts","webpack:///./src/app/modules/communication/school-communications/communication-details/communication-details.component.html","webpack:///./src/app/modules/communication/school-communications/communication-details/communication-details.component.scss","webpack:///./src/app/modules/communication/school-communications/communication-details/communication-details.component.ts","webpack:///./src/app/modules/communication/school-communications/communication-setup/communication-setup.component.html","webpack:///./src/app/modules/communication/school-communications/communication-setup/communication-setup.component.scss","webpack:///./src/app/modules/communication/school-communications/communication-setup/communication-setup.component.ts","webpack:///./src/app/modules/communication/school-communications/message-transmissions/message-transmissions.component.html","webpack:///./src/app/modules/communication/school-communications/message-transmissions/message-transmissions.component.scss","webpack:///./src/app/modules/communication/school-communications/message-transmissions/message-transmissions.component.ts","webpack:///./src/app/modules/communication/school-communications/school-communications-routing.module.ts","webpack:///./src/app/modules/communication/school-communications/school-communications.module.ts","webpack:///./src/app/service/academic-service/api/status.service.ts","webpack:///./src/app/service/staff/staffCommon.service.ts"],"names":[],"mappings":"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","file":"app-modules-communication-school-communications-school-communications-module.js","sourcesContent":["module.exports = \"<ng-template #commForm>\\n  <mat-vertical-stepper [linear]=\\\"true\\\" #stepper (animationDone)=\\\"onStepperAnimationDone(stepper.selectedIndex)\\\">\\n    <mat-step [stepControl]=\\\"communicationForm\\\">\\n      <form [formGroup]=\\\"communicationForm\\\" fxLayout=\\\"column\\\" #commuForm=\\\"ngForm\\\">\\n        <ng-template matStepLabel><span translate>Communication Type</span></ng-template>\\n        <div fxFlexFill fxLayout=\\\"column\\\" class=\\\"pt-24\\\" fxLayout.gt-sm=\\\"row\\\">\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxFlexFill fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"40\\\"\\n            fxLayout=\\\"column\\\">\\n            <mat-label #CommunicationTypeId translate>Communication Type</mat-label>\\n            <mat-select formControlName=\\\"communicationTypeId\\\" required\\n              (selectionChange)=\\\"onCommunicationTypeSelect($event)\\\">\\n              <mat-option *ngFor=\\\"let commType of communicationTypesDropDown\\\" [value]=\\\"commType\\\" ngDefaultControl>\\n                {{ commType.label }}</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]='CommunicationTypeId.innerText'\\n                [validationControl]=\\\"communicationForm.controls.communicationTypeId\\\" [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"60\\\">\\n            <mat-label #title translate>Title</mat-label>\\n            <input id=\\\"step-title\\\" (keyup)=\\\"preventSpace($event,'communicationForm','title')\\\"\\n              (blur)=\\\"trimTextBoxSpaces('communicationForm','title')\\\" matInput formControlName=\\\"title\\\"\\n              autocomplete=\\\"off\\\" required>\\n            <mat-error>\\n              <app-validation [labelName]='title.innerText' [validationControl]=\\\"communicationForm.controls.title\\\"\\n                [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div translate>This communication will be delivered through communicationType delivery options.</div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-12\\\">\\n          <button #resetButtonStepper mat-raised-button id=\\\"resetButtonStepper\\\" (click)=\\\"onCancel()\\\" type=\\\"reset\\\"\\n            class=\\\"text-uppercase mr-12\\\">\\n            {{'Cancel' | translate}}\\n          </button>\\n          <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n            {{'Next' | translate}}</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"messageForm\\\">\\n      <form [formGroup]=\\\"messageForm\\\" fxLayout=\\\"column\\\" #messageContent=\\\"ngForm\\\">\\n        <ng-template matStepLabel><span translate>Message Content</span></ng-template>\\n        <div class=\\\"pt-4\\\" translate>Please enter the content for each form of message delivery</div>\\n        <div *ngIf=\\\"emailEnable\\\">\\n          <div class=\\\"mt-16 mb-4\\\"><span translate>Email Content</span></div>\\n          <div fxLayout=\\\"column\\\" class=\\\"p-20 border mb-20\\\">\\n            <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n              <mat-label #subject translate>Subject</mat-label>\\n              <input matInput autocomplete=\\\"off\\\" formControlName=\\\"subject\\\"\\n                (keyup)=\\\"preventSpace($event,'messageForm','subject')\\\"\\n                (blur)=\\\"trimTextBoxSpaces('messageForm','subject')\\\" required>\\n              <mat-error>\\n                <app-validation [labelName]='subject.innerText' [validationControl]=\\\"messageForm.controls.subject\\\"\\n                  [doValidate]=\\\"true\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n              <mat-label #Message translate>Message</mat-label>\\n              <textarea matInput autocomplete=\\\"off\\\" formControlName=\\\"message\\\"\\n                (keyup)=\\\"preventSpace($event,'messageForm','message')\\\"\\n                (blur)=\\\"trimTextBoxSpaces('messageForm','message')\\\" required></textarea>\\n              <mat-error>\\n                <app-validation [labelName]='Message.innerText' [validationControl]=\\\"messageForm.controls.message\\\"\\n                  [doValidate]=\\\"true\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n\\n            <div fxLayout=\\\"column\\\" class=\\\"mt-12\\\" fxFlex.gt-sm=\\\"32\\\" fxFlex=\\\"100\\\">\\n              <div fxLayout=\\\"row\\\">\\n                <button mat-raised-button type=\\\"button\\\" color=\\\"primary\\\"\\n                  (click)=\\\"logoImgInput.value='';logoImgInput.click()\\\">\\n                  <mat-icon class=\\\"mr-8\\\">attach_file</mat-icon>{{'Upload Attachment' | translate}}\\n                </button>\\n                <button (click)=\\\"logoImgInput.value='';clearImages(true)\\\" mat-icon-button type=\\\"button\\\" *ngIf=\\\"logoImgProp?.src\\\">\\n                  <mat-icon class=\\\"mb-4 grey-600-fg\\\" [style.visibility]=\\\"logoImgProp?.src ? 'visible' : 'hidden'\\\"\\n                    >highlight_off</mat-icon>\\n                </button>\\n              </div>\\n              <input [accept]=\\\"'.doc,.docx,image/jpeg,image/jpg,image/png,application/pdf,image/*'\\\" id=\\\"logoImgInput\\\"\\n                (change)=\\\"imgChanged(logoImgInput.files)\\\" fxHide type=\\\"file\\\" #logoImgInput>\\n              <div class=\\\"pt-8 logo-name break-word\\\"\\n                [style.visibility]=\\\"messageForm?.value?.attachment?.fileName ? 'visible' : 'hidden'\\\"\\n                [style.display]=\\\"logoImgProp?.src ? 'block' : 'none'\\\">\\n                {{messageForm?.value?.attachment?.fileName}}</div>\\n            </div>\\n          </div>\\n        </div>\\n        <div *ngIf=\\\"smsEnable\\\">\\n          <div class=\\\"mt-16 mb-4\\\"><span translate>SMS Content</span></div>\\n          <div fxLayout=\\\"column\\\" class=\\\"p-20 border mb-20\\\">\\n            <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n              <mat-label #Sms translate>Sms</mat-label>\\n              <textarea matInput autocomplete=\\\"off\\\" formControlName=\\\"sms\\\"\\n                (keyup)=\\\"preventSpace($event,'messageForm','sms')\\\" (blur)=\\\"trimTextBoxSpaces('messageForm','sms')\\\"\\n                required></textarea>\\n              <mat-error>\\n                <app-validation [labelName]='Sms.innerText' [validationControl]=\\\"messageForm.controls.sms\\\"\\n                  [doValidate]=\\\"true\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n            <small class=\\\"secondary-text text-right\\\" translate>Max 255 Characters</small>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"notificationEnable\\\">\\n          <div class=\\\"mt-16 mb-4\\\"><span translate>Push Notification Content</span></div>\\n          <div fxLayout=\\\"column\\\" class=\\\"p-20 border mb-20\\\">\\n\\n            <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n              <mat-label #title translate>Title</mat-label>\\n              <input matInput autocomplete=\\\"off\\\" formControlName=\\\"notificationTitle\\\" (keyup)=\\\"preventSpace($event,'messageForm','notificationTitle')\\\"\\n                (blur)=\\\"trimTextBoxSpaces('messageForm','notificationTitle')\\\" required>\\n              <mat-error>\\n                <app-validation [labelName]='title.innerText'\\n                  [validationControl]=\\\"messageForm.controls.notificationTitle\\\" [doValidate]=\\\"true\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n              <mat-label #title translate>Title</mat-label>\\n              <input matInput autocomplete=\\\"off\\\" formControlName=\\\"notificationTitle\\\" (keyup)=\\\"preventSpace($event,'messageForm','notificationTitle')\\\"\\n                (blur)=\\\"trimTextBoxSpaces('messageForm','notificationTitle')\\\" required>\\n              <mat-error>\\n                <app-validation [labelName]='title.innerText'\\n                  [validationControl]=\\\"messageForm.controls.notificationTitle\\\" [doValidate]=\\\"true\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n              <mat-label #notification translate>Push Message</mat-label>\\n              <textarea matInput autocomplete=\\\"off\\\" formControlName=\\\"notification\\\"\\n                (keyup)=\\\"preventSpace($event,'messageForm','notification')\\\"\\n                (blur)=\\\"trimTextBoxSpaces('messageForm','notification')\\\" required></textarea>\\n              <mat-error>\\n                <app-validation [labelName]='notification.innerText'\\n                  [validationControl]=\\\"messageForm.controls.notification\\\" [doValidate]=\\\"true\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n            <small class=\\\"secondary-text text-right\\\" translate>Max 225 Characters</small>\\n          </div>\\n        </div>\\n\\n        <div *ngIf=\\\"noticeEnable\\\">\\n          <div class=\\\"mt-16 mb-4\\\"><span translate>Notice Board Content</span></div>\\n          <div fxLayout=\\\"column\\\" class=\\\"p-20 border mb-20\\\">\\n            <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n              <mat-label #noticeBoard translate>Notice Board</mat-label>\\n              <textarea matInput autocomplete=\\\"off\\\" formControlName=\\\"noticeBoard\\\"\\n                (keyup)=\\\"preventSpace($event,'messageForm','noticeBoard')\\\"\\n                (blur)=\\\"trimTextBoxSpaces('messageForm','noticeBoard')\\\" required></textarea>\\n              <mat-error>\\n                <app-validation [labelName]='noticeBoard.innerText'\\n                  [validationControl]=\\\"messageForm.controls.noticeBoard\\\" [doValidate]=\\\"true\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n            <small class=\\\"secondary-text text-right\\\" translate>Max 225 Characters</small>\\n          </div>\\n        </div>\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-12\\\">\\n          <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n            {{'Previous' | translate}}\\n          </button>\\n          <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n            {{'Next' | translate}}</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"recipients\\\">\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxFlexFill>\\n        <form [formGroup]=\\\"recepientsForm\\\" fxLayout=\\\"column\\\" fxFlex=\\\"70\\\" #recForm=\\\"ngForm\\\">\\n          <ng-template matStepLabel><span translate>Recipients</span></ng-template>\\n          <div class=\\\"py-8\\\" translate>Please Select the Recipients of this Communication</div>\\n          <mat-checkbox class=\\\"mr-20\\\" (change)=\\\"checkAllStudents($event)\\\" [checked]=\\\"isAllStudentsChecked\\\"\\n            #studentSelect><span translate>Check here to\\n              send Communication to All Students of school</span></mat-checkbox>\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\">\\n            <div fxFlex=\\\"100\\\" fxLayout=\\\"row\\\">\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"mr-12\\\" fxFlex=\\\"100\\\">\\n                <mat-label #Board translate>Board</mat-label>\\n                <mat-select formControlName=\\\"boards\\\" (selectionChange)=\\\"onRecipientsBoardSelect($event)\\\"\\n                  [disabled]=\\\"isAllStudentsChecked\\\">\\n                  <mat-option *ngFor=\\\"let board of schoolBoardsList\\\" [value]=\\\"board\\\">\\n                    {{ board.label }}</mat-option>\\n                </mat-select>\\n                <mat-error>\\n                  <app-validation [labelName]='Board.innerText' [validationControl]=\\\"recepientsForm.controls.boards\\\"\\n                    [doValidate]=\\\"true\\\">\\n                  </app-validation>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n\\n            <div fxFlex=\\\"100\\\" fxLayout=\\\"row\\\">\\n              <af-select [disabled]=\\\"isAllStudentsChecked\\\" [isValueIsObject]=\\\"isValueIsObject\\\" class=\\\"mr-12\\\"\\n                fxFlex=\\\"100\\\" appearance=\\\"outline\\\" [optionGroupRequired]=\\\"true\\\" [groups]=\\\"classSections\\\"\\n                placeholder=\\\"Class And Sections\\\" [multiple]=\\\"true\\\" [value]=\\\"selectedItems\\\" formControlName=\\\"classes\\\">\\n              </af-select>\\n            </div>\\n          </div>\\n\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\">\\n            <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" fxLayout=\\\"row\\\">\\n              <div class=\\\"pt-16 mr-sm-20\\\">\\n                <button mat-raised-button type=\\\"button\\\" [disabled]=\\\"!(recepientsForm.controls['boards'].value)\\\"\\n                  (click)=\\\"onSectionButtonSelect()\\\" color=\\\"accent\\\"\\n                  class=\\\"text-uppercase\\\">{{'Select' | translate}}</button>\\n              </div>\\n            </div>\\n            <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"50\\\" fxFlex=\\\"100\\\" class=\\\"pr-sm-20\\\">\\n              <mat-label #studentId translate>Search Student Name</mat-label>\\n              <input #studentName matInput placeholder=\\\"Search Students\\\" formControlName=\\\"studentIds\\\"\\n                aria-label=\\\"StudentName\\\" matInput [matAutocomplete]=\\\"studentNameSearch\\\">\\n              <mat-icon class=\\\"grey-400-fg\\\" matSuffix>search</mat-icon>\\n              <mat-autocomplete #studentNameSearch=\\\"matAutocomplete\\\"\\n                (optionSelected)='getSelectedStudent($event.option.value)' [displayWith]=\\\"displayFn\\\">\\n                <mat-option *ngFor=\\\"let option of filterdSearchStudents\\\" [value]=\\\"option\\\">\\n                  {{option.studentName}}\\n                  <span class=\\\"grey-400-fg\\\"> {{option.currentClassName}} {{option.currentSectionName}} </span>\\n                </mat-option>\\n              </mat-autocomplete>\\n            </mat-form-field>\\n\\n          </div>\\n          <mat-checkbox class=\\\"mr-20 pt-24\\\" (change)=\\\"checkAllStaff($event)\\\" [checked]=\\\"isAllStaffChecked\\\" #staffSelect>\\n            <span translate>Check here to send Communication to All the Staff Members of School</span></mat-checkbox>\\n\\n          <div fxLayout=\\\"column\\\" class=\\\"pt-12\\\">\\n            <div fxFlex=\\\"60\\\" fxLayout=\\\"row\\\">\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"mr-12\\\" fxFlex=\\\"70\\\" fxLayout=\\\"column\\\">\\n                <mat-label #staffTypeIds translate>Staff Type</mat-label>\\n                <mat-select formControlName=\\\"staffType\\\" (selectionChange)=\\\"onStaffTypeSelect($event)\\\"\\n                  [disabled]=\\\"isAllStaffChecked\\\">\\n                  <mat-option *ngFor=\\\"let staffType of staffTypes\\\" [value]=\\\"staffType\\\" ngDefaultControl>\\n                    {{ staffType.label }}</mat-option>\\n                </mat-select>\\n                <mat-error>\\n                  <app-validation [labelName]='staffTypeIds.innerText'\\n                    [validationControl]=\\\"recepientsForm.controls.staffType\\\" [doValidate]=\\\"true\\\">\\n                  </app-validation>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n            <div fxFlex=\\\"60\\\" fxLayout=\\\"row\\\">\\n              <div class=\\\"mr-12\\\" fxFlex=\\\"70\\\" fxLayout=\\\"column\\\">\\n                <af-select appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"40\\\"\\n                  [disabled]=\\\"isAllStaffChecked\\\" [optionGroupRequired]=\\\"false\\\" [options]=\\\"staffs?.length ? staffs : []\\\"\\n                  [showChips]=\\\"1\\\" placeholder=\\\"Staff\\\" [multiple]=\\\"true\\\" formControlName=\\\"staffList\\\"></af-select>\\n              </div>\\n              <div class=\\\"pt-16 w-92\\\" fxFlex=\\\"30\\\">\\n                <button mat-raised-button type=\\\"button\\\" [disabled]=\\\"!(recepientsForm.controls['staffType'].value)\\\"\\n                  (click)=\\\"onStaffButtonSelect()\\\" color=\\\"accent\\\"\\n                  class=\\\"text-uppercase\\\">{{'Select' | translate}}</button>\\n              </div>\\n            </div>\\n          </div>\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n            <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n              {{'Previous' | translate}}\\n            </button>\\n            <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\"\\n              class=\\\"text-uppercase\\\" (click)=\\\"onSelectRecepients()\\\" >{{'Next' | translate}}</button>\\n          </div>\\n        </form>\\n        <ng-template *ngTemplateOutlet=\\\"sideBarData\\\"></ng-template>\\n      </div>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"scheduleForm\\\">\\n      <span translate>Please select the Schedule for this communication.the message will be processed starting from the\\n        schedule date and time.</span>\\n      <form [formGroup]=\\\"scheduleForm\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" #schForm=\\\"ngForm\\\">\\n        <ng-template matStepLabel><span translate>Schedule</span></ng-template>\\n        <div fxFlexFill fxLayout=\\\"column\\\" class=\\\"pt-24\\\" fxLayout.gt-sm=\\\"row\\\">\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"icon-center\\\" fxFlexFill fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"40\\\"\\n            fxLayout=\\\"column\\\">\\n            <mat-label #entryDate translate>Date</mat-label>\\n            <input matInput (keyup)=\\\"forceValidation('scheduleDate',scheduleForm)\\\" [matDatepicker]=\\\"entryDatePicker\\\"\\n              formControlName=\\\"scheduleDate\\\" [min]=\\\"currentDate\\\" required>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"entryDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #entryDatePicker></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]='entryDate.innerText' [validationControl]=\\\"scheduleForm.controls.scheduleDate\\\"\\n                [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\" class=\\\"formfield-pb-0 px-sm-20\\\">\\n            <app-custom-timepicker [label]=\\\"'Schedule Time'\\\" appearance=\\\"outline\\\" formControlName=\\\"scheduleTime\\\"\\n              [is24HoursFormat]=\\\"true\\\" [showLabel]=\\\"true\\\" [isRequired]=\\\"true\\\" [errorClass]=\\\"'pt-20'\\\"\\n              [requiredValidator]=true></app-custom-timepicker>\\n          </div>\\n\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pt-20\\\">\\n          <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n            {{'Previous' | translate}}\\n          </button>\\n          <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n            {{'Next' | translate}}</button>\\n        </div>\\n      </form>\\n\\n    </mat-step>\\n\\n    <mat-step class=\\\"form-status\\\">\\n      <ng-template matStepLabel><span translate>Done</span></ng-template>\\n      <div fxFlex=\\\"80\\\" class=\\\"text-center font-size-18 m-auto pb-20 pt-8\\\" translate>Please verify the entered\\n        information before your final submit</div>\\n\\n      <mat-list fxLayout=\\\"row wrap\\\" fxFlex=\\\"100\\\" class=\\\"pt-0 confirm-table border\\\">\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\">\\n          <strong class=\\\"w-180\\\"><span translate>Communication Type</span><span class=\\\"px-4\\\">:</span></strong>\\n          <span flexLayout=\\\"row\\\">{{communicationForm?.value?.communicationTypeId?.label}}</span>\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\">\\n          <strong class=\\\"w-80\\\"><span translate>Title</span>  <span\\n            class=\\\"px-4\\\">:</span></strong>\\n            <span flexLayout=\\\"row\\\"> {{communicationForm.controls?.title?.value}}</span>\\n        </mat-list-item>\\n\\n        <mat-list-item fxLayout=\\\"row\\\" fxLayout.gt-sm=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"recipients\\\">\\n          <strong translate class=\\\"w-120 pt-20\\\">Recipients</strong><span class=\\\"px-4 pt-20\\\">:</span>\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"0 1 auto\\\" class=\\\"min-w-300 my-12 border mh-424 \\\"\\n            *ngIf=\\\"displayResults.length > 0\\\">\\n            <div class=\\\"p-8\\\" [ngClass]=\\\"last ? ' ':'border-bottom'\\\"\\n              *ngFor=\\\"let item of displayResults; let last = last\\\">{{item.boardName}} <span\\n                *ngIf=\\\"item.className\\\">,</span> {{item.className}}<span *ngIf=\\\"item.sectionName\\\">,</span>\\n              {{item.sectionName}} {{item.studentName}} {{item.label}}</div>\\n          </div>\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"0 1 auto\\\" class=\\\"ml-12 min-w-300 my-12 border mh-424 \\\"\\n            *ngIf=\\\"selectedList.length > 0\\\">\\n            <div class=\\\"p-8\\\" [ngClass]=\\\"last ? ' ':'border-bottom'\\\" *ngFor=\\\"let item of selectedList; let last = last\\\">\\n              {{item.staffTypeName}} <span *ngIf=\\\"item.staffName && item.staffTypeName\\\">,</span> {{item.staffName}}\\n              {{item.label}}</div>\\n          </div>\\n        </mat-list-item>\\n\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n            <ng-container *ngIf=\\\"smsEnable\\\">\\n              <div class=\\\"mt-16 mb-4\\\"><span translate>SMS Content</span></div>\\n              <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"formfield-pb-0 pb-4\\\">\\n                <mat-label translate>Sms</mat-label>\\n                <textarea matInput readonly> {{messageForm.controls?.sms?.value}}</textarea>\\n              </mat-form-field>\\n            </ng-container>\\n\\n            <ng-container *ngIf=\\\"notificationEnable\\\">\\n              <div class=\\\"mt-16 mb-4\\\"><span translate>Push Notification Content</span></div>\\n              <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"formfield-pb-0 pb-4\\\">\\n                <mat-label translate>Title</mat-label>\\n                <textarea matInput  readonly>{{messageForm.controls?.notificationTitle?.value}}</textarea>\\n              </mat-form-field>\\n              <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"formfield-pb-0 pb-4\\\">\\n                <mat-label translate>Push Notification</mat-label>\\n                <textarea matInput readonly>{{messageForm.controls?.notification?.value}}</textarea>\\n              </mat-form-field>\\n            </ng-container>\\n\\n            <ng-container *ngIf=\\\"noticeEnable\\\">\\n              <div class=\\\"mt-16 mb-4\\\"><span translate>Notice Board Content</span></div> \\n              <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"formfield-pb-0 pb-4\\\">\\n                <mat-label translate>Notice Board</mat-label>\\n                <textarea matInput readonly>{{messageForm.controls?.noticeBoard?.value}}</textarea>\\n              </mat-form-field>\\n            </ng-container>\\n\\n            <ng-container *ngIf=\\\"emailEnable\\\">\\n              <div class=\\\"mt-16 mb-4\\\"><span translate>Email Content</span></div>\\n              <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"formfield-pb-0 pb-4\\\">\\n                <mat-label translate>Subject</mat-label>\\n                <input matInput readonly value=\\\"{{messageForm.controls?.subject?.value}}\\\">\\n              </mat-form-field>\\n              <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"formfield-pb-0 pb-4\\\">\\n                <mat-label translate>Message</mat-label>\\n                <textarea matInput readonly>{{messageForm.controls?.message?.value}}</textarea>\\n              </mat-form-field>\\n              <div class=\\\"py-8\\\" *ngIf=\\\"messageForm.controls?.attachment?.value.fileName\\\"> <strong translate\\n                  class=\\\"w-200\\\" translate>Attached Document </strong><span class=\\\"px-4\\\">:</span>\\n                <span>{{messageForm.controls?.attachment?.value.fileName}}</span>\\n              </div>\\n            </ng-container>\\n          </div>\\n        </mat-list-item>\\n\\n        <mat-list-item fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\n          <strong><span translate class=\\\"pr-12\\\">Schedule Date</span></strong><span class=\\\"px-4\\\">:</span>\\n          {{showDate(scheduleForm.controls?.scheduleDate?.value)}}\\n          <strong> <span class=\\\"px-12\\\" translate>Time</span></strong><span class=\\\"px-4\\\">:</span>\\n          {{scheduleForm.controls?.scheduleTime?.value}}\\n\\n        </mat-list-item>\\n      </mat-list>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-12 pt-24\\\">\\n        <button class=\\\"mr-8 text-uppercase\\\" mat-raised-button matStepperPrevious\\n          type=\\\"button\\\">{{'Previous' | translate}}</button>\\n        <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" [disabled]=\\\"disbleSubmitBtn\\\" color=\\\"accent\\\"\\n          (click)=\\\"onSubmitForm()\\\">{{'submit' | translate}}</button>\\n      </div>\\n    </mat-step>\\n  </mat-vertical-stepper>\\n</ng-template>\\n\\n<ng-template #sideBarData>\\n  <div fxLayout=\\\"column\\\" fxFlex=\\\"30\\\" class=\\\"border-left my-28 px-20 mh-424\\\">\\n    <div class=\\\"font-size-16 accent-fg\\\" *ngIf=\\\"displayResults?.length > 0\\\" translate>Selected Student Recipients</div>\\n    <mat-list class=\\\"pt-0 border mt-16 rm-height\\\" fxLayout.gt-sm=\\\"row wrap\\\" fxLayoutAlign=\\\"center start\\\"\\n      *ngFor=\\\"let item of displayResults; let i = index\\\">\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n        <div fxLayoutAlign=\\\"space-between center\\\" fxFlexFill>\\n          <div class=\\\"break-word\\\"><span>{{item.boardName}}<span *ngIf=\\\"item.className\\\">,</span> {{item.className}}<span *ngIf=\\\"item.sectionName\\\">,</span> {{item.sectionName}} {{item.studentName}} {{item.label}}</span></div>\\n          <button mat-icon-button (click)=\\\"deleteStudentSelection(i)\\\">\\n            <mat-icon class=\\\"red-300-fg\\\">delete</mat-icon>\\n          </button>\\n        </div>\\n      </mat-list-item>\\n    </mat-list>\\n  <div *ngIf=\\\"selectedList?.length > 0\\\" class=\\\"font-size-16 accent-fg mt-20\\\" translate>Selected Staff Recipients</div>\\n  <mat-list class=\\\"pt-0 border mt-16 rm-height\\\" fxLayout.gt-sm=\\\"row wrap\\\" fxLayoutAlign=\\\"center start\\\" *ngFor=\\\"let item of selectedList; let i = index\\\">\\n    <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" >\\n      <div fxLayoutAlign=\\\"space-between center\\\" fxFlexFill>\\n        <div class=\\\"break-word\\\"><span>{{item.staffTypeName}}<span *ngIf=\\\"item.staffName\\\">,</span> {{item.staffName}} {{item.label}}</span></div>\\n        <button mat-icon-button (click)=\\\"deleteStaffSelection(i)\\\">\\n          <mat-icon  class=\\\"red-300-fg\\\">delete</mat-icon>\\n        </button>\\n      </div>\\n    </mat-list-item>\\n  </mat-list>\\n  </div>\\n</ng-template>\\n\\n<div class=\\\"px-sm-40 pt-sm-20\\\">\\n  <div class=\\\"py-8 px-20 font-size-18 text-uppercase\\\">{{'School Communications' | translate}}</div>\\n  <div class=\\\"w-100-p mat-elevation-z3 simple-table-container radius-t-20\\\">\\n    <div fxLayoutAlign=\\\"end center\\\" class=\\\"border-bottom p-20\\\">\\n      <button mat-button (click)=\\\"getHelpText('School Communications')\\\">\\n        <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n      </button>\\n    </div>\\n    <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch(searchForm.value)\\\" class=\\\"p-24\\\">\\n      <fieldset class=\\\"border p-20 mx-12\\\">\\n        <legend>{{'Search by Student Name' | translate}}</legend>\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-12\\\"  fxLayoutAlign=\\\"space-between center\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"40\\\" fxFlex=\\\"100\\\" class=\\\"pr-sm-20\\\">\\n            <mat-label #studentId translate>Search Student Name</mat-label>\\n            <input #studentNamee matInput placeholder=\\\"Search Students\\\" formControlName=\\\"studentName\\\"\\n              aria-label=\\\"StudentName\\\" matInput [matAutocomplete]=\\\"studentNameSearch\\\">\\n            <!-- <mat-icon class=\\\"grey-400-fg\\\" matSuffix>search</mat-icon> -->\\n            <mat-autocomplete #studentNameSearch=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\"\\n              (optionSelected)='selectedStudent($event.option.value)'>\\n              <mat-option *ngFor=\\\"let option of filterdStudents\\\" [value]=\\\"option\\\">\\n                {{option.studentName}}\\n                <span class=\\\"grey-400-fg\\\"> {{option.currentClassName}} {{option.currentSectionName}} </span>\\n              </mat-option>\\n            </mat-autocomplete>\\n          </mat-form-field>\\n        </div>\\n      </fieldset>\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\">\\n\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\"\\n          fxFlexFil>\\n          <mat-label #board translate>Board</mat-label>\\n          <mat-select formControlName=\\\"schoolBoardId\\\" (selectionChange)=\\\"onBoardSelect($event)\\\">\\n            <mat-option *ngIf=\\\"schoolBoardsList?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let board of schoolBoardsList\\\" [value]=\\\"board.value\\\">\\n              {{board.label}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\"\\n          class=\\\"pr-sm-20\\\">\\n          <mat-label translate #class>Class</mat-label>\\n          <mat-select name=\\\"classId\\\" formControlName=\\\"classIds\\\" (selectionChange)=\\\"onClassSelect($event)\\\">\\n            <mat-option *ngIf=\\\"classNames?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let class of classNames\\\" [value]=\\\"class?.value\\\">\\n              {{class.label}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\"\\n          class=\\\"pr-sm-20\\\">\\n          <mat-label translate #section>Section</mat-label>\\n          <mat-select formControlName=\\\"sectionIds\\\">\\n            <mat-option *ngIf=\\\"sectionNames?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let section of sectionNames\\\" [value]=\\\"section?.value\\\">\\n              {{ section.label }}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n          fxFlex.gt-sm=\\\"20\\\">\\n          <mat-label translate #communicationType translate>Communication Type</mat-label>\\n          <mat-select name=\\\"communicationType\\\" formControlName=\\\"communicationTypeId\\\">\\n            <mat-option *ngIf=\\\"communicationTypesDropDown?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let commType of communicationTypesDropDown\\\" [value]=\\\"commType.value\\\">\\n              {{commType.label}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n          fxFlex.gt-sm=\\\"20\\\">\\n          <mat-label translate #status>Status</mat-label>\\n          <mat-select name=\\\"statusId\\\" formControlName=\\\"statusIds\\\">\\n            <mat-option *ngIf=\\\"statusViewModel?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let item of statusViewModel\\\" [value]=\\\"item.value\\\">\\n              {{item.label}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n      </div>\\n\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mb-12\\\" id=\\\"com-dt\\\">\\n        <button color=\\\"accent\\\" mat-raised-button type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\" (click)=\\\"onAdd()\\\">\\n          {{'New' | translate}}\\n        </button>\\n\\n        <button mat-raised-button type=\\\"reset\\\" class=\\\"text-uppercase mr-12\\\" (click)=\\\"onClear()\\\">\\n          {{'Reset' | translate}}\\n        </button>\\n        <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" class=\\\"text-uppercase\\\">\\n          {{'Search' | translate}}\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n  <mat-accordion class=\\\"filter-accordian\\\">\\n    <mat-expansion-panel [expanded]=\\\"onSelectNew\\\" class=\\\"mt-20\\\" (afterExpand)=\\\"focusForm(addPanelForm)\\\" #addPanelForm>\\n      <ng-template [ngTemplateOutlet]=\\\"commForm\\\"></ng-template>\\n    </mat-expansion-panel>\\n  </mat-accordion>\\n</div>\\n\\n<app-table *ngIf=\\\"!showCustomCard\\\" [settings]=\\\"tabSettings\\\" [templateRef]=\\\"commForm\\\" (getTableData)='tableData($event)'\\n  (rowBasedAction)='rowWiseActions($event)' [closeRowForm]='closeAddPanel' (openAddForm)=\\\"openForm()\\\">\\n</app-table>\\n<app-custom-card *ngIf=\\\"showCustomCard\\\" [title]=customCardDetails.title [inputMessage]=customCardDetails.message>\\n</app-custom-card>\"","module.exports = \".mh-424 {\\n  max-height: 424px;\\n  overflow-y: auto; }\\n\\n.recipients ::ng-deep .mat-list-item-content {\\n  -webkit-box-align: start;\\n          align-items: start; }\\n\\n.min-w-300 {\\n  min-width: 300px; }\\n\\n.rm-height ::ng-deep\\n.mat-list-item {\\n  height: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvY29tbXVuaWNhdGlvbi9zY2hvb2wtY29tbXVuaWNhdGlvbnMvY29tbXVuaWNhdGlvbi1jb25maWd1cmF0aW9uL2NvbW11bmljYXRpb24tY29uZmlndXJhdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFpQjtFQUNqQixnQkFBZ0IsRUFBQTs7QUFFbEI7RUFHTSx3QkFBa0I7VUFBbEIsa0JBQWtCLEVBQUE7O0FBSXhCO0VBQ0UsZ0JBQWdCLEVBQUE7O0FBRWxCOztFQUdJLFlBQVksRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tbXVuaWNhdGlvbi9zY2hvb2wtY29tbXVuaWNhdGlvbnMvY29tbXVuaWNhdGlvbi1jb25maWd1cmF0aW9uL2NvbW11bmljYXRpb24tY29uZmlndXJhdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5taC00MjQgeyAgXG4gICAgbWF4LWhlaWdodDogNDI0cHg7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgfVxuICAucmVjaXBpZW50c3tcbiAgICA6Om5nLWRlZXB7XG4gICAgICAubWF0LWxpc3QtaXRlbS1jb250ZW50e1xuICAgICAgICBhbGlnbi1pdGVtczogc3RhcnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIC5taW4tdy0zMDB7XG4gICAgbWluLXdpZHRoOiAzMDBweDtcbiAgfVxuICAucm0taGVpZ2h0e1xuICAgIDo6bmctZGVlcFxuICAgIC5tYXQtbGlzdC1pdGVte1xuICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgIH1cbiAgfSJdfQ== */\"","import { Component, OnInit, ViewChild, ChangeDetectorRef, Output, EventEmitter } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { ClassSectionService } from 'app/service/academic-service/api/class-section.service';\nimport { AppSettings } from 'app/app.constants';\nimport { GradeSetupService } from 'app/service/grading-service/api/grade-setup.service';\nimport { CommonService } from 'app/service/common.service';\nimport { StudentDBService } from 'app/service/student-information-system/student-db.service';\nimport { CommunicationService } from 'app/service/communication/communication-service';\nimport { AttachmentModel } from '../../model/attachment-model';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatAutocompleteTrigger, MatDialog, ErrorStateMatcher, ShowOnDirtyErrorStateMatcher } from '@angular/material';\nimport { CommunicationFetchView } from 'app/models/academics/communication-fetch-view';\nimport { Router } from '@angular/router';\nimport { CommunicationModuleConfig } from 'app/url.config';\nimport { CommunicationConfigurationModel } from '../../model/communication-configuration-model';\nimport { TypeService } from 'app/service/academic-service/api/type.service';\nimport { CommunicationStaff } from '../../model/communication-staff';\nimport { MatSnackBar } from '@angular/material';\nimport 'rxjs/add/operator/debounceTime';\nimport { SchoolAcademicSessionService } from 'app/service/academic-service/api/school-academic-session.service';\nimport * as _ from 'lodash';\nimport { ClassesConfigService } from 'app/service/general/api/classes-config.service';\nimport { StudentDatabaseService } from 'app/service/academic-service/api/student-database.service';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { TimeValidator } from 'app/shared/custom-timepicker/custom-timepicker.validators';\nimport { type } from 'os';\n\n@Component({\n  selector: 'app-communication-configuration',\n  templateUrl: './communication-configuration.component.html',\n  styleUrls: ['./communication-configuration.component.scss'],\n  providers: [SchoolAcademicSessionService, ClassesConfigService, StudentDatabaseService]\n})\nexport class CommunicationConfigurationComponent extends CommonComponent implements OnInit {\n  @ViewChild(MatAutocompleteTrigger) _auto: MatAutocompleteTrigger;\n  @ViewChild('stepper') stepper;\n  @ViewChild('commuForm') commForm;\n  @ViewChild('messageContent') msgForm;\n  @ViewChild('recForm') receipentForm;\n  @ViewChild('schForm') schForm;\n  @ViewChild('studentNamee') studentNameAutoInput: any;\n  @ViewChild('staffSelect') staffCheck;\n  @ViewChild('studentSelect') studentCheck;\n\n  recipients = new FormControl(null, Validators.required);\n\n  flagImageProp = {};\n  communicationForm: FormGroup;\n  messageForm: FormGroup;\n  emailForm: FormGroup;\n  recepientsForm: FormGroup;\n  scheduleForm: FormGroup;\n  commConfModel: CommunicationConfigurationModel;\n  HttpStatus: any;\n  currentDate: any = this.getDefaultDate();\n\n  staffList?: Array<CommunicationStaff>;\n  attachmentInfo: AttachmentModel;\n  cols: {}[];\n  interactedStepperIndex = 0;\n\n  currentComponentName = 'CommunicationConfigurationComponent';\n  communicationTypesDropDown: any[];\n  schoolBoardsList: any[];\n  receipentList: any = [];\n  filterdStudents: any[];\n  filterdSearchStudents: any[];\n  selectedList: any[] = [];\n  studentList: any[] = [];\n\n  sectionNames: any[];\n  classNames: any[] = [];\n  boards: any[];\n  tabSettings: {};\n  staffTypes: any;\n  boardName: any;\n  classId: any;\n  boardId: any;\n  staffs: any;\n  closeAddPanel: boolean;\n  communicationSearchViewModel: CommunicationFetchView;\n  rows: any;\n  totalItems: any;\n  modelname: any;\n  pageCnt: any;\n  custRowsPerPageOptions: any;\n  filterRowData: any;\n  searchForm: FormGroup;\n  isValueIsObject = true;\n  classSections: any = [];\n  loadData = Promise.resolve(false);\n  test: any[];\n  statusViewModel: any[];\n\n  logoImgProp: {};\n  fileName: string;\n  communicationTypeDeliveryOptionsDropDown: any[] = [];\n  emailEnable: boolean;\n  smsEnable: boolean;\n  noticeEnable: boolean;\n  formValid = true;\n  showCustomCard = true;\n  customCardDetails: { title: string, message: string } = { title: 'Communications Search', message: 'Search Communications' };\n  isAllStudentsChecked = false;\n  isAllStaffChecked = false;\n\n  dateFormat: any;\n  searchData: any;\n  notificationEnable: boolean;\n  totalRowsCount: number;\n  boardDisable: boolean;\n  onSelectNew = false;\n  displayResults: any[] = [];\n  isSingleClick = false;\n  constructor(public snackBar: MatSnackBar, private cd: ChangeDetectorRef,\n    private sanitizer: DomSanitizer, private commService: CommunicationService,\n    public commonService: CommonService, private gradeSetupService: GradeSetupService\n    , private _fb: FormBuilder, public classSectionService: ClassSectionService\n    , private typeService: TypeService\n    , private router: Router,\n    private schoolAcademicSessionService: SchoolAcademicSessionService,\n    private classService: ClassesConfigService, private studentService: StudentDatabaseService, public dialogRef: MatDialog) {\n    super();\n    this.intializeView();\n    this.intializeModel();\n  }\n\n  intializeView(): void {\n    this.communicationSearchViewModel = {\n      studentIds: [],\n      studentNames: [],\n      communicationTypeId: [],\n      communicationType: '',\n      communicationStatus: '',\n      schoolBoardId: [],\n      classIds: [],\n      sectionIds: [],\n      statusIds: [],\n      sender: [],\n      title: '',\n      receiver: '',\n      entryDateBegin: null,\n      entryDateEnd: null,\n      approvedBy: '',\n      approvedDateBegin: null,\n      approvedDateEnd: null,\n      status: '',\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER, pageSize: AppSettings.PAGESIZE,\n    };\n  }\n\n  ngOnInit(): void {\n\n    this.searchForm = this._fb.group({\n\n      schoolBoardId: new FormControl([]),\n      classIds: new FormControl([]),\n      sectionIds: new FormControl([]),\n      studentName: new FormControl([]),\n      communicationTypeId: new FormControl([]),\n      statusIds: new FormControl([])\n    });\n\n    const modelTableComponent = this.getModelComponent(this.currentComponentName);\n    if (modelTableComponent) {\n      this.communicationSearchViewModel = modelTableComponent;\n      this.boardId = modelTableComponent.schoolBoardId;\n      this.searchForm.patchValue(modelTableComponent);\n      if (modelTableComponent.statusIds && modelTableComponent.statusIds.length) {\n        this.searchForm.patchValue({ statusIds: modelTableComponent.statusIds[0] });\n      }\n      this.classId = modelTableComponent.classIds;\n      this.getClassesList(this.boardId, true);\n      this.sections(this.classId, true);\n      if (modelTableComponent.studentNames && modelTableComponent.studentIds) {\n        this.searchForm.controls.studentName.patchValue({\n          studentName: modelTableComponent.studentNames,\n          id: modelTableComponent.studentIds\n        });\n        setTimeout(() => {\n          this.studentNameAutoInput.nativeElement.value = modelTableComponent.studentNames;\n        });\n      }\n      this.onSearch(false, true);\n    }\n\n    this.dateFormat = this.getSchoolDateFormat();\n    this.HttpStatus = require('http-status-codes');\n    this.isValueIsObject = true;\n    this.cols = [\n      { field: 'title', header: 'Title', sort: false },\n      { field: 'communicationType', header: 'Communication Type', sort: false },\n      { field: 'sender', header: 'Sender', sort: false },\n      { field: 'receiver', header: 'Receiver', sort: false },\n      { field: 'entryDate', header: 'Entry Date', sort: false },\n      { field: 'approvedBy', header: 'Approved By', sort: false },\n      { field: 'approvalDate', header: 'Approved Date', sort: false },\n      { field: 'communicationStatus', header: 'Status', sort: false },\n      { field: 'view', header: 'Actions', sort: false }\n    ],\n\n      this.tabSettings = {\n        rows: [],\n        columns: this.cols,\n        tablename: 'Communications Search',\n        headerOperations: {\n          addingForm: {\n            required: true,\n            btnName: AppSettings.NEW\n          }\n        }\n      };\n\n    this.communicationForm = this._fb.group({\n      title: new FormControl(null, [Validators.required, Validators.maxLength(45)]),\n      communicationTypeId: new FormControl(null, [Validators.required]),\n    });\n\n    this.messageForm = this._fb.group({\n      subject: new FormControl(null, [Validators.maxLength(90)]),\n      message: new FormControl(null),\n      attachment: this._fb.group({\n        fileName: null,\n        fileValue: null,\n      }),\n      sms: new FormControl(null, [Validators.maxLength(225)]),\n      notificationTitle: new FormControl(null, [Validators.maxLength(225)]),\n      notification: new FormControl(null, [Validators.maxLength(225)]),\n      noticeBoard: new FormControl(null, [Validators.maxLength(225)])\n    });\n\n    this.recepientsForm = this._fb.group({\n      boards: new FormControl(''),\n      classes: new FormControl(''),\n      sections: new FormControl(''),\n      studentIds: new FormControl(''),\n      staffType: new FormControl(''),\n      staffList: new FormControl(null)\n    });\n\n    this.scheduleForm = this._fb.group({\n      scheduleDate: new FormControl(null, [Validators.required]),\n      scheduleTime: new FormControl(null, [TimeValidator.validateTimeRequired])\n    });\n\n    this.searchForm.controls['studentName'].valueChanges.debounceTime(200).subscribe((name) => {\n      name = typeof (name) === 'string' ? name.trim() : name;\n      if (name !== null && name.length >= 3) {\n        this.filterdStudents = [];\n        this.studentService.studentNamesBaseOnAcademicSession(parseInt(this.getTokenParam('_as'), 10), null, null, null, name).subscribe((res) => {\n          this.filterdStudents = (res.studentsList.length > 0) ? res.studentsList : [];\n          this.cd.detectChanges();\n        });\n      }\n      else {\n        this.filterdStudents = [];\n      }\n    });\n\n    this.recepientsForm.controls['studentIds'].valueChanges.debounceTime(200).subscribe((name) => {\n      name = typeof (name) === 'string' ? name.trim() : name;\n      if (name !== null && name.length >= 3) {\n        this.filterdSearchStudents = [];\n        this.studentService.studentNamesBaseOnAcademicSession(parseInt(this.getTokenParam('_as'), 10), null, null, null, name).subscribe((res) => {\n          this.filterdSearchStudents = (res.studentsList.length > 0) ? res.studentsList : [];\n          this.cd.detectChanges();\n        });\n      }\n      else {\n        this.filterdSearchStudents = [];\n      }\n    });\n\n    this.getStatus();\n    this.communicationTypes();\n    this.schoolBoards();\n    this.getStaffTypes();\n  }\n\n  getStaffTypes(): void {\n    this.staffTypes = [];\n    this.staffs = [];\n    this.recepientsForm.controls['staffList'].patchValue(null);\n    this.typeService.getStaffTypes().subscribe(response => {\n      this.staffTypes = response.types.map((obj: any) => ({ value: obj, label: obj.name }));\n    }, error => {\n      this.errorResponse(error);\n    });\n\n  }\n\n  getStaffs(data: any): void {\n    this.staffs = [];\n    this.recepientsForm.controls['staffList'].patchValue('');\n    this.commService.getStaff(data.id).subscribe(response => {\n      if (response && response.length) {\n        this.staffs = response.map((obj: any) => ({ value: obj.id, label: obj.name }));\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n\n  }\n\n\n  intializeModel(): void {\n\n    this.commConfModel = {\n      communicationTypeId: 0,\n      title: null,\n      email: {\n        subject: null,\n        message: null,\n        attachment: {\n          fileName: '',\n          fileValue: ''\n        }\n      },\n      sms: null,\n      notificationTitle: null,\n      notification: null,\n      noticeBoard: null,\n      isAllStudents: false,\n      isAllStaff: false,\n      scheduleDate: null,\n      scheduleTime: null,\n      studentRecepients: {\n        boardClassSections: [],\n        studentIds: [],\n      },\n      staffRecepients: {\n        staffType: [],\n        staffList: []\n      }\n    };\n  }\n\n  communicationTypes(): void {\n    this.communicationTypesDropDown = [];\n    this.commService.getCommunicationType().subscribe(res => {\n      if (res.listViews.length) {\n        res.listViews.forEach(element => {\n          this.communicationTypesDropDown.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n\n  }\n\n  onCommunicationTypeSelect(commTypeId: any): void {\n    this.messageForm.reset();\n    this.msgForm.resetForm();\n    this.commConfModel.noticeBoard = null;\n    this.commConfModel.email.attachment = null;\n    this.commConfModel.email.message = null;\n    this.commConfModel.email.subject = null;\n    this.commConfModel.notification = null;\n    this.commConfModel.notificationTitle = null;\n    this.commConfModel.sms = null;\n\n    this.communicationTypeDeliveryOptionsDropDown = [];\n    this.commService.getCommunicationTypeDeliveryOptions(commTypeId.value.value).subscribe(res => {\n      if (res.listViews.length) {\n        res.listViews.forEach(element => {\n          this.communicationTypeDeliveryOptionsDropDown.push({\n            label: element.name,\n            value: element.id,\n            code: element.code\n          });\n        });\n        this.emailEnable = this.communicationTypeDeliveryOptionsDropDown.some(x => x.code === AppSettings.EMAIL_CODE);\n        this.smsEnable = this.communicationTypeDeliveryOptionsDropDown.some(x => x.code === AppSettings.SMS_CODE);\n        this.notificationEnable = this.communicationTypeDeliveryOptionsDropDown.some(x => x.code === AppSettings.PNC_CODE);\n        this.noticeEnable = this.communicationTypeDeliveryOptionsDropDown.some(x => x.code === AppSettings.NBD_CODE);\n\n        if (!this.emailEnable) {\n          this.messageForm.controls.subject.disable();\n          this.messageForm.controls.message.disable();\n        }\n        else {\n          this.messageForm.controls.subject.enable();\n          this.messageForm.controls.message.enable();\n        }\n        if (!this.smsEnable) {\n          this.messageForm.controls.sms.disable();\n        }\n        else {\n          this.messageForm.controls.sms.enable();\n        }\n        if (!this.notificationEnable) {\n          this.messageForm.controls.notificationTitle.disable();\n          this.messageForm.controls.notification.disable();\n        }\n        else {\n          this.messageForm.controls.notificationTitle.enable();\n          this.messageForm.controls.notification.enable();\n        }\n        if (!this.noticeEnable) {\n          this.messageForm.controls.noticeBoard.disable();\n        }\n        else {\n          this.messageForm.controls.noticeBoard.enable();\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n\n  }\n\n  getAllFilteredStudents(): void {\n    if (this.searchForm === undefined) {\n      return;\n    }\n  }\n\n  rowWiseActions(event: any): void {\n    if (event.operation === AppSettings.VIEW.toLowerCase()) {\n      this.router.navigate([CommunicationModuleConfig._Communication_Setup + '/' + event.clickedRow.id]);\n    }\n  }\n\n  // Get SChool Boards\n  schoolBoards(): void {\n\n    this.boards = [];\n    this.classNames = [];\n    this.classService.boardsBasedOnAcademicSession(parseInt(this.getTokenParam('_as'), 10)).subscribe(\n      response => {\n        if (response.listViews != null) {\n          if (response.listViews.length) {\n            response.listViews.forEach(element => {\n              this.boards.push({\n                label: element.name,\n                value: element.id\n              });\n              this.schoolBoardsList = this.boards;\n            });\n\n            if (this.searchForm.value.schoolBoardId) {\n              this.boardId = this.schoolBoardsList[0].value;\n              this.setFormControl('searchForm', 'schoolBoardId', this.schoolBoardsList[0].value);\n              this.getClassesList(this.boardId);\n            }\n          }\n        }\n      },\n      error => {\n        this.errorResponse(error);\n      }\n    );\n\n  }\n\n  // Get Classes to filter table data\n  getClassesList(boardId: any, onManualChange = false): void {\n    this.classNames = [];\n    if (!this.searchForm.value.schoolBoardId) {\n      return;\n    }\n    if (!onManualChange) {\n      this.classId = null;\n    }\n    this.gradeSetupService.schoolAcademicClasses(boardId).subscribe(\n      response => {\n        if (response.listViews != null) {\n          if (response.listViews.length) {\n            response.listViews.forEach(element => {\n              this.classNames.push({\n                label: element.name,\n                value: element.id\n              });\n            });\n          }\n        } else {\n          this.openSnackBar(AppSettings.SCHOOL_BOARD_HAS_CLASSES, true);\n        }\n      },\n      error => {\n        this.errorResponse(error);\n      }\n    );\n\n  }\n  // End\n\n  // on selection of class\n  sections(classId: number, onManualChange = false): void {\n    this.sectionNames = [];\n    if (!this.searchForm.value.schoolBoardId || !this.searchForm.value.classIds) {\n      return;\n    }\n    if (!onManualChange) {\n      this.searchForm.controls['sectionIds'].patchValue('');\n    }\n    if (!classId) {\n      return;\n    }\n    this.gradeSetupService.schoolAcademicClassSections(this.boardId, classId).subscribe(response => {\n      if (response.listViews.length) {\n\n        response.listViews.forEach(element => {\n          this.sectionNames.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n\n  }\n\n  getStatus(): void {\n    this.commService.getStatus(AppSettings.COMMUNICATION_CONFIG).subscribe(res => {\n      this.statusResponse(res);\n    });\n\n  }\n  // biling cycle response\n  statusResponse(res: any): void {\n    this.statusViewModel = [];\n    if (res.commonViewModel.length !== 0) {\n      for (let i = 0; i < res.commonViewModel.length; i++) {\n        this.statusViewModel.push({ value: res.commonViewModel[i].id, label: res.commonViewModel[i].name });\n      }\n    }\n\n  }\n\n\n  clearImages(logo = false): void {\n    if (logo) {\n      this.logoImgProp = {};\n      this.fileName = '';\n      if (this.messageForm.controls.attachment.value !== null) {\n        this.messageForm.controls.attachment.value.fileName = null;\n        this.messageForm.controls.attachment.value.fileValue = null;\n      }\n    }\n    this.cd.detectChanges();\n\n  }\n\n  imgChanged(event): void {\n\n    if (this.checkFileSize(event[0], AppSettings.TEXT_AND_IMAGE_FILE_EXTENSION, 2097152)) {\n      return;\n    }\n    if (event && event.length > 0) {\n\n      const reader = new FileReader();\n      const file = event[0];\n      reader.readAsDataURL(file);\n      let image;\n      image = new Image();\n      image.src = reader.result;\n      const that = this;\n\n      reader.onload = (_event) => {\n        that.messageForm.controls.attachment.value.fileName = file.name;\n        that.messageForm.controls.attachment.value.fileValue = ((<string>reader.result).split(',')[1]);\n        this.cd.detectChanges();\n      };\n      that.setFileProperties(image);\n\n    }\n  }\n\n  setFileProperties(image): void {\n    const data = {\n      src: this.sanitizer.bypassSecurityTrustResourceUrl(image.src),\n      width: image.width,\n      height: image.height\n    };\n\n    this.logoImgProp = {};\n    this.logoImgProp = data;\n    this.cd.detectChanges();\n  }\n\n  openForm(): void {\n    this.studentList = [];\n    this.isAllStudentsChecked = false;\n    this.isAllStaffChecked = false;\n    this.closeAddPanel = false;\n    this.interactedStepperIndex = 0;\n  }\n  checkAllStudents(data: any): void {\n    if (data.checked && this.displayResults !== null && this.displayResults.length > 0) {\n      this.openDialog('select-all-student', data);\n    } else {\n      this.allStudents(data);\n    }\n  }\n\n  allStudents(data: any): void {\n    this.isAllStudentsChecked = data.checked;\n    if (data.checked) {\n      this.displayResults = [];\n      this.displayResults.push({ label: 'All Students' });\n      this.setRecipientsForm();\n      this.clearBoardClass();\n      this.classSections = [];\n      this.commConfModel.studentRecepients.studentIds = [];\n      this.commConfModel.studentRecepients.boardClassSections = [];\n      this.recepientsForm.controls['studentIds'].disable();\n    } else {\n      this.recipients.reset();\n      this.displayResults = [];\n      this.recepientsForm.controls['studentIds'].enable();\n    }\n    this.commConfModel.isAllStudents = data.checked;\n  }\n\n  checkAllStaff(data: any): void {\n    if (data.checked && this.selectedList !== null && this.selectedList.length > 0) {\n      this.openDialog('select-all-staff', data);\n    } else {\n      this.allStaff(data);\n    }\n  }\n\n  allStaff(data: any): void {\n    this.isAllStaffChecked = data.checked;\n    if (data.checked) {\n      this.selectedList = [];\n      this.selectedList.push({ label: 'All Staffs' });\n      this.setRecipientsForm();\n      this.commConfModel.staffRecepients.staffList = [];\n      this.commConfModel.staffRecepients.staffType = [];\n    } else {\n      this.recipients.reset();\n      this.selectedList = [];\n    }\n    this.clearStaff();\n    this.commConfModel.isAllStaff = data.checked;\n\n  }\n\n  onBoardSelect(data: any): void {\n    this.classNames = [];\n    this.sectionNames = [];\n    this.searchForm.controls['classIds'].reset();\n    this.searchForm.controls['sectionIds'].reset();\n    if (data.value === undefined) {\n      return;\n    }\n    this.boardId = data.value;\n    this.boardName = data.value.label;\n    this.classId = null;\n    this.getClassesList(this.boardId);\n    this.searchForm.patchValue({\n      classIds: null,\n      sectionIds: null,\n    });\n  }\n\n  onStaffTypeSelect(data: any): void {\n    this.getStaffs(data.value.value);\n  }\n\n  onSectionButtonSelect(): void {\n    this.ckeckDuplicateRecipients();\n    this.setRecipientsForm();\n    this.setStudentPostView();\n  }\n  setStudentPostView(): void {\n    this.commConfModel.studentRecepients.boardClassSections = [];\n    this.commConfModel.studentRecepients.boardClassSections.push.\n      apply(this.commConfModel.studentRecepients.boardClassSections, this.displayResults.filter(c => c.studentId === undefined || c.studentId === null));\n  }\n\n  getSelectedStudent(data): void {\n    const tempRecipients = [];\n    if (this.displayResults.length > 0) {\n      tempRecipients.push({ studentId: data.id, studentName: data.studentName, admissionNumber: data.admissionNumber });\n      const result2 = _(tempRecipients)\n        .differenceBy(this.displayResults, 'admissionNumber')\n        .map()\n        .value();\n      this.displayResults.push.apply(this.displayResults, result2);\n      if (result2.length > 0) {\n        this.studentsSet();\n      }\n    } else {\n      this.displayResults.push({ studentId: data.id, studentName: data.studentName, admissionNumber: data.admissionNumber });\n      this.studentsSet();\n    }\n    this.recepientsForm.controls.studentIds.reset();\n  }\n\n  studentsSet(): void {\n    this.commConfModel.studentRecepients.studentIds = this.initializeArray(this.receipentForm.value.studentIds.id,\n      this.commConfModel.studentRecepients.studentIds);\n    this.setRecipientsForm();\n  }\n\n  onStaffButtonSelect(): void {\n    const tempRecipients = [];\n    if (this.recepientsForm.value.staffList !== undefined &&\n      this.recepientsForm.value.staffList !== null &&\n      this.checkDataExist('staffTypeId', this.recepientsForm.controls.staffType.value.value.id) === undefined && this.recepientsForm.value.staffList.length > 0) {\n      this.recepientsForm.value.staffList.forEach(element => {\n        tempRecipients.push({\n          staffTypeId: this.recepientsForm.controls.staffType.value.value.id,\n          staffTypeName: this.recepientsForm.controls.staffType.value.label,\n          staffId: element.value, staffName: element.label\n        });\n        if (this.selectedList.length > 0) {\n          const result3 = _(tempRecipients)\n            .differenceBy(this.selectedList, 'staffTypeId', 'staffId')\n            .map()\n            .value();\n          this.selectedList.push.apply(this.selectedList, result3);\n        } else {\n          this.selectedList.push.apply(this.selectedList, tempRecipients);\n        }\n        this.prapareStaffView();\n      });\n      this.clearStaff();\n    } else {\n      tempRecipients.push({\n        staffTypeId: this.recepientsForm.controls.staffType.value.value.id,\n        staffTypeName: this.recepientsForm.controls.staffType.value.label,\n        staffId: null\n      });\n      if (this.selectedList.length > 0) {\n        const result = _(tempRecipients)\n          .differenceBy(this.selectedList, 'staffTypeId')\n          .map()\n          .value();\n\n        if (result !== null && result.length === 0) {\n          this.openDialog('overide-staff-type');\n        } else {\n          this.addStaffs();\n          this.prapareStaffView();\n          this.clearStaff();\n        }\n      } else {\n        this.selectedList.push.apply(this.selectedList, tempRecipients);\n        this.prapareStaffView();\n        this.clearStaff();\n      }\n    }\n  }\n  addStaffs(): void {\n    this.selectedList.push({\n      staffTypeId: this.recepientsForm.controls.staffType.value.value.id,\n      staffTypeName: this.recepientsForm.controls.staffType.value.label,\n      staffId: null\n    });\n  }\n\n  prapareStaffView(): void {\n    this.setStaffPostView();\n    this.setRecipientsForm();\n  }\n\n  deleteStudentSelection(index: number): void {\n    const c = this.displayResults[index];\n    this.commConfModel.studentRecepients.studentIds = this.commConfModel.studentRecepients.studentIds.filter(function (id): any {\n      return id !== c.studentId;\n    });\n    this.displayResults.splice(index, 1);\n    if (this.isAllStudentsChecked) {\n      this.commConfModel.isAllStudents = false;\n      this.isAllStudentsChecked = false;\n      this.recepientsForm.controls['studentIds'].enable();\n    }\n    if (this.displayResults.length === 0 && this.selectedList.length === 0) {\n      this.recipients.reset();\n    }\n    this.setStudentPostView();\n  }\n\n  deleteStaffSelection(index: number): void {\n    this.selectedList.splice(index, 1);\n    if (this.isAllStaffChecked) {\n      this.commConfModel.isAllStaff = false;\n      this.isAllStaffChecked = false;\n    }\n    if (this.selectedList.length === 0 && this.displayResults.length === 0) {\n      this.recipients.reset();\n    }\n    this.setStaffPostView();\n    this.recepientsForm.reset();\n  }\n  setStaffPostView(): void {\n    const staffTypIds = [];\n    this.commConfModel.staffRecepients.staffList = [];\n    this.selectedList.forEach(c => {\n      if (c.staffId !== null) {\n        this.commConfModel.staffRecepients.staffList.push(c);\n      }else{\n        staffTypIds.push(c.staffTypeId);\n      }\n    });\n    this.commConfModel.staffRecepients.staffType = [];\n    this.commConfModel.staffRecepients.staffType.push.apply(this.commConfModel.staffRecepients.staffType, staffTypIds);\n  }\n\n  onSelectRecepients(): void {\n    if ((this.selectedList && !this.selectedList.length) && (this.displayResults && !this.displayResults.length)) {\n      this.openSnackBar('please select atleast one recipient', true);\n    }\n  }\n\n  initializeArray(input: any, output: any): any {\n    if (output === null) {\n      output = [];\n    }\n    if (input != null) {\n      output.push(input);\n    }\n    return output;\n  }\n\n  selectedStudent(studentData): void {\n    this.intializeView();\n    this.searchForm.patchValue({\n      schoolBoardId: null,\n      classIds: null,\n      sectionIds: null,\n      communicationTypeId: null,\n      statusIds: null\n    });\n    this.communicationSearchViewModel.studentIds = studentData.id;\n    this.communicationSearchViewModel.studentNames = studentData.studentName;\n    this.studentList.push(this.communicationSearchViewModel);\n    this.onSearch(this.searchForm.value, true);\n  }\n\n  displayFn(data: any): void {\n    return data ? data.studentName : undefined;\n  }\n\n  onSearch(data: any, onStudentSearch = false): void {\n    if (!onStudentSearch) {\n      this.searchForm.controls.studentName.patchValue(null);\n      this.communicationSearchViewModel.studentIds = [];\n      this.communicationSearchViewModel.studentNames = [];\n    }\n    this.updateFilterViewModel();\n    if (data) {\n      this.communicationSearchViewModel.pageNumber = 1;\n    }\n    this.invoiceFilter();\n  }\n\n  // onSearch(data: any): void {\n  tableData(data: CommunicationFetchView): void {\n    this.communicationSearchViewModel = data;\n    this.updateFilterViewModel();\n    this.invoiceFilter();\n  }\n\n\n  invoiceFilter(): void {\n    if (this.searchForm === undefined) {\n      return;\n    }\n    this.setModelDataTableComponent(this.currentComponentName, this.communicationSearchViewModel);\n    this.commService.communicationDetailsList(\n      this.communicationSearchViewModel.studentIds,\n      this.communicationSearchViewModel.studentNames, this.communicationSearchViewModel.communicationTypeId, this.communicationSearchViewModel.communicationType,\n      this.communicationSearchViewModel.schoolBoardId,\n      this.communicationSearchViewModel.classIds,\n      this.communicationSearchViewModel.sectionIds,\n      this.communicationSearchViewModel.statusIds,\n      this.communicationSearchViewModel.communicationStatus,\n      this.communicationSearchViewModel.sender,\n      this.communicationSearchViewModel.receiver,\n      this.communicationSearchViewModel.title,\n      this.communicationSearchViewModel.entryDateBegin,\n      this.communicationSearchViewModel.entryDateEnd,\n      this.communicationSearchViewModel.approvedBy,\n      this.communicationSearchViewModel.approvedDateBegin, this.communicationSearchViewModel.approvedDateEnd,\n      this.communicationSearchViewModel.sortOrder,\n      this.communicationSearchViewModel.sortBy,\n      this.communicationSearchViewModel.pageNumber, this.communicationSearchViewModel.pageSize).subscribe((res: any) => this.response(res), error => {\n        this.errorResponse(error);\n      });\n  }\n\n  updateFilterViewModel(): void {\n    const data = this.searchForm.value;\n    this.communicationSearchViewModel.statusIds = [data.statusIds];\n    this.communicationSearchViewModel.schoolBoardId = data.schoolBoardId;\n    this.communicationSearchViewModel.communicationTypeId = data.communicationTypeId;\n    if (data.studentName && data.studentName.id) {\n      this.communicationSearchViewModel.studentIds = data.studentName.id;\n      this.communicationSearchViewModel.studentNames = data.studentName.studentName;\n    } else {\n      this.communicationSearchViewModel.studentIds = data.studentName;\n      this.communicationSearchViewModel.studentNames = data.studentName;\n    }\n    this.communicationSearchViewModel.classIds = data.classIds;\n    this.communicationSearchViewModel.sectionIds = data.sectionIds;\n  }\n\n\n  onClear(): void {\n    this.searchForm.reset();\n    this.filterdStudents = [];\n    this.classNames = [];\n    this.sectionNames = [];\n    this.searchForm.controls['studentName'].patchValue(null);\n    this.communicationSearchViewModel.schoolBoardId = null;\n    this.communicationSearchViewModel.classIds = null;\n    this.communicationSearchViewModel.sectionIds = null;\n    this.communicationSearchViewModel.communicationTypeId = null;\n    this.communicationSearchViewModel.statusIds = null;\n    this.communicationSearchViewModel.studentIds = [];\n    this.communicationSearchViewModel.studentNames = [];\n    this.showCustomCard = true;\n    this.setModelDataTableComponent(this.currentComponentName, null);\n  }\n\n\n  response(data: any): void {\n    this.showCustomCard = false;\n    if (localStorage.getItem(this.currentComponentName)) {\n      this.modelname = JSON.parse(localStorage.getItem(this.currentComponentName));\n    }\n    if (!data.resultList) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n    }\n    else if (data.resultList) {\n      this.rows = data.resultList.list;\n      this.totalRowsCount = data.resultList.totalItems;\n      this.pageCnt = data.resultList.totalPages;\n      this.filterRowData = [];\n      this.filterRowData = this.rows;\n\n      const x = [];\n      this.filterRowData.forEach(elnt => {\n        if (x.length === 0) {\n          x.push(elnt);\n        }\n        else {\n          this.filterRowData.forEach((element: any) => {\n            const foundIndex = x.findIndex((value: any) => {\n              if (value.id === element.id) {\n                return value;\n              }\n            });\n            if (foundIndex === -1) {\n              x.push(element);\n            }\n          });\n        }\n      });\n      this.filterRowData = x;\n      for (let index = 0; index < this.filterRowData.length; index++) {\n        for (let j = 0; j < this.rows.length; j++) {\n          if (this.filterRowData[index].id === this.rows[j].id) {\n            this.rows[j].operations = [\n              {\n                name: AppSettings.VIEW_OPERATION,\n                icon: AppSettings.VIEW_ICON,\n                operationName: AppSettings.VIEW\n              }];\n            break;\n          }\n        }\n      }\n\n      this.rows.forEach(element => {\n        element.entryDate = (element.entryDate == null) ? null : this.commonService.customDateFormat(element.entryDate, this.dateFormat).date;\n        element.approvalDate = (element.approvalDate == null) ? null : this.commonService.customDateFormat(element.approvalDate, this.dateFormat).date;\n      });\n\n      this.communicationSearchViewModel.pageNumber = data.resultList.pageNumber;\n    }\n    this.tabSettings = {\n      columns: this.cols,\n      tablename: 'Communications Search',\n      model: this.communicationSearchViewModel,\n      rows: this.rows,\n      componentName: this.currentComponentName,\n      isSelectRowRequired: false,\n      visibleSelectAll: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalRowsCount,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      filtersList: data.filters,\n      rowGroupingColumns: ['title', 'communicationType', 'sender', 'approvedBy', 'approvalDate', 'communicationStatus', 'entryDate']\n    };\n    this.scrollIntoViewById('com-dt');\n  }\n\n  onSubmitForm(): void {\n    this.commConfModel.communicationTypeId = this.communicationForm.value.communicationTypeId.value;\n    this.commConfModel.title = this.communicationForm.value.title;\n    this.prepareModel(this.commConfModel, this.scheduleForm.value);\n    const formatedMsgContent = {};\n    Object.assign(formatedMsgContent, this.messageForm.value);\n    if (formatedMsgContent['message']) {\n      formatedMsgContent['message'] = JSON.stringify(formatedMsgContent['message']).slice(1, -1);\n    }\n    this.prepareModel(this.commConfModel, formatedMsgContent);\n    this.prepareModel(this.commConfModel.email, formatedMsgContent);\n    if (!this.isSingleClick){\n      this.isSingleClick = true;\n      this.commService.communicationConfiguration(this.commConfModel).subscribe(res => this.result(res), error => {\n        this.errorResponse(error);\n      });\n      setTimeout(() => {\n      this.isSingleClick = false;\n      }, 2000);\n    }\n   \n  }\n\n  result(response: any): void {\n    if (response.statusCode === this.HttpStatus.OK) {\n      this.closeAddPanel = true;\n      this.displayResults = [];\n      this.selectedList = [];\n      this.intializeModel();\n      this.invoiceFilter();\n      this.resetForms();\n      this.interactedStepperIndex = 0;\n      this.onSelectNew = false;\n      this.commonService.setOverlay(AppSettings.HIDE);\n    }\n    else {\n      this.closeAddPanel = false;\n    }\n    document.getElementById('resetButtonStepper').click();\n    this.openSnackBar(response.messages.ResultMessage);\n  }\n  showDate(data: any): any {\n    return data != null ? this.commonService.customDateFormat(data.toString(), this.getSchoolDateFormat()).date : null;\n  }\n\n  // onCancelClick\n  onCancel(): void {\n    this.onSelectNew = false;\n    this.commonService.setOverlay(AppSettings.HIDE);\n    this.closeAddPanel = true;\n    this.selectedList = [];\n    this.displayResults = [];\n    this.receipentList = [];\n    this.resetForms();\n    this.stepper.reset();\n    this.clearImages(true);\n  }\n\n  resetForms(): void {\n    this.commForm.resetForm();\n    this.msgForm.resetForm();\n    this.receipentForm.resetForm();\n    this.schForm.resetForm();\n    this.scheduleForm.reset();\n    this.isAllStudentsChecked = false;\n    this.isAllStaffChecked = false;\n  }\n  onAdd(): void {\n    this.onSelectNew = true;\n    this.commonService.setOverlay(AppSettings.SHOW);\n  }\n  focusForm(focusForm): void {\n    document.getElementById('step-title').focus();\n  }\n\n  // get Classes\n  getClassSections(): void {\n    this.schoolAcademicSessionService.academicClassSections(this.boardId).subscribe(response => {\n      this.classResponse(response);\n    },\n      error => {\n        this.errorResponse(error);\n      });\n\n  }\n\n  classResponse(data: any): void {\n    this.test = [];\n    this.classSections = [];\n    if (data.classSectionsDataView && data.classSectionsDataView.length > 0) {\n      this.test = data.classSectionsDataView;\n      this.test.forEach(classdata => {\n        const classObj = [];\n        classObj['name'] = classdata.className;\n        classObj['items'] = [];\n        classdata.sectionViewModel.forEach(section => {\n          classObj['items'].push({\n            label: section.name,\n            value: { classId: classdata.classId, id: section.id, className: classdata.className }\n          });\n        });\n        this.classSections.push(classObj);\n      });\n    }\n    this.loadData = Promise.resolve(true);\n\n  }\n  // End\n\n  onRecipientsBoardSelect(data: any): void {\n    if (data.value === undefined) {\n      return;\n    }\n    this.boardId = data.value.value;\n    this.getClassSections();\n  }\n\n  onClassSelect(data: any): void {\n    this.classId = data.value;\n    this.sections(this.classId);\n    this.searchForm.patchValue({\n      sectionIds: null,\n    });\n  }\n\n  clearBoardClass(): void {\n    this.recepientsForm.controls.classes.reset();\n    this.recepientsForm.controls.boards.reset();\n    this.recepientsForm.controls.studentIds.reset();\n    this.classSections = [];\n  }\n\n  clearStaff(): void {\n    this.recepientsForm.controls.staffList.reset();\n    this.recepientsForm.controls.staffType.reset();\n    this.staffs = [];\n  }\n\n  ckeckDuplicateRecipients(): any {\n    const tempRecipients = [];\n    if (this.recepientsForm.controls.classes.value != null && this.recepientsForm.controls.classes.value.length > 0) {\n      if (this.checkDataExist('boardId', this.recepientsForm.controls.boards.value.value) === undefined) {\n        this.recepientsForm.controls.classes.value.forEach(element => {\n          if (this.displayResults.length === 0 || this.checkClassSectionDuplicate(element.value.classId, element.value.id) === undefined) {\n            this.displayResults.push({\n              boardId: this.recepientsForm.controls.boards.value.value, boardName: this.recepientsForm.controls.boards.value.label,\n              className: element.value.className, classId: element.value.classId, sectionId: element.value.id, sectionName: element.label\n            });\n          }\n        });\n        this.clearBoardClass();\n      } else {\n        this.openDialog('overide-board');\n      }\n    } else {\n      tempRecipients.push({\n        boardId: this.recepientsForm.controls.boards.value.value, boardName: this.recepientsForm.controls.boards.value.label, classId: null\n      });\n      const result2 = _(tempRecipients)\n        .differenceBy(this.displayResults, 'boardId')\n        .map()\n        .value();\n      if (result2.length === 0) {\n        this.openDialog('overide-board');\n      } else {\n        this.addBoard();\n      }\n    }\n  }\n\n  checkClassSectionDuplicate(classId: any, sectionId: any): any{\n    return this.displayResults.find(a => a.classId === classId && a.sectionId === sectionId);\n  }\n\n  setRecipientsForm(): void {\n    if (!this.recipients.value) {\n      this.recipients.patchValue('true');\n    }\n  }\n\n  checkDataExist(key: any, value: any): any {\n    if (key === 'boardId') {\n      return this.displayResults.find(a => a.boardId === value && a.classId === null);\n    }\n    if (key === 'staffTypeId') {\n      return this.selectedList.find(a => a.staffTypeId === value && a.staffId === null);\n    }\n  }\n\n  openDialog(operation: string, value?: number): void {\n    const title = AppSettings.CONFIRMATION_REMOVE_RECIPIENTS;\n    const dialogRef = this.dialogRef.open(CustomDialogComponent, {\n      disableClose: true,\n      data: {\n        text: this.commonService.getTranslation(title),\n        action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES\n      },\n    });\n\n    dialogRef.afterClosed().subscribe(action => {\n      if (action === AppSettings.NO) {\n        if (this.studentCheck !== undefined) {\n          this.isAllStudentsChecked = false;\n          this.studentCheck._checked = this.isAllStudentsChecked;\n        }\n        if (this.staffCheck !== undefined) {\n          this.isAllStaffChecked = false;\n          this.staffCheck._checked = this.isAllStudentsChecked;\n        }\n        this.cd.detectChanges();\n        this.dialogRef.closeAll();\n      }\n      else if (operation === 'select-all-student' && action === AppSettings.YES) {\n        this.allStudents(value);\n      }\n      else if (operation === 'select-all-staff' && action === AppSettings.YES) {\n        this.allStaff(value);\n      } else if (operation === 'overide-board' && action === AppSettings.YES) {\n        this.clearBoardSelectedData(this.recepientsForm.controls.boards.value.value);\n        this.onSectionButtonSelect();\n      } else if (operation === 'overide-staff-type' && action === AppSettings.YES) {\n        this.clearStaffTypeSelectedData(this.recepientsForm.controls.staffType.value.value.id);\n        this.onStaffButtonSelect();\n      }\n    });\n  }\n\n  clearStaffTypeSelectedData(value: any): any {\n    this.selectedList = this.selectedList.filter(a => a.staffTypeId !== value);\n  }\n  clearBoardSelectedData(value: any): any {\n    this.displayResults = this.displayResults.filter(a => a.boardId !== value);\n  }\n\n  addBoard(): void {\n    this.displayResults.push({\n      boardId: this.recepientsForm.controls.boards.value.value, boardName: this.recepientsForm.controls.boards.value.label, classId: null\n    });\n    this.clearBoardClass();\n  }\n}\n","module.exports = \"<div class=\\\"simple-table-container radius-t-20 mat-elevation-z8 mx-40 mb-20\\\" *ngIf=\\\"communicationList\\\">\\n  <div fxLayoutAlign=\\\"end center\\\" class=\\\"border-bottom p-12 mr-12\\\" *ngIf=\\\"ApproveButton || rejectButton\\\">\\n    <button id=\\\"navButton_1\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\"approveCommunication()\\\" class=\\\"mr-8\\\" *ngIf=\\\"ApproveButton\\\" translate>{{'Approve' | translate}}</button>\\n    <button id=\\\"reject-button\\\" mat-raised-button (click)=\\\"rejectCommunication()\\\" *ngIf=\\\"rejectButton\\\" translate>{{'Cancel' | translate}}</button>\\n  </div>\\n  <div fxLayoutAlign=\\\"space-between start\\\" class=\\\"mb-20 p-12\\\">\\n    <mat-list fxLayout=\\\"row wrap\\\" fxFlex=\\\"55\\\" class=\\\"pr-8\\\">\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"35\\\"><span translate>Communication Type</span></mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"2\\\">:</mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"60\\\"><div class=\\\"break-word\\\">{{communicationList.communicationType}}</div></mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"35\\\"><span translate>Title</span></mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"2\\\">:</mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"60\\\"><div class=\\\"break-word\\\">{{communicationList.title}}</div></mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"35\\\"><span translate>Status</span></mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"2\\\">:</mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"60\\\">{{communicationList.status}}</mat-list-item>\\n\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"35\\\"><span translate>Created By</span></mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"2\\\">:</mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"60\\\"><div class=\\\"break-word\\\">{{communicationList.createdBy? (communicationList.createdBy) : \\\"--\\\"}}</div>\\n      </mat-list-item>\\n\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"35\\\"><span translate>Entry Date</span></mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"2\\\">:</mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"60\\\">{{communicationList.entryDate? (communicationList.entryDate): \\\"--\\\"}}\\n      </mat-list-item>\\n\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"35\\\"><span translate>Approved By</span></mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"2\\\">:</mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"60\\\">\\n        <div class=\\\"break-word\\\"> {{communicationList.approvedBy? (communicationList.approvedBy): \\\"--\\\"}}</div></mat-list-item>\\n\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"35\\\"><span translate>Approval Date</span></mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"2\\\">:</mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"60\\\">\\n        {{communicationList.approvelDate? (communicationList.approvelDate): \\\"--\\\"}}</mat-list-item>\\n\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"35\\\"><span translate>Schedule Date & Time</span></mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"2\\\">:</mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"60\\\">\\n        {{communicationList.scheduleDate? (communicationList.scheduleDate): \\\"--\\\"}}</mat-list-item>\\n    </mat-list>\\n    <div fxLayout=\\\"column\\\" fxFlex=\\\"45\\\" class=\\\"px-20 pt-12\\\">\\n      <div class=\\\"h2 text-uppercase\\\" translate>Recipients</div>\\n      <mat-list fxLayout=\\\"row wrap\\\" fxFlex=\\\"100\\\" class=\\\"border pt-0 recipients last-border-none mh-350\\\">\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" *ngFor=\\\"let item of communicationList.reciepents\\\"\\n          class=\\\"border-bottom\\\">\\n          <!-- <div>{{item.name + ' ' + item.admissionNumber + '' +item.staffCode}}</div>\\n          <div>{{item.class + ' ' + item.section}}</div> -->\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"py-8\\\">\\n            <div fxLayout=\\\"row\\\">\\n              <div class=\\\"break-word pr-8\\\" fxFlex=\\\"60\\\">{{item.name}}</div> \\n              <div *ngIf=\\\"item.admissionNumber != '' \\\" class=\\\"break-word\\\" fxFlex=\\\"40\\\">{{item.admissionNumber}}</div>\\n              <div *ngIf=\\\"item.staffCode != '' \\\" class=\\\"break-word\\\" fxFlex=\\\"40\\\">{{item.staffCode}}</div>\\n            </div>\\n            <div fxLayout=\\\"row\\\">\\n              <div class=\\\"break-word pr-8\\\" fxFlex=\\\"60\\\">{{item.class}}</div> \\n              <div class=\\\"break-word\\\" fxFlex=\\\"40\\\">{{item.section}}</div>\\n            </div>\\n          </div>\\n                \\n        </mat-list-item>\\n      </mat-list>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"p-24 border-top\\\" fxLayout=\\\"row wrap\\\"\\n    *ngIf=\\\"communicationList.emailContent || communicationList.smsContent || communicationList.noticeBoardContent || communicationList.pushMessage\\\">\\n    <div fxLayout=\\\"column\\\" fxFlex=\\\"50\\\" *ngIf=\\\"communicationList.emailContent\\\" class=\\\"px-12\\\">\\n      <div class=\\\"mt-16 mb-4\\\" translate>Email Content</div>\\n      <div fxLayout=\\\"column\\\" class=\\\"p-20 border mb-20\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n          <mat-label translate>Subject</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" [value]=\\\"communicationList.emailContent.subject\\\" readonly>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"formfield-pb-0\\\">\\n          <mat-label translate>Message</mat-label>\\n          <textarea matInput autocomplete=\\\"off\\\" [value]=\\\"nl2br(communicationList.emailContent.message)\\\" readonly></textarea>\\n        </mat-form-field>\\n        <div fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"32\\\" fxFlex=\\\"100\\\"\\n          *ngIf=\\\"communicationList.emailContent.attachment.fileName\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"mt-8\\\">\\n            <span class=\\\"secondary-text pr-20\\\" translate>Attachment :</span> <button mat-button color=\\\"accent\\\"\\n              (click)=\\\"download()\\\">\\n              <u>View Attachment</u></button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div fxLayout=\\\"column\\\" fxFlex=\\\"50\\\" class=\\\"px-12\\\" *ngIf=\\\"communicationList.smsContent\\\">\\n      <div class=\\\"mt-16 mb-4\\\" translate>SMS Content</div>\\n      <div fxLayout=\\\"column\\\" class=\\\"p-20 border mb-20\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"formfield-pb-0\\\">\\n          <mat-label translate>Sms</mat-label>\\n          <textarea matInput autocomplete=\\\"off\\\" [value]=\\\"communicationList.smsContent\\\" readonly></textarea>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n\\n    <div fxLayout=\\\"column\\\" fxFlex=\\\"50\\\" *ngIf=\\\"communicationList.noticeBoardContent\\\" class=\\\"px-12\\\">\\n      <div class=\\\"mt-16 mb-4\\\" translate>Notice Board Content</div>\\n      <div fxLayout=\\\"column\\\" class=\\\"p-20 border mb-20\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"formfield-pb-0\\\">\\n          <mat-label translate>Notice Board</mat-label>\\n          <textarea matInput autocomplete=\\\"off\\\" [value]=\\\"communicationList.noticeBoardContent\\\" readonly></textarea>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n\\n    <div fxLayout=\\\"column\\\" fxFlex=\\\"50\\\" class=\\\"px-12\\\" *ngIf=\\\"communicationList.pushMessage\\\">\\n      <div class=\\\"mt-16 mb-4\\\" translate>Push Notification Content</div>\\n      <div fxLayout=\\\"column\\\" class=\\\"p-20 border mb-20\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n          <mat-label translate>Title</mat-label>\\n          <input matInput autocomplete=\\\"off\\\" [value]=\\\"communicationList.pushMessage.title\\\" readonly>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"formfield-pb-0\\\">\\n          <mat-label translate>Push Notification</mat-label>\\n          <textarea matInput autocomplete=\\\"off\\\" [value]=\\\"communicationList.pushMessage.message\\\" readonly></textarea>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-custom-card *ngIf=\\\"!communicationList\\\" [inputMessage]=\\\"'No Records Found'\\\">\\n</app-custom-card>\\n\"","module.exports = \".mh-248 {\\n  max-height: 248px !important;\\n  overflow-y: auto; }\\n\\n.mh-350 {\\n  max-height: 350px !important;\\n  overflow-y: auto; }\\n\\n.last-border-none .mat-list-item {\\n  height: auto; }\\n\\n.last-border-none .border-bottom:last-child {\\n  border-bottom: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvY29tbXVuaWNhdGlvbi9zY2hvb2wtY29tbXVuaWNhdGlvbnMvY29tbXVuaWNhdGlvbi1kZXRhaWxzL2NvbW11bmljYXRpb24tZGV0YWlscy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQTtFQUNJLDRCQUE0QjtFQUM1QixnQkFBZ0IsRUFBQTs7QUFFcEI7RUFDSSw0QkFBNEI7RUFDNUIsZ0JBQWdCLEVBQUE7O0FBR3BCO0VBRVEsWUFBWSxFQUFBOztBQUZwQjtFQUtRLG1CQUFtQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jb21tdW5pY2F0aW9uL3NjaG9vbC1jb21tdW5pY2F0aW9ucy9jb21tdW5pY2F0aW9uLWRldGFpbHMvY29tbXVuaWNhdGlvbi1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gLm13LTU4NHtcbi8vICAgICBtYXgtd2lkdGg6IDU4MHB4ICFpbXBvcnRhbnQ7XG4vLyB9XG5cbi5taC0yNDgge1xuICAgIG1heC1oZWlnaHQ6IDI0OHB4ICFpbXBvcnRhbnQ7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbn1cbi5taC0zNTAge1xuICAgIG1heC1oZWlnaHQ6IDM1MHB4ICFpbXBvcnRhbnQ7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbn1cblxuLmxhc3QtYm9yZGVyLW5vbmUge1xuICAgIC5tYXQtbGlzdC1pdGVte1xuICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgfVxuICAgIC5ib3JkZXItYm90dG9tOmxhc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItYm90dG9tOiBub25lO1xuICAgIH1cbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { CommunicationService } from 'app/service/communication/communication-service';\nimport { CommonService } from 'app/service/common.service';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { AppSettings } from 'app/app.constants';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'app-communication-details',\n  templateUrl: './communication-details.component.html',\n  styleUrls: ['./communication-details.component.scss']\n})\nexport class CommunicationDetailsComponent extends CommonComponent implements OnInit {\n  communicationId: any;\n  communicationList: any;\n  nameImgProp: any;\n  ApproveButton = true;\n  rejectButton = true;\n\n  constructor(private communicationService: CommunicationService, public commonService: CommonService,\n    private storeService: StoreService, private route: ActivatedRoute, public snackBar: MatSnackBar, public dialogRef: MatDialog, private _focusMonitor: FocusMonitor) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.communicationId = params.id;\n      }\n    });\n    this.communicationDetails();\n  }\n\n  communicationDetails(): void {\n    this.communicationService.communicationDetails(this.communicationId).subscribe(res => this.communicationDeatilsResponse(res));\n  }\n  communicationDeatilsResponse(data: any): void {\n    if (data.communicationDetailsView != null) {\n      this.communicationList = [];\n      this.communicationList = data.communicationDetailsView;\n      this.communicationList.status === AppSettings.Approved ? (this.rejectButton = true, this.ApproveButton = false) : this.ApproveButton = true;\n      this.communicationList.status === AppSettings.Cancelled ? (this.rejectButton = false, this.ApproveButton = false) : this.rejectButton = true;\n      this.communicationList.entryDate =\n        (this.communicationList.entryDate == null) ? null : this.commonService.customDateFormat(this.communicationList.entryDate, this.getSchoolDateFormat()).date;\n      this.communicationList.approvelDate =\n        (this.communicationList.approvelDate == null) ? null : this.commonService.customDateFormat(this.communicationList.approvelDate, this.getSchoolDateFormat()).date;\n    }\n    else {\n      this.communicationList = [];\n    }\n\n  }\n\n  approveCommunication(): void {\n    this.openDialog(true);\n  }\n\n  rejectCommunication(): void {\n    this.openDialog(false);\n  }\n\n  communicationResponse(data): void {\n    this.openSnackBar(data.messages.ResultMessage);\n    this.communicationDetails();\n    this.dialogRef.closeAll();\n  }\n\n  download(): void {\n    if (this.communicationList.emailContent.attachment.fileName !== null) {\n      this.nameImgProp = this.storeService.getFilePath(this.communicationList.emailContent.attachment.fileName);\n      window.open(this.nameImgProp);\n    }\n  }\n\n  openDialog(approveCommunication: boolean): void {\n    const title = approveCommunication ? AppSettings.COMMUNICATION_APPROVE : AppSettings.COMMUNICATION_REJECT;\n    const dialogRef = this.dialogRef.open(CustomDialogComponent, {\n      disableClose: true,\n      data: {\n        text: this.commonService.getTranslation(title),\n        action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES\n      },\n    });\n    this.dialogMethod(dialogRef, approveCommunication);\n  }\n\n  dialogMethod(dialogRef: any, approveCommunication: boolean): void {\n    dialogRef.afterClosed().subscribe(action => {\n      if (action === AppSettings.NO) {\n        this.dialogRef.closeAll();\n      }\n      else if (approveCommunication && action === AppSettings.YES) {\n        this.communicationService.approveCommunication(this.communicationId).subscribe(data => this.communicationResponse(data), error => {\n          this.errorResponse(error);\n        });\n      }\n      else if (!approveCommunication && action === AppSettings.YES) {\n        this.communicationService.rejectCommunication(this.communicationId).subscribe(data => this.communicationResponse(data), error => {\n          this.errorResponse(error);\n        });\n      }\n    });\n    setTimeout(() => {\n      this._focusMonitor.stopMonitoring(document.getElementById('reject-button'));\n      this._focusMonitor.stopMonitoring(document.getElementById('navButton_1'));\n    });\n  }\n}\n","module.exports = \"<div fxLayout=\\\"column\\\" class=\\\"info-relative mt-32\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"edit-info\\\">\\n    <button mat-raised-button color=\\\"primary\\\" class=\\\"text-uppercase mr-4\\\"\\n      [routerLink]=\\\"['/communication/school-communications/communication-configuration']\\\" translate>{{'Back' | translate}}</button>\\n\\n    <button mat-button type=\\\"button\\\" (click)=\\\"getHelpText('Communication Details')\\\">\\n      <mat-icon class=\\\"grey-600-fg\\\" >info</mat-icon>\\n    </button>\\n  </div>\\n</div>\\n\\n<mat-tab-group [selectedIndex]=\\\"index\\\" (selectedIndexChange)=\\\"selected($event)\\\" class=\\\"manage-institue \\\">\\n  <mat-tab label=\\\"{{'COMMUNICATION DETAILS' | translate}}\\\">\\n    <div *ngIf=\\\"showCommunicationDetails\\\">\\n      <app-communication-details [data]=\\\"selectedChanged\\\"></app-communication-details>\\n    </div>\\n  </mat-tab>\\n\\n  <mat-tab label=\\\"{{'MESSAGE TRANSMISSION' | translate}}\\\">\\n    <div *ngIf=\\\"showMessageTransmission\\\">\\n      <app-message-transmissions [data]=\\\"selectedChanged\\\"></app-message-transmissions>\\n    </div>\\n  </mat-tab>\\n\\n</mat-tab-group>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tbXVuaWNhdGlvbi9zY2hvb2wtY29tbXVuaWNhdGlvbnMvY29tbXVuaWNhdGlvbi1zZXR1cC9jb21tdW5pY2F0aW9uLXNldHVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { CommonService } from 'app/service/common.service';\n\n@Component({\n  selector: 'app-communication-setup',\n  templateUrl: './communication-setup.component.html',\n  styleUrls: ['./communication-setup.component.scss']\n})\nexport class CommunicationSetupComponent extends CommonComponent implements OnInit {\n  showCommunicationDetails = true;\n  showMessageTransmission: boolean;\n  index: any;\n  selectedChanged: any;\n  constructor(public commonService: CommonService) { \n    super();\n  }\n\n  ngOnInit(): void {\n  }\n\n\n   // tab Selection\n   selected(value: any): void {\n    this.index = value;\n    switch (value) {\n      case 0: {\n        // statements; \n        this.showMessageTransmission = false;\n        this.showCommunicationDetails = true;\n        window.location.hash = 'CommunicationDetails';\n        break;\n      }\n      case 1: {\n        this.showMessageTransmission = true;\n        this.showCommunicationDetails = false;\n        window.location.hash = 'MessageTransmissions';\n        break;\n      }\n      default: {\n        // statements; \n        break;\n      }\n    }\n    /*const instituteDetails = JSON.parse(localStorage.getItem('_s'));\n    if (instituteDetails != null) {\n      this.selectedChanged = JSON.parse(localStorage.getItem('_s')).id;\n    }*/\n  }\n}\n","module.exports = \"<div class=\\\"px-40\\\">\\n  <div class=\\\"mat-elevation-z8 simple-table-container radius-t-20\\\">\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"p-24\\\" *ngIf=\\\"commData\\\">\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\">\\n        <mat-label translate>Communication Type</mat-label>\\n        <input matInput required [(ngModel)]=\\\"commData.communicationType\\\" readonly>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"px-sm-20\\\">\\n        <mat-label translate>Title</mat-label>\\n        <input matInput required [(ngModel)]=\\\"commData.title\\\" readonly>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\">\\n        <mat-label translate>Status</mat-label>\\n        <input matInput required [(ngModel)]=\\\"commData.communicationStatus\\\" readonly>\\n      </mat-form-field>\\n\\n    </div>\\n    <mat-divider></mat-divider>\\n  </div>\\n</div>\\n<mat-tab-group class=\\\"manage-institue mt-24\\\">\\n    <mat-tab label=\\\"{{'STUDENT TRANSMISSIONS' | translate}}\\\">\\n      <div>\\n        <app-table [settings]='studenttabSettings' (getTableData)='tableData($event)'>\\n        </app-table>\\n      </div>\\n    </mat-tab>\\n\\n    <mat-tab label=\\\"{{'STAFF TRANSMISSIONS' | translate}}\\\">\\n      <div>\\n        <app-table [settings]='stafftabSettings' (getTableData)='tableStaffData($event)'>\\n        </app-table>\\n      </div>\\n    </mat-tab>\\n  </mat-tab-group>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29tbXVuaWNhdGlvbi9zY2hvb2wtY29tbXVuaWNhdGlvbnMvbWVzc2FnZS10cmFuc21pc3Npb25zL21lc3NhZ2UtdHJhbnNtaXNzaW9ucy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CommunicationService } from 'app/service/communication/communication-service';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { TransmissionSearchStudentView } from '../../model/transmission-serach-student--view';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppSettings } from 'app/app.constants';\nimport { CommonService } from 'app/service/common.service';\nimport { TransmissionSearchStaffView } from '../../model/transmission-search-staff-view';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-message-transmissions',\n  templateUrl: './message-transmissions.component.html',\n  styleUrls: ['./message-transmissions.component.scss']\n})\nexport class MessageTransmissionsComponent extends CommonComponent implements OnInit {\n\n\n  studenttabSettings: {};\n  stafftabSettings: {};\n  studentCols: any[];\n  staffCols: any[];\n  studentComponent = 'studentTransmissionsComponent';\n  staffComponent = 'staffTransmissionsComponent';\n  pageCnt: number;\n  totalItems: number;\n  custRowsPerPageOptions: Array<number> = [];\n  transSearchStudentView: TransmissionSearchStudentView;\n  transSearchStaffView: TransmissionSearchStaffView;\n  commId: any;\n  rows: any[];\n  commData: any;\n  staffData: any;\n  studentData: any;\n\n  constructor(public commonService: CommonService, private commService: CommunicationService, private route: ActivatedRoute, public snackBar: MatSnackBar) {\n    super();\n     this.clearPostModel();\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.commId = params.id;\n      }\n    });\n    this.staffCols = [\n      { field: 'staffRole', header: 'Staff Role', sort: true },\n      { field: 'receipientName', header: 'Recipient Name', sort: true },\n      { field: 'receipientContactInfo', header: 'Recipient Contact Info', sort: true },\n      { field: 'transmissionDate', header: 'Transmission Date', sort: true },\n      { field: 'type', header: 'Type', sort: true },\n      { field: 'status', header: 'Status', sort: true },\n    ];\n\n      this.studentCols = [\n      { field: 'studentName', header: 'StudentName', sort: true },\n      { field: 'class', header: 'Class', sort: true },\n      { field: 'section', header: 'Section', sort: true },\n      { field: 'receipientName', header: 'Recipient Name', sort: true },\n      { field: 'receipientContactInfo', header: 'Recipient Contact Info', sort: true },\n      { field: 'transmissionDate', header: 'Transmission Date', sort: true },\n      { field: 'type', header: 'Type', sort: true },\n      { field: 'status', header: 'Status', sort: true },\n    ];\n\n    this.studenttabSettings = {\n      rows: [],\n      columns: this.studentCols,\n      model: this.transSearchStudentView,\n      componentName: this.studentComponent,\n    };\n    const modelStudentTableComponent = this.getModelComponent(this.studentComponent);\n    if (modelStudentTableComponent) {\n      this.transSearchStudentView = modelStudentTableComponent;\n    }\n\n    const modelStaffTableComponentt = this.getModelComponent(this.staffComponent);\n    if (modelStaffTableComponentt) {\n      this.transSearchStaffView = modelStaffTableComponentt;\n    }\n\n    this.tableData(this.transSearchStudentView);\n    this.tableStaffData(this.transSearchStaffView);\n  }\n\n  tableData(data: any): void {\n    this.transSearchStudentView = data;\n    this.transSearchStudentView.communicationId = this.commId;\n    const searchData = this.prepareModel(this.transSearchStudentView, data);\n    this.commService.studentMessageTransmission(searchData).subscribe((res: any) => this.bindingData(res), error => {\n      this.errorResponse(error);\n    });\n  }\n\n  // Binding Data To Table\n  bindingData(data: any): void {\n    this.commData = data.dataModel;\n    this.custRowsPerPageOptions = [];\n    if (data.resultList == null) {\n      this.rows = [];\n    }\n    else {\n      this.studentData = data.resultList.list;\n      this.rows = this.setDateFormat(data.resultList.list);\n      this.totalItems = data.resultList.totalItems;\n    }\n    if (data.resultList) {\n      this.transSearchStudentView.pageNumber = data.resultList.pageNumber;\n    }\n    this.studenttabSettings = {\n      columns: this.studentCols,\n      model: this.transSearchStudentView,\n      rows: this.rows,\n      componentName: this.studentComponent,\n      visibleSelectAll: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      // padding: true,\n      filtersList: data.filters\n    };\n  }\n\n  tableStaffData(data: any): void {\n    this.transSearchStaffView = data;\n    this.transSearchStaffView.communicationId = this.commId;\n    const searchData = this.prepareModel(this.transSearchStaffView, data);\n    this.commService.staffMessageTransmission(searchData).subscribe((res: any) => this.bindingStaffData(res), error => {\n      this.errorResponse(error);\n    });\n  }\n\n\n  // Binding Data To Table\n  bindingStaffData(data: any): void {\n    this.commData = data.dataModel;\n    this.custRowsPerPageOptions = [];\n    if (data.resultList == null) {\n      this.rows = [];\n    }\n    else {\n      this.staffData = data.resultList.list;\n      this.rows = this.setDateFormat(data.resultList.list);\n      this.totalItems = data.resultList.totalItems;\n    }\n    if (data.resultList) {\n      this.transSearchStaffView.pageNumber = data.resultList.pageNumber;\n    }\n    this.stafftabSettings = {\n      columns: this.staffCols,\n      model: this.transSearchStaffView,\n      rows: this.rows,\n      componentName: this.staffComponent,\n      visibleSelectAll: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      // padding: true,\n      filtersList: data.filters\n    };\n  }\n\n\n  clearPostModel(): void {\n    this.transSearchStudentView = {\n      communicationId: '',\n      studentName: '',\n      classIds: [],\n      sectionIds: [],\n      transmissionDateBegin: null,\n      transmissionDateEnd: null,\n      type: [],\n      status: [],\n      receipientName: '',\n      receipientContactInfo: '',\n      sortBy: '',\n      sortOrder: AppSettings.SORT_ORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE\n    };\n\n    this.transSearchStaffView = {\n      communicationId: '',\n      transmissionDateBegin: null,\n      transmissionDateEnd: null,\n      type: [],\n      status: [],\n      receipientName: '',\n      receipientContactInfo: '',\n      sortBy: '',\n      sortOrder: AppSettings.SORT_ORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CommunicationConfigurationComponent } from './communication-configuration/communication-configuration.component';\nimport { CommunicationSetupComponent } from './communication-setup/communication-setup.component';\nimport { CommunicationDetailsComponent } from './communication-details/communication-details.component';\n\nconst routes: Routes = [\n  { path: 'communication-configuration', component: CommunicationConfigurationComponent,  data: {title: 'Communication Configuration'} },\n  { path: 'communication-configuration/communication-setup/:id', component: CommunicationSetupComponent,  data: {title: 'Communication Details'} },\n  { path: 'communication-configuration/communication-details', component: CommunicationDetailsComponent,  data: {title: 'Communication Details'}},\n];\n\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SchoolCommunicationsRoutingModule { }\n\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatcomponentsModule } from 'app/main/matcomponents.module';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedManagementModule } from 'app/shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from 'app/interceptors/token-interceptor';\nimport { SchoolCommunicationsRoutingModule } from './school-communications-routing.module';\nimport { CommunicationConfigurationComponent } from './communication-configuration/communication-configuration.component';\nimport { GradeSetupService } from 'app/service/grading-service/api/grade-setup.service';\nimport { StudentDBService } from 'app/service/student-information-system/student-db.service';\nimport { CommunicationSetupComponent } from './communication-setup/communication-setup.component';\nimport { CommunicationDetailsComponent } from './communication-details/communication-details.component';\nimport { MessageTransmissionsComponent } from './message-transmissions/message-transmissions.component';\nimport { FuseMaterialColorPickerModule } from '@fuse/components';\nimport { CommunicationTypesService } from 'app/service/configuration/communication-types.service';\nimport { StatusService } from 'app/service/academic-service/api/status.service';\nimport { CommunicationService } from 'app/service/communication/communication-service';\nimport { StaffCommonService } from 'app/service/staff/staffCommon.service';\nimport { TypeService } from 'app/service/academic-service/api/type.service';\n\n@NgModule({\n  declarations: [\n  CommunicationConfigurationComponent, CommunicationSetupComponent, CommunicationDetailsComponent, MessageTransmissionsComponent],\n\n  imports: [\n    CommonModule,\n    SchoolCommunicationsRoutingModule,\n    CommonModule,\n    MatcomponentsModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedManagementModule,\n    TranslateModule,\n    FuseSharedModule,\n    Ng2TelInputModule,\n    FuseMaterialColorPickerModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }, GradeSetupService, StudentDBService, CommunicationService, StaffCommonService, TypeService , CommunicationTypesService, StatusService\n  ],\n  exports: [],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class SchoolCommunicationsModule { }\n","/**\n * BaseWebAPI\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Configuration } from 'app/service/base/configuration';\nimport { BASE_PATH } from 'app/service/base/variables';\nimport { CustomHttpUrlEncodingCodec } from 'app/service/base/encoder';\nimport { BaseUrlConfig, ModuleConfig } from 'app/url.config';\n\n@Injectable()\nexport class StatusService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Base;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * GetAllStatuses\n     * @param code Gets or sets code\n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllStatuses(code: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getAllStatuses(code: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getAllStatuses(code: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getAllStatuses(code: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        if (code === null || code === undefined) {\n            throw new Error('Required parameter code was null or undefined when calling getAllStatuses.');\n        }\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (code !== undefined && code !== null) {\n            queryParameters = queryParameters.set('Code', <any>code);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/Status/GetStatuses`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n\n    /**\n     * Payment Statuses\n     * \n     * @param code Gets or sets code\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n   \n    public paymentStatuses(code: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (code === null || code === undefined) {\n            throw new Error('Required parameter code was null or undefined when calling paymentStatuses.');\n        }\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (code !== undefined && code !== null) {\n            queryParameters = queryParameters.set('Code', <any>code);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/Payment/statuses`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Teacher API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { BASE_PATH } from '../base/variables';\nimport { Configuration } from '../base/configuration';\nimport { BaseUrlConfig, ModuleConfig, BaseModuleConfig } from '../../url.config';\n\n@Injectable()\nexport class StaffCommonService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Teacher;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Fetch Staff Types\n     * \n     * @param authorization access token\n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public fetchStaffTypes(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchStaffTypes(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchStaffTypes(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchStaffTypes(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n        \n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Staff_Types,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Fetch Staffs\n     * \n     * @param authorization access token\n     * @param staffTypeCode \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public fetchStaffs(staffTypeCode?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchStaffs(staffTypeCode?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchStaffs(staffTypeCode?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchStaffs(staffTypeCode?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        \n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (staffTypeCode !== undefined && staffTypeCode !== null) {\n            queryParameters = queryParameters.set('staffTypeCode', <any>staffTypeCode);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Staff_Based_On_Code,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n"],"sourceRoot":""}