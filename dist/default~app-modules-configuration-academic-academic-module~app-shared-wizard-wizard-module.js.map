{"version":3,"sources":["webpack:///./src/app/modules/configuration/academic/academic-routing.module.ts","webpack:///./src/app/modules/configuration/academic/academic-session-details/academic-session-details.component.html","webpack:///./src/app/modules/configuration/academic/academic-session-details/academic-session-details.component.scss","webpack:///./src/app/modules/configuration/academic/academic-session-details/academic-session-details.component.ts","webpack:///./src/app/modules/configuration/academic/academic-session/academic-session.component.html","webpack:///./src/app/modules/configuration/academic/academic-session/academic-session.component.scss","webpack:///./src/app/modules/configuration/academic/academic-session/academic-session.component.ts","webpack:///./src/app/modules/configuration/academic/academic-sessions/academic-sessions.component.html","webpack:///./src/app/modules/configuration/academic/academic-sessions/academic-sessions.component.scss","webpack:///./src/app/modules/configuration/academic/academic-sessions/academic-sessions.component.ts","webpack:///./src/app/modules/configuration/academic/academic.component.html","webpack:///./src/app/modules/configuration/academic/academic.component.scss","webpack:///./src/app/modules/configuration/academic/academic.component.ts","webpack:///./src/app/modules/configuration/academic/academic.module.ts","webpack:///./src/app/service/academic-service/api/status.service.ts"],"names":[],"mappings":"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","file":"default~app-modules-configuration-academic-academic-module~app-shared-wizard-wizard-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AcademicComponent } from './academic.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AcademicSessionsComponent } from './academic-sessions/academic-sessions.component';\nimport { AcademicSessionDetailsComponent } from './academic-session-details/academic-session-details.component';\nimport { AcademicSessionComponent } from './academic-session/academic-session.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: AcademicComponent,\n    children: [\n      { path: '', pathMatch: 'full', redirectTo: 'academic-sessions', data: {title: 'Academic Sessions'} },\n      { path: 'academic-sessions', component: AcademicSessionComponent, data: {title: 'Academic Sessions'} },\n      { path: 'academic-sessions/:id', component: AcademicSessionComponent, data: {title: 'Edit Academic Sessions'} },\n      { path: 'academic-sessions/academic-sessions-details/:id', component: AcademicSessionDetailsComponent, data: {title: 'Academic Sessions Details'} },\n    ]\n  },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AcademicRoutingModule { }\n","module.exports = \"<div fxLayout=\\\"column\\\" class=\\\"info-relative mt-28\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"edit-info\\\">\\n    <button mat-button type=\\\"submit\\\" *ngIf=\\\"academicSessionDetails?.acdStatusCode == acdNewStatusCode\\\"\\n      class=\\\"text-uppercase\\\" (click)=\\\"onEditButtonClick()\\\">\\n      <mat-icon>edit</mat-icon>\\n    </button>\\n    <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" class=\\\"text-uppercase\\\"\\n      (click)=\\\"back()\\\">{{'Back' | translate}}</button>\\n  </div>\\n</div>\\n\\n<mat-tab-group class=\\\"manage-institue\\\">\\n  <mat-tab translate label=\\\"Basic Info\\\">\\n    <div class=\\\"px-sm-40 pb-20\\\">\\n      <div class=\\\"mat-elevation-z3 simple-table-container radius-t-20 mt-4\\\" fxLayout=\\\"column\\\">\\n        <mat-list fxLayout.gt-xs=\\\"row wrap\\\" fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-0 confirm-table\\\">\\n          <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\">\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>Name</span></strong></div>\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><span class=\\\"px-4\\\">:</span>{{academicSessionDetails?.name}}\\n            </div>\\n          </mat-list-item>\\n          <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\">\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>Code</span></strong></div>\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><span class=\\\"px-4\\\">:</span>{{academicSessionDetails?.code}}\\n            </div>\\n          </mat-list-item>\\n          <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\">\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>Start Date</span></strong></div>\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><span class=\\\"px-4\\\">:</span>{{academicSessionDetails?.startDate}}\\n            </div>\\n          </mat-list-item>\\n          <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\">\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>End Date</span></strong></div>\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><span class=\\\"px-4\\\">:</span>{{academicSessionDetails?.endDate}}\\n            </div>\\n          </mat-list-item>\\n          <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\">\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>Online Application Start Date</span></strong></div>\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><span\\n                class=\\\"px-4\\\">:</span>{{academicSessionDetails?.onlineApplicationStartDate?academicSessionDetails?.onlineApplicationStartDate:\\\"-\\\"}}\\n            </div>\\n          </mat-list-item>\\n          <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\">\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>Online Application End Date</span></strong></div>\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><span\\n                class=\\\"px-4\\\">:</span>{{academicSessionDetails?.onlineApplicationEndDate?academicSessionDetails?.onlineApplicationEndDate:\\\"-\\\"}}\\n            </div>\\n          </mat-list-item>\\n          <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\">\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>Online Application Fee</span></strong></div>\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><span class=\\\"px-4\\\">:</span>\\n              {{isNumberr(academicSessionDetails?.onlineApplicationFee)? academicSessionDetails?.currencySymbol+academicSessionDetails?.onlineApplicationFee : \\\"-\\\"}}\\n\\n\\n\\n\\n              <!-- academicSessionDetails?.onlineApplicationFee!==null?{{academicSessionDetails?.currencySymbol+academicSessionDetails?.onlineApplicationFee }}:null -->\\n            </div>\\n          </mat-list-item>\\n        </mat-list>\\n      </div>\\n    </div>\\n  </mat-tab>\\n\\n  <mat-tab translate label=\\\"Classes Offered\\\">\\n    <div class=\\\"mat-elevation-z3 mx-40 mb-20 mt-4 radius-t-20\\\">\\n      <app-table [settings]=\\\"classTableSettings\\\">\\n      </app-table>\\n    </div>\\n  </mat-tab>\\n\\n  <mat-tab translate label=\\\"Course Requirements\\\">\\n    <div class=\\\"mat-elevation-z3 mx-40 mb-20 mt-4 radius-t-20\\\">\\n      <app-table [settings]=\\\"courseTableSettings\\\">\\n      </app-table>\\n    </div>\\n  </mat-tab>\\n</mat-tab-group>\"","module.exports = \".manage-institue ::ng-deep .mat-tab-header {\\n  text-transform: uppercase; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9hY2FkZW1pYy9hY2FkZW1pYy1zZXNzaW9uLWRldGFpbHMvYWNhZGVtaWMtc2Vzc2lvbi1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBR1EseUJBQXlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2NvbmZpZ3VyYXRpb24vYWNhZGVtaWMvYWNhZGVtaWMtc2Vzc2lvbi1kZXRhaWxzL2FjYWRlbWljLXNlc3Npb24tZGV0YWlscy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLm1hbmFnZS1pbnN0aXR1ZXtcbjo6bmctZGVlcHtcbiAgICAubWF0LXRhYi1oZWFkZXJ7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgfVxufVxufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, Params, ActivatedRoute } from '@angular/router';\nimport { URLConstants, AppSettings } from 'app/app.constants';\nimport { SchoolAcademicSessionService } from 'app/service/academic-service/api/school-academic-session.service';\nimport { Location } from '@angular/common';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { isNumber } from 'util';\n\n@Component({\n  selector: 'app-academic-session-details',\n  templateUrl: './academic-session-details.component.html',\n  styleUrls: ['./academic-session-details.component.scss']\n})\nexport class AcademicSessionDetailsComponent extends CommonComponent implements OnInit {\n  acadedemicSessionId: any;\n  academicSessionDetails: any;\n  classesOfferedColumns: {}[];\n\n  classTableSettings: any;\n  currentComponent = 'AcademicSessionsComponent';\n  classRows: any[];\n  courseRows: any[];\n  courseRequirementsColumns: ({ field: string; header: string; sort?: undefined; } | { field: string; header: string; sort: boolean; })[];\n  courseTableSettings: any;\n  acdNewStatusCode = AppSettings.ACADEMICSESSION_NEW;\n  fromConfiguration = false;\n  constructor(private router: Router, private routes: ActivatedRoute, private schoolAcademicSessionService: SchoolAcademicSessionService, public location: Location) {\n    super();\n    if (window.location.href.indexOf('required-school-configuration') > -1){\n      this.fromConfiguration = true;\n    }\n  }\n\n  ngOnInit(): void {\n    this.routes.params\n      .subscribe((params: Params) => {\n        this.acadedemicSessionId = params['id'];\n        this.getAcademicSessionDetails();\n      });\n\n    this.classesOfferedColumns = [\n      { field: 'className', header: 'Class Name' },\n      { field: 'schoolBoardName', header: 'Board Name' },\n      { field: 'sectionName', header: 'Section Name' },\n      { field: 'maxCapacity', header: 'Capacity' },\n    ];\n    this.courseRequirementsColumns = [\n      { field: 'className', header: 'Class Name' },\n      { field: 'schoolBoardName', header: 'Board Name' },\n      { field: 'courseCategoryName', header: 'Category Name' },\n      { field: 'courseName', header: 'Course' },\n      { field: 'passMarks', header: 'Pass Marks' },\n    ];\n  }\n\n  getAcademicSessionDetails(): void {\n    this.schoolAcademicSessionService.schoolAcademicSessionDetails(this.acadedemicSessionId).subscribe(res => {\n       res.startDate = this.getFormattedDateBySchoolDateFormat(res.startDate);\n       res.endDate = this.getFormattedDateBySchoolDateFormat(res.endDate);\n       res.onlineApplicationStartDate = this.getFormattedDateBySchoolDateFormat(res.onlineApplicationStartDate);\n       res.onlineApplicationEndDate = this.getFormattedDateBySchoolDateFormat(res.onlineApplicationEndDate);\n       this.academicSessionDetails = res;\n      this.bindAcademicSessonResult(res);\n    });\n\n  }\n\n  bindAcademicSessonResult(data: any): any {\n    if (!data.classesOfferedViewModel) {\n      this.classRows = [];\n    } else {\n      this.classRows = this.academicSessionDetails.classesOfferedViewModel;\n      this.classTableSettings = {\n        rows: this.classRows,\n        columns: this.classesOfferedColumns,\n        componentName: this.currentComponent,\n        rowGroupingColumns: ['className', 'schoolBoardName'],\n        hideHeader: true,\n        tabTable: true,\n        padding: true,\n      };\n      this.courseRows = this.academicSessionDetails.courseRquirementsViewModel;\n      this.courseTableSettings = {\n        rows: this.courseRows,\n        columns: this.courseRequirementsColumns,\n        componentName: this.currentComponent,\n        rowGroupingColumns: ['className', 'schoolBoardName', 'courseCategoryName'],\n        hideHeader: true,\n        tabTable: true,\n        padding: true\n      };\n    }\n  }\n\n  onEditButtonClick(): void {\n    if (this.fromConfiguration){\n      this.router.navigateByUrl(\n        URLConstants.ACADEMICSESSION_WIZARD + this.acadedemicSessionId);\n    } else {\n      this.router.navigateByUrl(\n        URLConstants.ACADEMICSESSION + '/' + this.acadedemicSessionId);\n    }\n  }\n  isNumberr(data): any{\n    return isNumber(data);\n  }\n}\n","module.exports = \"<app-table *ngIf=\\\"!hideGrid; else addAcademicSessionRef\\\" [settings]=\\\"tableSettings\\\" (getTableData)='tableData($event)'\\n  (rowBasedAction)='actions($event)' [closeAddForm]=\\\"closeAddPanel\\\" (openAddForm)=\\\"onAddFormClick()\\\"\\n  [closeRowForm]='closeAddPanel' [templateRef]=\\\"addAcademicSessionRef\\\">\\n</app-table>\\n\\n<ng-template #addAcademicSessionRef>\\n  <mat-vertical-stepper [linear]=\\\"true\\\" #stepper (selectionChange)=\\\"OnSelectionChange($event)\\\"\\n    [ngClass]=\\\"{'mat-elevation-z3 m-36 radius-10 p-12': hideGrid}\\\"\\n    (animationDone)=\\\"onStepperAnimationDone(stepper.selectedIndex)\\\">\\n    <mat-step [stepControl]=\\\"newAcademicSessionForm\\\">\\n      <form [formGroup]=\\\"newAcademicSessionForm\\\" fxLayout=\\\"column\\\" #academicForm=\\\"ngForm\\\">\\n        <ng-template matStepLabel><span\\n            translate>{{isUpdateData ? 'Update Academic Session':'New Academic Session'}}</span></ng-template>\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-24\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"72\\\"\\n            class=\\\"pr-sm-20\\\">\\n            <mat-label #dispName translate>Display Name</mat-label>\\n            <input matInput (keyup)=\\\"preventSpace($event,'newAcademicSessionForm','displayName')\\\" (blur)=\\\"trimTextBoxSpaces('newAcademicSessionForm','displayName')\\\" \\n              formControlName=\\\"displayName\\\" autocomplete=\\\"off\\\" required>\\n            <mat-error>\\n              <app-validation [labelName]='dispName.innerText'\\n                [validationControl]=\\\"newAcademicSessionForm.controls.displayName\\\" [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"28\\\">\\n            <mat-label #code translate>Code</mat-label>\\n            <input matInput (keyup)=\\\"preventSpace($event,'newAcademicSessionForm','code')\\\" (blur)=\\\"trimTextBoxSpaces('newAcademicSessionForm','code')\\\" \\n            formControlName=\\\"code\\\"\\n              autocomplete=\\\"off\\\" required>\\n            <mat-error>\\n              <app-validation [labelName]='code.innerText' [validationControl]=\\\"newAcademicSessionForm.controls.code\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxFlex.gt-sm=\\\"34\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\"\\n            class=\\\"icon-center\\\">\\n            <mat-label #startDate translate>Start Date</mat-label>\\n            <input matInput (keyup)=\\\"forceValidation('startDate',newAcademicSessionForm)\\\"\\n              [matDatepicker]=\\\"startDatePicker\\\" formControlName=\\\"startDate\\\" required [readonly]=\\\"isUpdateData\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\" *ngIf=\\\"isUpdateData==false\\\">\\n            </mat-datepicker-toggle>\\n            <mat-datepicker #startDatePicker></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]='startDate.innerText'\\n                [validationControl]=\\\"newAcademicSessionForm.controls.startDate\\\" [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxFlex.gt-sm=\\\"38\\\" class=\\\"px-sm-20 icon-center\\\" fxFlex=\\\"100\\\"\\n            fxLayout=\\\"column\\\">\\n            <mat-label #endDate translate>End Date</mat-label>\\n            <input matInput (keyup)=\\\"forceValidation('endDate',newAcademicSessionForm)\\\" [matDatepicker]=\\\"endDatePicker\\\"\\n              [min]=\\\"newAcademicSessionForm.controls.startDate.value\\\" formControlName=\\\"endDate\\\" required\\n              [readonly]=\\\"isUpdateData\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\" *ngIf=\\\"isUpdateData==false\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #endDatePicker [startAt]=\\\"newAcademicSessionForm.value.startDate\\\"></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]='endDate.innerText'\\n                [validationControl]=\\\"newAcademicSessionForm.controls.endDate\\\" [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n\\n        <div *ngIf=\\\"isSchoolOnlineApllication\\\" fxFlexFill fxLayout.lt-sm=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\"\\n          fxLayoutAlign=\\\"center center\\\" class=\\\"pt-12\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxFlex.gt-sm=\\\"34\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\"\\n            class=\\\"icon-center\\\">\\n            <mat-label #onlineApplicationStartDate translate>Online Application Start Date</mat-label>\\n            <input matInput (keyup)=\\\"forceValidation('onlineApplicationStartDate',newAcademicSessionForm)\\\"\\n              [matDatepicker]=\\\"onlineApplicationStartDatePicker\\\" [max]=\\\"newAcademicSessionForm.controls.endDate.value\\\"\\n              formControlName=\\\"onlineApplicationStartDate\\\" [required]=\\\"true\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"onlineApplicationStartDatePicker\\\"> </mat-datepicker-toggle>\\n            <mat-datepicker #onlineApplicationStartDatePicker></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]='onlineApplicationStartDate.innerText'\\n                [validationControl]=\\\"newAcademicSessionForm.controls.onlineApplicationStartDate\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxFlex.gt-sm=\\\"38\\\" class=\\\"px-sm-20 icon-center\\\" fxFlex=\\\"100\\\"\\n            fxLayout=\\\"column\\\">\\n            <mat-label #onlineApplicationEndDate translate>Online Application End Date</mat-label>\\n            <input matInput (keyup)=\\\"forceValidation('onlineApplicationEndDate',newAcademicSessionForm)\\\"\\n              [matDatepicker]=\\\"onlineApplicationEndDatePicker\\\"\\n              [min]=\\\"newAcademicSessionForm.controls.onlineApplicationStartDate.value\\\"\\n              [max]=\\\"newAcademicSessionForm.controls.endDate.value\\\" [required]=\\\"true\\\"\\n              formControlName=\\\"onlineApplicationEndDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"onlineApplicationEndDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #onlineApplicationEndDatePicker\\n              [startAt]=\\\"newAcademicSessionForm.value.onlineApplicationStartDate\\\"></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]='onlineApplicationEndDate.innerText'\\n                [validationControl]=\\\"newAcademicSessionForm.controls.onlineApplicationEndDate\\\" [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"28\\\"\\n            class=\\\"icon-center\\\">\\n            <mat-label #onlineApplicationFee translate>Online Application Fee</mat-label>\\n            <input matInput\\n            (keyup)=\\\"preventSpace($event,'newAcademicSessionForm','onlineApplicationFee')\\\" (blur)=\\\"trimTextBoxSpaces('newAcademicSessionForm','onlineApplicationFee')\\\" \\n              formControlName=\\\"onlineApplicationFee\\\" [required]=\\\"true\\\" autocomplete=\\\"off\\\">\\n            <mat-error>\\n              <app-validation [labelName]='onlineApplicationFee.innerText'\\n                [validationControl]=\\\"newAcademicSessionForm.controls.onlineApplicationFee\\\" [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-20\\\">\\n          <button (click)=\\\"cancel()\\\" class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"reset\\\"\\n            id=\\\"stpper-reset\\\">{{'cancel' | translate}}</button>\\n          <button mat-raised-button matStepperNext type=\\\"submit\\\" color=\\\"accent\\\"\\n            class=\\\"text-uppercase\\\">{{'Next' | translate}}</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"classesOfferedForm\\\" [completed]=\\\"classSectionData?.length ? true : false\\\"\\n      [optional]=\\\"classesOfferedForm.value.checkLength\\\">\\n      <ng-template matStepLabel><span translate>Classes Offered</span></ng-template>\\n      <form [formGroup]=\\\"classesOfferedForm\\\" fxLayout=\\\"column\\\" #classofferForm=\\\"ngForm\\\">\\n        <div fxFlexFill fxLayout=\\\"column\\\" class=\\\"pt-24\\\" fxLayout.gt-sm=\\\"row\\\">\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"34\\\"\\n            class=\\\"pr-sm-20\\\" fxFlexFill>\\n            <mat-label #schoolBoard translate>{{'School Board' | translate}}</mat-label>\\n            <mat-select formControlName=\\\"schoolBoardId\\\" required>\\n              <mat-option *ngFor=\\\"let schoolBoard of availableSchoolBoards\\\" [value]=\\\"schoolBoard.value\\\">\\n                {{schoolBoard.label}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]=\\\"schoolBoard.innerText\\\"\\n                [validationControl]=\\\"classesOfferedForm.controls.schoolBoardId\\\" [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <af-select [required]=\\\"true\\\" appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\" [optionGroupRequired]=\\\"false\\\"\\n            class=\\\"pr-sm-20\\\" [options]=\\\"schoolClassesList | async\\\" [showChips]=\\\"1\\\" placeholder=\\\"Classes\\\"\\n            [multiple]=\\\"true\\\" formControlName=\\\"classId\\\" [value]=\\\"selectedItems\\\"></af-select>\\n\\n          <af-select [required]=\\\"true\\\" appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"34\\\" [optionGroupRequired]=\\\"false\\\"\\n            class=\\\"pr-sm-20\\\" [options]=\\\"schoolSectionList | async\\\" [showChips]=\\\"1\\\" placeholder=\\\"Sections\\\"\\n            [multiple]=\\\"true\\\" formControlName=\\\"sectionId\\\" [value]=\\\"selectedItems\\\"></af-select>\\n\\n        </div>\\n        <div fxFlexFill fxLayout=\\\"column\\\" class=\\\"pt-12\\\" fxLayout.gt-sm=\\\"row\\\">\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"pr-sm-20\\\"\\n            fxFlex.gt-sm=\\\"50\\\">\\n            <mat-label #maxCapacity translate>Maximum Capacity</mat-label>\\n            <input (keyup)=\\\"preventSpace($event,'classesOfferedForm','maximumCapacity')\\\" matInput autocomplete=\\\"off\\\"\\n              formControlName=\\\"maximumCapacity\\\">\\n            <mat-error>\\n              <app-validation [labelName]='maxCapacity.innerText'\\n                [validationControl]=\\\"classesOfferedForm.controls.maximumCapacity\\\" [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <div class=\\\"pt-16\\\">  \\n            <button translate mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\" (click)=\\\"onSelectClassesOffered()\\\"\\n                class=\\\"text-uppercase mr-8\\\">{{'Select' | translate}}</button> \\n              <button translate mat-raised-button type=\\\"reset\\\" class=\\\"text-uppercase  \\\"\\n                (click)=\\\"clearAllClassSectionData()\\\">\\n                {{'Clear' | translate}}\\n              </button>\\n              \\n          </div>\\n        </div>\\n\\n        <div class=\\\"py-20\\\">\\n          <div *ngIf=\\\"loaded | async\\\" fxLayout=\\\"column\\\" class=\\\"w-100-p simple-table-container\\\">\\n            <app-table [settings]=\\\"classOfferedTable\\\" (rowBasedAction)='classesOfferedActions($event)'></app-table>\\n          </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-15\\\">\\n          <button class=\\\"mr-8 text-uppercase\\\" mat-raised-button matStepperPrevious\\n            type=\\\"button\\\">{{'Previous' | translate}}</button>\\n          <button (click)=\\\"onClickClassOfferedNext()\\\" mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\"\\n            class=\\\"text-uppercase\\\">{{'Next' | translate}}</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <mat-step [stepControl]=\\\"courseRequirementsForm\\\" [completed]=\\\"courseRequirementSelect?.length ? true : false\\\" [optional]=\\\"courseRequirementsForm.value.isValidCourseForm\\\">\\n      <form [formGroup]=\\\"courseRequirementsForm\\\" fxLayout=\\\"column\\\" #courseRequireForm=\\\"ngForm\\\">\\n        <ng-template matStepLabel><span translate>Course Requirements</span></ng-template>\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-24\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\"\\n            class=\\\"pr-sm-20\\\" fxFlexFill>\\n            <mat-label #schoolBoardId translate>School Board</mat-label>\\n            <mat-select formControlName=\\\"schoolBoardId\\\" (selectionChange)=\\\"selectedClasses=[];onSelectCourseOfferedBoard($event)\\\" required>\\n              <mat-option *ngFor=\\\"let schoolBoard of offeredBoards\\\" [value]=\\\"schoolBoard.schoolBoardId\\\">\\n                {{schoolBoard.schoolBoardName}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]=\\\"schoolBoardId.innerText\\\"\\n                [validationControl]=\\\"courseRequirementsForm.controls.schoolBoardId\\\" [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <af-select appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"40\\\" class=\\\"pr-sm-20\\\"\\n            [required]=\\\"true\\\" [optionGroupRequired]=\\\"false\\\"\\n            [options]=\\\"courseOfferedClasses?.length ? courseOfferedClasses : []\\\" [showChips]=\\\"1\\\" placeholder=\\\"Classes\\\" [value]=\\\"selectedClasses\\\"\\n            [multiple]=\\\"true\\\" formControlName=\\\"classId\\\"></af-select>\\n\\n          <af-select appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"40\\\" [required]=\\\"true\\\"\\n            [optionGroupRequired]=\\\"false\\\" [options]=\\\"courseCategoryList?.length ? courseCategoryList : []\\\"\\n            [showChips]=\\\"1\\\" placeholder=\\\"Course Categories\\\" [multiple]=\\\"false\\\" formControlName=\\\"courseCategoryId\\\"\\n            (selectionChange)=\\\"onSelectCourseCategory($event)\\\"></af-select>\\n\\n        </div>\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n          <af-select *ngIf=\\\"courses?.length\\\" appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n            fxFlex.gt-sm=\\\"40\\\" class=\\\"pr-sm-20\\\" [required]=\\\"true\\\" [optionGroupRequired]=\\\"false\\\"\\n            [options]=\\\"courses?.length ? courses : []\\\" [showChips]=\\\"1\\\" placeholder=\\\"Courses\\\" [multiple]=\\\"true\\\"\\n            formControlName=\\\"courseId\\\"></af-select>\\n\\n          <mat-form-field *ngIf=\\\"passMarks\\\" fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n            class=\\\"pr-sm-20\\\" fxFlex.gt-sm=\\\"25\\\">\\n            <mat-label #passMarks translate>Pass Marks</mat-label>\\n            <input (keyup)=\\\"preventSpace($event,'courseRequirementsForm','passMarks')\\\" matInput autocomplete=\\\"off\\\"\\n              formControlName=\\\"passMarks\\\">\\n            <mat-error>\\n              <app-validation [labelName]='passMarks.innerText'\\n                [validationControl]=\\\"courseRequirementsForm.controls.passMarks\\\" [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"pb-12\\\">\\n            <button translate mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\"\\n              (click)=\\\"validCourseRequirements(courseRequirementsForm)\\\" class=\\\"text-uppercase mr-8\\\">\\n              {{'Select' | translate}}\\n            </button>\\n            <button translate mat-raised-button type=\\\"button\\\" class=\\\"text-uppercase\\\" (click)=\\\"onClearValidators()\\\">\\n              {{'Clear' | translate}}\\n            </button>\\n          </div>\\n        </div>\\n        <div class=\\\"pb-20\\\">\\n          <div *ngIf=\\\"loaded | async\\\" fxLayout=\\\"column\\\" class=\\\"w-100-p simple-table-container\\\">\\n            <app-table [settings]=\\\"courseReqTab\\\" (rowBasedAction)='courseRequirementsActions($event)'\\n              (additionalButtonClick)=\\\"clearCourseReq($event)\\\"></app-table>\\n          </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-20\\\">\\n          <button class=\\\"mr-8 text-uppercase\\\" mat-raised-button matStepperPrevious\\n            type=\\\"button\\\">{{'Previous' | translate}}</button>\\n          <button mat-raised-button matStepperNext type=\\\"submit\\\" color=\\\"accent\\\"\\n            class=\\\"text-uppercase\\\" (click)=\\\"onClickCourseOfferedNext()\\\">{{'Next' | translate}}</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <mat-step [stepControl]=\\\"SubmitForm\\\">\\n      <ng-template matStepLabel><span translate>Done</span></ng-template>\\n      <div fxFlex=\\\"100\\\" class=\\\"text-center font-size-18 mt-48\\\" translate>Please Confirm To.</div>\\n      <div fxFlex=\\\"100\\\" class=\\\"text-center font-size-18 pt-8\\\" translate>{{(isUpdateData\\n      ? 'Update The Academic Session':'Create The New Academic Session')| translate}}\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-32 pt-24\\\">\\n        <button mat-raised-button matStepperPrevious translate type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n          {{'Previous' | translate}}\\n        </button>\\n        <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\"\\n          (click)=\\\"onSubmitAcademicSessions()\\\">{{(isUpdateData ? 'Update':'Submit') | translate}}</button>\\n      </div>\\n    </mat-step>\\n  </mat-vertical-stepper>\\n</ng-template>\"","module.exports = \"::ng-deep .mat-step-optional {\\n  display: none !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9hY2FkZW1pYy9hY2FkZW1pYy1zZXNzaW9uL2FjYWRlbWljLXNlc3Npb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx3QkFBd0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9hY2FkZW1pYy9hY2FkZW1pYy1zZXNzaW9uL2FjYWRlbWljLXNlc3Npb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAgLm1hdC1zdGVwLW9wdGlvbmFse1xuICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, OnInit, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { SchoolAcademicSessionService } from 'app/service/academic-service/api/school-academic-session.service';\nimport { GradeSetupService } from 'app/service/grading-service/api/grade-setup.service';\nimport { SchoolService } from 'app/service/manage-school/school.service';\nimport { MatDialog, MatSnackBar, MatDialogRef } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { StatusService } from 'app/service/academic-service/api/status.service';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Pattern, AppSettings, URLConstants, Messages } from 'app/app.constants';\nimport { SchoolAcademicSessionFilterView } from '../model/school-academicsession-filter-view';\nimport * as _ from 'lodash';\nimport { SchoolAcademicSessionViewModel } from '../model/schoolacademic-session-view-model';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { SchoolAcademicSessionStatusViewModel } from '../model/school-academicsession-status-view';\n\n@Component({\n  selector: 'app-academic-session',\n  templateUrl: './academic-session.component.html',\n  styleUrls: ['./academic-session.component.scss'],\n  providers: [SchoolAcademicSessionService, GradeSetupService, SchoolService]\n})\nexport class AcademicSessionComponent extends CommonComponent implements OnInit {\n  @ViewChild('stepper') stepper;\n  @ViewChild('courseRequireForm') courseRequireForm;\n  @ViewChild('classofferForm') classofferForm;\n\n  newAcademicSessionForm: FormGroup;\n  classesOfferedForm: FormGroup;\n  courseRequirementsForm: FormGroup;\n  schoolAcademicSessionId: any;\n  academisSessionStatuses: any;\n\n  // View Models\n  schoolAcademicSessionViewModel: SchoolAcademicSessionViewModel;\n  schoolAcademicSessionStatusViewModel: SchoolAcademicSessionStatusViewModel;\n\n  // AS Grid\n  hideGrid = false;\n  columns: any[] = [];\n  tableSettings: any;\n  currentComponent = 'AcademicSessionComponent';\n  filterViewModel: SchoolAcademicSessionFilterView;\n  rows: any[];\n  totalRowsCount: any;\n  pageCnt: number;\n  closeAddPanel = true;\n  validate = true;\n  interactedStepperIndex: any = 0;\n  filterCourseCategory: any[];\n\n\n  // Stepper \n  isSchoolOnlineApllication = true;\n  isUpdateData = false;\n  schoolBoardList: any[] = [];\n  isShoolHasAcademicSession = false;\n  courseCategoryList: any[] = [];\n  schoolClassesList = Promise.resolve([]);\n  schoolSectionList = Promise.resolve([]);\n  loaded = Promise.resolve(true);\n  classOfferedTable: any;\n  classSectionData: any[] = [];\n  selectedBoards: unknown[];\n  courseOfferedClasses: any[] = [];\n  offeredBoards: any[];\n  courses: any[];\n  passMarks: boolean;\n  courseRequirementSelect: any[] = [];\n  courseReqTab: {};\n  classRequirementsGridHeaderData = [\n    { field: 'className', header: 'Class', sort: false },\n    { field: 'schoolBoardName', header: 'School Board', sort: false },\n    { field: 'courseCategoryName', header: 'Course Category', sort: false },\n    { field: 'courseName', header: 'Course', sort: false },\n    { field: 'passMarks', header: 'Pass Marks', sort: false },\n    { field: 'delete', header: 'Actions', sort: false },\n  ];\n  invalidCourseCategories = [];\n  fromConfiguration = false;\n  constructor(public dialogRef: MatDialog, private schoolService: SchoolService,\n    private schoolAcademicSessionService: SchoolAcademicSessionService,\n    public commonService: CommonService, private router: Router,\n    private statusService: StatusService, private _fb: FormBuilder,\n    private gradeSetupService: GradeSetupService,\n    private cd: ChangeDetectorRef, public snackBar: MatSnackBar, public routes: ActivatedRoute,\n    public location: Location) {\n    super();\n    if (window.location.href.indexOf('required-school-configuration') > -1){\n      this.fromConfiguration = true;\n    }\n  }\n\n  ngOnInit(): void {\n    this.setForms();\n    this.checkForEdit();\n    this.gridClassOfferedList(true);\n    this.setCourseTableData();\n    this.initializeFilterView();\n    this.setColumnHeaders();\n    this.initializeTableSettings();\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.filterViewModel = modelTableComponent;\n    }\n    this.schoolBoardDetails();\n    this.getAvailableSchoolBoards();\n    this.getAcademicSessionGrid();\n    this.schoolOnlineApplications();\n    this.getStatus();\n  }\n  checkForEdit(): void {\n    this.routes.params.subscribe((params: Params) => {\n      if (params['id']) {\n        this.schoolAcademicSessionId = params['id'];\n        const operations = {\n          operation: 'edit',\n          clickedRow: {\n            id: this.schoolAcademicSessionId\n          }\n        };\n        this.actions(operations, true);\n        this.hideGrid = true;\n        this.onAddFormClick(true);\n      } else {\n        this.hideGrid = false;\n      }\n    });\n  }\n  setForms(): void {\n    this.newAcademicSessionForm = this._fb.group({\n      displayName: new FormControl('', [Validators.maxLength(45)]),\n      code: new FormControl('', [Validators.maxLength(10)]),\n      startDate: new FormControl('', [Validators.required]),\n      endDate: new FormControl('', [Validators.required]),\n      onlineApplicationStartDate: new FormControl(),\n      onlineApplicationEndDate: new FormControl(),\n      onlineApplicationFee: new FormControl('', [Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS), Validators.max(99999.99), Validators.min(0)])\n    });\n\n    this.classesOfferedForm = this._fb.group({\n      classId: new FormControl('', [Validators.required]),\n      sectionId: new FormControl('', [Validators.required]),\n      schoolBoardId: new FormControl(null, [Validators.required]),\n      maximumCapacity: new FormControl('', [Validators.max(100),\n      Validators.min(1), Validators.pattern(Pattern.NATURAL_NUMBER_PATTERN), Validators.pattern(Pattern.PREVENT_SPACES)]),\n      checkLength: new FormControl(null, [Validators.required]),\n    });\n\n    this.courseRequirementsForm = this._fb.group({\n      classId: new FormControl(''),\n      schoolBoardId: new FormControl(null),\n      courseCategoryId: new FormControl(''),\n      courseId: new FormControl(''),\n      passMarks: new FormControl('', [Validators.pattern(Pattern.NATURAL_NUMBER_PATTERN),\n      Validators.min(1), Validators.max(1000)]),\n      isValidCourseForm: new FormControl(true, Validators.required)\n    });\n  }\n\n  // Cancel Button\n  cancel(): void {\n    this.stepper.reset();\n    if (document.getElementById('stpper-reset')) {\n      document.getElementById('stpper-reset').click();\n    }\n    this.closeAddPanel = true;\n    this.isUpdateData = false;\n    this.schoolBoardList = [];\n    this.courseCategoryList = [];\n    this.schoolClassesList = Promise.resolve([]);\n    this.schoolSectionList = Promise.resolve([]);\n    this.classSectionData = [];\n    this.selectedBoards = [];\n    this.courseOfferedClasses = [];\n    this.offeredBoards = [];\n    this.courses = [];\n    this.passMarks = false;\n    this.courseRequirementSelect = [];\n    this.gridClassOfferedList(true);\n    this.setCourseTableData();\n    this.loaded = Promise.resolve(true);\n    this.invalidCourseCategories = [];\n    if (this.hideGrid) {\n       this.location.back();\n    }\n    this.hideGrid = false;\n  }\n  // Grid Related changes\n  setColumnHeaders(): void {\n    this.columns = [\n      { field: 'name', header: 'Name', sort: true },\n      { field: 'code', header: 'Code', sort: true },\n      { field: 'statusName', header: 'Status', sort: true },\n      { field: 'startDate', header: 'Start Date', sort: true },\n      { field: 'endDate', header: 'End Date', sort: true },\n      { field: 'onlineApplicationStartDate', header: 'Online Application Start Date', sort: true },\n      { field: 'onlineApplicationEndDate', header: 'Online Application End Date', sort: true },\n      { field: 'onlineApplicationFee', header: 'Online Application Fee', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n  }\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.columns,\n      tablename: 'Academic Sessions',\n      componentName: this.currentComponent,\n      model: this.filterViewModel\n    };\n  }\n  initializeFilterView(): void {\n    this.filterViewModel = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n    this.schoolAcademicSessionViewModel = {\n      schoolAcademicSessionClassSections: [],\n      classRequirements: []\n    };\n  }\n  getAcademicSessionGrid(): void {\n    this.schoolAcademicSessionService.getAllDetails(this.filterViewModel.names, this.filterViewModel.codes,\n      this.filterViewModel.statusIds, this.filterViewModel.startDateBegin,\n      this.filterViewModel.startDateEnd, this.filterViewModel.endDateBegin,\n      this.filterViewModel.endDateEnd, this.filterViewModel.onlineApplicationStartDateBegin,\n      this.filterViewModel.onlineApplicationStartDateEnd, this.filterViewModel.onlineApplicationEndDateBegin,\n      this.filterViewModel.onlineApplicationEndDateEnd, this.filterViewModel.onlineApplicationFees, this.filterViewModel.sortBy,\n      this.filterViewModel.sortOrder, this.filterViewModel.pageNumber, this.filterViewModel.pageSize).subscribe(res => {\n        this.bindAcademicSessonResult(res);\n      },\n        error => {\n          this.errorResponse(error);\n        });\n  }\n\n  bindAcademicSessonResult(data: any): any {\n    if (!data.schoolAcademicSessionListViewModel) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n    } else {\n      this.rows = data.schoolAcademicSessionListViewModel.list;\n      this.totalRowsCount = data.schoolAcademicSessionListViewModel.totalItems;\n      this.pageCnt = data.schoolAcademicSessionListViewModel.totalPages;\n      this.rows.forEach(e => {\n        e.operations = [\n          {\n            name: AppSettings.VIEW,\n            icon: AppSettings.DETAILS_ICON,\n          },\n        ];\n        // tslint:disable-next-line:no-unused-expression\n        (e.statusName === AppSettings.NEW_STATUS) ?\n          [e.statusId === AppSettings.ACTIVE_OPERATION, e.operations.push({\n            name: AppSettings.EDIT_OPERATION,\n            icon: AppSettings.EDIT,\n            operationName: AppSettings.EDIT\n          },\n            {\n              name: AppSettings.ACTIVE_OPERATION,\n              icon: AppSettings.ACTIVE_ICON,\n            })] : (e.statusName === AppSettings.ACTIVE_OPERATION) ? [e.statusId === AppSettings.COMPLETED, e.operations.push({\n              name: AppSettings.COMPLETED,\n              icon: AppSettings.ACTIVE_ICON,\n            })] : null;\n        e.startDate = (e.startDate == null) ? null : this.commonService.customDateFormat(e.startDate, this.getSchoolDateFormat()).date;\n        e.endDate = (e.endDate == null) ? null : this.commonService.customDateFormat(e.endDate, this.getSchoolDateFormat()).date;\n        e.onlineApplicationStartDate = (e.onlineApplicationStartDate == null) ? null :\n          this.commonService.customDateFormat(e.onlineApplicationStartDate, this.getSchoolDateFormat()).date;\n        e.onlineApplicationEndDate = (e.onlineApplicationEndDate == null) ? null : this.commonService.customDateFormat(e.onlineApplicationEndDate, this.getSchoolDateFormat()).date;\n        e.onlineApplicationFee = e.onlineApplicationFee != null ? this.getFormattedCurrency(e.onlineApplicationFee) : e.onlineApplicationFee;\n      });\n    }\n    if (data.schoolAcademicSessionListViewModel) {\n      this.filterViewModel.pageNumber = data.schoolAcademicSessionListViewModel.pageNumber;\n    }\n\n    this.tableSettings = {\n      model: this.filterViewModel,\n      rows: this.rows,\n      columns: this.columns,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      tablename: 'Academic Sessions',\n      componentName: this.currentComponent,\n      visibleSelectAll: true,\n      isSelectRowRequired: false,\n      isPaginationRequired: true,\n      filtersList: data.filters,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: 'New Academic Session'\n        },\n        infoButton: {\n          required: true,\n          text: 'Academic Sessions'\n        }\n      }\n    };\n  }\n\n  tableData(_event: SchoolAcademicSessionFilterView): void {\n    this.filterViewModel = _event;\n    this.getAcademicSessionGrid();\n  }\n  onAddFormClick(fromViewEdit = false): void {\n    this.interactedStepperIndex = 0;\n    this.closeAddPanel = false;\n    this.isUpdateData = false;\n    this.passMarks = false;\n    if (this.stepper) {\n      this.stepper.reset();\n    }\n    if (!fromViewEdit){\n      this.schoolBoardDetails();\n    } \n  }\n\n\n  OnSelectionChange(event): void {\n    if (event.selectedIndex > this.interactedStepperIndex) {\n      this.interactedStepperIndex = event.selectedIndex;\n    } else {\n      this.stepper._steps._results.forEach((x, i) => {\n        x.interacted = i < this.interactedStepperIndex ? true : false;\n      });\n    }\n    if (event.selectedIndex > 0) {\n      if (!this.classesOfferedForm.value.schoolBoardId) {\n        this.classesOfferedForm.patchValue({ schoolBoardId: this.availableSchoolBoards[0].value });\n      }\n    }\n    if (event.selectedIndex === 1) {\n      this.stepper._steps._results[1].interacted = false;\n      this.classofferForm.submitted = false;\n    } else if (event.selectedIndex === 2) {\n      this.stepper._steps._results[2].interacted = false;\n      this.courseRequireForm.submitted = false;\n      if (this.offeredBoards.length) {\n        if (!this.courseRequirementsForm.value.schoolBoardId) {\n          this.courseRequirementsForm.patchValue({ schoolBoardId: this.offeredBoards[0].schoolBoardId });\n        }\n        this.onSelectCourseOfferedBoard({ value: this.courseRequirementsForm.value.schoolBoardId });\n      }\n    }\n  }\n  // Basic APi's\n\n  // check online applications for the selected school\n  schoolOnlineApplications(): void {\n    this.isSchoolOnlineApllication = false;\n    this.schoolService.schoolDetails().subscribe((res: any) => {\n      if (res.schoolData.allowOnlineStudentApplications === 1) {\n        this.isSchoolOnlineApllication = true;\n      }\n    });\n  }\n\n  getStatus(): void {\n    this.statusService.getAllStatuses(AppSettings.ACADEMICSESSION_CODE).subscribe(res => this.academisSessionStatuses = res);\n  }\n\n\n  // GET all board related api's\n  schoolBoardDetails(): void {\n    this.schoolBoardList = [];\n    this.gradeSetupService.schoolBoards().subscribe(response => {\n      if (response.listViews != null) {\n        if (response.listViews.length) {\n          this.isShoolHasAcademicSession = true;\n          response.listViews.forEach(element => {\n            this.schoolBoardList.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n          this.classesOfferedForm.controls['schoolBoardId'].setValue(this.schoolBoardList[0].value);\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n    this.getClassesList();\n  }\n\n  // Get Classes to filter table data\n  getClassesList(): void {\n    const classes = [];\n    this.schoolAcademicSessionService.classes().subscribe(response => {\n      if (response.listViews != null) {\n        if (response.listViews.length) {\n          response.listViews.forEach((element: any) => {\n            classes.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n          this.schoolClassesList = Promise.resolve(classes);\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n    this.getSectionsList();\n  }\n\n  // Get Sections to filter table data\n  getSectionsList(): void {\n    const sections = [];\n    this.schoolAcademicSessionService.sections().subscribe(response => {\n      if (response.listViews != null) {\n        if (response.listViews.length) {\n          response.listViews.forEach(element => {\n            sections.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n          this.schoolSectionList = Promise.resolve(sections);\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n    this.courseCategoryDetails();\n  }\n\n  courseCategoryDetails(): void {\n    this.courseCategoryList = [];\n    this.schoolAcademicSessionService.courseCategoryDetails().subscribe(response => {\n      this.courseCategoryList = [];\n      if (response.courseCategoryDetailsModel != null) {\n        if (response.courseCategoryDetailsModel.length > 0) {\n          response.courseCategoryDetailsModel.forEach(element => {\n            this.courseCategoryList.push({\n              label: element.name,\n              value: element.id,\n              code: element.code,\n              courseTypeId: element.courseTypeId,\n              areAllRequired: element.areAllRequired,\n              requiredCount: element.requiredCount,\n              areAllOptional: element.areAllOptional,\n              optionalCount: element.optionalCount\n            });\n          });\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n  onSelectClassesOffered(): void {\n    if (this.classesOfferedForm.controls.classId.valid &&\n      this.classesOfferedForm.controls.sectionId.valid &&\n      this.classesOfferedForm.controls.schoolBoardId.valid &&\n      this.classesOfferedForm.controls.maximumCapacity.valid) {\n      if (this.checkIfSectionAlreadyExist()) {\n        this.openSnackBar('Some section name are Already exist for same classes for Different Board', true);\n        return;\n      }\n      this.classesOfferedForm.value.classId.map(cl => {\n        this.classesOfferedForm.value.sectionId.map(sc => {\n          const index = this.checkifClassSectionsAlreadyExists(this.classesOfferedForm.value.schoolBoardId, cl.value, sc.value);\n          const data = {\n            classId: cl.value,\n            className: cl.label,\n            sectionId: sc.value,\n            sectionName: sc.label,\n            schoolBoardId: this.classesOfferedForm.value.schoolBoardId,\n            schoolBoardName: this.getBoardNameBasedOnId(this.classesOfferedForm.value.schoolBoardId),\n            maxCapacity: this.classesOfferedForm.value.maximumCapacity\n          };\n          if (index === -1) {\n            this.classSectionData.push(data);\n          } else {\n            this.classSectionData[index] = data;\n          }\n        });\n      });\n      if (this.classOfferedTable) {\n        this.classOfferedTable.rows = [];\n      }\n      this.gridClassOfferedList();\n      setTimeout(() => {\n        this.stepper._steps._results[1].interacted = false;\n        this.classofferForm.submitted = false;\n        this.cd.detectChanges();\n      });\n    }\n  }\n  checkIfSectionAlreadyExist(): any {\n    // tslint:disable-next-line: max-line-length\n    return this.classSectionData.some(e => e.schoolBoardId !== this.classesOfferedForm.value.schoolBoardId && this.classesOfferedForm.value.classId.some(c => c.value === e.classId) && this.classesOfferedForm.value.sectionId.some(sc => sc.value === e.sectionId));\n  }\n  checkifClassSectionsAlreadyExists(bId, cId, sId): any {\n    return this.classSectionData.findIndex(e => e.schoolBoardId === bId && e.classId === cId && e.sectionId === sId);\n  }\n  gridClassOfferedList(intialCall = false): void {\n    const classOfferedGridHeaderData = [\n      { field: 'schoolBoardName', header: 'School Board', sort: false },\n      { field: 'className', header: 'Class', sort: false },\n      { field: 'sectionName', header: 'Section', sort: false },\n      { field: 'maxCapacity', header: 'Maximum Capacity', sort: false },\n      { field: 'delete', header: 'Actions', sort: false }\n    ];\n    this.classOfferedTable = {\n      rows: this.classSectionData,\n      columns: classOfferedGridHeaderData,\n      tablename: 'Selected Class Offerings',\n      hideHeader: true,\n      isPaginationRequired: false,\n      rowGroupingColumns: ['schoolBoardName', 'className', 'maxCapacity'],\n    };\n    if (this.classSectionData.length > 0) {\n      this.classSectionData.forEach(e => {\n        e.operations = [{\n          name: AppSettings.DELETE_OPERATION,\n          icon: AppSettings.DELETE_ICON,\n          operationName: AppSettings.DELETE\n        }];\n      });\n    }\n    if (!intialCall) {\n      const previousBoardValue = this.classesOfferedForm.value.schoolBoardId;\n      this.classesOfferedForm.reset();\n      this.classofferForm.resetForm();\n      this.courseRequirementsForm.reset();\n      this.checkCourseOffered();\n      setTimeout(() => {\n        this.classesOfferedForm.patchValue({\n          schoolBoardId: previousBoardValue,\n          checkLength: this.classSectionData.length ? true : null\n        });\n        this.classesOfferedForm.updateValueAndValidity();\n      });\n      this.offeredBoards = [];\n      this.offeredBoards = _.uniqBy(this.classSectionData, 'schoolBoardId');\n      this.loaded = Promise.resolve(true);\n      this.cd.detectChanges();\n    }\n  }\n\n\n  classesOfferedActions(event): void {\n    if (this.classSectionData.filter(x => x.classId === event.clickedRow.classId && x.schoolBoardId === event.clickedRow.schoolBoardId).length > 1\n      || this.courseRequirementSelect.find(x => x.classId === event.clickedRow.classId && x.schoolBoardId === event.clickedRow.schoolBoardId) === undefined) {\n      this.classSectionData = this.classSectionData.filter(e => e !== event.clickedRow);\n      this.gridClassOfferedList();\n    } else {\n      this.openSnackBar(AppSettings.COURSE_OFFERED_HAS_COURSE_REQUIREMENTS, true);\n    }\n  }\n  clearAllClassSectionData(): void {\n    this.classesOfferedForm.reset();\n    this.gridClassOfferedList();\n  }\n\n  getBoardNameBasedOnId(id): any {\n    const selectedBoard = this.availableSchoolBoards.find(e => e.value === id);\n    return selectedBoard && selectedBoard.label;\n  }\n\n  onSelectCourseOfferedBoard(event: any): void {\n    this.courseOfferedClasses = [];\n    let classes = this.classSectionData.filter(x => x.schoolBoardId === event.value);\n    classes = _.uniqBy(classes, 'classId');\n    classes.forEach(element => {\n      this.courseOfferedClasses.push({ value: element.classId, label: element.className });\n    });\n  }\n\n  updateFormControlValidation(formName: any, controlName: any, setValidation: boolean): void {\n    if (setValidation) {\n      this[formName].controls[controlName].setValidators(Validators.required);\n    } else {\n      this[formName].controls[controlName].clearValidators();\n    }\n    this[formName].controls[controlName].updateValueAndValidity();\n  }\n\n  onSelectCourseCategory(data: any): void {\n    let courseTypeId;\n    let courseTypeSub;\n    this.courses = [];\n    this.courseCategoryList.forEach(element => {\n      if (element.value === data) {\n        courseTypeId = element.courseTypeId;\n        courseTypeSub = element.code;\n      }\n    });\n\n    if (AppSettings.COURSE_TYPES_SUBJECTS === courseTypeSub) {\n      this.passMarks = true;\n    }\n    else {\n      this.passMarks = false;\n    }\n    this.courseRequirementsForm.controls['courseId'].setValue(null);\n    this.courseRequirementsForm.controls['passMarks'].setValue('');\n    this.schoolAcademicSessionService.courseDetails(courseTypeId).subscribe(response => {\n      if (response.commonViewModel.length > 0) {\n        response.commonViewModel.forEach(course => {\n          this.courses.push({\n            label: course.name,\n            value: course.id\n          });\n        });\n      }\n      else {\n        this.openSnackBar(AppSettings.SELECTED_COURSE_CATEGORY_COULD_HAVE_COURSE, true);\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  validCourseRequirements(data: any): void {\n    if (data.controls.schoolBoardId.invalid || data.controls.classId.invalid ||\n      data.controls.courseCategoryId.invalid || data.controls.courseId.invalid || data.controls.passMarks.invalid) {\n      return;\n    }\n    if (this.checkAlreadyCourseExistForCourse(data)) {\n      this.openSnackBar('Some Courses Already selected For the Same Classes', true);\n      return;\n    }\n    const courseCategory = this.courseCategoryList.find(c => c.value === data.value.courseCategoryId);\n    if ((data.value.courseId.length - this.getDuplicateCourseCount(data)) + this.getExistCourseCategoryCount(data) < courseCategory.requiredCount) {\n      this.openSnackBar(AppSettings.COURSE_CATEGORY_REQUIRED_COUNT + ' ' + courseCategory.requiredCount, true);\n      return;\n    }\n    const board = this.offeredBoards.find(c => c.schoolBoardId === data.value.schoolBoardId);\n    data.value.classId.forEach(result => {\n      data.value.courseId.forEach(element => {\n        const index = this.checkIfAlreadyCourseExists(board.schoolBoardId, result.value, courseCategory.value, element.value);\n        const values = {\n          schoolBoardId: board.schoolBoardId,\n          schoolBoardName: board.schoolBoardName,\n          courseCategoryId: courseCategory.value,\n          courseCategoryName: courseCategory.label,\n          classId: result.value, className: result.label,\n          passMarks: data.value.passMarks,\n          courseId: element.value,\n          courseName: element.label\n        };\n        if (index === -1) {\n          this.courseRequirementSelect.push(values);\n        } else {\n          this.courseRequirementSelect[index] = values;\n        }\n      });\n    });\n    this.setCourseTableData();\n    this.clearCourseFormData();\n    this.checkCourseOffered();\n  }\n  checkAlreadyCourseExistForCourse(data): any {\n    let alreadyExist = false;\n    data.value.classId.map(result => {\n      data.value.courseId.map(element => {\n        if (!alreadyExist) {\n          // tslint:disable-next-line: max-line-length\n          const test = this.courseRequirementSelect.find(e => e.schoolBoardId === data.value.schoolBoardId && e.classId === result.value && e.courseId === element.value && e.courseCategoryId !== data.value.courseCategoryId);\n          if (test) {\n            alreadyExist = true;\n          }\n        }\n      });\n    });\n    return alreadyExist;\n  }\n\n  getDuplicateCourseCount(data: any): number {\n    let alreadyExistCount = 0;\n    data.value.classId.map(result => {\n      data.value.courseId.map(courseId => {\n\n        const test = this.courseRequirementSelect.find(e => e.schoolBoardId === data.value.schoolBoardId &&\n          e.classId === result.value && e.courseId === courseId.value && e.courseCategoryId === data.value.courseCategoryId);\n        if (test) {\n          alreadyExistCount += 1;\n        }\n      });\n    });\n    return alreadyExistCount;\n  }\n\n  getExistCourseCategoryCount(data: any): number {\n    let alreadyExistCount = 0;\n    data.value.classId.map(result => {\n      this.courseRequirementSelect.map(catId => {\n        if (catId.schoolBoardId === data.value.schoolBoardId && catId.classId === result.value && catId.courseCategoryId === data.value.courseCategoryId) {\n          alreadyExistCount += 1;\n        }\n      });\n    });\n    return alreadyExistCount;\n  }\n\n  clearCourseFormData(): void {\n    this.courseRequirementsForm.patchValue({\n      courseCategoryId: null,\n      courseId: null,\n      passMarks: null\n    });\n    this.courses = [];\n    this.passMarks = false;\n    setTimeout(() => {\n      this.stepper._steps._results[2].interacted = false;\n      this.courseRequireForm.submitted = false;\n      this.cd.detectChanges();\n    });\n  }\n  setCourseTableData(): void {\n    let headerOptions;\n    if (this.courseRequirementSelect.length) {\n      headerOptions = {\n        additionalButtons: [\n          {\n            name: 'Clear All',\n            clickAction: 'clearAll'\n          },\n        ]\n      };\n    }\n    this.courseRequirementSelect.forEach(e => {\n      e.operations = [{\n        name: AppSettings.DELETE_OPERATION,\n        icon: AppSettings.DELETE_ICON,\n        operationName: AppSettings.DELETE\n      }];\n    });\n\n    this.courseReqTab = {\n      rows: this.courseRequirementSelect,\n      columns: this.classRequirementsGridHeaderData,\n      tablename: 'Course Requirements',\n      isPaginationRequired: false,\n      rowGroupingColumns: ['className', 'schoolBoardName', 'courseCategoryName'],\n      headerOperations: headerOptions\n    };\n    this.loaded = Promise.resolve(true);\n  }\n\n  checkIfAlreadyCourseExists(bId, cId, ccId, coId): any {\n    return this.courseRequirementSelect.findIndex(e => e.schoolBoardId === bId && e.classId === cId && e.courseCategoryId === ccId && e.courseId === coId);\n  }\n  onSubmitAcademicSessions(): void {\n    this.schoolAcademicSessionViewModel = this.newAcademicSessionForm.value;\n    this.schoolAcademicSessionViewModel.schoolAcademicSessionClassSections = this.classSectionData;\n    this.schoolAcademicSessionViewModel.classRequirements = this.courseRequirementSelect;\n    if (this.isUpdateData) {\n      this.schoolAcademicSessionViewModel['id'] = this.schoolAcademicSessionId;\n      this.schoolAcademicSessionService.updateSchoolAcademicSession(this.schoolAcademicSessionViewModel).subscribe(res => {\n        this.commonService.sendAcademicSessionId();\n        this.cancel();\n        this.openSnackBar(res.messages.ResultMessage);\n        this.getAcademicSessionGrid();\n      }, error => {\n        this.errorResponse(error);\n      });\n    } else {\n      this.schoolAcademicSessionService.schoolAcademicSession(this.schoolAcademicSessionViewModel).subscribe(res => {\n        this.commonService.sendAcademicSessionId();\n        this.cancel();\n        this.openSnackBar(res.messages.ResultMessage);\n        this.getAcademicSessionGrid();\n      }, error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n\n  // actions\n\n  dialogMethod(dialogData: any, disableClose: boolean, button1Text: string, button2Text?: string, lb?: string, vl?: string): MatDialogRef<CustomDialogComponent, any> {\n    const params = { value: vl, label: lb };\n    return this.dialogRef.open(CustomDialogComponent, {\n      disableClose: disableClose,\n      data: { text: this.commonService.getTranslation(dialogData, params), action: true, btn1Text: button1Text, btn2Text: button2Text },\n    });\n  }\n  actions(operation: any, fromViewEdit = false): void {\n    if (operation.operation === AppSettings.VIEW.toLowerCase()) {\n      if (this.fromConfiguration){\n        this.router.navigate(\n          [URLConstants.ACADEMICSESSION_WIZARD_DETAILS + operation.clickedRow.id]);\n      }else {\n        this.router.navigate(\n          [URLConstants.ACADEMICSESSION_DETAILS + operation.clickedRow.id]);\n      }\n    } else if (operation.operation === AppSettings.ACTIVE_OPERATION.toLowerCase() || operation.operation === AppSettings.COMPLETED.toLowerCase()) {\n      const dialogValue = this.dialogMethod(Messages.CHANGE_STATUS_OF_ACADEMICSESSION,\n        true, AppSettings.YES, AppSettings.No, operation.operation.toUpperCase(), operation.clickedRow.statusName.toUpperCase());\n\n      dialogValue.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.onChangeAcademicSession(operation);\n        }\n      });\n    }\n    if (operation.operation === AppSettings.EDIT) {\n      this.closeAddPanel = false;\n      this.schoolAcademicSessionService.schoolAcademicSessionDetails(operation.clickedRow.id).subscribe(res => this.getAcademicSessionDetailsById(res), error => {\n        this.errorResponse(error);\n      });\n      if (!fromViewEdit){\n        this.schoolBoardDetails();\n      }\n      this.schoolAcademicSessionId = operation.clickedRow.id;\n    }\n  }\n  getAcademicSessionDetailsById(data: any): void {\n    this.isUpdateData = true;\n    this.newAcademicSessionForm.patchValue(data);\n    this.newAcademicSessionForm.patchValue({\n      displayName: data.name\n    });\n    this.classSectionData = data.classesOfferedViewModel;\n    this.courseRequirementSelect = data.courseRquirementsViewModel;\n    this.gridClassOfferedList();\n    this.setCourseTableData();\n    if (!this.availableSchoolBoards.length){\n     this.getAvailableSchoolBoards();\n    }\n    this.stepper._steps._results.forEach((x) => {\n      x.interacted = true;\n    });\n    this.interactedStepperIndex = this.stepper._steps._results.length;\n    this.customSteperLabelChange();\n  }\n  onChangeAcademicSession(operation: any): void {\n    this.academisSessionStatuses.statusViewModel.forEach(element => {\n      if (element.name.toLowerCase() === operation.operation) {\n        this.schoolAcademicSessionStatusViewModel = {\n          schoolAcademicSessionId: operation.clickedRow.id,\n          statusId: element.id\n        };\n        this.schoolAcademicSessionService.updateStatus(this.schoolAcademicSessionStatusViewModel).subscribe(res => {\n          this.getAcademicSessionGrid();\n          this.commonService.sendAcademicSessionId();\n          this.openSnackBar(res.messages.ResultMessage);\n        }, error => {\n          if (error.error.messages.ResultMessage === 'INV_C_S') {\n            const dialogValue = this.dialogMethod(\n              'Course configuration is missing for some or all of the classes in the academic session. Do you still wish to continue to make the academic session Active ?',\n              true, AppSettings.YES, AppSettings.No);\n\n            dialogValue.afterClosed().subscribe(action => {\n              if (action === AppSettings.YES) {\n                this.schoolAcademicSessionService.confirmAndUpdateStatus(this.schoolAcademicSessionStatusViewModel).subscribe(res => {\n                  this.getAcademicSessionGrid();\n                  this.commonService.sendAcademicSessionId();\n                  this.openSnackBar(res.messages.ResultMessage);\n                }, err => {\n                  this.errorResponse(err);\n                });\n              }\n            });\n          } else {\n            this.errorResponse(error);\n          }\n        });\n      }\n    });\n  }\n  clearCourseReq(operation: any): void {\n    if (operation === 'clearAll') {\n      this.openDialog('Please confirm to clear all the entries to start over.');\n    }\n  }\n\n  openDialog(message: string): void {\n    const dialogRef = this.dialogRef.open(CustomDialogComponent, {\n      disableClose: true,\n      data: {\n        text: this.commonService.getTranslation(message),\n        action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES\n      },\n    });\n\n    dialogRef.afterClosed().subscribe(action => {\n      if (action === AppSettings.NO) {\n        this.cd.detectChanges();\n        this.dialogRef.closeAll();\n      }\n      if (action === AppSettings.YES) {\n        this.courseRequirementSelect = [];\n        this.setCourseTableData();\n        this.cd.detectChanges();\n        this.dialogRef.closeAll();\n      }\n    });\n  }\n\n  courseRequirementsActions(event): void {\n    this.courseRequirementSelect = this.courseRequirementSelect.filter(e => e !== event.clickedRow);\n    this.setCourseTableData();\n    this.checkCourseOffered();\n  }\n\n  onClickClassOfferedNext(): void {\n    if (!this.classesOfferedForm.value.checkLength) {\n      this.openSnackBar('Please select atleast 1 class to continue', true);\n    }\n  }\n  onClearValidators(): void {\n    this.courseRequirementsForm.reset();\n    this.checkCourseOffered();\n  }\n\n  checkCourseOffered(): void {\n    this.invalidCourseCategories = [];\n    const c = this.groupByArbitraryNumOfGroup(this.courseRequirementSelect, ['schoolBoardId', 'classId']);\n    this.schoolClassesList.then((classess: any) => {\n      if (this.courseRequirementSelect.length) {\n        this.courseCategoryList.forEach(categoryId => {\n          c.forEach(element => {\n            element.groups.forEach(elementa => {\n              const filterData = elementa.groups.filter(i => i.courseCategoryId === categoryId.value).length;\n              if (filterData !== 0 && filterData < categoryId.requiredCount) {\n                this.invalidCourseCategories.push(\n                  { class: classess.find(cl => cl.value === elementa.classId).label, category: categoryId.label, count: categoryId.requiredCount });\n              }\n            });\n          });\n        });\n      }\n      if (this.invalidCourseCategories.length > 0) {\n        this.courseRequirementsForm.patchValue({ isValidCourseForm: null });\n      } else {\n        this.courseRequirementsForm.patchValue({ isValidCourseForm: true });\n      }\n    });\n  }\n\n  onClickCourseOfferedNext(): void {\n    this.checkCourseOffered();\n    if (!this.courseRequirementsForm.value.isValidCourseForm) {\n      const erroMsg = [];\n      erroMsg.push({ line: 'The courses do not meet the requirements for the selected category. Please check the category requirements and try again.' });\n      _.uniqBy(this.invalidCourseCategories, 'class').forEach(invalidCousreData => {\n        erroMsg.push({ line: [invalidCousreData.class, invalidCousreData.category, 'Required Count ' + invalidCousreData.count].join('-') });\n      });\n      this.openSnackBar(erroMsg, true);\n    }else {\n      this.courseRequireForm.resetForm();\n    }\n  }\n \n}\n","module.exports = \"<app-table *ngIf=\\\"!hideGrid; else addAcademicSessionRef\\\" [settings]=\\\"tableSettings\\\" (getTableData)='tableData($event)' (rowBasedAction)='actions($event)'\\n  [closeAddForm]=\\\"closeAddPanel\\\" (openAddForm)=\\\"onAddFormClick()\\\" [closeRowForm]='closeAddPanel' [templateRef]=\\\"addAcademicSessionRef\\\">\\n</app-table>\\n\\n<ng-template #addAcademicSessionRef>\\n  <mat-vertical-stepper [linear]=\\\"true\\\" #stepper (selectionChange)=\\\"OnSelectionChange($event)\\\" [ngClass]=\\\"{'mat-elevation-z3 m-36 radius-10 p-12': hideGrid}\\\" (animationDone)=\\\"onStepperAnimationDone(stepper.selectedIndex)\\\">\\n    <mat-step [stepControl]=\\\"newAcademicSessionForm\\\">\\n      <form [formGroup]=\\\"newAcademicSessionForm\\\" fxLayout=\\\"column\\\" (ngSubmit)=\\\"newAcademicSessionDetails(newAcademicSessionForm)\\\"\\n        #academicForm=\\\"ngForm\\\">\\n        <ng-template matStepLabel><span translate>{{isUpdateData ? 'Update Academic Session':'New Academic Session'}}</span></ng-template>\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-24\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"72\\\" class=\\\"pr-sm-20\\\">\\n            <mat-label #dispName translate>Display Name</mat-label>\\n            <input matInput (keyup)=\\\"preventSpace($event,'newAcademicSessionForm','displayName')\\\" formControlName=\\\"displayName\\\" autocomplete=\\\"off\\\" required>\\n            <mat-error>\\n              <app-validation [labelName]='dispName.innerText' [validationControl]=\\\"newAcademicSessionForm.controls.displayName\\\"\\n                [doValidate]=\\\"newAcademicSessionFormDetails\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"28\\\">\\n            <mat-label #code translate>Code</mat-label>\\n            <input matInput (keyup)=\\\"preventSpace($event,'newAcademicSessionForm','code')\\\" formControlName=\\\"code\\\" autocomplete=\\\"off\\\" required>\\n            <mat-error>\\n              <app-validation [labelName]='code.innerText' [validationControl]=\\\"newAcademicSessionForm.controls.code\\\"\\n                [doValidate]=\\\"newAcademicSessionFormDetails\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxFlex.gt-xs=\\\"34\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" class=\\\"icon-center\\\" >\\n            <mat-label #startDate translate>Start Date</mat-label>\\n            <input matInput (keyup)=\\\"forceValidation('startDate',newAcademicSessionForm)\\\" [matDatepicker]=\\\"startDatePicker\\\" formControlName=\\\"startDate\\\" (dateChange)=\\\"validApplicationDate()\\\"\\n               required [readonly]=\\\"isUpdateData\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\" *ngIf=\\\"isUpdateData==false\\\"></mat-datepicker-toggle> \\n            <mat-datepicker #startDatePicker></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]='startDate.innerText' [validationControl]=\\\"newAcademicSessionForm.controls.startDate\\\"\\n                [doValidate]=\\\"newAcademicSessionFormDetails\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxFlex.gt-xs=\\\"38\\\" class=\\\"px-sm-20 icon-center\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\n            <mat-label #endDate translate>End Date</mat-label>\\n            <input matInput  (keyup)=\\\"forceValidation('endDate',newAcademicSessionForm)\\\"  [matDatepicker]=\\\"endDatePicker\\\" [min]=\\\"newAcademicSessionForm.controls.startDate.value\\\"\\n              (dateChange)=\\\"validApplicationDate()\\\" formControlName=\\\"endDate\\\" required [readonly]=\\\"isUpdateData\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\" *ngIf=\\\"isUpdateData==false\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #endDatePicker [startAt]=\\\"newAcademicSessionForm.value.startDate\\\"></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]='endDate.innerText' [validationControl]=\\\"newAcademicSessionForm.controls.endDate\\\"\\n                [doValidate]=\\\"newAcademicSessionFormDetails\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n\\n        <div *ngIf=\\\"this.isSchoolOnlineApllication\\\" fxFlexFill fxLayout.lt-sm=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\"\\n          fxLayoutAlign=\\\"center center\\\" class=\\\"pt-12\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxFlex.gt-xs=\\\"34\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" class=\\\"icon-center\\\">\\n            <mat-label #onlineApplicationStartDate translate>Online Application Start Date</mat-label>\\n            <input matInput (keyup)=\\\"forceValidation('onlineApplicationStartDate',newAcademicSessionForm)\\\" [matDatepicker]=\\\"onlineApplicationStartDatePicker\\\" [max]=\\\"newAcademicSessionForm.controls.endDate.value\\\"\\n              formControlName=\\\"onlineApplicationStartDate\\\" [required]=\\\"isValidNewAcademic\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"onlineApplicationStartDatePicker\\\"> </mat-datepicker-toggle>\\n            <mat-datepicker #onlineApplicationStartDatePicker></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]='onlineApplicationStartDate.innerText' [validationControl]=\\\"newAcademicSessionForm.controls.onlineApplicationStartDate\\\"\\n                [doValidate]=\\\"newAcademicSessionFormDetails\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxFlex.gt-xs=\\\"38\\\" class=\\\"px-sm-20 icon-center\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\n            <mat-label #onlineApplicationEndDate translate>Online Application End Date</mat-label>\\n            <input matInput (keyup)=\\\"forceValidation('onlineApplicationEndDate',newAcademicSessionForm)\\\" [matDatepicker]=\\\"onlineApplicationEndDatePicker\\\" [min]=\\\"newAcademicSessionForm.controls.onlineApplicationStartDate.value\\\"\\n              [max]=\\\"newAcademicSessionForm.controls.endDate.value\\\" [required]=\\\"isValidNewAcademic\\\" formControlName=\\\"onlineApplicationEndDate\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"onlineApplicationEndDatePicker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #onlineApplicationEndDatePicker [startAt]=\\\"newAcademicSessionForm.value.onlineApplicationStartDate\\\"></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]='onlineApplicationEndDate.innerText' [validationControl]=\\\"newAcademicSessionForm.controls.onlineApplicationEndDate\\\"\\n                [doValidate]=\\\"newAcademicSessionFormDetails\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"28\\\" class=\\\"icon-center\\\">\\n            <mat-label #onlineApplicationFee translate>Online Application Fee</mat-label>\\n            <input (keyup)=\\\"preventSpace($event,'newAcademicSessionForm','onlineApplicationFee')\\\" matInput formControlName=\\\"onlineApplicationFee\\\" [required]=\\\"isValidNewAcademic\\\" autocomplete=\\\"off\\\">\\n            <mat-error>\\n              <app-validation [labelName]='onlineApplicationFee.innerText' [validationControl]=\\\"newAcademicSessionForm.controls.onlineApplicationFee\\\"\\n                [doValidate]=\\\"newAcademicSessionFormDetails\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-20\\\">\\n          <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"reset\\\" (click)=\\\"cancel()\\\">{{'cancel' | translate}}</button>\\n          <button mat-raised-button matStepperNext type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">{{'Next' | translate}}</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"classesOfferedForm\\\">\\n      <ng-template matStepLabel><span translate>Classes Offered</span></ng-template>\\n      <form  *ngIf=\\\"stepper.selectedIndex >= 1 && newAcademicSessionForm.valid\\\" [formGroup]=\\\"classesOfferedForm\\\" fxLayout=\\\"column\\\" #classofferForm=\\\"ngForm\\\">\\n\\n        <div *ngIf=\\\"classDropDown\\\" fxFlexFill fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-24\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n          \\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n          fxFlex.gt-xs=\\\"25\\\" class=\\\"pr-sm-20\\\" fxFlexFill>\\n               <mat-label #schoolBoardId translate>School Board</mat-label>\\n                    <mat-select formControlName=\\\"schoolBoardId\\\" (selectionChange)=\\\"onSelect($event)\\\" required>\\n                        <mat-option *ngFor=\\\"let schoolBoard of availableSchoolBoards\\\" [value]=\\\"schoolBoard.value\\\" >\\n                                {{schoolBoard.label}}\\n                        </mat-option>\\n                      </mat-select>\\n                  <mat-error>\\n                      <app-validation [labelName]=\\\"schoolBoardId.innerText\\\"\\n                                [validationControl]=\\\"classesOfferedForm.controls.schoolBoardId\\\"\\n                                [doValidate]=\\\"true\\\">\\n                       </app-validation>\\n                  </mat-error>\\n            </mat-form-field>\\n          \\n          <app-custom-dropdown formControlName=\\\"classId\\\" appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n            class=\\\"pr-sm-20\\\" fxFlex.gt-xs=\\\"22\\\" [dropDownConf]=\\\"classDropDown\\\" (selectedData)=\\\"onSelect($event)\\\" [errorCheck]=\\\"classesOfferedForm.controls.classId\\\"\\n            ngDefaultControl>\\n          </app-custom-dropdown>\\n\\n          <app-custom-dropdown fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"18\\\" formControlName=\\\"sectionId\\\" appearance=\\\"outline\\\" [dropDownConf]=\\\"sectionDropDown\\\" (selectedData)=\\\"onSelect($event)\\\"\\n            [errorCheck]=\\\"classesOfferedForm.controls.sectionId\\\" ngDefaultControl>\\n          </app-custom-dropdown>\\n\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"px-sm-20\\\" fxFlex.gt-xs=\\\"25\\\">\\n            <mat-label #maxCapacity translate>Maximum Capacity</mat-label>\\n            <input (keyup)=\\\"preventSpace($event,'classesOfferedForm','maximumCapacity')\\\" matInput autocomplete=\\\"off\\\" formControlName=\\\"maximumCapacity\\\">\\n            <mat-error>\\n              <app-validation [labelName]='maxCapacity.innerText' [validationControl]=\\\"classesOfferedForm.controls.maximumCapacity\\\"\\n                [doValidate]=\\\"classesOfferedFormDetails\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <div fxLayout=\\\"column\\\"  class=\\\"pb-16\\\">\\n            <div fxLayout=\\\"row\\\" class=\\\"pb-12\\\">\\n              <button translate mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\" (click)=\\\"validClassSection(classesOfferedForm)\\\"\\n                class=\\\"text-uppercase\\\">{{'Select' | translate}}</button>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"py-20\\\">\\n          <div *ngIf=\\\"loaded | async\\\" fxLayout=\\\"column\\\" class=\\\"w-100-p simple-table-container\\\">\\n            <app-table [settings]=\\\"classOfferedTab\\\" (rowBasedAction)='classesOfferedActions($event)'></app-table>\\n          </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-15\\\">\\n          <button class=\\\"mr-8 text-uppercase\\\" mat-raised-button matStepperPrevious type=\\\"button\\\">{{'Previous' | translate}}</button>\\n          <button mat-raised-button matStepperNext type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\" (click)=\\\"classesFormValid()\\\">{{'Next' | translate}}</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"courseRequirementsForm\\\" [optional]=\\\"true\\\">\\n      <form [formGroup]=\\\"courseRequirementsForm\\\" fxLayout=\\\"column\\\" #courseRequireForm=\\\"ngForm\\\">\\n        <ng-template matStepLabel><span translate>Course Requirements</span></ng-template>\\n        <div *ngIf=\\\"classDataLoaded | async\\\" fxFlexFill fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-24\\\" fxLayout.gt-xs=\\\"row\\\"\\n          fxLayoutAlign=\\\"start center\\\">\\n\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n          fxFlex.gt-xs=\\\"25\\\" class=\\\"pr-sm-20\\\" fxFlexFill>\\n               <mat-label #schoolBoardId translate>School Board</mat-label>\\n                    <mat-select formControlName=\\\"schoolBoardId\\\" (selectionChange)=\\\"onSelect($event)\\\" required>\\n                        <mat-option *ngFor=\\\"let schoolBoard of courseFormBoards\\\" [value]=\\\"schoolBoard.value\\\">\\n                                {{schoolBoard.label}}\\n                        </mat-option>\\n                      </mat-select>\\n                  <mat-error>\\n                      <app-validation [labelName]=\\\"schoolBoardId.innerText\\\"\\n                                [validationControl]=\\\"courseRequirementsForm.controls.schoolBoardId\\\"\\n                                [doValidate]=\\\"true\\\">\\n                       </app-validation>\\n                  </mat-error>\\n            </mat-form-field>\\n\\n          <app-custom-dropdown formControlName=\\\"classId\\\" appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n            (selectedData)=\\\"onSelect($event)\\\" fxFlex.gt-xs=\\\"25\\\" class=\\\"pr-sm-20\\\" [dropDownConf]=\\\"selectedClassDropDown\\\" [errorCheck]=\\\"courseRequirementsForm.controls.classId\\\">\\n          </app-custom-dropdown>\\n\\n          <app-custom-dropdown formControlName=\\\"courseCategoryId\\\" appearance=\\\"outline\\\" appearance=\\\"outline\\\" fxFlexFill\\n            fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"45\\\" (selectedData)=\\\"onSelectCourseCategory($event)\\\"\\n            [dropDownConf]=\\\"courseCategoryDropDown\\\" [errorCheck]=\\\"courseRequirementsForm.controls.courseCategoryId\\\"\\n            ngDefaultControl>\\n          </app-custom-dropdown>\\n\\n        </div>\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <app-custom-dropdown *ngIf=\\\"dataLoaded | async\\\" appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" class=\\\"pr-sm-20\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"55\\\"\\n            formControlName=\\\"courseId\\\" [dropDownConf]=\\\"courseDropDown\\\" (selectedData)=\\\"onSelect($event)\\\" [errorCheck]=\\\"courseRequirementsForm.controls.courseId\\\"\\n            ngDefaultControl>\\n          </app-custom-dropdown>\\n\\n          <mat-form-field *ngIf=\\\"passMarks\\\" fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"pr-sm-20\\\"\\n            fxFlex.gt-xs=\\\"25\\\">\\n            <mat-label #passMarks translate>Pass Marks</mat-label>\\n            <input (keyup)=\\\"preventSpace($event,'courseRequirementsForm','passMarks')\\\" matInput autocomplete=\\\"off\\\" formControlName=\\\"passMarks\\\">\\n            <mat-error>\\n              <app-validation [labelName]='passMarks.innerText' [validationControl]=\\\"courseRequirementsForm.controls.passMarks\\\"\\n                [doValidate]=\\\"courseRequirementFormDetails\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"pb-12\\\">\\n            <button translate mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\" (click)=\\\"validCourseRequirements(courseRequirementsForm)\\\"\\n              class=\\\"text-uppercase mr-8\\\">\\n              {{'Select' | translate}}\\n            </button>\\n            <button translate mat-raised-button type=\\\"reset\\\"\\n              class=\\\"text-uppercase\\\" (click)=\\\" removeCourseReqValaidators()\\\">\\n              {{'Clear' | translate}}\\n            </button>\\n          </div>\\n        </div>        \\n        <div class=\\\"pb-20\\\">\\n          <div *ngIf=\\\"loaded | async\\\" fxLayout=\\\"column\\\" class=\\\"w-100-p simple-table-container\\\">\\n            <app-table [settings]=\\\"courseReqTab\\\" (rowBasedAction)='courseRequirementsActions($event)' (additionalButtonClick)=\\\"clearCourseReq($event)\\\"></app-table>\\n          </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-20\\\">\\n          <button class=\\\"mr-8 text-uppercase\\\" mat-raised-button matStepperPrevious type=\\\"button\\\">{{'Previous' | translate}}</button>\\n          <button mat-raised-button matStepperNext type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\" (click)=\\\"courseReqValid()\\\">{{'Next' | translate}}</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <mat-step [stepControl]=\\\"SubmitForm\\\">\\n      <ng-template matStepLabel><span translate>Done</span></ng-template>\\n      <div fxFlex=\\\"100\\\" class=\\\"text-center font-size-18 mt-48\\\" translate>Please Confirm To.</div>\\n      <div fxFlex=\\\"100\\\" class=\\\"text-center font-size-18 pt-8\\\" translate>{{(isUpdateData\\n        ? 'Update The Academic Session':'Create The New Academic Session')| translate}}\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-32 pt-24\\\">\\n        <button mat-raised-button matStepperPrevious translate type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n          {{'Previous' | translate}}\\n        </button>\\n        <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\" (click)=\\\"onSubmitAcademicSessions()\\\">{{(isUpdateData ? 'Update':'Submit') | translate}}</button>\\n      </div>\\n    </mat-step> \\n  </mat-vertical-stepper>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9hY2FkZW1pYy9hY2FkZW1pYy1zZXNzaW9ucy9hY2FkZW1pYy1zZXNzaW9ucy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, ViewChild, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { AppSettings, URLConstants, Pattern, Messages } from 'app/app.constants';\nimport { SchoolAcademicSessionFilterView } from '../model/school-academicsession-filter-view';\nimport { SchoolAcademicSessionService } from 'app/service/academic-service/api/school-academic-session.service';\nimport { CommonService } from 'app/service/common.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { MatDialog, MatDialogRef, MatSnackBar } from '@angular/material';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { SchoolAcademicSessionStatusViewModel } from '../model/school-academicsession-status-view';\nimport { StatusService } from 'app/service/academic-service/api/status.service';\nimport { SchoolAcademicSessionViewModel } from '../model/schoolacademic-session-view-model';\nimport { SchoolAcademicClassSectionView } from '../model/school-academic-class-section-view';\nimport { ClassRequirementView } from '../model/class-requirement-view';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { DropDownConfModel } from 'app/models/drop-down-conf-view';\nimport { SchoolAcademicSessionChangeView } from '../model/school-academic-session-change-view';\nimport { GradeSetupService } from 'app/service/grading-service/api/grade-setup.service';\nimport { SchoolService } from 'app/service/manage-school/school.service';\nimport { Location } from '@angular/common';\n@Component({\n  selector: 'app-academic-sessions',\n  templateUrl: './academic-sessions.component.html',\n  styleUrls: ['./academic-sessions.component.scss'],\n  providers: [SchoolAcademicSessionService, GradeSetupService, SchoolService]\n})\nexport class AcademicSessionsComponent extends CommonComponent implements OnInit {\n  @ViewChild('stepper') stepper;\n  @ViewChild('academicForm') academicForm;\n  @ViewChild('courseRequireForm') courseRequireForm;\n  @ViewChild('classofferForm') classofferForm;\n  schoolAcademicSessionChangeView: SchoolAcademicSessionChangeView;\n  schoolAcademicSessionViewModel: SchoolAcademicSessionViewModel;\n  schoolAcademicSessionClassSections: Array<SchoolAcademicClassSectionView>;\n  classRequirements: Array<ClassRequirementView>;\n\n  // variable declarations\n  newAcademicSessionForm: FormGroup;\n  classesOfferedForm: FormGroup;\n  courseRequirementsForm: FormGroup;\n\n  dataLoaded = Promise.resolve(false);\n  classDataLoaded = Promise.resolve(false);\n\n  schoolBoardDropDown: DropDownConfModel;\n  classDropDown: DropDownConfModel;\n  sectionDropDown: DropDownConfModel;\n  courseCategoryDropDown: DropDownConfModel;\n  courseDropDown: DropDownConfModel;\n  selectedClassDropDown: DropDownConfModel;\n  selectedSchoolBoardDropDown: DropDownConfModel;\n  interactedStepperIndex: Number = 0;\n\n  newAcademicSessionFormDetails = false;\n  classesOfferedFormDetails = false;\n  courseRequirementFormDetails = false;\n  buttonDisable = false;\n  closeAddPanel: boolean;\n  passMarks = false;\n  invalidDataFound = false;\n  isSchoolOnlineApllication = false;\n  isUpdateData = false;\n  isValidNewAcademic = false;\n  isSchoolBoards = false;\n  isCheckReqCount = false;\n  isValidCourseRequirement = false;\n  schoolAcademicSessionId: any;\n  httpStatus: any;\n  classOfferedStepper: any;\n  courseRequirementsStepper: any;\n  validClassOfferedLengthStepper: any;\n  minDate: any;\n\n  filterClasses: Array<any> = [];\n  filterSections: Array<any> = [];\n  filterCourseCategory: Array<any> = [];\n  filterCourse: Array<any> = [];\n  schoolBoardsList: Array<any> = [];\n\n  courseCategoryList: Array<any> = [];\n  schoolBoardOptions: Array<any> = [];\n\n  selectedClass: Array<any> = [];\n  selectedSchoolBoards: Array<any> = [];\n\n  filterRowData: any = [];\n  classOfferedTab: {};\n  courseReqTab: {};\n\n  classSectionOfferedSelect: Array<any>;\n  classSectionOfferedSelectList: Array<any>;\n  classSectionData: Array<any>;\n\n  courseRequirementSelect: Array<any>;\n  courseRequirementSelectList: Array<any>;\n  courseRequirementsData: Array<any>;\n\n  classOfferedGridHeaderData: any[];\n  classOfferedGridColumns: string[] = [];\n\n  classRequirementsGridHeaderData: any[];\n  classRequirementsGridColumns: string[] = [];\n\n  columns: { field: string; header: string; sort: boolean; }[];\n  tableSettings: any;\n  currentComponent = 'AcademicSessionsComponent';\n  filterViewModel: SchoolAcademicSessionFilterView;\n  rows: any[];\n  totalRowsCount: any;\n  pageCnt: number;\n  schoolAcademicSessionStatusViewModel: SchoolAcademicSessionStatusViewModel;\n  academisSessionStatuses: any;\n  loaded = Promise.resolve(true);\n  count: number;\n  hideGrid = false;\n  errorCountValid: number;\n  courseFormBoards: any[] = [];\n  previousClassSectionsData: any[] = [];\n  constructor(public dialogRef: MatDialog, private schoolService: SchoolService,\n    private schoolAcademicSessionService: SchoolAcademicSessionService,\n    public commonService: CommonService, private router: Router,\n    private statusService: StatusService, private _fb: FormBuilder,\n    private gradeSetupService: GradeSetupService,\n    private cd: ChangeDetectorRef, public snackBar: MatSnackBar, public routes: ActivatedRoute,\n    public location: Location) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.httpStatus = require('http-status-codes');\n    this.newAcademicSessionForm = this._fb.group({\n      displayName: new FormControl('', [Validators.maxLength(45), Validators.pattern(Pattern.PREVENT_SPACES)]),\n      code: new FormControl('', [Validators.maxLength(10), Validators.pattern(Pattern.PREVENT_SPACES)]),\n\n      startDate: new FormControl('', [Validators.required]),\n      endDate: new FormControl('', [Validators.required]),\n      onlineApplicationStartDate: new FormControl(),\n      onlineApplicationEndDate: new FormControl(),\n      onlineApplicationFee: new FormControl('', [Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS),\n      Validators.pattern(Pattern.PREVENT_SPACES), Validators.max(99999.99), Validators.min(0)])\n    });\n\n    this.classesOfferedForm = this._fb.group({\n      classId: new FormControl('', [Validators.required]),\n      sectionId: new FormControl('', [Validators.required]),\n      schoolBoardId: new FormControl(null, [Validators.required]),\n      maximumCapacity: new FormControl('', [Validators.max(100),\n      Validators.min(1), Validators.pattern(Pattern.NATURAL_NUMBER_PATTERN), Validators.pattern(Pattern.PREVENT_SPACES)]),\n      checkLength: new FormControl('', [Validators.required]),\n    });\n\n    this.courseRequirementsForm = this._fb.group({\n      classId: new FormControl(''),\n      schoolBoardId: new FormControl(null, [Validators.required]),\n      courseCategoryId: new FormControl(''),\n      courseId: new FormControl(''),\n      passMarks: new FormControl('', [Validators.pattern(Pattern.NATURAL_NUMBER_PATTERN),\n      Validators.min(1), Validators.max(99)]),\n    });\n\n    this.classOfferedGridHeaderData = [\n      { field: 'schoolBoardName', header: 'School Board', sort: false },\n      { field: 'className', header: 'Class', sort: false },\n      { field: 'sectionName', header: 'Section', sort: false },\n      { field: 'maxCapacity', header: 'Maximum Capacity', sort: false },\n      { field: 'delete', header: 'Actions', sort: false },\n    ];\n\n    this.classRequirementsGridHeaderData = [\n      { field: 'className', header: 'Class', sort: false },\n      { field: 'schoolBoardName', header: 'School Board', sort: false },\n      { field: 'courseCategoryName', header: 'Course Category', sort: false },\n      { field: 'courseName', header: 'Course', sort: false },\n      { field: 'passMarks', header: 'Pass Marks', sort: false },\n      { field: 'delete', header: 'Actions', sort: false },\n    ];\n    this.getAvailableSchoolBoards();\n\n    // Duplicate Entryes\n    // this.classOfferedTab = {\n    //   rows: [],\n    //   columns: this.classOfferedGridHeaderData,\n    //   tablename: 'Selected Class Offerings',\n    //   isPaginationRequired: false\n    // };\n\n    this.courseReqTab = {\n      rows: [],\n      columns: this.classRequirementsGridHeaderData,\n      tablename: 'Course Requirements',\n      isPaginationRequired: false\n    };\n\n    this.schoolAcademicSessionViewModel = {\n      schoolAcademicSessionClassSections: this.schoolAcademicSessionClassSections = [],\n      classRequirements: this.classRequirements = []\n    };\n\n    this.schoolAcademicSessionChangeView = {\n      schoolAcademicSessionClassSections: this.schoolAcademicSessionClassSections = [],\n      classRequirements: this.classRequirements = []\n    };\n    this.selectedClass = [];\n    this.selectedSchoolBoards = [];\n    this.classSectionOfferedSelect = [];\n    this.courseRequirementSelect = [];\n    this.courseRequirementsData = [];\n    this.classSectionData = [];\n    this.validClassOfferedLengthStepper = 1;\n    this.classOfferedStepper = 2;\n    this.courseRequirementsStepper = 3;\n    this.schoolBoardDetails();\n    this.setColumnHeaders();\n    this.initializeFilterView();\n    this.initializeTableSettings();\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.filterViewModel = modelTableComponent;\n    }\n    this.getAcademicSessionGrid();\n    this.getStatus();\n    this.schoolOnlineApplications();\n\n    this.routes.params.subscribe((params: Params) => {\n      if (params['id']) {\n        this.schoolAcademicSessionId = params['id'];\n        const operations = {\n          operation: 'edit',\n          clickedRow: {\n            id: this.schoolAcademicSessionId\n          }\n        };\n        this.actions(operations);\n        this.hideGrid = true;\n      } else {\n        this.hideGrid = false;\n      }\n    });\n\n  }\n\n  setColumnHeaders(): void {\n    this.columns = [\n      { field: 'name', header: 'Name', sort: true },\n      { field: 'code', header: 'Code', sort: true },\n      { field: 'statusName', header: 'Status', sort: true },\n      { field: 'startDate', header: 'Start Date', sort: true },\n      { field: 'endDate', header: 'End Date', sort: true },\n      { field: 'onlineApplicationStartDate', header: 'Online Application Start Date', sort: true },\n      { field: 'onlineApplicationEndDate', header: 'Online Application End Date', sort: true },\n      { field: 'onlineApplicationFee', header: 'Online Application Fee', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n  }\n\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.columns,\n      tablename: 'Academic Sessions',\n      componentName: this.currentComponent,\n      model: this.filterViewModel\n    };\n  }\n\n  initializeFilterView(): void {\n    this.filterViewModel = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n  }\n\n  getAcademicSessionGrid(): void {\n    this.schoolAcademicSessionService.getAllDetails(this.filterViewModel.names, this.filterViewModel.codes,\n      this.filterViewModel.statusIds, this.filterViewModel.startDateBegin,\n      this.filterViewModel.startDateEnd, this.filterViewModel.endDateBegin,\n      this.filterViewModel.endDateEnd, this.filterViewModel.onlineApplicationStartDateBegin,\n      this.filterViewModel.onlineApplicationStartDateEnd, this.filterViewModel.onlineApplicationEndDateBegin,\n      this.filterViewModel.onlineApplicationEndDateEnd, this.filterViewModel.onlineApplicationFees, this.filterViewModel.sortBy,\n      this.filterViewModel.sortOrder, this.filterViewModel.pageNumber, this.filterViewModel.pageSize).subscribe(res => {\n        this.bindAcademicSessonResult(res);\n      },\n        error => {\n          this.errorResponse(error);\n        });\n  }\n\n  getStatus(): void {\n    this.statusService.getAllStatuses(AppSettings.ACADEMICSESSION_CODE).subscribe(res => this.academisSessionStatuses = res);\n  }\n\n  bindAcademicSessonResult(data: any): any {\n    if (!data.schoolAcademicSessionListViewModel) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n    } else {\n      this.rows = data.schoolAcademicSessionListViewModel.list;\n      this.totalRowsCount = data.schoolAcademicSessionListViewModel.totalItems;\n      this.pageCnt = data.schoolAcademicSessionListViewModel.totalPages;\n      this.rows.forEach(e => {\n        e.operations = [\n          {\n            name: AppSettings.VIEW,\n            icon: AppSettings.DETAILS_ICON,\n          },\n        ];\n        // tslint:disable-next-line:no-unused-expression\n        (e.statusName === AppSettings.NEW_STATUS) ?\n          [e.statusId === AppSettings.ACTIVE_OPERATION, e.operations.push({\n            name: AppSettings.EDIT_OPERATION,\n            icon: AppSettings.EDIT,\n            operationName: AppSettings.EDIT\n          },\n            {\n              name: AppSettings.ACTIVE_OPERATION,\n              icon: AppSettings.ACTIVE_ICON,\n            })] : (e.statusName === AppSettings.ACTIVE_OPERATION) ? [e.statusId === AppSettings.COMPLETED, e.operations.push({\n              name: AppSettings.COMPLETED,\n              icon: AppSettings.ACTIVE_ICON,\n            })] : null;\n        e.startDate = (e.startDate == null) ? null : this.commonService.customDateFormat(e.startDate, this.getSchoolDateFormat()).date;\n        e.endDate = (e.endDate == null) ? null : this.commonService.customDateFormat(e.endDate, this.getSchoolDateFormat()).date;\n        e.onlineApplicationStartDate = (e.onlineApplicationStartDate == null) ? null :\n          this.commonService.customDateFormat(e.onlineApplicationStartDate, this.getSchoolDateFormat()).date;\n        e.onlineApplicationEndDate = (e.onlineApplicationEndDate == null) ? null : this.commonService.customDateFormat(e.onlineApplicationEndDate, this.getSchoolDateFormat()).date;\n        e.onlineApplicationFee = e.onlineApplicationFee != null ? this.getFormattedCurrency(e.onlineApplicationFee) : e.onlineApplicationFee;\n      });\n    }\n    if (data.schoolAcademicSessionListViewModel) {\n      this.filterViewModel.pageNumber = data.schoolAcademicSessionListViewModel.pageNumber;\n    }\n\n    this.tableSettings = {\n      model: this.filterViewModel,\n      rows: this.rows,\n      columns: this.columns,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      tablename: 'Academic Sessions',\n      componentName: this.currentComponent,\n      visibleSelectAll: true,\n      isSelectRowRequired: false,\n      isPaginationRequired: true,\n      filtersList: data.filters,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: 'New Academic Session'\n        },\n        infoButton: {\n          required: true,\n          text: 'Academic Sessions'\n        }\n      }\n    };\n  }\n\n  tableData(_event: SchoolAcademicSessionFilterView): void {\n    this.filterViewModel = _event;\n    this.getAcademicSessionGrid();\n  }\n\n  actions(operation: any): void {\n    if (operation.operation === AppSettings.VIEW.toLowerCase()) {\n      this.router.navigate(\n        [URLConstants.ACADEMICSESSION_DETAILS + operation.clickedRow.id]);\n    } else if (operation.operation === AppSettings.ACTIVE_OPERATION.toLowerCase() || operation.operation === AppSettings.COMPLETED.toLowerCase()) {\n      const dialogValue = this.dialogMethod(Messages.CHANGE_STATUS_OF_ACADEMICSESSION,\n        true, AppSettings.YES, AppSettings.No, operation.operation.toUpperCase(), operation.clickedRow.statusName.toUpperCase());\n\n      dialogValue.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.statusChangeOk(operation);\n        }\n      });\n    }\n    if (operation.operation === AppSettings.EDIT) {\n      this.closeAddPanel = false;\n      this.courseRequirementsData = [];\n      this.classSectionData = [];\n      this.selectedClass = [];\n      this.selectedSchoolBoards = [];\n      this.classSectionOfferedSelect = [];\n      this.courseRequirementSelect = [];\n      this.removeValidatorsClassOfferedForm();\n      this.removeCourseReqValaidators();\n      this.removeCourseBoardValidators();\n      this.removeBoardValidators();\n      this.schoolAcademicSessionService.schoolAcademicSessionDetails(operation.clickedRow.id).subscribe(res => this.getAcademicSessionDetailsById(res), error => {\n        this.errorResponse(error);\n      });\n      this.schoolAcademicSessionId = operation.clickedRow.id;\n    }\n  }\n\n  statusChangeOk(operation: any): void {\n    this.academisSessionStatuses.statusViewModel.forEach(element => {\n      if (element.name.toLowerCase() === operation.operation) {\n        this.schoolAcademicSessionStatusViewModel = {\n          schoolAcademicSessionId: operation.clickedRow.id,\n          statusId: element.id\n        };\n        this.schoolAcademicSessionService.updateStatus(this.schoolAcademicSessionStatusViewModel).subscribe(res => {\n          if (res.statusCode === this.httpStatus.OK) {\n            this.getAcademicSessionGrid();\n            this.commonService.sendAcademicSessionId();\n            this.openSnackBar(res.messages.ResultMessage);\n          }\n        }, error => {\n          this.errorResponse(error);\n        });\n      }\n    });\n  }\n\n  dialogMethod(dialogData: any, disableClose: boolean, button1Text: string, button2Text?: string, lb?: string, vl?: string): MatDialogRef<CustomDialogComponent, any> {\n    const params = { value: vl, label: lb };\n    return this.dialogRef.open(CustomDialogComponent, {\n      disableClose: disableClose,\n      data: { text: this.commonService.getTranslation(dialogData, params), action: true, btn1Text: button1Text, btn2Text: button2Text },\n    });\n  }\n\n  getAcademicSessionDetailsById(data: any): void {\n    if (data.statusCode === this.httpStatus.OK) {\n      this.isUpdateData = true;\n      this.newAcademicSessionForm.controls['displayName'].setValue(data.name);\n      this.newAcademicSessionForm.controls['code'].setValue(data.code);\n      this.newAcademicSessionForm.controls['startDate'].setValue(data.startDate);\n      this.newAcademicSessionForm.controls['endDate'].setValue(data.endDate);\n      this.newAcademicSessionForm.controls['onlineApplicationStartDate'].setValue(data.onlineApplicationStartDate);\n      this.newAcademicSessionForm.controls['onlineApplicationEndDate'].setValue(data.onlineApplicationEndDate);\n      this.newAcademicSessionForm.controls['onlineApplicationFee'].setValue(data.onlineApplicationFee);\n      this.classSectionData = data.classesOfferedViewModel;\n      this.courseRequirementsData = data.courseRquirementsViewModel;\n      this.classSectionOfferedSelect = this.classSectionData;\n      this.courseRequirementSelect = this.courseRequirementsData;\n      this.gridClassOfferedList();\n      this.gridCourseRequirementList();\n      this.removeValidatorsClassOfferedForm();\n      this.getAvailableSchoolBoards();\n      this.stepper._steps._results.forEach((x) => {\n        x.interacted = true;\n      });\n      this.interactedStepperIndex = this.stepper._steps._results.length;\n      this.customSteperLabelChange();\n      this.validateDate();\n    }\n  }\n\n  // Get School Board Details \n  schoolBoardDetails(): void {\n    this.schoolBoardOptions = [];\n    this.gradeSetupService.schoolBoards().subscribe(response => {\n      if (response.listViews != null) {\n        if (response.listViews.length) {\n          this.isSchoolBoards = true;\n          response.listViews.forEach(element => {\n            this.schoolBoardOptions.push({\n              label: element.name,\n              value: element.id\n            });\n            this.schoolBoardDropDown = { multiSelect: false, placeholder: 'School Board', data: this.schoolBoardOptions, noEntryFoundLabel: 'No Data Found', isRequired: true };\n          });\n          this.classesOfferedForm.controls['schoolBoardId'].setValue(this.schoolBoardOptions[0].value);\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n    this.getClassesList();\n  }\n\n  // Get Classes to filter table data\n  getClassesList(): void {\n    this.filterClasses = [];\n    this.schoolAcademicSessionService.classes().subscribe(response => {\n      if (response.listViews != null) {\n        if (response.listViews.length) {\n          response.listViews.forEach(element => {\n            this.filterClasses.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n          this.classDropDown = { multiSelect: true, placeholder: 'Class', data: this.filterClasses, noEntryFoundLabel: 'No Data Found', isRequired: true };\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n    this.getSectionsList();\n  }\n\n  // Get Sections to filter table data\n  getSectionsList(): void {\n    this.filterSections = [];\n    this.schoolAcademicSessionService.sections().subscribe(response => {\n      if (response.listViews != null) {\n        if (response.listViews.length) {\n          response.listViews.forEach(element => {\n            this.filterSections.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n        }\n        this.sectionDropDown = { multiSelect: true, placeholder: 'Section', data: this.filterSections, noEntryFoundLabel: 'No Data Found', isRequired: true };\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n    this.courseCategoryDetails();\n  }\n\n  courseCategoryDetails(): void {\n    this.courseDropDown = { multiSelect: true, placeholder: 'Course', noEntryFoundLabel: 'No Data Found', isRequired: true };\n    this.courseCategoryList = [];\n    this.filterCourseCategory = [];\n    this.schoolAcademicSessionService.courseCategoryDetails().subscribe(response => {\n      if (response.courseCategoryDetailsModel != null) {\n        if (response.courseCategoryDetailsModel.length > 0) {\n          this.courseCategoryList = response.courseCategoryDetailsModel;\n          response.courseCategoryDetailsModel.forEach(element => {\n            this.filterCourseCategory.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n          this.courseCategoryDropDown = {\n            multiSelect: false, placeholder: 'Course Category', data: this.filterCourseCategory,\n            noEntryFoundLabel: 'No Data Found', isRequired: true\n          };\n        }\n        else {\n          this.courseCategoryDropDown = {\n            multiSelect: false, placeholder: 'Course Category', data: this.filterCourseCategory,\n            noEntryFoundLabel: 'No Data Found', isRequired: true\n          };\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n  onSelectCourseCategory(data: any): void {\n    let courseTypeId;\n    let courseTypeSub;\n    this.filterCourse = [];\n    this.courseCategoryList.forEach(element => {\n      if (element.id === data.value) {\n        courseTypeId = element.courseTypeId;\n        courseTypeSub = element.code;\n      }\n    });\n\n    if (AppSettings.COURSE_TYPES_SUBJECTS === courseTypeSub) {\n      this.passMarks = true;\n    }\n    else {\n      this.passMarks = false;\n    }\n    this.courseRequirementsForm.controls['courseId'].setValue(null);\n    this.courseRequirementsForm.controls['passMarks'].setValue('');\n    this.schoolAcademicSessionService.courseDetails(courseTypeId).subscribe(response => {\n      if (response.commonViewModel.length > 0) {\n        response.commonViewModel.forEach(course => {\n          this.filterCourse.push({\n            label: course.name,\n            value: course.id\n          });\n        });\n      }\n      else {\n        this.openSnackBar(AppSettings.SELECTED_COURSE_CATEGORY_COULD_HAVE_COURSE, true);\n      }\n      this.dataLoaded = Promise.resolve(true);\n      this.courseDropDown = { multiSelect: true, placeholder: 'Course', data: this.filterCourse, noEntryFoundLabel: 'No Data Found', isRequired: true };\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n  newAcademicSessionDetails(newAcademicSessForm: any): boolean {\n    if (newAcademicSessForm.status === AppSettings.INVALID) {\n      this.newAcademicSessionFormDetails = true;\n      return false;\n    }\n  }\n\n  classesFormValid(): void {\n    this.scrollIntoView('app-table');\n    if (this.classSectionData.length > 0) {\n      this.removeValidatorsClassOfferedForm();\n      this.stepper.selectedIndex = this.classOfferedStepper;\n    }\n    else {\n      this.validateClassOfferedForm();\n      this.stepper.selectedIndex = this.validClassOfferedLengthStepper;\n    }\n  }\n\n  courseReqValid(): void {\n    this.removeCourseReqValaidators();\n    this.stepper.selectedIndex = this.courseRequirementsStepper;\n    this.scrollIntoView('app-table');\n  }\n\n  // add new form for assessment categories\n  onAddFormClick(): void {\n    this.interactedStepperIndex = 0;\n    this.closeAddPanel = false;\n    this.isUpdateData = false;\n    this.passMarks = false;\n    this.dataLoaded = Promise.resolve(false);\n    this.stepper.reset();\n    this.schoolBoardDetails();\n  }\n\n  // Cancel Button\n  cancel(): void {\n    if (this.academicForm) {\n      this.academicForm.resetForm();\n    }\n    if (this.classofferForm) {\n      this.classofferForm.resetForm();\n    }\n    if (this.courseRequireForm) {\n      this.courseRequireForm.resetForm();\n    }\n    this.stepper.reset();\n    this.closeAddPanel = true;\n    this.buttonDisable = false;\n    this.selectedClass = [];\n    this.selectedSchoolBoards = [];\n    this.classSectionOfferedSelect = [];\n    this.courseRequirementSelect = [];\n    this.courseRequirementsData = [];\n    this.classSectionData = [];\n    this.filterCourse = [];\n    this.passMarks = false;\n    this.dataLoaded = Promise.resolve(false);\n    this.getAcademicSessionGrid();\n    this.gridClassOfferedList();\n    this.gridCourseRequirementList();\n    if (this.hideGrid) {\n      this.location.back();\n    }\n  }\n\n  validClassSection(classesOfferedForm: any): void {\n    this.classesOfferedForm.controls['checkLength'].clearValidators();\n    this.classesOfferedForm.controls['checkLength'].updateValueAndValidity();\n    if (this.classSectionData && this.classSectionData.length > 0) {\n      this.previousClassSectionsData = Object.assign(this.classSectionData);\n    }\n\n    this.validateClassOfferedForm();\n    if (this.isSchoolBoards === false) {\n      this.removeBoardValidators();\n    }\n\n    if (classesOfferedForm.status === AppSettings.VALID) {\n      this.classSectionData = [];\n      if (this.classSectionOfferedSelect.length === 0) {\n        this.classesOfferedForm.value.classId.forEach(i => this.classesOfferedForm.value.sectionId.forEach(j => {\n          this.classSectionOfferedSelect.push({\n            classId: i.value, className: i.label,\n            sectionId: j.value, sectionName: j.label,\n            schoolBoardId: this.classesOfferedForm.value.schoolBoardId ? this.classesOfferedForm.value.schoolBoardId : null,\n            schoolBoardName: this.classesOfferedForm.value.schoolBoardId ? this.getBoardNameBasedOnId(this.classesOfferedForm.value.schoolBoardId) : null,\n            maxCapacity: this.classesOfferedForm.value.maximumCapacity\n          });\n        }));\n        if (this.previousClassSectionsData && this.previousClassSectionsData.length) {\n          if (this.checkClassSectionsList(this.classSectionOfferedSelectList, this.previousClassSectionsData)) {\n            this.updateClassSchoolBoardDetails();\n            this.previousClassSectionsData = [];\n          } else {\n            this.updateClassSchoolBoardDetails();\n            return;\n          }\n        }\n      }\n      else {\n        this.classSectionOfferedSelectList = [];\n        this.classesOfferedForm.value.classId.forEach(k => this.classesOfferedForm.value.sectionId.forEach(l => {\n          this.classSectionOfferedSelectList.push({\n            classId: k.value, className: k.label,\n            sectionId: l.value, sectionName: l.label,\n            schoolBoardId: this.classesOfferedForm.value.schoolBoardId ? this.classesOfferedForm.value.schoolBoardId : null,\n            schoolBoardName: this.classesOfferedForm.value.schoolBoardId ? this.getBoardNameBasedOnId(this.classesOfferedForm.value.schoolBoardId) : null,\n            maxCapacity: this.classesOfferedForm.value.maximumCapacity\n          });\n        }));\n        if (this.previousClassSectionsData && this.previousClassSectionsData.length) {\n          if (this.checkClassSectionsList(this.classSectionOfferedSelectList, this.previousClassSectionsData)) {\n            this.updateClassSectionList();\n            this.previousClassSectionsData = [];\n          } else {\n            this.updateClassSchoolBoardDetails();\n            return;\n          }\n        }\n      }\n\n      this.filterRowDataList();\n      this.classSectionOfferedSelect = this.filterRowData;\n      this.classSectionData = this.classSectionOfferedSelect;\n\n      this.updateClassSchoolBoardDetails();\n      this.gridClassOfferedList();\n      this.removeValidatorsClassOfferedForm();\n      const previousBoardValue = this.classesOfferedForm.value.schoolBoardId;\n      this.classesOfferedForm.reset();\n      this.classesOfferedForm.patchValue({ schoolBoardId: previousBoardValue });\n    }\n    else {\n      this.classesOfferedFormDetails = true;\n    }\n  }\n\n  checkClassSectionsList(selectedClassSections: any, previousClssSectionsData: any): boolean {\n    const classesList = selectedClassSections.filter(element => previousClssSectionsData.some(elt => elt.classId\n      === element.classId && elt.sectionId === element.sectionId && elt.schoolBoardId !== element.schoolBoardId));\n    if (classesList && classesList.length > 0) {\n      this.openSnackBar(AppSettings.SECTION_WITH_MULTIPLE_BOARD, true);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  updateClassSectionList(): void {\n    this.classSectionOfferedSelect.forEach(e => this.classSectionOfferedSelectList.forEach(e1 => {\n      if (e.classId === e1.classId && e.sectionId === e1.sectionId && e.schoolBoardId === e1.schoolBoardId) {\n        e.schoolBoardName = e1.schoolBoardName;\n        e.maxCapacity = e1.maxCapacity;\n      }\n      else {\n        this.classSectionOfferedSelect.push({\n          classId: e1.classId, className: e1.className,\n          sectionId: e1.sectionId, sectionName: e1.sectionName,\n          schoolBoardId: e1.schoolBoardId ? e1.schoolBoardId : null,\n          schoolBoardName: e1.schoolBoardName ? e1.schoolBoardName : null,\n          maxCapacity: e1.maxCapacity\n        });\n      }\n    }));\n  }\n\n  updateClassSchoolBoardDetails(): void {\n    this.selectedClass = [];\n    this.selectedSchoolBoards = [];\n\n    this.selectedClass =  this.filterClasses.filter(e => this.classSectionOfferedSelect.some(el => el.classId === e.value));\n    // const uniqueClasses = Array.from(new Set(this.classSectionOfferedSelect.map(a => a.classId))).map(value => this.classSectionOfferedSelect.find(a => a.classId === value));\n\n    // uniqueClasses.forEach(element => {\n    //   this.selectedClass.push({ value: element.classId, label: element.className });\n    // });\n\n    const uniqueSchoolBoards = Array.from(new Set(this.classSectionOfferedSelect.map(a => a.schoolBoardId)))\n      .map(value => this.classSectionOfferedSelect.find(a => a.schoolBoardId === value));\n\n      \n    if (uniqueSchoolBoards.length > 0) {\n      uniqueSchoolBoards.forEach(element => {\n        this.selectedSchoolBoards.push({ value: element.schoolBoardId, label: element.schoolBoardName });\n      });\n    }\n    this.classDataLoaded = Promise.resolve(true);\n    this.selectedClassDropDown = { multiSelect: true, placeholder: 'Class', data: this.selectedClass, noEntryFoundLabel: 'No Data Found', isRequired: true };\n    this.selectedSchoolBoardDropDown = { multiSelect: false, placeholder: 'School Board', data: this.selectedSchoolBoards, noEntryFoundLabel: 'No Data Found', isRequired: false };\n  }\n\n  classesOfferedActions(operation: any): void {\n    if (operation.operation === AppSettings.DELETE) {\n      if (this.courseRequirementsData.filter(x => x.classId === operation.clickedRow.classId && x.schoolBoardId === operation.clickedRow.schoolBoardId).length > 0) {\n        this.openSnackBar(AppSettings.COURSE_OFFERED_HAS_COURSE_REQUIREMENTS, true);\n        this.stepper.selectedIndex = 2;\n      }\n      else {\n        const deleteIndex = this.classSectionOfferedSelect.findIndex(x => x.classId === operation.clickedRow.classId &&\n          x.sectionId === operation.clickedRow.sectionId && x.schoolBoardId === operation.clickedRow.schoolBoardId);\n        this.classSectionOfferedSelect.splice(deleteIndex, 1);\n        this.classSectionData = this.classSectionOfferedSelect;\n        this.gridClassOfferedList();\n      }\n    }\n  }\n\n  gridClassOfferedList(): void {\n    this.classOfferedTab = {\n      rows: this.classSectionData,\n      columns: this.classOfferedGridHeaderData,\n      tablename: 'Selected Class Offerings',\n      hideHeader: true,\n      isPaginationRequired: false,\n      rowGroupingColumns: ['schoolBoardName', 'className', 'maxCapacity'],\n    };\n    if (this.classSectionData.length > 0) {\n      this.classSectionData.forEach(e => {\n        e.operations = [{\n          name: AppSettings.DELETE_OPERATION,\n          icon: AppSettings.DELETE_ICON,\n          operationName: AppSettings.DELETE\n        }];\n      });\n    }\n    else {\n      this.validateClassOfferedForm();\n      this.classesOfferedForm.controls['checkLength'].setValidators([Validators.required]);\n      this.classesOfferedForm.controls['checkLength'].updateValueAndValidity();\n    }\n    this.getCourseFormBoards();\n    this.loaded = Promise.resolve(true);\n    this.updateClassSchoolBoardDetails();\n  }\n\n  removeValidatorsClassOfferedForm(): void {\n    this.classesOfferedForm.controls['classId'].clearValidators();\n    this.classesOfferedForm.controls['sectionId'].clearValidators();\n    this.classesOfferedForm.controls['schoolBoardId'].clearValidators();\n    this.classesOfferedForm.controls['checkLength'].clearValidators();\n\n    this.classDropDown = { multiSelect: true, placeholder: 'Class', data: this.filterClasses, noEntryFoundLabel: 'No Data Found', isRequired: false };\n    this.sectionDropDown = { multiSelect: true, placeholder: 'Section', data: this.filterSections, noEntryFoundLabel: 'No Data Found', isRequired: false };\n    this.schoolBoardDropDown = { multiSelect: false, placeholder: 'School Board', data: this.schoolBoardOptions, noEntryFoundLabel: 'No Data Found', isRequired: false };\n\n    this.updateValueValidityCourseOfferedForm();\n  }\n\n  validateClassOfferedForm(): void {\n    this.classDropDown = { multiSelect: true, placeholder: 'Class', data: this.filterClasses, noEntryFoundLabel: 'No Data Found', isRequired: true };\n    this.sectionDropDown = { multiSelect: true, placeholder: 'Section', data: this.filterSections, noEntryFoundLabel: 'No Data Found', isRequired: true };\n    this.schoolBoardDropDown = { multiSelect: false, placeholder: 'School Board', data: this.schoolBoardOptions, noEntryFoundLabel: 'No Data Found', isRequired: true };\n\n    this.classesOfferedForm.controls['classId'].setValidators([Validators.required]);\n    this.classesOfferedForm.controls['sectionId'].setValidators([Validators.required]);\n    this.classesOfferedForm.controls['schoolBoardId'].setValidators([Validators.required]);\n\n    this.updateValueValidityCourseOfferedForm();\n  }\n\n  updateValueValidityCourseOfferedForm(): void {\n    this.classesOfferedForm.controls['classId'].updateValueAndValidity();\n    this.classesOfferedForm.controls['sectionId'].updateValueAndValidity();\n    this.classesOfferedForm.controls['schoolBoardId'].updateValueAndValidity();\n    this.classesOfferedForm.controls['checkLength'].updateValueAndValidity();\n  }\n\n  //  remove validators for school board in classes offered\n  removeBoardValidators(): void {\n    this.classesOfferedForm.controls['schoolBoardId'].clearValidators();\n    this.classesOfferedForm.controls['schoolBoardId'].updateValueAndValidity();\n\n    this.schoolBoardDropDown = { multiSelect: false, placeholder: 'School Board', data: this.schoolBoardOptions, noEntryFoundLabel: 'No Data Found', isRequired: false };\n  }\n\n  //  remove validators for school board in class requirement\n  removeCourseBoardValidators(): void {\n    this.courseRequirementsForm.controls['schoolBoardId'].clearValidators();\n    this.courseRequirementsForm.controls['schoolBoardId'].updateValueAndValidity();\n\n    this.selectedSchoolBoardDropDown = { multiSelect: false, placeholder: 'School Board', data: this.selectedSchoolBoards, noEntryFoundLabel: 'No Data Found', isRequired: false };\n  }\n\n  validCourseRequirements(data: any): boolean {\n    this.stepper.selected.interacted = true;\n    this.count = 0;\n    this.validateCourseRequirements();\n    if (this.courseRequirementsForm.invalid) {\n      return false;\n    }\n    this.courseCategoryValid();\n    if (this.isSchoolBoards === false) {\n      this.removeCourseBoardValidators();\n      this.invalidDataFound = true;\n    }\n    if (this.courseRequirementsForm.status === AppSettings.VALID && this.isValidCourseRequirement === false) {\n      this.courseCategoryList.forEach(e1 => {\n        if (this.courseRequirementsForm.value.courseCategoryId.value === e1.id &&\n          this.courseRequirementsForm.value.courseCategoryId.label === e1.name) {\n          if (this.isSchoolBoards === true) {\n            this.courseRequirementsForm.value.classId.forEach(e => {\n              const obj1 = this.classSectionData.filter(function (node): boolean {\n                return node.classId === e.value;\n              });\n              this.invalidDataFound = obj1.some(function (el: any): boolean {\n                return el.schoolBoardId === data.value.schoolBoardId;\n              });\n              if (this.invalidDataFound === false) {\n                this.openSnackBar(AppSettings.CLASSES_MISMATCH_BOARD, true);\n                this.count++;\n                return;\n              }\n            });\n          }\n        }\n      });\n      if (this.invalidDataFound === false || this.count > 0) {\n        return false;\n      }\n      else {\n        this.courseRequirementsData = [];\n        if (this.courseRequirementSelect.length === 0) {\n          const selectedSchoolBoard = this.availableSchoolBoards.find(x => x.value === this.courseRequirementsForm.value.schoolBoardId);\n          this.courseRequirementsForm.value.classId.forEach(element2 => this.courseRequirementsForm.value.courseId.forEach(element3 => {\n            this.courseRequirementSelect.push({\n              classId: element2.value, className: element2.label,\n              schoolBoardId: this.courseRequirementsForm.value.schoolBoardId ? this.courseRequirementsForm.value.schoolBoardId : null,\n              schoolBoardName: selectedSchoolBoard ? selectedSchoolBoard.label : null,\n              courseCategoryId: this.courseRequirementsForm.value.courseCategoryId.value, courseCategoryName:\n                this.courseRequirementsForm.value.courseCategoryId.label, courseId: element3.value, courseName: element3.label,\n              passMarks: this.courseRequirementsForm.value.passMarks\n            });\n          }));\n        }\n        else {\n          this.courseRequirementSelectList = [];\n          const selectedSchoolBoard = this.availableSchoolBoards.find(x => x.value === this.courseRequirementsForm.value.schoolBoardId);\n          this.courseRequirementsForm.value.classId.forEach(i => this.courseRequirementsForm.value.courseId.forEach(j => {\n            this.courseRequirementSelectList.push({\n              classId: i.value, className: i.label,\n              schoolBoardId: this.courseRequirementsForm.value.schoolBoardId ? this.courseRequirementsForm.value.schoolBoardId : null,\n              schoolBoardName: selectedSchoolBoard ? selectedSchoolBoard.label : null,\n              courseCategoryId: this.courseRequirementsForm.value.courseCategoryId.value,\n              courseCategoryName: this.courseRequirementsForm.value.courseCategoryId.label, courseId: j.value, courseName: j.label,\n              passMarks: this.courseRequirementsForm.value.passMarks\n            });\n          }));\n          this.updateCourseRequirementList();\n        }\n        this.filterCourseRequirementRowDataList();\n        this.courseRequirementSelect = this.filterRowData;\n        this.courseReqCountValidation();\n        if (this.errorCountValid === 0) {\n          this.courseRequirementsData = this.courseRequirementSelect;\n          this.selectedClassDropDown = { multiSelect: true, placeholder: 'Class', data: this.selectedClass, noEntryFoundLabel: 'No Data Found', isRequired: true };\n          this.selectedSchoolBoardDropDown = {\n            multiSelect: false, placeholder: 'School Board', data: this.selectedSchoolBoards,\n            noEntryFoundLabel: 'No Data Found', isRequired: false\n          };\n          this.courseRequirementsForm.controls['passMarks'].setValue('');\n\n          this.gridCourseRequirementList();\n          this.courseRequirementsForm.controls['courseCategoryId'].reset();\n          this.courseRequirementsForm.controls['courseId'].reset();\n          this.filterCourse = [];\n          this.dataLoaded = Promise.resolve(true);\n          this.courseDropDown = { multiSelect: true, placeholder: 'Course', data: this.filterCourse, noEntryFoundLabel: 'No Data Found', isRequired: true };\n          this.removeCourseReqValaidators();\n        }\n      }\n    }\n    else {\n      this.courseRequirementFormDetails = true;\n    }\n    setTimeout(() => {\n      this.stepper.selected.interacted = false;\n      this.courseRequireForm.submitted = false;\n    });\n  }\n\n\n  updateCourseRequirementList(): void {\n    this.courseRequirementSelect.forEach(k => this.courseRequirementSelectList.forEach(l => {\n      if (k.classId === l.classId && k.courseId === l.courseId && k.courseCategoryId === l.courseCategoryId && k.schoolBoardId === l.schoolBoardId) {\n        k.className = l.className;\n        k.courseName = l.courseName;\n        k.schoolBoardId = l.schoolBoardId ? l.schoolBoardId : null;\n        k.schoolBoardName = l.schoolBoardName ? l.schoolBoardName : null;\n        k.courseCategoryId = l.courseCategoryId;\n        k.courseCategoryName = l.courseCategoryName;\n        k.passMarks = this.courseRequirementsForm.value.passMarks;\n      }\n      else {\n        this.courseRequirementSelect.push({\n          classId: l.classId, className: l.className,\n          schoolBoardId: l.schoolBoardId ? l.schoolBoardId : null,\n          schoolBoardName: l.schoolBoardId ? l.schoolBoardName : null,\n          courseCategoryId: l.courseCategoryId, courseCategoryName: l.courseCategoryName, courseId: l.courseId, courseName: l.courseName,\n          passMarks: l.passMarks\n        });\n      }\n    }));\n  }\n\n  validateCourseRequirements(): void {\n    this.selectedClassDropDown = { multiSelect: true, placeholder: 'Class', data: this.selectedClass, noEntryFoundLabel: 'No Data Found', isRequired: true };\n    this.selectedSchoolBoardDropDown = { multiSelect: false, placeholder: 'School Board', data: this.selectedSchoolBoards, noEntryFoundLabel: 'No Data Found', isRequired: true };\n    this.courseCategoryDropDown = { multiSelect: false, placeholder: 'Course Category', data: this.filterCourseCategory, noEntryFoundLabel: 'No Data Found', isRequired: true };\n    this.courseDropDown = { multiSelect: true, placeholder: 'Course', data: this.filterCourse, noEntryFoundLabel: 'No Data Found', isRequired: true };\n\n    this.courseRequirementsForm.controls['classId'].setValidators([Validators.required]);\n    this.courseRequirementsForm.controls['courseCategoryId'].setValidators([Validators.required]);\n    this.courseRequirementsForm.controls['passMarks'].setValidators([Validators.pattern(Pattern.NATURAL_NUMBER_PATTERN),\n    Validators.pattern(Pattern.PREVENT_SPACES), Validators.min(1), Validators.max(99)]);\n    this.courseRequirementsForm.controls['schoolBoardId'].setValidators([Validators.required]);\n    this.courseRequirementsForm.controls['courseId'].setValidators([Validators.required]);\n    this.courseRequirementFormDetails = true;\n\n\n    this.updateValidityCourseReqForm();\n  }\n\n  removeCourseReqValaidators(): void {\n    this.courseRequirementsForm.controls['classId'].clearValidators();\n    this.courseRequirementsForm.controls['courseCategoryId'].clearValidators();\n    this.courseRequirementsForm.controls['schoolBoardId'].clearValidators();\n    this.courseRequirementsForm.controls['courseId'].clearValidators();\n    this.courseRequirementsForm.controls['passMarks'].clearValidators();\n\n    this.selectedClassDropDown = { multiSelect: true, placeholder: 'Class', data: this.selectedClass, noEntryFoundLabel: AppSettings.NODATA_FOUND, isRequired: true };\n    this.selectedSchoolBoardDropDown = {\n      multiSelect: false, placeholder: 'School Board', data: this.selectedSchoolBoards, noEntryFoundLabel: AppSettings.NODATA_FOUND,\n      isRequired: false\n    };\n    this.courseCategoryDropDown = {\n      multiSelect: false, placeholder: 'Course Category', data: this.filterCourseCategory, noEntryFoundLabel: AppSettings.NODATA_FOUND,\n      isRequired: true\n    };\n    this.filterCourse = [];\n    this.courseDropDown = { multiSelect: true, placeholder: 'Course', data: this.filterCourse, noEntryFoundLabel: AppSettings.NODATA_FOUND, isRequired: true };\n    this.courseRequirementFormDetails = false;\n    if (this.stepper){\n      this.stepper.selected.interacted = false;\n    }\n    this.updateValidityCourseReqForm();\n  }\n\n  updateValidityCourseReqForm(): void {\n    this.courseRequirementsForm.controls['classId'].updateValueAndValidity();\n    this.courseRequirementsForm.controls['courseCategoryId'].updateValueAndValidity();\n    this.courseRequirementsForm.controls['schoolBoardId'].updateValueAndValidity();\n    this.courseRequirementsForm.controls['courseId'].updateValueAndValidity();\n    this.courseRequirementsForm.controls['passMarks'].updateValueAndValidity();\n  }\n\n  courseRequirementsActions(operation: any): void {\n    if (operation.operation === AppSettings.DELETE) {\n      const deleteIndex = this.courseRequirementSelect.\n        findIndex(x => x.classId === operation.clickedRow.classId &&\n          x.courseCategoryId === operation.clickedRow.courseCategoryId && x.courseId === operation.clickedRow.courseId\n          && x.schoolBoardId === operation.clickedRow.schoolBoardId);\n\n      const coursesList = this.courseRequirementSelect.filter(elt => elt.courseCategoryId === operation.clickedRow.courseCategoryId\n        && elt.classId === operation.clickedRow.classId && elt.schoolBoardId === operation.clickedRow.schoolBoardId);\n      this.courseCategoryList.forEach(e1 => {\n        if (coursesList.length) {\n          if (e1.id === operation.clickedRow.courseCategoryId) {\n            if (coursesList.length - 1 < e1.requiredCount) {\n              this.openSnackBar(AppSettings.COURSE_CATEGORY_REQUIRED_COUNT + ' ' + e1.requiredCount, true);\n            } else {\n              this.courseRequirementSelect.splice(deleteIndex, 1);\n            }\n          }\n        }\n      });\n\n      this.courseRequirementsData = this.courseRequirementSelect;\n      this.gridCourseRequirementList();\n    }\n  }\n\n  gridCourseRequirementList(): void {\n    let headerOptions;\n    if (this.courseRequirementsData.length) {\n      headerOptions = {\n        additionalButtons: [\n          {\n            name: 'Clear All',\n            clickAction: 'clearAll'\n          },\n        ]\n      };\n    }\n    this.courseReqTab = {\n      rows: this.courseRequirementsData,\n      columns: this.classRequirementsGridHeaderData,\n      tablename: 'Course Requirements',\n      isPaginationRequired: false,\n      rowGroupingColumns: ['className', 'schoolBoardName', 'courseCategoryName'],\n      headerOperations: headerOptions\n    };\n\n    if (this.courseRequirementsData.length > 0) {\n      this.courseRequirementsData.forEach(e => {\n        e.operations = [{\n          name: AppSettings.DELETE_OPERATION,\n          icon: AppSettings.DELETE_ICON,\n          operationName: AppSettings.DELETE\n        }];\n      });\n    }\n\n    this.loaded = Promise.resolve(true);\n    this.cd.detectChanges();\n  }\n\n  filterCourseRequirementRowDataList(): void {\n    this.filterRowData = [];\n    this.filterRowData = this.courseRequirementSelect;\n    const x = [];\n    this.filterRowData.forEach(element7 => {\n      if (x.length === 0) {\n        x.push(element7);\n      }\n      else {\n        this.filterRowData.forEach((element8: any) => {\n          const foundIndex = x.findIndex((value: any) => {\n            return value.className === element8.className && value.courseName === element8.courseName &&\n              value.schoolBoardName === element8.schoolBoardName && value.courseCategoryName === element8.courseCategoryName;\n          });\n          if (foundIndex === -1) {\n            x.push(element8);\n          }\n        });\n      }\n    });\n    this.filterRowData = x;\n  }\n\n  filterRowDataList(): void {\n    this.filterRowData = [];\n    this.filterRowData = this.classSectionOfferedSelect;\n    const x = [];\n    this.filterRowData.forEach(element => {\n      if (x.length === 0) {\n        x.push(element);\n      }\n      else {\n        this.filterRowData.forEach((elmnt: any) => {\n          const foundIndex = x.findIndex((value: any) => {\n            return value.className === elmnt.className && value.sectionName === elmnt.sectionName &&\n              value.schoolBoardName === elmnt.schoolBoardName && value.maxCapacity === elmnt.maxCapacity;\n          });\n          if (foundIndex === -1) {\n            x.push(elmnt);\n          }\n        });\n      }\n    });\n    this.filterRowData = x;\n  }\n\n  onSubmitAcademicSessions(): void {\n    if (this.isUpdateData === true) {\n      this.schoolAcademicSessionChangeView = this.newAcademicSessionForm.value;\n      this.schoolAcademicSessionChangeView.schoolAcademicSessionClassSections = [];\n      this.schoolAcademicSessionChangeView.classRequirements = [];\n      this.assigningValidData();\n      this.schoolAcademicSessionChangeView.id = this.schoolAcademicSessionId;\n      this.schoolAcademicSessionService.updateSchoolAcademicSession(this.schoolAcademicSessionChangeView).subscribe(res => {\n        if (res.statusCode === this.httpStatus.OK) {\n          this.commonService.sendAcademicSessionId();\n          this.cancel();\n          this.openSnackBar(res.messages.ResultMessage);\n        }\n        else {\n          this.openSnackBar(res.messages.ResultMessage, true);\n        }\n      }, error => {\n        this.errorResponse(error);\n      });\n    }\n    else {\n      this.schoolAcademicSessionViewModel = this.newAcademicSessionForm.value;\n      this.schoolAcademicSessionViewModel.schoolAcademicSessionClassSections = [];\n      this.schoolAcademicSessionViewModel.classRequirements = [];\n      this.assigningValidData();\n      this.schoolAcademicSessionService.schoolAcademicSession(this.schoolAcademicSessionViewModel).subscribe(res => {\n        if (res.statusCode === this.httpStatus.OK) {\n          this.commonService.sendAcademicSessionId();\n          this.cancel();\n          this.openSnackBar(res.messages.ResultMessage);\n        }\n        else {\n          this.openSnackBar(res.messages.ResultMessage, true);\n        }\n      }, error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n\n  assigningValidData(): void {\n    this.schoolAcademicSessionViewModel.schoolAcademicSessionClassSections = [];\n    this.schoolAcademicSessionViewModel.classRequirements = [];\n    this.schoolAcademicSessionChangeView.schoolAcademicSessionClassSections = [];\n    this.schoolAcademicSessionChangeView.classRequirements = [];\n    this.classSectionData.forEach(e => {\n      this.schoolAcademicSessionViewModel.schoolAcademicSessionClassSections.push({\n        classId: e.classId, sectionId: e.sectionId, maxCapacity: e.maxCapacity, schoolBoardId: e.schoolBoardId\n      });\n    });\n    this.schoolAcademicSessionChangeView.schoolAcademicSessionClassSections = this.schoolAcademicSessionViewModel.schoolAcademicSessionClassSections;\n    if (this.courseRequirementsData === undefined) {\n      this.schoolAcademicSessionViewModel.classRequirements = [];\n      this.schoolAcademicSessionChangeView.classRequirements = [];\n    }\n    else {\n      this.courseRequirementsData.forEach(e1 => {\n        if (e1.passMarks === '') {\n          e1.passMarks = null;\n        }\n        this.schoolAcademicSessionViewModel.classRequirements.push({\n          classId: e1.classId, courseCategoryId: e1.courseCategoryId, courseId: e1.courseId, passMarks: e1.passMarks, schoolBoardId: e1.schoolBoardId\n        });\n      });\n      this.schoolAcademicSessionChangeView.classRequirements = this.schoolAcademicSessionViewModel.classRequirements;\n    }\n  }\n\n  // check online applications for the selected school\n  schoolOnlineApplications(): void {\n    this.isSchoolOnlineApllication = false;\n    this.schoolService.schoolDetails().subscribe((res: any) => {\n      if (res.schoolData.allowOnlineStudentApplications === 1) {\n        this.isSchoolOnlineApllication = true;\n        this.isValidNewAcademic = true;\n      }\n    });\n  }\n\n  validApplicationDate(): void {\n    if (this.newAcademicSessionForm.controls.startDate.value != null && this.newAcademicSessionForm.controls.endDate.value != null) {\n      this.isValidNewAcademic = true;\n    }\n  }\n\n  onSelect($event): void {\n\n  }\n\n  clearCourseReq(event): void {\n    if (event === AppSettings.CLEAR && this.courseRequirementsData.length > 0) {\n      const dialogValue = this.commonService.dialog(AppSettings.WARNING_ON_CLEAR_ALL_ITEMS, true, AppSettings.NO, AppSettings.YES);\n      dialogValue.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.courseRequirementsData = [];\n          this.courseRequirementSelect = [];\n          this.gridCourseRequirementList();\n        }\n      });\n    }\n    else {\n      this.openSnackBar(AppSettings.NODATA_FOUND, true);\n    }\n  }\n\n  OnSelectionChange(event: any): void {\n    if (event.selectedIndex > this.interactedStepperIndex) {\n      this.interactedStepperIndex = event.selectedIndex;\n    } else {\n      this.stepper._steps._results.forEach((x, i) => {\n        x.interacted = i < this.interactedStepperIndex ? true : false;\n      });\n    }\n    if (event.selectedIndex > 0) {\n      if (!this.classesOfferedForm.value.schoolBoardId) {\n        this.classesOfferedForm.patchValue({ schoolBoardId: this.availableSchoolBoards[0].value });\n      }\n    } else if (event.selectedIndex === 2) {\n      if (this.courseFormBoards.length) {\n        this.courseRequirementsForm.patchValue({ schoolBoardId: this.courseFormBoards[0].value });\n      }\n    }\n    if (event.selectedIndex === 2) {\n        this.stepper._steps._results[2].interacted = false;\n        this.courseRequireForm.submitted = false;\n    }\n  }\n\n  courseCategoryValid(): boolean {\n    let errorFlag = 0;\n    if (this.courseRequirementsData.length > 0) {\n      const validCourseRequirementDetails = [];\n      this.courseRequirementsForm.value.classId.forEach(e => {\n        this.courseRequirementsForm.value.courseId.forEach(e1 => {\n          if (this.courseRequirementsForm.value.schoolBoardId != null) {\n            validCourseRequirementDetails.push({\n              classId: e.value,\n              courseCategoryId: this.courseRequirementsForm.value.courseCategoryId.value,\n              schoolBoardId: this.courseRequirementsForm.value.schoolBoardId ? this.courseRequirementsForm.value.schoolBoardId : null,\n              courseId: e1.value\n            });\n          }\n          else {\n            validCourseRequirementDetails.push({\n              classId: e.value,\n              courseCategoryId: this.courseRequirementsForm.value.courseCategoryId.value,\n              schoolBoardId: this.courseRequirementsForm.value.schoolBoardId ? this.courseRequirementsForm.value.schoolBoardId : null,\n              courseId: e1.value\n            });\n          }\n        });\n      });\n      validCourseRequirementDetails.forEach(p => {\n        this.courseRequirementsData.forEach(q => {\n          if (p.classId === q.classId && p.schoolBoardId === q.schoolBoardId &&\n            p.courseId === q.courseId && p.courseCategoryId !== q.courseCategoryId) {\n            this.isValidCourseRequirement = true;\n            errorFlag = 1;\n            return;\n          }\n        });\n      });\n\n      if (errorFlag === 0) {\n        this.isValidCourseRequirement = false;\n      }\n      else {\n        this.openSnackBar(AppSettings.DUPLICATE_COURSE_WITH_COURSE_CATEGORY, true);\n        return false;\n      }\n    }\n  }\n\n  courseReqCountValidation(): void {\n    const coursesList = this.courseCategoryList.filter(elt => elt.id === this.courseRequirementsForm.value.courseCategoryId.value);\n    this.courseRequirementsForm.value.classId.forEach(cId => {\n      const courseCatgoriesList = this.courseRequirementSelect.filter(x => x.classId === cId.value && x.schoolBoardId === this.courseRequirementsForm.value.schoolBoardId\n        && x.courseCategoryId === this.courseRequirementsForm.value.courseCategoryId.value);\n      if (courseCatgoriesList && courseCatgoriesList.length < coursesList[0].requiredCount && coursesList[0].requiredCount > 0) {\n        this.errorCountValid = 1;\n        const index = this.courseRequirementSelect.findIndex(x => x.classId === cId.value && x.schoolBoardId === this.courseRequirementsForm.value.schoolBoardId\n          && x.courseCategoryId === this.courseRequirementsForm.value.courseCategoryId.value);\n        this.courseRequirementSelect.splice(index, courseCatgoriesList.length);\n      //  this.courseRequirementSelect =  this.courseRequirementSelect.filter(x => x.classId !== cId.value && x.schoolBoardId !== this.courseRequirementsForm.value.schoolBoardId\n      //     && x.courseCategoryId !== this.courseRequirementsForm.value.courseCategoryId.value);\n      }\n      else {\n        this.errorCountValid = 0;\n      }\n    });\n\n    if (this.errorCountValid === 1) {\n      this.openSnackBar(AppSettings.COURSE_CATEGORY_REQUIRED_COUNT + ' ' + coursesList[0].requiredCount, true);\n      return;\n    }\n  }\n\n  validateDate(): void {\n    const date = new Date(this.newAcademicSessionForm.value.onlineApplicationStartDate);\n    date.setDate(date.getDate() + 1);\n    this.minDate = date;\n  }\n\n  getBoardNameBasedOnId(id): any {\n    const selectedBoard = this.availableSchoolBoards.find(e => e.value === id);\n    return selectedBoard && selectedBoard.label;\n  }\n  getCourseFormBoards(): any {\n    this.courseFormBoards = [];\n    this.classSectionData.map(e => {\n      if (!(this.courseFormBoards.find(el => el.value === e.schoolBoardId))) {\n        this.courseFormBoards.push({\n          label: e.schoolBoardName,\n          value: e.schoolBoardId\n        });\n      }\n    });\n    if (this.courseFormBoards.length) {\n      this.courseRequirementsForm.patchValue({ schoolBoardId: this.courseFormBoards[0].value });\n    }\n    return this.courseFormBoards;\n  }\n}\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9hY2FkZW1pYy9hY2FkZW1pYy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-academic',\n  templateUrl: './academic.component.html',\n  styleUrls: ['./academic.component.scss']\n})\nexport class AcademicComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AcademicSessionsComponent } from './academic-sessions/academic-sessions.component';\nimport { AcademicRoutingModule } from './academic-routing.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from 'app/interceptors/token-interceptor';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { MatcomponentsModule } from 'app/main/matcomponents.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { SharedManagementModule } from 'app/shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AcademicComponent } from './academic.component';\nimport { AcademicSessionDetailsComponent } from './academic-session-details/academic-session-details.component';\nimport { SchoolAcademicSessionService } from 'app/service/academic-service/api/school-academic-session.service';\nimport { GradeSetupService } from 'app/service/grading-service/api/grade-setup.service';\nimport { SchoolService } from 'app/service/manage-school/school.service';\nimport { AcademicSessionComponent } from './academic-session/academic-session.component';\n\n@NgModule({\n  declarations: [AcademicComponent, AcademicSessionsComponent, AcademicSessionDetailsComponent, AcademicSessionComponent],\n  entryComponents: [],\n  imports: [\n    CommonModule,\n    FuseSharedModule,\n    MatcomponentsModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedManagementModule,\n    AcademicRoutingModule,\n    TranslateModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }, \n    SchoolAcademicSessionService,\n    GradeSetupService, SchoolService\n  ],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AcademicModule { }\n","/**\n * BaseWebAPI\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Configuration } from 'app/service/base/configuration';\nimport { BASE_PATH } from 'app/service/base/variables';\nimport { CustomHttpUrlEncodingCodec } from 'app/service/base/encoder';\nimport { BaseUrlConfig, ModuleConfig } from 'app/url.config';\n\n@Injectable()\nexport class StatusService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Base;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * GetAllStatuses\n     * @param code Gets or sets code\n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllStatuses(code: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getAllStatuses(code: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getAllStatuses(code: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getAllStatuses(code: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        if (code === null || code === undefined) {\n            throw new Error('Required parameter code was null or undefined when calling getAllStatuses.');\n        }\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (code !== undefined && code !== null) {\n            queryParameters = queryParameters.set('Code', <any>code);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/Status/GetStatuses`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n\n    /**\n     * Payment Statuses\n     * \n     * @param code Gets or sets code\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n   \n    public paymentStatuses(code: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (code === null || code === undefined) {\n            throw new Error('Required parameter code was null or undefined when calling paymentStatuses.');\n        }\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (code !== undefined && code !== null) {\n            queryParameters = queryParameters.set('Code', <any>code);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/Payment/statuses`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n"],"sourceRoot":""}