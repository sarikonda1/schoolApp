{"version":3,"sources":["webpack:///./src/app/modules/lshp-admin/create-user-institute/create-user-institute.component.html","webpack:///./src/app/modules/lshp-admin/create-user-institute/create-user-institute.component.scss","webpack:///./src/app/modules/lshp-admin/create-user-institute/create-user-institute.component.ts","webpack:///./src/app/modules/lshp-admin/institute-details/institute-details.component.html","webpack:///./src/app/modules/lshp-admin/institute-details/institute-details.component.scss","webpack:///./src/app/modules/lshp-admin/institute-details/institute-details.component.ts","webpack:///./src/app/modules/lshp-admin/institute-license/institute-license.component.html","webpack:///./src/app/modules/lshp-admin/institute-license/institute-license.component.scss","webpack:///./src/app/modules/lshp-admin/institute-license/institute-license.component.ts","webpack:///./src/app/modules/lshp-admin/lshp-admin-routing.module.ts","webpack:///./src/app/modules/lshp-admin/lshp-admin.component.html","webpack:///./src/app/modules/lshp-admin/lshp-admin.component.scss","webpack:///./src/app/modules/lshp-admin/lshp-admin.component.ts","webpack:///./src/app/modules/lshp-admin/lshp-admin.module.ts","webpack:///./src/app/modules/lshp-admin/new-institution/new-institution.component.html","webpack:///./src/app/modules/lshp-admin/new-institution/new-institution.component.scss","webpack:///./src/app/modules/lshp-admin/new-institution/new-institution.component.ts"],"names":[],"mappings":"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","file":"app-modules-lshp-admin-lshp-admin-module.js","sourcesContent":["module.exports = \"<app-table *ngIf=\\\"!hideGrid; else addUserTemplate\\\" [settings]=\\\"tabSettings\\\" (rowBasedAction)='rowActions($event)' (openAddForm)=\\\"addForms()\\\" [closeRowForm]='closeAddPanel' [templateRef]=\\\"addUserTemplate\\\" (getTableData)='tableData($event)'>\\n</app-table>\\n\\n\\n<ng-template #addUserTemplate>\\n  <mat-vertical-stepper (selectionChange)=\\\"onSelectionChange($event)\\\" *ngIf=\\\"!detailsShow\\\" [linear]=\\\"true\\\"  [ngClass]=\\\"{'mat-elevation-z3 m-36 radius-10 p-12': hideGrid}\\\" #stepper (animationDone)=\\\"onStepperAnimationDone(stepper.selectedIndex)\\\">\\n    <mat-step [stepControl]=\\\"firstStepperControlForm\\\">\\n      <form [formGroup]=\\\"firstStepperControlForm\\\" fxLayout=\\\"column\\\" #userForm=\\\"ngForm\\\">\\n        <ng-template matStepLabel><span translate>userdetails</span></ng-template>\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-24\\\" fxLayout.gt-xs=\\\"row\\\">\\n\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"32\\\">\\n            <mat-label #firstName translate>firstname</mat-label>\\n            <input matInput autocomplete=\\\"off\\\" (keyup)=\\\"preventSpace($event,'firstStepperControlForm','firstName')\\\"\\n              (blur)=\\\"trimTextBoxSpaces('firstStepperControlForm','firstName')\\\" formControlName=\\\"firstName\\\" autocomplete=\\\"off\\\"\\n              required>\\n            <mat-error>\\n              <app-validation [labelName]=\\\"firstName.innerText\\\" [validationControl]=\\\"firstStepperControlForm.controls.firstName\\\"\\n                [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" class=\\\"px-sm-20\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"36\\\">\\n            <mat-label #middleName translate>middlename</mat-label>\\n            <input matInput autocomplete=\\\"off\\\" (keyup)=\\\"preventSpace($event,'firstStepperControlForm','middleName')\\\"\\n              (blur)=\\\"trimTextBoxSpaces('firstStepperControlForm','middleName')\\\" formControlName=\\\"middleName\\\"\\n              autocomplete=\\\"off\\\">\\n            <mat-error>\\n              <app-validation [labelName]=\\\"middleName.innerText\\\"\\n                [validationControl]=\\\"firstStepperControlForm.controls.middleName\\\" [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"32\\\">\\n            <mat-label #lastName translate>lastname</mat-label>\\n            <input matInput autocomplete=\\\"off\\\" autocomplete=\\\"off\\\" (keyup)=\\\"preventSpace($event,'firstStepperControlForm','lastName')\\\"\\n              (blur)=\\\"trimTextBoxSpaces('firstStepperControlForm','lastName')\\\" formControlName=\\\"lastName\\\" required>\\n            <mat-error>\\n              <app-validation [labelName]=\\\"lastName.innerText\\\" [validationControl]=\\\"firstStepperControlForm.controls.lastName\\\"\\n                [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"32\\\">\\n            <mat-label translate #gender>gender</mat-label>\\n            <mat-select formControlName=\\\"genderTypeId\\\" required>\\n              <mat-option *ngFor=\\\"let facilityType of genderDetailsList\\\" [value]=\\\"facilityType.id\\\">\\n                {{facilityType.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]='gender.innerText' [validationControl]=\\\"firstStepperControlForm.controls.genderTypeId\\\"\\n                [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"36\\\" class=\\\"px-sm-20 icon-center\\\">\\n            <mat-label #date translate>dateofbirth</mat-label>\\n            <input matInput (keyup)=\\\"forceValidation('dateOfBirth',firstStepperControlForm)\\\" [max]=\\\"yesterday\\\"  [matDatepicker]=\\\"picker\\\"\\n              formControlName=\\\"dateOfBirth\\\" autocomplete=\\\"off\\\" [max]=\\\"yesterday\\\">\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #picker></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]=\\\"date.innerText\\\"\\n                  [validationControl]=\\\"firstStepperControlForm.controls.dateOfBirth\\\" [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n          </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-16\\\">\\n          <button mat-raised-button id=\\\"resetButtonStepper\\\" type=\\\"reset\\\" class=\\\"text-uppercase mr-12\\\" (click)=\\\"onCancelClick()\\\">\\n            {{'cancel' | translate}}\\n          </button>\\n          <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n            {{'next' | translate}}\\n          </button>\\n        </div>\\n      </form>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"userDetailsForm.controls['person']['controls']['contact']\\\" >\\n      <form [formGroup]=\\\"userDetailsForm.controls?.person.controls?.contact\\\" fxLayout=\\\"column\\\">\\n        <ng-template matStepLabel><span translate>contactdetails</span></ng-template>\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\">\\n            <mat-label #website translate>website</mat-label>\\n            <input matInput formControlName=\\\"website\\\" (keyup)=\\\"preventSpaceForArray($event, userDetailsForm.controls?.person.controls?.contact.controls.website)\\\"\\n              (blur)=\\\"trimTextBoxSpacesWithParentForm('userDetailsForm','person','contact','website')\\\" autocomplete=\\\"off\\\">\\n            <mat-error>\\n              <app-validation [labelName]=\\\"website.innerText\\\" [validationControl]=\\\"userDetailsForm.controls?.person.controls?.contact.controls.website\\\"\\n                [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\"\\n            class=\\\"pl-sm-20\\\">\\n            <mat-label #email translate>email</mat-label>\\n            <input matInput formControlName=\\\"email1\\\" [readonly]=\\\"emailDisable\\\" required\\n              autocomplete=\\\"off\\\" (keyup)=\\\"preventSpaceForArray($event, userDetailsForm?.controls.person.controls.contact.controls.email1)\\\" (blur)=\\\"trimTextBoxSpacesWithParentForm('userDetailsForm','person','contact','email1')\\\">\\n            <mat-error>\\n              <app-validation [labelName]=\\\"email.innerText\\\" [validationControl]=\\\"userDetailsForm?.controls.person.controls.contact.controls.email1\\\"\\n                [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" *ngIf=\\\"loaded\\\">\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\"\\n            class=\\\"coutline mat-step-show\\\">\\n            <mat-label #mobiletel translate>mobilenumber</mat-label>\\n            <input type=\\\"text\\\" required matInput formControlName=\\\"mobileTel\\\" ng2TelInput\\n              (hasError)=\\\"onError($event,'mobileTel')\\\" [ng2TelInputOptions]=\\\"telOptions\\\"\\n              (ng2TelOutput)=\\\"getNumber($event,'mobileTel')\\\" \\n              (countryChange)=\\\"onCountryChangeMobile($event,'mobileTel')\\\" />\\n            <mat-error>\\n              <app-validation [labelName]=\\\"mobiletel.innerText\\\"\\n                [validationControl]=\\\"userDetailsForm.controls?.person.controls?.contact?.controls?.mobileTel\\\" [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"coutline pl-sm-24 mat-step-show\\\">\\n            <mat-label #otherTel translate>alternatemobilenumber</mat-label>\\n            <input type=\\\"text\\\" matInput formControlName=\\\"otherTel\\\" ng2TelInput (hasError)=\\\"onError($event,'otherTel')\\\"\\n              [ng2TelInputOptions]=\\\"telOptions\\\" (ng2TelOutput)=\\\"getNumber($event,'otherTel')\\\"\\n               (countryChange)=\\\"onCountryChangeMobile($event,'otherTel')\\\" />\\n            <mat-error>\\n              <app-validation [labelName]=\\\"otherTel.innerText\\\"\\n                [validationControl]=\\\"userDetailsForm.controls?.person.controls?.contact.controls?.otherTel\\\" [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\"\\n            *ngIf=\\\"loaded\\\"  class=\\\"coutline dropdown-up\\\">\\n            <mat-label #landtel translate>landlinenumber</mat-label>\\n            <input type=\\\"text\\\" matInput formControlName=\\\"landTel\\\" ng2TelInput (hasError)=\\\"onError($event,'landTel')\\\"\\n              autocomplete=\\\"off\\\" [ng2TelInputOptions]=\\\"telOptions\\\" (ng2TelOutput)=\\\"getNumber($event,'landTel')\\\"\\n               (countryChange)=\\\"onCountryChangeMobile($event,'landTel')\\\" />\\n            <mat-error>\\n              <app-validation [labelName]=\\\"landtel.innerText\\\" [validationControl]=\\\"userDetailsForm.controls?.person.controls?.contact.controls.landTel\\\"\\n                [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-16\\\">\\n          <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n            {{'Previous' | translate}}\\n          </button>\\n          <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n            {{'next' | translate}}\\n          </button>\\n        </div>\\n      </form>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"userDetailsForm.controls['person']['controls']['address']\\\">\\n      <form [formGroup]=\\\"userDetailsForm.controls?.person.controls?.address\\\" fxLayout=\\\"column\\\" \\n        #address=\\\"ngForm\\\">\\n        <ng-template matStepLabel><span translate>addressdetails</span></ng-template>\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\">\\n            <mat-label #line translate>addressline1</mat-label>\\n            <input matInput autocomplete=\\\"off\\\" (keyup)=\\\"preventSpaceForArray($event, userDetailsForm.controls?.person.controls?.address.controls.line1)\\\"\\n              (blur)=\\\"trimTextBoxSpacesWithParentForm('userDetailsForm','person','address','line1')\\\" formControlName=\\\"line1\\\" autocomplete=\\\"off\\\"\\n              required>\\n            <mat-error>\\n              <app-validation [labelName]=\\\"line.innerText\\\" [validationControl]=\\\"userDetailsForm.controls?.person.controls?.address.controls.line1\\\"\\n                [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\"\\n            class=\\\"pl-sm-20\\\">\\n            <mat-label #line2 translate>addressline2</mat-label>\\n            <input matInput formControlName=\\\"line2\\\" autocomplete=\\\"off\\\"  (keyup)=\\\"preventSpaceForArray($event, userDetailsForm.controls?.person.controls?.address.controls.line2)\\\"\\n              (blur)=\\\"trimTextBoxSpacesWithParentForm('userDetailsForm','person','address','line2')\\\">\\n            <mat-error>\\n              <app-validation [labelName]=\\\"line2.innerText\\\" [validationControl]=\\\"userDetailsForm.controls?.person.controls?.address.controls.line2\\\"\\n                [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\">\\n            <mat-label #line3 translate>addressline3</mat-label>\\n            <input matInput formControlName=\\\"line3\\\" autocomplete=\\\"off\\\" (keyup)=\\\"preventSpaceForArray($event, userDetailsForm.controls?.person.controls?.address.controls.line3)\\\"\\n              (blur)=\\\"trimTextBoxSpacesWithParentForm('userDetailsForm','person','address','line3')\\\">\\n            <mat-error>\\n              <app-validation [labelName]=\\\"line3.innerText\\\" [validationControl]=\\\"userDetailsForm.controls?.person.controls?.address.controls.line3\\\"\\n                [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" class=\\\"pl-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n            fxFlex.gt-xs=\\\"50\\\">\\n            <mat-label #country translate>country</mat-label>\\n            <mat-select formControlName=\\\"countryId\\\" (selectionChange)=\\\"stateDetails($event.value)\\\" required>\\n              <mat-option *ngFor=\\\"let countries of countryDetails\\\" [value]=\\\"countries.id\\\">\\n                {{countries.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]=\\\"country.innerText\\\"\\n                [validationControl]=\\\"userDetailsForm.controls?.person.controls?.address.controls.countryId\\\" [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\">\\n            <mat-label #state translate>state</mat-label>\\n            <mat-select formControlName=\\\"stateId\\\" required>\\n              <mat-option *ngFor=\\\"let states of stateDetailsList\\\" [value]=\\\"states.id\\\">\\n                {{states.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]=\\\"state.innerText\\\" [validationControl]=\\\"userDetailsForm.controls?.person.controls?.address.controls.stateId\\\"\\n                [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\"\\n            class=\\\"pl-sm-20\\\">\\n            <mat-label #city translate>city</mat-label>\\n            <input required matInput formControlName=\\\"city\\\" autocomplete=\\\"off\\\" (keyup)=\\\"preventSpaceForArray($event, userDetailsForm.controls?.person.controls?.address.controls.city)\\\"\\n              (blur)=\\\"trimTextBoxSpacesWithParentForm('userDetailsForm','person','address','city')\\\">\\n            <mat-error>\\n              <app-validation [labelName]=\\\"city.innerText\\\" [validationControl]=\\\"userDetailsForm.controls?.person.controls?.address.controls.city\\\"\\n                [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n        </div>\\n\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\">\\n            <mat-label #pincode translate>pincode</mat-label>\\n            <input matInput formControlName=\\\"pincode\\\" (keyup)=\\\"preventSpaceForArray($event, userDetailsForm.controls?.person.controls?.address.controls.pincode)\\\"\\n              (blur)=\\\"trimTextBoxSpacesWithParentForm('userDetailsForm','person','address','pincode')\\\" required>\\n            <mat-error>\\n              <app-validation [labelName]=\\\"pincode.innerText\\\"\\n                [validationControl]=\\\"userDetailsForm.controls?.person.controls?.address.controls.pincode\\\" [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-16\\\">\\n          <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n            {{'Previous' | translate}}\\n          </button>\\n          <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n            {{'next' | translate}}\\n          </button>\\n        </div>\\n      </form>\\n    </mat-step> \\n\\n    <mat-step>\\n      <ng-template matStepLabel><span translate>done</span></ng-template>\\n      <div fxFlex=\\\"80\\\" class=\\\"text-center font-size-18 m-auto pb-20 pt-8\\\" translate>Please verify the entered information before your final submit</div>\\n      <mat-list fxLayout.gt-xs=\\\"row wrap\\\" fxFlex.gt-xs=\\\"80\\\" fxFlex=\\\"100\\\" fxLayout.lt-sm=\\\"column\\\"\\n        class=\\\"pt-0 border m-auto confirm-table\\\">\\n\\n\\n\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userDetailsForm?.controls?.firstName?.value\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>firstname</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>{{userDetailsForm?.controls?.firstName?.value}}</div>\\n        </mat-list-item>\\n\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userDetailsForm?.controls?.middleName?.value\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>middlename</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>{{userDetailsForm?.controls?.middleName?.value}}</div>\\n        </mat-list-item>\\n\\n\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userDetailsForm?.controls?.lastName?.value\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>lastname</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>{{userDetailsForm?.controls?.lastName?.value}}</div>\\n        </mat-list-item>\\n\\n        \\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"genderDetailsList\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>gender</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>{{getNamesOnId('gender',userDetailsForm.value.genderTypeId)}}</div>\\n        </mat-list-item>\\n\\n\\n\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userDetailsForm?.controls?.dateOfBirth?.value\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>dateofbirth</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>{{userDetailsForm?.controls?.dateOfBirth?.value | date}}</div>\\n        </mat-list-item>\\n\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userDetailsForm?.controls?.person?.controls?.contact?.controls?.website?.value\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>website</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>{{userDetailsForm?.controls?.person?.controls?.contact?.controls?.website?.value}}</div>\\n        </mat-list-item>\\n\\n\\n\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userDetailsForm?.controls?.person?.controls?.contact?.controls?.email1?.value\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>email</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>{{userDetailsForm?.controls?.person?.controls?.contact?.controls?.email1?.value}}</div>\\n        </mat-list-item>\\n\\n\\n\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userDetailsForm?.controls?.person?.controls?.contact?.controls?.mobileTel?.value\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>mobilenumber</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>{{finalMobileNumbers.mobileTel}}</div>\\n        </mat-list-item>\\n\\n\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userDetailsForm?.controls?.person?.controls?.contact?.controls?.otherTel?.value\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>alternatemobilenumber</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span> {{finalMobileNumbers.otherTel}}</div>\\n        </mat-list-item>\\n\\n\\n\\n        \\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\"  *ngIf=\\\"userDetailsForm?.controls?.person?.controls?.contact?.controls?.landTel?.value\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>landlinenumber</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span> {{finalMobileNumbers.landTel}}</div>\\n        </mat-list-item>\\n\\n\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>address</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>   {{userDetailsForm?.controls?.person?.controls?.address?.controls?.line1?.value}}  {{userDetailsForm?.controls?.person?.controls?.address?.controls?.line2?.value}} \\n            {{userDetailsForm?.controls?.person?.controls?.address?.controls?.line3?.value}}</div>\\n        </mat-list-item>\\n\\n\\n\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"countryDetails\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>country</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>  {{getNamesOnId('country',userDetailsForm?.controls?.person?.controls?.address.value.countryId)}}</div>\\n        </mat-list-item>\\n\\n\\n\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"stateDetailsList\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>state</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>{{getNamesOnId('state',userDetailsForm?.controls?.person?.controls?.address.value.stateId)}}</div>\\n        </mat-list-item>\\n\\n\\n\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userDetailsForm?.controls?.person?.controls?.address?.controls?.city?.value\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>city</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span> {{userDetailsForm?.controls?.person?.controls?.address?.controls?.city?.value}}</div>\\n        </mat-list-item>\\n\\n\\n\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userDetailsForm?.controls?.person?.controls?.address?.controls?.pincode?.value\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>pincode</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span> {{userDetailsForm?.controls?.person?.controls?.address?.controls?.pincode?.value}}</div>\\n        </mat-list-item>\\n\\n\\n      </mat-list>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-32 pt-24\\\">\\n        <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-8\\\">\\n          Previous\\n        </button>\\n\\n        <button mat-raised-button type=\\\"submit\\\"\\n          (click)=\\\"addUpdateNewUser(userDetailsForm.value)\\\"\\n          class=\\\"text-uppercase\\\" color=\\\"accent\\\">{{!updateShow ? 'Create':'Update'}}</button>\\n      </div>\\n    </mat-step>\\n\\n  </mat-vertical-stepper>\\n\\n  <ng-container *ngIf=\\\"detailsShow && detailsresults\\\">\\n    <div class=\\\"mt-20 font-size-18 text-uppercase font-weight-600 pl-4\\\" >User Details</div>\\n    <div >\\n      <mat-list fxLayout.gt-xs=\\\"row wrap\\\" fxFlex=\\\"100\\\" fxLayout.lt-sm=\\\"column\\\" class=\\\"my-16 border confirm-table\\\">\\n  \\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"detailsresults?.firstName\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>firstname</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>{{detailsresults?.firstName}}</div>\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"detailsresults?.middleName\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>middlename</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>{{detailsresults?.middleName}}</div>\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"detailsresults?.lastName\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>lastname</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>{{detailsresults?.lastName}}</div>\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"gendername!=''\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>gender</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>{{gendername}}</div>\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"detailsresults?.dateOfBirth\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>dateofbirth</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>{{detailsresults?.dateOfBirth | date}}</div>\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userContactInfo?.website\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>website</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>{{userContactInfo?.website}}</div>\\n        </mat-list-item>\\n  \\n  \\n  \\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userContactInfo?.email1\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>email</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>{{userContactInfo?.email1}}</div>\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userContactInfo?.mobileTel\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>mobilenumber</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span> {{userContactInfo?.mobileTel}}</div>\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userContactInfo?.otherTel\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>alternatemobilenumber</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span> {{userContactInfo?.otherTel}}</div>\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userContactInfo?.landTel\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>landlinenumber</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span> {{userContactInfo?.landTel}}</div>\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>address</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span>  {{userAddressInfo?.line1}} {{userAddressInfo?.line2}} {{userAddressInfo?.line3}}</div>\\n        </mat-list-item>\\n  \\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>Country</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span> {{detailsresults?.countryName}}</div>\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>State</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span> {{detailsresults?.stateName}}</div>\\n        </mat-list-item>\\n  \\n  \\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userAddressInfo?.city\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>city</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span> {{userAddressInfo?.city}}</div>\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"userAddressInfo?.pincode\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"45\\\"><strong><span translate>pincode</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"55\\\"><span class=\\\"pr-4\\\">:</span> {{userAddressInfo?.pincode}}</div>\\n        </mat-list-item>\\n  \\n  \\n      </mat-list>\\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"my-8\\\">\\n      <button mat-raised-button type=\\\"reset\\\" class=\\\"text-uppercase\\\" (click)=\\\"closeAddPanel = !closeAddPanel;onClickCancel()\\\">\\n        {{'cancel' | translate}}\\n      </button>\\n    </div>\\n  </ng-container>\\n</ng-template>\\n\"","module.exports = \"::ng-deep .mat-step-header .mat-step-icon-state-done {\\n  background-color: green !important; }\\n\\n.mat-step-show ::ng-deep.country-list.dropup {\\n  bottom: auto !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvbHNocC1hZG1pbi9jcmVhdGUtdXNlci1pbnN0aXR1dGUvY3JlYXRlLXVzZXItaW5zdGl0dXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0NBQWtDLEVBQUE7O0FBRXJDO0VBQ0csdUJBQXNCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2xzaHAtYWRtaW4vY3JlYXRlLXVzZXItaW5zdGl0dXRlL2NyZWF0ZS11c2VyLWluc3RpdHV0ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcCAubWF0LXN0ZXAtaGVhZGVyIC5tYXQtc3RlcC1pY29uLXN0YXRlLWRvbmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IGdyZWVuICFpbXBvcnRhbnQ7XG4gfVxuIC5tYXQtc3RlcC1zaG93IDo6bmctZGVlcC5jb3VudHJ5LWxpc3QuZHJvcHVwe1xuICAgIGJvdHRvbTphdXRvICFpbXBvcnRhbnQ7XG4gfSJdfQ== */\"","import { Component, ViewChild, Input, ChangeDetectorRef, OnInit, OnChanges } from '@angular/core';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\n\n\nimport { AppSettings, Pattern } from 'app/app.constants';\nimport { CountryService } from 'app/service/academic-service/api/country.service';\nimport { StateService } from 'app/service/academic-service/api/state.service';\n\nimport { TypeService } from 'app/service/academic-service/api/type.service';\nimport { SearchUserView } from '../models/search-user-view';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\n\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { UsersService } from 'app/service/academic-service';\nimport { AddressView } from 'app/models/address-view';\nimport { ContactView } from 'app/models/contact-view';\nimport { PostUserViewModel } from '../models/post-user-view-model';\nimport { CommonService } from 'app/service/common.service';\nimport { InstituteUserViewModel } from 'app/models/user-management/institute-user-view';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\n\n@Component({\n  selector: 'app-create-user-institute',\n  templateUrl: './create-user-institute.component.html',\n  styleUrls: ['./create-user-institute.component.scss']\n})\n\nexport class CreateUserInstituteComponent extends CommonComponent implements OnInit, OnChanges {\n\n  @ViewChild('stepper') stepper;\n  // tslint:disable-next-line:no-input-rename\n  @Input('data') data: any;\n\n\n  _searchUserView: SearchUserView;\n  doValidate = true;\n  userDetailsForm: FormGroup;\n\n  // refernces for ng prime table\n  rows: Array<any>;\n  cols: any[];\n  totalItems: number;\n  tabSettings: {};\n\n  updateShow = false;\n  schoolRepRoleId: Array<string> = [];\n  closeAddPanel = false;\n  buttonDisable = false;\n  loaded = false;\n  filterDetails: any;\n  countryDetails: any;\n  stateDetailsList: any;\n\n  userFormDetails: PostUserViewModel;\n  userEditView: InstituteUserViewModel;\n  contactView: ContactView;\n  addressView: AddressView;\n  genderDetailsList: any;\n  detailsresults: any;\n  gendername: any;\n  currentComponent = 'CreateUserInstituteComponent';\n  countryName: any;\n  stateName: any;\n  // Mobile Number Check Variables\n  telOptions = { initialCountry: 'in', preferredCountries: ['in', 'us', 'gb'], separateDialCode: true };\n\n  intialCountryCode = {\n    mobileTel: '+91',\n    otherTel: '+91',\n    landTel: '+91'\n  };\n  finalMobileNumbers = {\n    mobileTel: '',\n    otherTel: '',\n    landTel: ''\n  };\n  // End\n\n  emailDisable: boolean;\n  detailsShow: boolean;\n  userContactInfo: any;\n  userAddressInfo: any;\n  interactedStepperIndex: Number = 0;\n  hideGrid: boolean;\n  today = new Date();\n  yesterday = new Date(this.today.setDate(this.today.getDate() - 1));\n  firstStepperControlForm: FormGroup;\n  constructor(public commonService: CommonService, private userService: UsersService,\n    private countryService: CountryService, private stateService: StateService,\n    private typeService: TypeService, public dialogRef: MatDialog, private changeDetect: ChangeDetectorRef, public snackBar: MatSnackBar, public routes: ActivatedRoute,\n    public router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.currentComponent = 'CreateUserInstituteComponent';\n    // Table Colums\n    this.cols = [\n      { field: 'userName', header: 'username', sort: true },\n      { field: 'firstName', header: 'firstname', sort: true },\n      { field: 'lastName', header: 'lastname', sort: true },\n      { field: 'status', header: 'status', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n    this.formInitialization();\n    this.tableInitailization();\n    this.countryList();\n    this.genderTypeList();\n    this.routes.params.subscribe((params: Params) => {\n      if (params['id']) {\n        this.hideGrid = true;\n        this.data = params['id'];\n        this.addForms();\n      } else {\n        this.hideGrid = false;\n      }\n    });\n  }\n\n  ngOnChanges(): void {\n    this.tableInitailization();\n  }\n\n  tableInitailization(): void {\n    // searchUser\n    this._searchUserView = {\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n      sortBy: 'Id',\n      sortOrder: 1\n    };\n    // End\n\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this._searchUserView = modelTableComponent;\n    }\n    this.getAllUser(this._searchUserView);\n  }\n\n  tableData(_view: any): void {\n    this._searchUserView = _view;\n    this.getAllUser(this._searchUserView);\n  }\n\n  // Form Setting\n  formInitialization(): void {\n    // Initilization  User Details Form \n    this.userDetailsForm = new FormGroup({\n      id: new FormControl(null),\n      genderTypeId: new FormControl(null, [Validators.required]),\n      firstName: new FormControl(null, [Validators.required, Validators.maxLength(45), Validators.pattern(Pattern.ALPHABET_PATTERN)]),\n      lastName: new FormControl(null, [Validators.required, Validators.maxLength(45), Validators.pattern(Pattern.ALPHABET_PATTERN)]),\n      middleName: new FormControl(null, [Validators.maxLength(45), Validators.pattern(Pattern.ALPHABET_PATTERN)]),\n      dateOfBirth: new FormControl(),\n      person: new FormGroup({\n        genderTypeId: new FormControl(null, [Validators.required]),\n        contact: new FormGroup({\n          email1: new FormControl(null, [Validators.maxLength(50), Validators.required, Validators.pattern(Pattern.EMAIL_PATTERN)]),\n          website: new FormControl(null, [Validators.maxLength(50), Validators.pattern(Pattern.WEBSITE_PATTERN)]),\n          mobileTel: new FormControl(null, [Validators.required, Validators.pattern(Pattern.INTL_MOBILE_PATTERN)]),\n          otherTel: new FormControl(null, [Validators.pattern(Pattern.INTL_MOBILE_PATTERN)]),\n          landTel: new FormControl(null, [Validators.pattern(Pattern.INTL_MOBILE_PATTERN)])\n        }),\n        address: new FormGroup({\n          line1: new FormControl(null, [Validators.required, Validators.maxLength(45)]),\n          line2: new FormControl(null, [Validators.maxLength(45)]),\n          line3: new FormControl(null, [Validators.maxLength(45)]),\n          countryId: new FormControl(null, [Validators.required]),\n          stateId: new FormControl(null, [Validators.required]),\n          city: new FormControl(null, [Validators.required, Validators.maxLength(45)]),\n          pincode: new FormControl(null, [Validators.required, Validators.pattern(Pattern.PINCODE_PATTERN)]),\n        })\n      })\n    });\n    this.firstStepperControlForm = new FormGroup({\n      genderTypeId: new FormControl(null, [Validators.required]),\n      firstName: new FormControl(null, [Validators.required, Validators.maxLength(45), Validators.pattern(Pattern.ALPHABET_PATTERN)]),\n      lastName: new FormControl(null, [Validators.required, Validators.maxLength(45), Validators.pattern(Pattern.ALPHABET_PATTERN)]),\n      middleName: new FormControl(null, [Validators.maxLength(45), Validators.pattern(Pattern.ALPHABET_PATTERN)]),\n      dateOfBirth: new FormControl(),\n    });\n  }\n  // gender List\n  genderTypeList(): void {\n    this.typeService.typeByCodeBasedOnCategory().subscribe(response => {\n      this.genderDetailsList = response;\n    });\n  }\n  // End\n\n  // get All User\n  getAllUser(_searchUserView: SearchUserView): void {\n    _searchUserView.instituteId = this.data;\n    this.userService.getAllUsers(_searchUserView.instituteId, _searchUserView.userName,\n      _searchUserView.firstName, _searchUserView.lastName, _searchUserView.status,\n      _searchUserView.sortBy, _searchUserView.sortOrder, _searchUserView.pageNumber, _searchUserView.pageSize)\n      .subscribe(res => this.userResponse(res), error => {\n        this.errorResponse(error);\n      });\n  }\n\n  userResponse(response: any): void {\n    if (response.userAccessList != null) {\n      this.rows = response.userAccessList.list;\n      this.totalItems = response.userAccessList.totalItems;\n    }\n    else {\n      this.rows = [];\n    }\n    const userType = this.getTokenParam('_ut');\n    this.rows.forEach((e: any) => {\n\n      e.operations = [{\n        name: AppSettings.DETAILS_DISPLAY,\n        icon: AppSettings.DETAILS_ICON\n      }];\n\n      if ((userType === AppSettings.LSIT) || (e.isPrimary !== 1)) {\n        e.operations.push({\n          name: AppSettings.EDIT_OPERATION,\n          icon: AppSettings.EDIT\n        }),\n        e.code === AppSettings.USR_NEW ? e.operations.push(\n          {\n            name: AppSettings.DELETE_OPERATION,\n            icon: AppSettings.DELETE,\n            operationName: AppSettings.DELETE\n          }) : e.code === AppSettings.USR_ACT ? e.operations.push({\n            name: AppSettings.LOCK_OPERATION,\n            icon: AppSettings.LOCK,\n            operationName: AppSettings.LOCK\n          }) : e.operations.push({\n            name: AppSettings.UNLOCK_OPERATION,\n            icon: AppSettings.UNLOCK\n          });\n    }\n  });\n\n    this.tabSettings = {\n      columns: this.cols,\n      model: this._searchUserView,\n      rows: this.rows,\n      componentName: this.currentComponent,\n      isPaginationRequired: true,\n      tablename: 'Institute User',\n      totalRowsCount: this.totalItems,\n\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: AppSettings.NEW\n        },\n        infoButton: {\n          required: true,\n          text: 'Manage Users'\n        },\n      },\n      filtersList: response.filters,\n    };\n  }\n\n  // End\n\n  // cancel User Details\n  onCancelClick(): void {\n    this.clear();\n    if (this.hideGrid) {\n      this.router.navigate(['/manage-institution/institute-details']);\n    }\n  }\n  // End\n\n  // cancel User Details\n  addForms(): void {\n    this.detailsShow = false;\n    this.interactedStepperIndex = 0;\n    this.loaded = false;\n    this.changeDetect.detectChanges();\n    this.loaded = true;\n    this.changeDetect.detectChanges();\n    this.closeAddPanel = false;\n    this.emailDisable = false;\n    this.detailsresults = [];\n  }\n  // End\n\n  // CountryList\n  countryList(): void {\n    this.countryService.countryAllCountriesGet().subscribe(response => {\n      this.countryDetails = response.commonViewModel;\n    });\n  }\n  // End\n\n  // StateList\n  stateDetails(countryId: any, isUpdate = false): void {\n    this.stateService.stateAllStatesGet(countryId).subscribe(response => {\n      this.stateDetailsList = response.states;\n    });\n    if (!isUpdate) {\n      this.userDetailsForm.controls.person['controls'].address['controls'].stateId.setValue(null);\n    }\n  }\n  // End\n\n  // User Address Details\n  addressDetails(addressForm: any): void {\n    this.countryDetails.forEach(element => {\n      if (this.addressView.countryId === element.id) {\n        this.countryName = element.name;\n      }\n    });\n\n    if (this.stateDetailsList.length > 0) {\n      this.stateDetailsList.forEach(element => {\n        if (this.addressView.stateId === element.id) {\n          this.stateName = element.name;\n        }\n      });\n    }\n  }\n\n  // // Add New User\n  addNewUser(): void {\n    this.userDetailsForm.patchValue(this.firstStepperControlForm.value);\n    this.userDetailsForm.value.person.genderTypeId = this.userDetailsForm.value.genderTypeId;\n    this.userDetailsForm.value.person.genderTypeId ?\n      this.userDetailsForm.controls['person']['controls']['genderTypeId']\n        .setErrors(null) : this.userDetailsForm.controls['person']['controls']['genderTypeId'].setErrors({ 'required': true });\n\n    this.resetMobileNumbers(this.userDetailsForm.controls['person']['controls']['contact']);\n    if (this.userDetailsForm.valid) {\n      this.userFormDetails = this.userDetailsForm.value;\n      this.userFormDetails.instituteId = this.data;\n      this.userService.registerInstituteAdmin(this.userFormDetails).subscribe(res => this.resultResponse(res), error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n\n  resetMobileNumbers(formName): void {\n    const that = this;\n    Object.keys(formName.value).forEach((key) => {\n      switch (key) {\n        case 'mobileTel':\n        case 'otherTel':\n        case 'landTel': formName.value[key] = that.checkemptyNumber(formName.value[key], key); break;\n      }\n    });\n    return formName.value;\n  }\n\n  // // row-wise actions\n  rowActions(response: any): void {\n    if (response.operation === AppSettings.EDIT) {\n      this.updateShow = true;\n      this.closeAddPanel = false;\n      this.buttonDisable = true;\n      this.detailsShow = false;\n      this.userService.getUserDetails(response.clickedRow.id, this.data).subscribe(res => this.singleUserDetails(res), error => {\n        this.errorResponse(error);\n      });\n    }\n    if (response.operation === AppSettings.UNLOCK_OPERATION) {\n      const dialogRef = this.dialogRef.open(CustomDialogComponent, {\n        disableClose: true,\n        data: { text: this.commonService.getTranslation(AppSettings.WARNING_ON_UNLOCKUSER, ''), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n      });\n\n      // based on user selection changing user roles\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.userService.unLockUser(response.clickedRow.id).subscribe(res => this.resultResponse(res), error => {\n            this.errorResponse(error);\n          });\n        }\n      });\n    }\n    if (response.operation === AppSettings.LOCK) {\n      const dialogRef = this.dialogRef.open(CustomDialogComponent, {\n        disableClose: true,\n        data: { text: this.commonService.getTranslation(AppSettings.WARNING_ON_LOCKUSER), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n      });\n\n      // based on user selection changing user roles\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.userService.lockUser(response.clickedRow.id).subscribe(res => this.resultResponse(res), error => {\n            this.errorResponse(error);\n          });\n        }\n      });\n    }\n    if (response.operation === AppSettings.DETAILS) {\n      this.detailsShow = true;\n      this.detailsresults = null;\n      this.userService.getUserDetails(response.clickedRow.id, this.data).subscribe(res => {\n        this.singleUserDetails(res);\n      }, error => {\n        this.errorResponse(error);\n      });\n    }\n    if (response.operation === AppSettings.DELETE) {\n      const dialogRef = this.dialogRef.open(CustomDialogComponent, {\n        disableClose: true,\n        data: { text: this.commonService.getTranslation(AppSettings.WARNING_ON_DELETE), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n      });\n\n      // based on user selection changing user roles\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.userService.deleteUser(response.clickedRow.id).subscribe(res => this.resultResponse(res), error => {\n            this.errorResponse(error);\n          });\n        }\n      });\n    }\n  }\n\n  resultResponse(response: any): void {\n    this.userDetailsForm.reset();\n    this.firstStepperControlForm.reset();\n    this.clear();\n    this.getAllUser(this._searchUserView);\n    this.openSnackBar(response.messages.ResultMessage);\n    if (this.hideGrid) {\n      this.router.navigate(['/manage-institution/institute-details']);\n    }\n  }\n\n\n  // // Edit Details\n  singleUserDetails(userDetails: any): void {\n    this.detailsresults = userDetails.userDetails;\n    this.userContactInfo = this.detailsresults.contact;\n    this.userAddressInfo = this.detailsresults.address;\n    if (this.detailsShow) {\n      this.closeAddPanel = false;\n      this.genderDetailsList.forEach(element => {\n        if (element.id === this.detailsresults.genderTypeId) {\n          this.gendername = element.name;\n        }\n      });\n    } else {\n      this.stepper._steps._results.forEach((x) => {\n        x.interacted = true;\n      });\n      this.interactedStepperIndex = this.stepper._steps._results.length;\n      this.customSteperLabelChange();\n    }\n\n    if (userDetails.userDetails.address != null && this.stepper !== undefined) {\n      this.stateDetails(userDetails.userDetails.address.countryId, true);\n      this.editFormSet(userDetails);\n    }\n    this.emailDisable = userDetails.userDetails.code === AppSettings.USR_NEW ? false : true;\n  }\n  // // End\n\n  // // edit Form\n  editFormSet(userDetails: any): void {\n    this.userDetailsForm.patchValue(userDetails.userDetails); this.firstStepperControlForm.patchValue(userDetails.userDetails);\n\n    this.userDetailsForm.controls['person']['controls']['contact'].patchValue(userDetails.userDetails.contact);\n    this.userDetailsForm.controls.person['controls'].address.patchValue(userDetails.userDetails.address);\n    const numbers = ['mobileTel', 'otherTel', 'landTel'];\n    const that = this;\n    Object.keys(this.userDetailsForm.controls['person']['controls']['contact']['controls']).forEach((key) => {\n      this.userDetailsForm.controls['person']['controls']['contact'].controls[key].setValue(userDetails.userDetails.contact[key]);\n      if (numbers.find(x => x === key)) {\n        that.updateCountryCode(key, userDetails.userDetails.contact[key]);\n      }\n    });\n    this.countryName = userDetails.userDetails.countryName;\n    this.stateName = userDetails.userDetails.stateName;\n\n    this.genderDetailsList.forEach(element => {\n      if (element.id === userDetails.userDetails.genderTypeId) {\n        this.gendername = element.name;\n      }\n    });\n\n    this.loaded = false;\n    this.changeDetect.detectChanges();\n    this.loaded = true;\n    this.changeDetect.detectChanges();\n  }\n  // // End\n\n  addUpdateNewUser(): void {\n    (this.detailsresults === undefined || this.detailsresults.length === 0) ? this.addNewUser() : this.updateNewUser();\n  }\n\n  // Update User\n  updateNewUser(): void {\n    this.userDetailsForm.patchValue(this.firstStepperControlForm.value);\n    this.userDetailsForm.value.person.genderTypeId = this.userDetailsForm.value.genderTypeId;\n    this.userDetailsForm.value.person.genderTypeId ?\n      this.userDetailsForm.controls['person']['controls']['genderTypeId']\n        .setErrors(null) : this.userDetailsForm.controls['person']['controls']['genderTypeId'].setErrors({ 'required': true });\n    this.resetMobileNumbers(this.userDetailsForm.controls['person']['controls']['contact']);\n    if (this.userDetailsForm.valid) {\n      this.userEditView = this.userDetailsForm.value;\n      this.userEditView.instituteId = this.data;\n      this.userService.editUser(this.userEditView).subscribe(res => this.resultResponse(res), error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n\n  // not to allow alphabets for number fields\n  numberOnly(event: { which: any; keyCode: any; }): boolean {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n    return true;\n  }\n  // End\n\n  getNumber(e, label): void {\n    this.finalMobileNumbers[label] = e.replace(this.intialCountryCode[label], this.intialCountryCode[label] + ' ');\n  }\n\n  // MobileNumber\n  onCountryChangeMobile(e, label): any {\n    if (this.isEmptyObject(e)) {\n      return;\n    }\n    this.intialCountryCode[label] = '+' + e.dialCode;\n    this.userDetailsForm.controls.person['controls'].contact['controls'][label].setValue('');\n  }\n  isEmptyObject(obj): boolean {\n    return (obj && (Object.keys(obj).length === 0));\n  }\n\n  onError(obj, label): void {\n    if (!obj && this.userDetailsForm.controls.person['controls'].contact.value[label]) {\n      this.userDetailsForm.controls.person['controls'].contact.get(label).setErrors({ 'invalid_mobile': true });\n    }\n  }\n  // End\n\n  clear(): void {\n    this.emailDisable = false;\n    this.stepper.reset();\n    this.detailsresults = [];\n    this.updateShow = false;\n    this.closeAddPanel = true;\n  }\n\n  checkemptyNumber(number, key): string {\n    if (number) {\n      return this.finalMobileNumbers[key];\n    } else {\n      return '';\n    }\n  }\n\n  updateCountryCode(key, val): void {\n    if (val) {\n      const data = val.split(' ');\n      if (data[0] !== val) {\n        this.intialCountryCode[key] = data[0];\n        this.finalMobileNumbers[key] = data[0] + ' ' + data[1];\n      } else {\n        this.finalMobileNumbers[key] = this.intialCountryCode[key] + ' ' + val;\n      }\n    }\n  }\n  onSelectionChange(event: any): void {\n    if (event.selectedIndex > this.interactedStepperIndex) {\n      this.interactedStepperIndex = event.selectedIndex;\n    } else {\n      this.stepper._steps._results.forEach((x, i) => {\n        x.interacted = i < this.interactedStepperIndex ? true : false;\n      });\n    }\n    if (event.selectedIndex > 0) {\n      this.userDetailsForm.patchValue(this.firstStepperControlForm.value);\n    }\n  }\n  getNamesOnId(name, value): string {\n    if (!value) {\n      return '';\n    }\n    let x;\n    switch (name) {\n      case 'gender':\n        return (x = this.genderDetailsList.filter(element => element.id === value)).length ? x[0].name : '';\n      case 'country':\n        return (x = this.countryDetails.filter(element => element.id === value)).length ? x[0].name : '';\n      case 'state':\n        return (x = this.stateDetailsList.filter(element => element.id === value)).length ? x[0].name : '';\n      default: break;\n    }\n  }\n\n  trimTextBoxSpacesWithParentForm(primaryForm: any, secondaryForm: any, form: any, key: string): void {\n    this[primaryForm].controls[secondaryForm].controls[form].controls[key]\n      .setValue(this.commonService.trimSpaces(this[primaryForm].controls[secondaryForm].controls[form].controls[key].value));\n  }\n  onClickCancel(): void{\n    this.scrollIntoView('app-table');\n  }\n}\n\n","module.exports = \"\\n  <div class=\\\"px-sm-40 pb-20\\\">\\n    <div class=\\\"mat-elevation-z8 simple-table-container radius-t-20\\\" fxLayout=\\\"column\\\">\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"p-20 border-bottom\\\">\\n            <div><strong class=\\\"pr-12 font-size-16\\\"><span translate>Institution Status</span>:</strong>{{institutionDetails.statusName}}</div>\\n            \\n        <div *ngIf=\\\"editShow\\\" class=\\\"text-right gridRightBtn\\\" fxLayout=\\\"column\\\" fxFlex=\\\"60\\\" fxLayoutAlign=\\\"end\\\">\\n          <div class=\\\"example-button-row\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n            <button (click)=\\\"editInstitute()\\\" mat-raised-button color=\\\"accent\\\" translate class=\\\"text-uppercase\\\">\\n              {{'edit' | translate}}</button>\\n            <button (click)=\\\"getHelpText('Institution Details')\\\" mat-button>\\n              <mat-icon class=\\\"font-size-28 grey-600-fg\\\" >info</mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <mat-list fxLayout.gt-xs=\\\"row wrap\\\"  fxLayout.lt-sm=\\\"column\\\"\\n        class=\\\"institution-details pt-0 confirm-table\\\">\\n        <mat-list-item fxLayout=\\\"column\\\" *ngIf=\\\"institutionDetails.name!='' && institutionDetails.name!=null\\\" fxFlex.gt-xs=\\\"50\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>institutionname</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><span class=\\\"pr-4\\\">:</span>{{institutionDetails.name}}</div>\\n        </mat-list-item>\\n\\n        <mat-list-item fxLayout=\\\"column\\\" *ngIf=\\\"institutionDetails.code!='' && institutionDetails.code!=null\\\" fxFlex.gt-xs=\\\"50\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>code</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><span class=\\\"pr-4\\\">:</span>{{institutionDetails.code}}</div>\\n        </mat-list-item>\\n        \\n        <mat-list-item fxLayout=\\\"column\\\" *ngIf=\\\"institutionDetails.website!='' && institutionDetails.website!=null\\\" fxFlex.gt-xs=\\\"50\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>website</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><span class=\\\"pr-4\\\">:</span>{{institutionDetails.website}}</div>\\n        </mat-list-item>\\n\\n        <mat-list-item fxLayout=\\\"column\\\" *ngIf=\\\"institutionDetails.email1!='' && institutionDetails.email1!=null\\\" fxFlex.gt-xs=\\\"50\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>Email 1</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxflex=\\\"50\\\"><span class=\\\"pr-4\\\">:</span>{{institutionDetails.email1}}</div>\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" *ngIf=\\\"institutionDetails.email2!='' && institutionDetails.email2!=null\\\" fxFlex.gt-xs=\\\"50\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>Email 2</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxflex=\\\"50\\\"><span class=\\\"pr-4\\\">:</span>{{institutionDetails.email2}}</div>\\n        </mat-list-item>\\n\\n        <mat-list-item *ngIf=\\\"institutionDetails.line1!='' && institutionDetails.line1!=null\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\">\\n          <div fxLayout=\\\"row\\\" fxFlexFill fxFlex=\\\"50\\\" fxLayoutAlign=\\\"start\\\"><strong><span\\n                translate>address</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><span class=\\\"pr-4\\\">:</span>{{institutionDetails.line1}}</div>\\n        </mat-list-item>\\n        <!--Two fields-->\\n        <mat-list-item  fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"two-rows\\\">\\n          <div fxLayout=\\\"row wrap\\\" fxFlexFill fxFlex=\\\"100\\\">\\n            <mat-list-item *ngIf=\\\"institutionDetails.mobileTel!='' && institutionDetails.mobileTel!=null\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"100\\\" class=\\\"px-16\\\">\\n              <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>Mobile Number</span></strong></div>\\n              <div fxLayout=\\\"row\\\" fxflex=\\\"50\\\"><span class=\\\"pr-4\\\">:</span>{{institutionDetails.mobileTel}}</div>\\n            </mat-list-item>\\n            <mat-list-item *ngIf=\\\"institutionDetails.landTel!='' && institutionDetails.landTel!=null\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"100\\\" class=\\\"px-16\\\" >\\n              <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>Landline Number</span></strong></div>\\n              <div fxLayout=\\\"row\\\" fxflex=\\\"50\\\"><span class=\\\"pr-4\\\">:</span>{{institutionDetails.landTel}}</div>\\n            </mat-list-item>\\n            <mat-list-item *ngIf=\\\"institutionDetails.otherTel!='' && institutionDetails.otherTel!=null\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"100\\\" class=\\\"px-16\\\" >\\n              <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>Alternate Number</span></strong></div>\\n              <div fxLayout=\\\"row\\\" fxflex=\\\"50\\\"><span class=\\\"pr-4\\\">:</span>{{institutionDetails.otherTel}}</div>\\n            </mat-list-item>\\n          </div>\\n        </mat-list-item>\\n\\n        <mat-list-item *ngIf=\\\"institutionDetails.city!='' && institutionDetails.city!=null\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>city</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxflex=\\\"50\\\"><span class=\\\"pr-4\\\">:</span>{{institutionDetails.city}}</div>\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\"   *ngIf=\\\"institutionDetails.state!='' && institutionDetails.state!=null\\\" fxFlex.gt-xs=\\\"50\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>state</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><span class=\\\"pr-4\\\">:</span>{{institutionDetails.state}}</div>\\n        </mat-list-item>\\n\\n        <mat-list-item fxLayout=\\\"column\\\" *ngIf=\\\"institutionDetails.country!='' && institutionDetails.country!=null\\\"  fxFlex.gt-xs=\\\"50\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>country</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><span class=\\\"pr-4\\\">:</span>{{institutionDetails.country}}</div>\\n        </mat-list-item>\\n\\n        <mat-list-item fxLayout=\\\"column\\\" *ngIf=\\\"institutionDetails.pincode!='' && institutionDetails.pincode!=null\\\" fxFlex.gt-xs=\\\"50\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>pincode</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><span class=\\\"pr-4\\\">:</span>{{institutionDetails.pincode}}</div>\\n        </mat-list-item>\\n\\n        <mat-list-item *ngIf=\\\"institutionDetails.uiThemeName!='' && institutionDetails.uiThemeName!=null\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>Theme</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxflex=\\\"50\\\"><span class=\\\"pr-4\\\">:</span>{{institutionDetails.uiThemeName}}</div>\\n        </mat-list-item>\\n\\n        <mat-list-item fxLayout=\\\"column\\\" *ngIf=\\\"institutionDetails.brandingSymbolLogo!='' && institutionDetails.brandingSymbolLogo!=null\\\"  fxFlex.gt-xs=\\\"50\\\" class=\\\"py-8\\\">\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>symbollogo:</span></strong></div>\\n          <div fxLayout=\\\"row\\\" fxflex=\\\"50\\\">\\n            <img class=\\\"w-60 h-60 obj-fit-img\\\" [src]=\\\"logoImgProp?.src\\\" *ngIf=\\\"logoImgProp?.src\\\" alt=\\\"Launchship\\\" />\\n          </div>\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" *ngIf=\\\"institutionDetails.brandingNameLogo!='' && institutionDetails.brandingNameLogo!=null\\\" fxFlex.gt-xs=\\\"50\\\" class=\\\"py-8\\\">\\n            <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"><strong><span translate>namelogo:</span></strong></div>\\n            <div fxLayout=\\\"row\\\" fxflex=\\\"50\\\">\\n              <img class=\\\"w-180 h-60 obj-fit-img\\\" [src]=\\\"nameImgProp?.src\\\" *ngIf=\\\"nameImgProp?.src\\\" alt=\\\"Launchship\\\" />\\n            </div>\\n          </mat-list-item>\\n      </mat-list>\\n    </div>\\n  </div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbHNocC1hZG1pbi9pbnN0aXR1dGUtZGV0YWlscy9pbnN0aXR1dGUtZGV0YWlscy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Output, Input, ChangeDetectorRef, OnChanges } from '@angular/core';\nimport { InstitutionService } from 'app/service/academic-service/api/institution.service';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { Router } from '@angular/router';\nimport { UsersService } from 'app/service/academic-service';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { RouteConfig } from 'app/url.config';\nimport { CommonService } from 'app/service/common.service';\n\n@Component({\n  selector: 'app-institute-details',\n  templateUrl: './institute-details.component.html',\n  styleUrls: ['./institute-details.component.scss']\n})\nexport class InstituteDetailsComponent extends CommonComponent implements OnInit, OnChanges {\n\n  institutionDetails: any = [];\n// tslint:disable-next-line: no-input-rename\n  @Input('data') data: any;\n  loginDetails: any;\n  editShow: boolean;\n\n  logoImgProp: any;\n  nameImgProp: any;\n\n  constructor(private institutionService: InstitutionService, private router: Router, private userService: UsersService,\n     private storeService: StoreService, private sanitizer: DomSanitizer, private cd: ChangeDetectorRef, public commonService: CommonService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.userService.userCheckUserAccessGet().subscribe(response => this.checkLoginDetails(response));\n  }\n  setImageProperties(image, logo = false): void {\n    const data = {\n      src: this.sanitizer.bypassSecurityTrustResourceUrl(image.src),\n      width: image.width,\n      height: image.height\n    };\n    if (logo) {\n      this.logoImgProp = {};\n      this.logoImgProp = data;\n    } else {\n      this.nameImgProp = {};\n      this.nameImgProp = data;\n    }\n    this.cd.detectChanges();\n  }\n\n  ngOnChanges(): void {\n    this.userService.userCheckUserAccessGet().subscribe(response => this.checkLoginDetails(response));\n  }\n\n  checkLoginDetails(response: any): void {\n    this.loginDetails = response;\n    this.institutionDetailsById();\n  }\n\n  // method for get perticular institution details based on institute Id\n  institutionDetailsById(): void {\n    this.institutionService.institutionDetails(this.data)\n      .subscribe(res => this.getResponse(res));\n  }\n\n  // response of institute details\n  getResponse(data: any): void {\n    if (this.loginDetails[0].schoolId != null || this.loginDetails[0].instititeId != null) {\n      this.editShow = false;\n    }\n    else {\n      this.editShow = true;\n    }\n    this.institutionDetails = data.institutionData;\n    this.institutionDetails.line1 =   new Array(this.institutionDetails.line1, this.institutionDetails.line2, this.institutionDetails.line3).\n    filter(x => x).join(', ');\n\n\n    if (data.institutionData['brandingSymbolLogo']) {\n      const imgUrl = this.storeService.getFilePath(data.institutionData['brandingSymbolLogo'].filename);\n      this.storeService.storeFileEncryptByFileNameGet(data.institutionData['brandingSymbolLogo'].filename)\n        .subscribe(data1 => {\n          if (data) {\n          }\n        });\n      this.setImageProperties({ src: imgUrl, height: 100, width: 100 }, true);\n    }\n    if (data.institutionData['brandingNameLogo']) {\n      const imgUrl = this.storeService.getFilePath(data.institutionData['brandingNameLogo'].filename);\n      this.storeService.storeFileEncryptByFileNameGet(data.institutionData['brandingNameLogo'].filename)\n        .subscribe(data2 => {\n          if (data) {\n          }\n        });\n      this.setImageProperties({ src: imgUrl, height: 100, width: 100 }, false);\n\n      this.cd.markForCheck();\n    }\n  }\n\n  editInstitute(): void {\n    this.router.navigate([RouteConfig._Edit_Institute + this.institutionDetails.id]);\n  }\n  // End\n}\n","module.exports = \"<div class=\\\"mat-elevation-z8 simple-table-container radius-t-20 mx-40 mb-20\\\">\\n    <app-table [settings]=\\\"tabSettings\\\" [closeRowForm]='closeAddPanel' (rowBasedAction)=\\\"rowWiseActions($event)\\\"\\n    (getTableData)='getAllLicense($event)' [templateRef]=\\\"addLicense\\\" (openAddForm)=\\\"onAddFormClick()\\\">\\n  </app-table>\\n  \\n</div>\\n\\n\\n<ng-template #addLicense>\\n  <form [formGroup]=\\\"licenseForm\\\" (ngSubmit)=\\\"saveInstituionLicense(licenseForm)\\\" #appForm=\\\"ngForm\\\">\\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" class=\\\"pt-24\\\">\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"34\\\" fxFlex=\\\"100\\\">\\n        <mat-label #noSchool translate>Number Of Schools</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'licenseForm','noOfSchools')\\\" matInput formControlName=\\\"noOfSchools\\\" required autocomplete=\\\"off\\\">\\n\\n        <mat-error>\\n          <app-validation [labelName]=\\\"noSchool.innerText\\\" [validationControl]=\\\"licenseForm.controls.noOfSchools\\\"\\n            [doValidate]=\\\"isValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" class=\\\"px-sm-20\\\" fxFlex.gt-xs=\\\"32\\\" fxFlex=\\\"100\\\">\\n        <mat-label #amount translate>Amount</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'licenseForm','billingAmount')\\\" matInput formControlName=\\\"billingAmount\\\" required autocomplete=\\\"off\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"amount.innerText\\\" [validationControl]=\\\"licenseForm.controls.billingAmount\\\"\\n            [doValidate]=\\\"isValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"34\\\" fxFlex=\\\"100\\\" class=\\\"icon-center\\\">\\n        <mat-label #date translate>Start Date</mat-label>\\n        <input matInput (keyup)=\\\"forceValidation('billingStartDate',licenseForm)\\\" [min]=\\\"minDate\\\"\\n          [matDatepicker]=\\\"start_date\\\" required formControlName=\\\"billingStartDate\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"start_date\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #start_date></mat-datepicker>\\n        <mat-error>\\n          <app-validation [labelName]=\\\"date.innerText\\\" [validationControl]=\\\"licenseForm.controls.billingStartDate\\\"\\n            [doValidate]=\\\"isValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\">\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"34\\\" fxFlex=\\\"100\\\">\\n        <mat-label #billingType translate>Billing Cycle</mat-label>\\n        <mat-select name=\\\"billingType\\\" formControlName=\\\"billingTypeId\\\" required>\\n          <mat-option *ngFor=\\\"let license of commonViewModel\\\" [value]=\\\"license.value\\\">\\n            {{ license.label }}</mat-option>\\n        </mat-select>\\n        <mat-error>\\n          <app-validation [labelName]='billingType.innerText' [validationControl]=\\\"licenseForm.controls.billingTypeId\\\"\\n            [doValidate]=\\\"isValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-sm-16\\\">\\n      <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\" (click)=\\\"closeAddForm()\\\">{{'Cancel' | translate}}</button>\\n      <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\"\\n        [disabled]=\\\"disableSubmitBtn\\\">{{'Create' | translate}}</button>\\n    </div>\\n  </form>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbHNocC1hZG1pbi9pbnN0aXR1dGUtbGljZW5zZS9pbnN0aXR1dGUtbGljZW5zZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, Input, OnChanges } from '@angular/core';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { InstituteLicenceService } from 'app/service/academic-service/api/institute-licence.service';\nimport { Pattern, AppSettings } from 'app/app.constants';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { InstituteLicenceView } from '../models/institute-licence-view';\nimport { InstitutionLicenseView } from '../models/institution-license-view';\nimport { LicenseListView } from '../models/license-details-view';\nimport { DatePipe } from '@angular/common';\nimport { UsersService } from 'app/service/academic-service';\nimport { CommonService } from 'app/service/common.service';\n\n@Component({\n  selector: 'app-institute-license',\n  templateUrl: './institute-license.component.html',\n  styleUrls: ['./institute-license.component.scss'],\n})\nexport class InstituteLicenseComponent extends CommonComponent implements OnInit, OnChanges {\n  @ViewChild('appForm') aForm;\n\n  // tslint:disable-next-line: no-input-rename\n  @Input('data') data: any;\n\n\n  /// FormGroup Variable\n  licenseForm: FormGroup;\n  // models declaration\n  institueView: InstituteLicenceView;\n  institutionLicenseView: InstitutionLicenseView;\n  licenseDetails: LicenseListView;\n  // variable declaration\n  doValidate = false;\n  HttpStatus: any;\n  commonViewModel: any[];\n  minDate: any;\n  isValidate: boolean;\n  tableData: Array<any> = [];\n  rows: Array<any>;\n  cols: any[];\n  totalItems: number;\n  tabSettings: {};\n  isValidRight: any;\n  closeAddPanel = false;\n  dataLoaded = Promise.resolve(false);\n  filterDetails: any;\n  currentComponent: any;\n  disableSubmitBtn = false;\n  pageCnt: any;\n  loginDetails: any;\n  currencySymbol: any;\n\n\n  constructor(public commonService: CommonService,\n    public dialogRef: MatDialog,\n    private instituteLicense: InstituteLicenceService,\n    public datePipe: DatePipe, public userService: UsersService, public snackBar: MatSnackBar\n\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.currencySymbol = this.getSchoolCurrency();\n    const minCurrentDate = this.getDefaultDate();\n    this.minDate = minCurrentDate;\n    // status codes\n    this.HttpStatus = require('http-status-codes');\n\n    this.currentComponent = 'InstituteLicenseComponent';\n\n    // Initilization  User licenseForm Form \n    this.licenseForm = new FormGroup({\n      noOfSchools: new FormControl('', [Validators.required, Validators.min(1), Validators.max(99), Validators.pattern(Pattern.NUMBER_PATTERN)]),\n      billingAmount: new FormControl('', [Validators.required, Validators.max(99999999.99), Validators.min(1), Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS)]),\n      billingStartDate: new FormControl(this.getDefaultDate(), [Validators.required]),\n      billingTypeId: new FormControl('', [Validators.required]),\n    });\n\n\n    \n    // licenseDetails\n    this.licenseDetails = {\n      id: this.data,\n      billingCycleId: [],\n      numberOfSchools: [],\n      billingAmount: [],\n      billingCycle: '',\n      billingStartDate: '',\n      statusId: [],\n      statusCode: [],\n      sortBy: 'Id',\n      sortOrder: AppSettings.SORTORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n\n    // institutionLicenseView\n    this.institutionLicenseView = {\n      numberOfSchools: 0,\n      billingCycleId: 0,\n      billingAmount: 0,\n      billingStartDate: '',\n      statusId: 0\n\n    };\n\n    // institueView\n    this.institueView = {\n      id: '',\n      licenseStatusCode: ''\n    };\n\n    // Table Colums\n    this.cols = [\n      { field: 'numberOfSchools', header: 'Number Of Schools', sort: true },\n      { field: 'billingAmount', header: 'Billing Amount', sort: true },\n      { field: 'billingStartDate', header: 'Billing Start Date', sort: true },\n      { field: 'billingCycle', header: 'Billing Cycle', sort: true },\n      { field: 'licenseStatus', header: 'License Status', sort: true },\n    ];\n\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.licenseDetails = modelTableComponent;\n    }\n\n    this.userService.userCheckUserAccessGet().subscribe(response => this.checkLoginDetails(response));\n  }\n\n  checkLoginDetails(response: any): void {\n    this.loginDetails = response;\n    this.billingCycleTypes();\n  }\n\n  ngOnChanges(): void {\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.licenseDetails = modelTableComponent;\n    }\n    // licenseDetails\n    this.licenseDetails = {\n      id: this.data,\n      billingCycleId: [],\n      numberOfSchools: [],\n      billingAmount: [],\n      billingCycle: '',\n      billingStartDate: '',\n      statusId: [],\n      statusCode: [],\n      sortBy: '',\n      sortOrder: AppSettings.SORTORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n    this.getAllLicense(this.licenseDetails);\n  }\n\n\n  // get billing cycle data\n  billingCycleTypes(): void {\n    this.instituteLicense.billingCycleTypes().subscribe(res => { this.billingTypeResponse(res), this.getAllLicense(this.licenseDetails); });\n  }\n  // biling cycle response\n  billingTypeResponse(res: any): void {\n    this.commonViewModel = [];\n    if (res.commonViewModel.length !== 0) {\n      for (let i = 0; i < res.commonViewModel.length; i++) {\n        this.commonViewModel.push({ value: res.commonViewModel[i].id, label: res.commonViewModel[i].name });\n      }\n    }\n  }\n\n  // create institute license for selected school\n  saveInstituionLicense(licenseForm: any): void {\n    this.isValidate = true;\n    if (this.licenseForm.invalid) {\n      return;\n    }\n    else {\n      this.disableSubmitBtn = true;\n    }\n    if (this.licenseForm.status === AppSettings.VALID) {\n      this.institutionLicenseView.instituteId = this.data;\n      this.institutionLicenseView.numberOfSchools = licenseForm.value.noOfSchools;\n      this.institutionLicenseView.billingAmount = licenseForm.value.billingAmount;\n      this.institutionLicenseView.billingStartDate = licenseForm.value.billingStartDate;\n      this.institutionLicenseView.billingCycleId = licenseForm.value.billingTypeId;\n      this.instituteLicense.create(this.institutionLicenseView).subscribe(res => this.response(res), error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n  // response\n  response(data: any): void {\n    this.disableSubmitBtn = false;\n    this.isValidate = false;\n    if (data.statusCode === this.HttpStatus.OK) {\n      this.dialogRef.closeAll();\n      this.licenseForm.reset();\n      this.aForm.resetForm();\n      this.licenseForm.controls['billingStartDate'].setValue(this.getDefaultDate());\n      this.closeAddPanel = true;\n    }\n    else {\n      this.closeAddPanel = false;\n    }\n    this.getAllLicense(this.licenseDetails);\n    this.openSnackBar(data.messages.ResultMessage);\n  }\n\n\n  // get data of institution license\n  getAllLicense(licenseDetails: LicenseListView): void {\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.licenseDetails = modelTableComponent;\n    }\n    licenseDetails.id = (licenseDetails.id === undefined || licenseDetails.id === null) ? this.data : licenseDetails.id;\n      this.instituteLicense.getAllInstituteLicense(licenseDetails.id, licenseDetails.billingCycleId, licenseDetails.numberOfSchools,\n        licenseDetails.billingAmount, licenseDetails.billingStartDate, licenseDetails.billingStartDateBegin, licenseDetails.billingStartDateEnd,\n        licenseDetails.statusId, licenseDetails.statusCode,\n        licenseDetails.sortBy, licenseDetails.sortOrder, licenseDetails.pageNumber, licenseDetails.pageSize).subscribe(res => {\n          this.getStudent(res);\n        }, error => {\n          this.errorResponse(error);\n        });\n  }\n\n\n  // response of institution license\n  getStudent(data: any): void {\n    if (!data.licenceListView) {\n      this.rows = [];\n    }\n    else {\n      this.rows = data.licenceListView.list;\n      this.totalItems = data.licenceListView.totalItems;\n    }\n\n    this.rows.forEach(e1 => {\n      e1.billingAmount = e1.billingAmount.toFixed(2);\n      e1.billingAmount = this.currencySymbol + e1.billingAmount;\n\n      e1.billingStartDate = this.commonService.customDateFormat(e1.billingStartDate, this.getSchoolDateFormat()).date;\n    });\n\n    if (this.loginDetails !== undefined) {\n      const validateInstituteAdmin = (this.loginDetails[0].schoolId != null || this.loginDetails[0].instituteId != null);\n      if (validateInstituteAdmin) {\n\n        if (this.cols.find(x => x.field === 'actions')) {\n          const index = this.cols.findIndex(x => x.field === 'actions');\n          this.cols.splice(index);\n        }\n\n      }\n      else {\n\n        if (!this.cols.find(x => x.field === 'actions')) {\n          this.cols.push({ field: 'actions', header: 'Actions', sort: false });\n        }\n        this.cols = this.cols;\n        this.rows.forEach(e => {\n          e.operations = [\n          ];\n          // tslint:disable-next-line: no-unused-expression\n          (e.statusCode === AppSettings.LIC_ACT) ? [e.statusId = AppSettings.INACTIVE_OPERATION, e.operations.push({\n            name: AppSettings.INACTIVE_OPERATION,\n            icon: AppSettings.INACTIVE_ICON,\n          })] : [e.statusId = AppSettings.ACTIVE_OPERATION, e.operations.push({\n            name: AppSettings.ACTIVE_OPERATION,\n            icon: AppSettings.ACTIVE_ICON,\n          })];\n        });\n      }\n      this.tabSettings = {\n        padding: true,\n        columns: this.cols,\n        model: this.licenseDetails,\n        rows: this.rows,\n        tablename: 'Institute Licence',\n        componentName: this.currentComponent,\n        isPaginationRequired: true,\n        totalRowsCount: this.totalItems,\n        pageCnt: this.pageCnt,\n        tabTable: true,\n        headerOperations: {\n          addingForm: {\n            required: !validateInstituteAdmin,\n            name: 'addLicense',\n            btnName: 'Add New Licence'\n          },\n          infoButton: {\n            required: true,\n            text: 'Institution Licenses'\n          },\n\n        },\n\n        filtersList: data.filters\n      };\n    }\n\n  }\n  rowWiseActions(operationData: any): void {\n    /**check status based on */\n    let statusCode: string;\n    statusCode = (operationData.clickedRow.statusCode === AppSettings.LIC_ACT) ? AppSettings.LIC_INACT : AppSettings.LIC_ACT;\n    let institueView: InstituteLicenceView;\n    institueView = {\n      id: operationData.clickedRow.id,\n      licenseStatusCode: statusCode\n    };\n    this.changeLicenseStatus(institueView);\n  }\n  /**\n  * changes the status of institute license\n  * @param institueView \n  */\n  changeLicenseStatus(institueView: InstituteLicenceView): void {\n    this.instituteLicense.updateInstitutionLicenceStatus(institueView)\n      .subscribe(response => {\n        this.openSnackBar(response.messages.ResultMessage);\n        if (response.statusCode === this.HttpStatus.OK) {\n          this.getAllLicense(this.licenseDetails);\n        }\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  // Adding Post Form\n  onAddFormClick(): void {\n    this.commonService.setOverlay(AppSettings.SHOW);\n    this.closeAddPanel = false;\n    this.isValidate = false;\n    this.disableSubmitBtn = false;\n  }\n  // method for when click cancel panel it will open\n  closeAddForm(): void {\n    this.aForm.resetForm();\n    this.isValidate = false;\n    this.commonService.setOverlay(AppSettings.HIDE);\n    this.closeAddPanel = true;\n    this.licenseForm.reset();\n    this.licenseForm.controls['billingStartDate'].setValue(new Date);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LshpAdminComponent } from './lshp-admin.component';\nimport { NewInstitutionComponent } from './new-institution/new-institution.component';\nimport { CreateUserInstituteComponent } from './create-user-institute/create-user-institute.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        redirectTo: 'institute-details',\n        data: {title: 'Institute Details'}\n    },\n    {\n        path: 'institute-details/add-institution',\n        component: NewInstitutionComponent,\n        data: {title: 'Add Institution'}\n    },\n    {\n        path: 'institute-details/edit-institution/:id',\n        component: NewInstitutionComponent,\n        data: {title: 'Edit Institution'}\n    },\n    {\n        path: 'institute-details',\n        component: LshpAdminComponent,\n        data: {title: 'Institute Details'}\n    },\n    {\n        path: 'create-users',\n        component: CreateUserInstituteComponent,\n        data: {title: 'Create Users'}\n    },\n    {\n        path: 'create-users/:id',\n        component: CreateUserInstituteComponent,\n        data: {title: 'Create Users'}\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [\n        RouterModule\n    ]\n})\nexport class LshpAdminRoutingModule {\n\n\n}\n","module.exports = \"<div *ngIf=\\\"editShow\\\" fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutAlign.gt-sm=\\\"center center\\\" class=\\\"px-sm-60 mt-32\\\">\\n    <div fxlayout=\\\"column\\\" fxFlex=\\\"30\\\" fxFlex.lt-sm=\\\"100\\\" fxLayoutAlign.lt-sm=\\\"center\\\" fxLayoutAlign=\\\"start center\\\"\\n        class=\\\"text-uppercase pb-20\\\" translate>manageinstitution</div>\\n    <div fxlayout=\\\"column\\\" fxFlex=\\\"40\\\" fxFlex.lt-sm=\\\"100\\\" fxLayoutAlign.lt-sm=\\\"center\\\" class=\\\"px-12\\\"\\n        fxLayoutAlign=\\\"center center\\\">\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100-p\\\">\\n            <mat-label #typeid translate>institute</mat-label>\\n            <mat-select [(ngModel)]=\\\"instituteid\\\" (selectionChange)=\\\"instituteNameDetails($event)\\\">\\n                <mat-option *ngFor=\\\"let instituteDetails of institutions\\\" [value]=\\\"instituteDetails.id\\\">\\n                   {{instituteDetails.name}}-{{instituteDetails.code}}\\n                </mat-option>\\n            </mat-select>\\n        </mat-form-field>\\n    </div>\\n    <div fxlayout=\\\"column\\\" fxFlex=\\\"30\\\" fxFlex.lt-sm=\\\"100\\\" fxLayoutAlign.lt-sm=\\\"center\\\" fxLayoutAlign=\\\"end center\\\"\\n        class=\\\"pb-20\\\">\\n        <button (click)=\\\"addInstitute()\\\" mat-raised-button type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\"><span>{{'addinstitution' | translate}}</span>  \\n        </button>\\n    </div>\\n</div>\\n\\n\\n\\n<mat-tab-group *ngIf=\\\"display\\\" [selectedIndex]=\\\"index\\\" (selectedIndexChange)=\\\"selected($event)\\\" class=\\\"manage-institue pt-32\\\">\\n    <mat-tab label=\\\"{{'INSTITUTION DETAILS' | translate}}\\\">\\n        <div *ngIf=\\\"detailsShow\\\">\\n            <app-institute-details [data]=\\\"selectedChanged\\\"></app-institute-details>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"{{'INSTITUTION LICENSE' | translate}}\\\">\\n        <div *ngIf=\\\"liscenseShow\\\">\\n            <app-institute-license [data]=\\\"selectedChanged\\\"></app-institute-license>\\n        </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"{{'MANAGE USERS' | translate}}\\\" >\\n        <div *ngIf=\\\"userShow\\\">\\n            <app-create-user-institute [data]=\\\"selectedChanged\\\"></app-create-user-institute>\\n        </div>\\n    </mat-tab>\\n</mat-tab-group>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbHNocC1hZG1pbi9sc2hwLWFkbWluLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewEncapsulation, Output, EventEmitter, HostListener } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { fuseAnimations } from '../../../@fuse/animations';\nimport { Observable, } from 'rxjs';\nimport { InstitutionService } from 'app/service/academic-service/api/institution.service';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { Router } from '@angular/router';\nimport { UsersService } from 'app/service/academic-service';\nimport { RouteConfig } from 'app/url.config';\nimport { MatSnackBar } from '@angular/material';\nimport * as _ from 'lodash';\n@Component({\n    selector: 'lshp-admin',\n    templateUrl: './lshp-admin.component.html',\n    styleUrls: ['./lshp-admin.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    animations: fuseAnimations\n})\nexport class LshpAdminComponent extends CommonComponent implements OnInit {\n\n    // DropDown Variables \n    institutions: any = [];\n    instituteFormControl = new FormControl();\n    filteredOptions: Observable<any[]>;\n    display = false;\n    HttpStatus: any;\n\n    // Tab Conditions \n    showUsers = false;\n    showInstituteDetails = false;\n    showUserLicence = false;\n    currentInstitute: any;\n    instituteName: any;\n    instituteid: any = '';\n    index: any = 0;\n    selectedChanged: string;\n    selectedUserChanged: string;\n    editShow: boolean;\n    detailsShow: boolean;\n    liscenseShow: boolean;\n    userShow: boolean;\n\n\n    constructor(private institutionService: InstitutionService, private router: Router, private userService: UsersService, public snackBar: MatSnackBar) {\n        super();\n\n    }\n    @HostListener('window:popstate', ['$event'])\n    onPopState(event): void {\n     this.selectTabByHash(window.location.hash);\n    }\n  \n    ngOnInit(): void {\n        this.userService.userCheckUserAccessGet().subscribe(response => this.checkLoginDetails(response));\n        if (!window.location.hash) {\n            this.selected(this.index);\n          }\n    }\n\n\n    checkLoginDetails(response: any[]): void {\n        if (response[0].schoolId != null || response[0].instituteId != null) {\n            this.editShow = false;\n            this.currentInstitute = response.find(x => x.instituteId).instituteId;\n            this.selectedChanged = this.currentInstitute;\n            this.currentInstitute != null ? this.getAllInstitutes(this.currentInstitute) :\n                this.selected(this.index);\n        }\n        else {\n            this.editShow = true;\n            this.getAllInstitutes(null);\n            // this.selected(this.index);\n        }\n    }\n\n    displayFn(user?: any): string | undefined {\n        return user ? user.name : undefined;\n    }\n\n\n    // get All Institutes\n    getAllInstitutes(instituteId: string): void {\n        this.institutionService.getInstitutions(instituteId).subscribe(response => {\n            this.institutions = response.institutes;\n            const currentInstituteCode = localStorage.getItem('_cic') || '';\n            if (currentInstituteCode && !this.currentInstitute) {\n                const currentInstituteInfo = _.find(this.institutions, {code: currentInstituteCode});\n                this.selectedChanged = (currentInstituteInfo === null || currentInstituteInfo === undefined) ?\n                    this.currentInstitute : currentInstituteInfo['id'];\n                this.instituteid =  this.selectedChanged;\n                this.currentInstitute =  this.selectedChanged;\n            }\n            if (this.currentInstitute != null) {\n               // this.institutions.forEach((element, index) => {\n                    if (!window.location.hash) {\n                        this.selected(0);\n                    }\n                    else {\n                        this.selectTabByHash(window.location.hash);\n                    }\n                    this.display = true;\n               // });\n            }\n        }, error => {\n            this.errorResponse(error);\n        });\n    }\n    // End\n\n    // onSelection of Institute\n    instituteNameDetails(value: any): void {\n       this.selectedChanged = value.value;\n       const currentInstituteInfo = _.find(this.institutions, {id: value.value});\n       if (currentInstituteInfo !== null && currentInstituteInfo !== undefined) {\n           // @ts-ignore\n           localStorage.setItem('_cic', currentInstituteInfo.code);\n       }\n        this.display = true;\n        this.selected(this.index);\n\n    }\n    // End\n\n    // tab Selection\n    selected(value: any): void {\n        this.index = value;\n        switch (value) {\n          case 0:\n            window.location.hash = '';\n            this.userShow = false;\n            this.liscenseShow = false;\n            this.detailsShow = true;\n            break;\n          case 1:\n              this.detailsShow = false;\n              this.userShow = false;\n              this.liscenseShow = true;\n            window.location.hash = 'License';\n            break;\n\n          case 2:\n            this.detailsShow = false;\n            this.liscenseShow = false;\n              this.userShow = true;\n            window.location.hash = 'Users';\n            break;\n        }\n    }\n\n    // tab Selection\n    selectTabByHash(value: any): void {\n        switch (value) {\n            case '#License':\n                this.detailsShow = false;\n                this.userShow = false;\n                this.liscenseShow = true;\n                this.index = 1;\n                break;\n\n            case '#Users':\n                this.detailsShow = false;\n                this.liscenseShow = false;\n                this.userShow = true;\n                this.index = 2;\n                break;\n            default :\n                this.userShow = false;\n                this.liscenseShow = false;\n                this.detailsShow = true;\n                this.index = 0;\n                break;\n        }\n    }\n\n    addInstitute(): void {\n        this.router.navigate([RouteConfig._Add_Institute]);\n    }\n    // End\n}\n","import { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule, NO_ERRORS_SCHEMA} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\n\nimport { LicenseSetupService } from '../../service/academic-service/api/license-setup.service';\nimport { LshpAdminComponent } from './lshp-admin.component';\nimport { SharedManagementModule } from '../../shared/shared.module';\nimport { UsersService } from '../../service/academic-service/api/user.service';\n\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { LshpAdminRoutingModule } from './lshp-admin-routing.module';\nimport {MatcomponentsModule} from '../../main/matcomponents.module';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { UserService } from 'app/service/user-management/api/user.service';\nimport { CountryService } from 'app/service/academic-service/api/country.service';\nimport { StateService } from 'app/service/academic-service/api/state.service';\nimport { TypeService } from 'app/service/academic-service/api/type.service';\nimport { InstitutionService } from 'app/service/academic-service/api/institution.service';\nimport { InstituteLicenceService } from 'app/service/academic-service/api/institute-licence.service';\nimport { InstituteDetailsComponent } from './institute-details/institute-details.component';\nimport { InstituteLicenseComponent } from './institute-license/institute-license.component';\nimport {Ng2TelInputModule} from 'ng2-tel-input';\nimport { NewInstitutionComponent } from './new-institution/new-institution.component';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { CreateUserInstituteComponent } from './create-user-institute/create-user-institute.component';\n\n\n@NgModule({\n  declarations: [\n    LshpAdminComponent,\n    NewInstitutionComponent,\n    CreateUserInstituteComponent,\n    InstituteDetailsComponent,\n    InstituteLicenseComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedManagementModule,\n    TranslateModule,\n    LshpAdminRoutingModule,\n    MatcomponentsModule,\n    FuseSharedModule,\n    Ng2TelInputModule\n  ],\n  providers: [UsersService, InstitutionService, LicenseSetupService, UserService, CountryService, StateService, TypeService, InstituteLicenceService, StoreService\n   \n],\n\n    schemas: [CUSTOM_ELEMENTS_SCHEMA,\n        NO_ERRORS_SCHEMA],\n})\nexport class LshpAdminModule {\n}\n","module.exports = \"<app-add-edit-institute [isUpdateForm]=\\\"isUpdateForm\\\" [institutionData]=\\\"institutionData\\\"></app-add-edit-institute>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbHNocC1hZG1pbi9uZXctaW5zdGl0dXRpb24vbmV3LWluc3RpdHV0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-new-institution',\n  templateUrl: './new-institution.component.html',\n  styleUrls: ['./new-institution.component.scss']\n})\nexport class NewInstitutionComponent implements OnInit {\n  isUpdateForm: Boolean = false;\n  institutionData: any;\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      if (params.id){\n        this.isUpdateForm = true;\n        this.institutionData = {id: params.id};\n      }\n    });\n  }\n\n}\n"],"sourceRoot":""}