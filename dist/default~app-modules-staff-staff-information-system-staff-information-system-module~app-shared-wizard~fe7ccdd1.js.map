{"version":3,"sources":["webpack:///./src/app/modules/staff/staff-information-system/class-teacher-management/class-teacher-management.component.html","webpack:///./src/app/modules/staff/staff-information-system/class-teacher-management/class-teacher-management.component.scss","webpack:///./src/app/modules/staff/staff-information-system/class-teacher-management/class-teacher-management.component.ts","webpack:///./src/app/modules/staff/staff-information-system/school-facility-representatives/school-facility-representatives.component.html","webpack:///./src/app/modules/staff/staff-information-system/school-facility-representatives/school-facility-representatives.component.scss","webpack:///./src/app/modules/staff/staff-information-system/school-facility-representatives/school-facility-representatives.component.ts","webpack:///./src/app/modules/staff/staff-information-system/staff-attendence/staff-attendence.component.html","webpack:///./src/app/modules/staff/staff-information-system/staff-attendence/staff-attendence.component.scss","webpack:///./src/app/modules/staff/staff-information-system/staff-attendence/staff-attendence.component.ts","webpack:///./src/app/modules/staff/staff-information-system/staff-database/staff-database.component.html","webpack:///./src/app/modules/staff/staff-information-system/staff-database/staff-database.component.scss","webpack:///./src/app/modules/staff/staff-information-system/staff-database/staff-database.component.ts","webpack:///./src/app/modules/staff/staff-information-system/staff-detail/staff-detail.component.html","webpack:///./src/app/modules/staff/staff-information-system/staff-detail/staff-detail.component.scss","webpack:///./src/app/modules/staff/staff-information-system/staff-detail/staff-detail.component.ts","webpack:///./src/app/modules/staff/staff-information-system/staff-information-system-routing.module.ts","webpack:///./src/app/modules/staff/staff-information-system/staff-information-system.module.ts","webpack:///./src/app/modules/staff/staff-information-system/staff-leave-request/staff-leave-requests.component.html","webpack:///./src/app/modules/staff/staff-information-system/staff-leave-request/staff-leave-requests.component.scss","webpack:///./src/app/modules/staff/staff-information-system/staff-leave-request/staff-leave-requests.component.ts","webpack:///./src/app/service/staff-attendence/staff-attendence.service.ts","webpack:///./src/app/service/staff-information-system/school-facility-repesentative.service.ts","webpack:///./src/app/service/staff/class-teacher-assignment.service.ts"],"names":[],"mappings":"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","file":"default~app-modules-staff-staff-information-system-staff-information-system-module~app-shared-wizard~fe7ccdd1.js","sourcesContent":["module.exports = \"<div class=\\\"p-sm-40\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"p-12 font-size-18 text-uppercase\\\">\\n    {{tableName | translate}}\\n  </div>\\n  <div class=\\\"w-100-p simple-table-container mat-elevation-z8 radius-20\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"p-16 border-bottom\\\">\\n      <form [formGroup]=\\\"schoolBoardForm\\\" *ngIf=\\\"schoolHasBoard\\\" fxFlex=\\\"100\\\" fxLayout=\\\"row\\\"\\n        fxLayoutAlign=\\\"center center\\\">\\n        <mat-form-field fxFlex.gt-sm=\\\"30\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" appearance=\\\"outline\\\" class=\\\"formfield-pb-0\\\">\\n          <mat-label translate #board>School Board</mat-label>\\n          <mat-select formControlName=\\\"schoolBoard\\\" (selectionChange)=\\\"onSelectBoard($event)\\\">\\n            <mat-option *ngFor=\\\"let board of schoolBoardsList\\\" [value]=\\\"board.value\\\">{{ board.label }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='board.innerText' [validationControl]=\\\"schoolBoardForm?.controls?.schoolBoard\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </form>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n        <button *ngIf=\\\"!(rows && rows.length == 0)\\\" (click)=\\\"onEdit()\\\" mat-raised-button class=\\\"text-uppercase\\\"\\n          [color]=\\\"isOnEdit ? 'primary' : 'accent'\\\" translate>{{isOnEdit ? 'back' : 'edit' | translate}}</button>\\n        <button (click)=\\\"getHelpText('Class Teacher Management')\\\" mat-button>\\n          <mat-icon  class=\\\"grey-600-fg\\\">info</mat-icon>\\n        </button>\\n      </div>\\n    </div>\\n    <mat-table *ngIf=\\\"!(rows && rows.length == 0)\\\" class=\\\"responsive-table\\\" mat-table [dataSource]=\\\"rows\\\" matSort\\n      matSortDisable [matSortActive]=\\\"activeColumn\\\" matSort matSortDisable [matSortDirection]=\\\"sortDirection\\\"\\n      (matSortChange)=\\\"customSort($event)\\\">\\n      <ng-container *ngFor=\\\"let column of columns; let i = index\\\" matColumnDef=\\\"{{column.field}}\\\">\\n        <mat-header-cell *matHeaderCellDef>\\n          <div class=\\\"headerTitle w-100-p\\\" *ngIf=\\\"column.field != 'select' \\\" mat-sort-header disableClear\\n            [disabled]=\\\"!column.sort || (rows && rows.length == 0)\\\">\\n            <strong class=\\\"mb-0 title mat-subheading-1\\\" translate>{{column.header}}</strong>\\n          </div>\\n\\n        </mat-header-cell>\\n        <mat-cell *matCellDef=\\\"let row\\\" [row]=\\\"row\\\" [column]=\\\"column\\\">\\n          <span *ngIf=\\\"column.dropdownInputRequired;else show_data;\\\" class=\\\"text-truncate mx-4\\\">\\n            <mat-form-field *ngIf=\\\"row?.hasOwnProperty(column.field);else not_has_section\\\" class=\\\"text-truncate\\\">\\n              <mat-select (selectionChange)=\\\"onTeacherChange($event,row.className,column.field)\\\"\\n                [placeholder]=\\\"row[column.field] ? '' :  'Select Teacher'\\\" [(value)]=\\\"row[column.field]\\\" class=\\\"text-truncate\\\">\\n                <mat-option *ngFor=\\\"let staff of staffList\\\" [value]=\\\"staff.id\\\">\\n                  {{staff.name }} </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <ng-template #not_has_section>\\n              <span>\\n                {{\\\"N/A\\\"}}\\n              </span>\\n            </ng-template>\\n          </span>\\n          <ng-template #show_data>\\n            <span *ngIf=\\\"row?.hasOwnProperty(column.field);else not_has_section\\\" class=\\\"text-truncate\\\">\\n              {{row[column.field] ? row[column.field] : '---'}}\\n            </span>\\n            <ng-template #not_has_section>\\n              <span>\\n                {{\\\"N/A\\\"}}\\n              </span>\\n            </ng-template>\\n          </ng-template>\\n        </mat-cell>\\n      </ng-container>\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n      </mat-row>\\n    </mat-table>\\n    <div *ngIf=\\\"rows && rows.length == 0\\\" class=\\\"errorMsg\\\">\\n      <p class=\\\"red-text text-center mb-0 font-weight-bold p-24\\\" translate>No Data Found</p>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".text-truncate {\\n  display: block !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvc3RhZmYvc3RhZmYtaW5mb3JtYXRpb24tc3lzdGVtL2NsYXNzLXRlYWNoZXItbWFuYWdlbWVudC9jbGFzcy10ZWFjaGVyLW1hbmFnZW1lbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDQSx5QkFBeUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3RhZmYvc3RhZmYtaW5mb3JtYXRpb24tc3lzdGVtL2NsYXNzLXRlYWNoZXItbWFuYWdlbWVudC9jbGFzcy10ZWFjaGVyLW1hbmFnZW1lbnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGV4dC10cnVuY2F0ZXtcbmRpc3BsYXk6IGJsb2NrICFpbXBvcnRhbnQ7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonService } from 'app/service/common.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { GradeSetupService } from 'app/service/grading-service/api/grade-setup.service';\nimport { DropDownConfModel } from 'app/models/drop-down-conf-view';\nimport { ClassTeacherAssignmentService } from 'app/service/staff/class-teacher-assignment.service';\nimport { StaffCommonService } from 'app/service/staff/staffCommon.service';\nimport { ClassTeacherAssignmentModel } from '../model/class-teacher-assignment-model';\nimport { AppSettings } from 'app/app.constants';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-class-teacher-management',\n  templateUrl: './class-teacher-management.component.html',\n  styleUrls: ['./class-teacher-management.component.scss'],\n  providers: [GradeSetupService, ClassTeacherAssignmentService, StaffCommonService]\n})\nexport class ClassTeacherManagementComponent extends CommonComponent implements OnInit {\n  columns: any = [];\n  displayedColumns: any = [];\n  currentComponent = 'ClassTeacherManagementComponent';\n  rows: any = [];\n  tableName = 'Class Teacher Management';\n  validate = true;\n  schoolBoardForm: FormGroup;\n  schoolBoardsList: any = [];\n  classes: any = [];\n  activeColumn: any = '';\n  sortDirection: any = '';\n  staffList: any = [];\n  isOnEdit = false;\n  teachersData: any = [];\n  selectedSchoolBoardId: any;\n  classTeacherAssign: ClassTeacherAssignmentModel;\n  schoolHasBoard = false;\n  padding = false;\n  constructor(\n    public commonService: CommonService,\n    public gradeSetupService: GradeSetupService,\n    public classTeacherAssignmentService: ClassTeacherAssignmentService,\n    public staffCommonService: StaffCommonService,\n    public snackBar: MatSnackBar\n  ) {\n    super();\n    this.setBoardForm();\n    this.getSchoolBoardsList();\n    this.getStaffList();\n    this.initializeModel();\n  }\n  ngOnInit(): void {\n\n  }\n  setBoardForm(): void {\n    this.schoolBoardForm = new FormGroup({\n      schoolBoard: new FormControl('', [Validators.required]),\n    });\n  }\n  setHeaderData(): void {\n    this.rows = [];\n    this.columns = [];\n    if (!this.teachersData) {\n      return;\n    }\n    this.rows = [];\n    this.columns = [\n      { field: 'className', header: 'Class', sort: false }];\n    this.displayedColumns = [];\n    this.teachersData.forEach(classInfo => {\n      const classData = {};\n      classData['className'] = classInfo.className;\n      classInfo.sectionTeachersModel.forEach(element => {\n        if (this.columns.findIndex(ele => ele.field === element.sectionName) === -1) {\n          this.displayedColumns.push(element.sectionName);\n          if (this.isOnEdit) {\n            this.columns.push({ field: element.sectionName, header: element.sectionName, sort: false, dropdownInputRequired: true });\n          } else {\n            this.columns.push({ field: element.sectionName, header: element.sectionName, sort: false, dropdownInputRequired: false });\n          }\n          classData[element.sectionName] = this.setClassData(this.isOnEdit, element);\n\n        } else {\n          classData[element.sectionName] = this.setClassData(this.isOnEdit, element);\n        }\n      });\n      this.rows.push(classData);\n    });\n    this.displayedColumns.sort();\n    this.displayedColumns.unshift('className');\n  }\n  setClassData(edit, element): void {\n    if (edit) {\n      return element.classTeacherId;\n    } else {\n      return element.classTeacherName;\n    }\n  }\n  initializeModel(): void {\n    this.classTeacherAssign = {\n      classId: 0,\n      sectionId: 0,\n      classTeacherId: 0,\n      schoolBoardId: 0\n    };\n  }\n  onTeacherChange(event, className, sectionName): void {\n    const data = this.teachersData.filter(ele => className === ele.className)[0];\n    this.classTeacherAssign.schoolBoardId = this.selectedSchoolBoardId;\n    this.classTeacherAssign.classId = data.classId;\n    this.classTeacherAssign.sectionId = data.sectionTeachersModel.filter(ele => ele.sectionName === sectionName)[0].sectionId;\n    const classTeacherId = data.sectionTeachersModel.filter(ele => ele.sectionName === sectionName)[0].classTeacherId;\n    if (!(classTeacherId || event.value)) {\n      return;\n    }\n    this.classTeacherAssign.classTeacherId = event.value;\n    this.classTeacherAssignmentService.updateClassTeacher(this.classTeacherAssign)\n      .subscribe(res => {\n        this.getTeachers(this.selectedSchoolBoardId);\n        this.openSnackBar(res.messages.ResultMessage);\n      }, err => this.errorResponse(err));\n  }\n  onSelectBoard(event): void {\n    this.isOnEdit = false;\n    this.selectedSchoolBoardId = event.value;\n    this.getTeachers(this.selectedSchoolBoardId);\n  }\n  getTeachers(boardId): void {\n    this.classTeacherAssignmentService.getClassTeachers(boardId)\n      .subscribe(res => this.setTeachersData(res), error => this.errorResponse(error));\n  }\n  setTeachersData(res): void {\n    this.teachersData = res.getClassTeacherAssignmentModel;\n    this.setHeaderData();\n  }\n  getStaffList(): void {\n    this.staffCommonService.fetchStaffs(AppSettings.TEACHING_STAFF_CODE)\n      .subscribe(res => this.setStaffData(res));\n  }\n  setStaffData(response): void {\n    this.staffList = response;\n    this.staffList.unshift({\n      code: null,\n      id: null,\n      name: ''\n    });\n  }\n  getSchoolBoardsList(): void {\n    this.gradeSetupService.schoolAcademicBoards().subscribe(res => {\n      if (res.listViews && res.listViews.length) {\n        res.listViews.forEach(element => {\n          this.schoolBoardsList.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n        this.schoolHasBoard = true;\n        this.selectedSchoolBoardId = this.schoolBoardsList[0].value;\n        this.getTeachers(this.selectedSchoolBoardId);\n        this.schoolBoardForm.controls.schoolBoard.setValue(this.selectedSchoolBoardId);\n      } else {\n        this.schoolHasBoard = false;\n        this.getTeachers(null);\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  onEdit(): void {\n    this.isOnEdit = !this.isOnEdit;\n    this.setHeaderData();\n  }\n  customSort(event): void {\n    this.sortDirection = event.direction;\n    this.activeColumn = event.active;\n  }\n}\n","module.exports = \"<app-table [settings]=\\\"tabSettings\\\" [templateRef]=\\\"facilityTemplate\\\" (getTableData)='representativesData($event)'\\n  (rowBasedAction)='rowActions($event)' [closeRowForm]='closeAddPanel' (openAddForm)=\\\"openForm()\\\">\\n</app-table>\\n<ng-template #facilityTemplate>\\n  <!-- <div *ngIf=\\\"show\\\"> -->\\n    <form fxLayout=\\\"column\\\" (ngSubmit)=\\\"saveRepresentative(addRepresentativeFormGroup)\\\"\\n      [formGroup]=\\\"addRepresentativeFormGroup\\\" #representativeForm=\\\"ngForm\\\">\\n      <ng-template translate><span>SchoolFacilityRepresentatives</span></ng-template>\\n      <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-24\\\" fxLayout.gt-xs=\\\"row\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\"\\n          fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n          <mat-label translate #facilityType>FacilityType</mat-label>\\n          <mat-select required name=\\\"facilityType\\\" formControlName=\\\"facilityTypeId\\\"\\n            (selectionChange)=\\\"onFacilityTypeSelect($event.value)\\\">\\n            <mat-option *ngFor=\\\"let facilityType of facilityTypeDropDown\\\" [value]=\\\"facilityType.value\\\">\\n              {{facilityType.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"facilityType.innerText\\\"\\n              [validationControl]=\\\"addRepresentativeFormGroup.controls.facilityTypeId\\\" [doValidate]=\\\"doValidate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"px-sm-20\\\" fxFlexFill fxLayout=\\\"column\\\"\\n          fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\">\\n          <mat-label translate #facilityId>Facility</mat-label>\\n          <mat-select required name=\\\"facility\\\" formControlName=\\\"schoolFacilityId\\\">\\n            <mat-option *ngFor=\\\"let facility of facilityDropDown\\\" [value]=\\\"facility.value\\\">\\n              {{facility.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"facilityId.innerText\\\"\\n              [validationControl]=\\\"addRepresentativeFormGroup.controls.schoolFacilityId\\\" [doValidate]=\\\"doValidate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-sm-12\\\" fxLayout.gt-xs=\\\"row\\\" fxFlex=\\\"100\\\">\\n\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill\\n          fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n          <mat-label translate #representativeRole>RepresentativeRole</mat-label>\\n          <mat-select required name=\\\"schoolRepRole\\\" formControlName=\\\"schoolRepRoleId\\\">\\n            <mat-option *ngFor=\\\"let representativeRoles of representativeRolesDropDown\\\"\\n              [value]=\\\"representativeRoles.value\\\">\\n              {{representativeRoles.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"representativeRole.innerText\\\"\\n              [validationControl]=\\\"addRepresentativeFormGroup.controls.schoolRepRoleId\\\" [doValidate]=\\\"doValidate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"staffTypeDropDown\\\" class=\\\"px-sm-20\\\" fxFlexFill fxLayout=\\\"column\\\"\\n          fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\">\\n          <mat-label translate #staffType>Staff Type</mat-label>\\n          <mat-select name=\\\"staffType\\\" formControlName=\\\"staffTypeCode\\\" (selectionChange)=\\\"onStaffTypeSelect($event)\\\">\\n            <mat-option *ngIf=\\\"staffTypeDropDown?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let staffType of staffTypeDropDown\\\" [value]=\\\"staffType.value\\\">\\n              {{staffType.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"staffType.innerText\\\"\\n              [validationControl]=\\\"addRepresentativeFormGroup.controls.staffTypeCode\\\" [doValidate]=\\\"doValidate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n          <mat-label translate #staff>Staff</mat-label>\\n          <mat-select required name=\\\"staff\\\" formControlName=\\\"staffId\\\">\\n            <mat-option *ngFor=\\\"let staff of staffDropDown\\\" [value]=\\\"staff.value\\\">\\n              {{staff.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"staff.innerText\\\"\\n              [validationControl]=\\\"addRepresentativeFormGroup.controls.staffId\\\" [doValidate]=\\\"doValidate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"my-20\\\">\\n        <button mat-raised-button translate class=\\\"mr-12 text-uppercase\\\" type=\\\"reset\\\" #formCancel id=\\\"formCancel\\\"\\n          (click)=\\\"onCancel()\\\"> {{'Cancel' | translate}}</button>\\n        <button mat-raised-button translate type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">{{(isUpdateData ? 'Update':'Assign') | translate}}\\n        </button>\\n      </div>\\n\\n    </form>\\n  <!-- </div> -->\\n</ng-template>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3RhZmYvc3RhZmYtaW5mb3JtYXRpb24tc3lzdGVtL3NjaG9vbC1mYWNpbGl0eS1yZXByZXNlbnRhdGl2ZXMvc2Nob29sLWZhY2lsaXR5LXJlcHJlc2VudGF0aXZlcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { AppSettings } from 'app/app.constants';\nimport { SchoolFacilityRepresentativeFilterView } from '../model/school-facility-representative-filter-view';\nimport { SchoolFacilityRepesentativeService } from 'app/service/staff-information-system/school-facility-repesentative.service';\nimport { CommonService } from 'app/service/common.service';\nimport { CommonComponent } from '../../../../shared/common/common.component';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { SchoolFacilityService } from 'app/service/general/api/school-facility.service';\nimport { SchoolRepRoleService } from 'app/service/general/api/school-rep-role.service';\nimport { StaffCommonService } from 'app/service/staff/staffCommon.service';\nimport { SchoolFacilityRepresentativeDataView } from '../model/school-facility-representative-data-view';\n\n@Component({\n  selector: 'app-school-facility-representatives',\n  templateUrl: './school-facility-representatives.component.html',\n  styleUrls: ['./school-facility-representatives.component.scss'],\n  providers: [SchoolFacilityRepesentativeService, SchoolRepRoleService, StaffCommonService, SchoolFacilityService]\n})\nexport class SchoolFacilityRepresentativesComponent extends CommonComponent implements OnInit {\n  @ViewChild('representativeForm') representativeForm;\n  schoolFacilityRepresentativeFilter: SchoolFacilityRepresentativeFilterView;\n  updateModel: SchoolFacilityRepresentativeDataView;\n  addRepresentativeFormGroup: FormGroup;\n  tabSettings: {};\n  cols = [];\n  rows = [];\n  pageCnt: number;\n  totalItems: number;\n  custRowsPerPageOptions: Array<number> = [];\n  currentComponentName = 'SchoolFacilityRepresentativesComponent';\n  show = false;\n  isUpdateData = false;\n  closeAddPanel: boolean;\n  buttonDisable = true;\n  classSectionDisable = false;\n  facilityTypeDropDown = [];\n  facilityDropDown = [];\n  representativeRolesDropDown = [];\n  staffTypeDropDown = [];\n  staffDropDown = [];\n  doValidate = true;\n  editData: any;\n  representativeId = '';\n  facilityTypeChange: boolean;\n\n  constructor(private _fb: FormBuilder, private schoolFacilityRepesentativeService: SchoolFacilityRepesentativeService\n    , public commonService: CommonService, public dialog: MatDialog, private schoolFacilityService: SchoolFacilityService\n    , private schoolRepRoleService: SchoolRepRoleService, private staffCommonService: StaffCommonService, public snackBar: MatSnackBar) {\n    super();\n    this.schoolFacilityRepresentativeFilter = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n      facilityIds: [],\n      facilityCodes: [],\n      facilityTypeIds: [],\n      roleIds: [],\n      representatives: [],\n    };\n  }\n\n  ngOnInit(): void {\n    const modelTableComponent = this.getModelComponent(this.currentComponentName);\n    if (modelTableComponent) {\n      this.schoolFacilityRepresentativeFilter = modelTableComponent;\n    }\n    this.representativesData(this.schoolFacilityRepresentativeFilter);    this.addRepresentativeFormGroup = this._fb.group({\n      facilityTypeId: new FormControl(''),\n      schoolFacilityId: new FormControl(''),\n      schoolRepRoleId: new FormControl(''),\n      staffTypeCode: new FormControl(''),\n      staffId: new FormControl(''),\n    });\n\n    this.cols = [\n      { field: 'facility', header: 'Facility', sort: true },\n      { field: 'facilityCode', header: 'FacilityCode', sort: true },\n      { field: 'facilityType', header: 'FacilityType', sort: true },\n      { field: 'role', header: 'Role', sort: true },\n      { field: 'representative', header: 'Representative', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.schoolFacilityRepresentativeFilter,\n      tablename: 'School Facility Representatives',\n      componentName: this.currentComponentName,\n    };\n\n    this.updateModel = {\n      id: '',\n      schoolFacilityId: 0,\n      schoolRepRoleId: 0,\n      staffId: 0\n    };\n    if (this.getTokenParam('_as')) {\n      this.getFacilityTypeNames();\n      this.getRepresentativeRoles();\n      this.staffTypes();\n      this.staff(false);\n    } else {\n      setTimeout(() => {\n        this.openSnackBar(AppSettings.SCHOOLACADEMIC_SESSION_REQUIRED, true);\n      });\n    } \n  }\n\n  openForm(): void {\n    this.show = true;\n    this.closeAddPanel = false;\n    this.staff(false);\n  }\n\n  // getting facilitytypeNames\n  getFacilityTypeNames(): void {\n    this.schoolFacilityService.facilityType().subscribe((res: any) => this.listTypeGet(res), error => {\n      this.errorResponse(error);\n    });\n  }\n\n  listTypeGet(data: any): void {\n    this.facilityTypeDropDown = [];\n    for (let i = 0; i < data.commonViewModel.length; i++) {\n      this.facilityTypeDropDown.push\n        ({ value: data.commonViewModel[i].id, label: data.commonViewModel[i].name });\n    }\n  }\n\n  getFacilities(response: any): void {\n    this.schoolFacilityService.getSchoolFacilitiesByType(response).subscribe((res: any) => this.facilityGet(res), error => {\n      this.errorResponse(error);\n    });\n  }\n\n  facilityGet(data: any): void {\n    this.facilityDropDown = [];\n    this.addRepresentativeFormGroup.controls['schoolFacilityId'].setValue('');\n    for (let i = 0; i < data.schoolFacilities.length; i++) {\n      this.facilityDropDown.push\n        ({ value: data.schoolFacilities[i].id, label: data.schoolFacilities[i].name });\n    }\n  }\n\n  getRepresentativeRoles(): void {\n    this.schoolRepRoleService.getAllRepresentativeRoles().subscribe((res: any) => this.representativeRolesGet(res), error => {\n      this.errorResponse(error);\n    });\n  }\n\n  representativeRolesGet(data: any): void {\n    this.representativeRolesDropDown = [];\n    for (let i = 0; i < data.listViews.length; i++) {\n      this.representativeRolesDropDown.push\n        ({ value: data.listViews[i].id, label: data.listViews[i].name });\n    }\n  }\n\n  staffTypes(): void {\n    this.staffCommonService.fetchStaffTypes().subscribe((res: any) => this.staffTypesGet(res), error => {\n      this.errorResponse(error);\n    });\n  }\n\n  staffTypesGet(data: any): void {\n    this.staffTypeDropDown = [];\n    for (let i = 0; i < data.length; i++) {\n      this.staffTypeDropDown.push\n        ({ value: data[i].code, label: data[i].name });\n    }\n  }\n\n  staff(isSetValue: boolean, response?: any): void {\n    this.staffCommonService.fetchStaffs(response !== undefined ? response.value : null).subscribe((res: any) => this.staffGet(res, isSetValue), error => {\n      this.errorResponse(error);\n    });\n  }\n\n  staffGet(data: any, isValueSet: boolean): void {\n    this.addRepresentativeFormGroup.controls['staffId'].setValue('');\n    this.staffDropDown = [];\n    for (let i = 0; i < data.length; i++) {\n      this.staffDropDown.push\n        ({ value: data[i].id, label: data[i].name });\n    }\n    if (this.isUpdateData && isValueSet) {\n      this.editPatchValues();\n    }\n  }\n\n  representativesData(_event: SchoolFacilityRepresentativeFilterView): void {\n    this.schoolFacilityRepresentativeFilter = _event;\n    this.schoolFacilityRepesentativeService.fetchFacilityRepresentatives(this.schoolFacilityRepresentativeFilter).subscribe(data => this.response(data), error => {\n      this.errorResponse(error);\n    });\n  }\n\n  response(data: any): void {\n\n    if (data.facilityRepresentatives) {\n      this.rows = data.facilityRepresentatives.list;\n      this.totalItems = data.facilityRepresentatives.totalItems;\n    } else {\n      this.rows = [];\n    }\n\n    const actionList = [\n      {\n        name: AppSettings.EDIT_OPERATION,\n        icon: AppSettings.EDIT,\n        operationName: AppSettings.EDIT\n      }, {\n        name: AppSettings.DELETE_OPERATION,\n        icon: AppSettings.DELETE,\n        operationName: AppSettings.DELETE\n      }\n    ];\n\n    this.rows.forEach((e: any) => {\n      e.operations = actionList;\n    });\n\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.schoolFacilityRepresentativeFilter,\n      rows: this.rows,\n      tablename: 'School Facility Representatives',\n      componentName: this.currentComponentName,\n      isSelectRowRequired: false,\n      visibleSelectAll: false,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      filtersList: data.filters,\n      headerOperations: {\n        infoButton: {\n          required: true,\n          text: 'School Facility Representatives'\n        },\n        addingForm: {\n          required: true,\n          btnName: AppSettings.BUTTON_NAME\n        }\n      }\n    };\n  }\n\n  // row-wise actions of the table(edit/delete)\n  rowActions(response: any): void {\n    if (response.operation === AppSettings.EDIT) {\n      this.show = true;\n      this.isUpdateData = true;\n      this.closeAddPanel = false;\n      this.buttonDisable = true;\n      this.representativeId = response.clickedRow.id;\n      this.schoolFacilityRepesentativeService.facilityRepresentativeById(this.representativeId).subscribe(res =>\n        this.getRepresentativeData(res), error => {\n          this.errorResponse(error);\n        });\n    }\n    else if (response.operation === AppSettings.DELETE) {\n      this.deleteAll(response);\n    }\n\n  }\n\n  deleteAll(response: any): void {\n    const dialogRef = this.dialog.open(CustomDialogComponent, {\n      disableClose: true,\n      data: { text: this.commonService.getTranslation(AppSettings.DELETE_CONFORMATION, ''), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n    });\n\n    dialogRef.afterClosed().subscribe(action => {\n\n      if (action === AppSettings.YES) {\n\n        this.schoolFacilityRepesentativeService.deleteFacilityRepresentative(response.clickedRow.id).subscribe(res => this.deleteResponse(res), error => {\n          this.errorResponse(error);\n        });\n      }\n    });\n  }\n\n  customClearValidation(form: FormGroup, columnList: string[]): void {\n    columnList.map(element => {\n      form.get(element).clearValidators();\n      form.controls[element].updateValueAndValidity();\n    });\n  }\n\n  // response after delete operation\n  deleteResponse(deleteResponse: any): void {\n    this.resetForm();\n    this.openSnackBar(deleteResponse.messages.ResultMessage);\n  }\n\n  onFacilityTypeSelect(response: any): void {\n    this.facilityTypeChange = true;\n    this.getFacilities(response);\n  }\n\n  onStaffTypeSelect(response: any): void {\n    this.staff(false, response);\n  }\n\n  saveRepresentative(data: any): void {\n\n    if (data.valid) {\n      this.doValidate = false;\n      this.facilityTypeChange = false;\n      if (this.isUpdateData) {\n        data.value.id = this.representativeId;\n        this.schoolFacilityRepesentativeService.updateFacilityRepresentative(this.prepareModel(this.updateModel, data.value)).subscribe(res => {\n          this.openSnackBar(res.messages.ResultMessage);\n          this.resetForm();\n        }\n          , error => {\n            this.errorResponse(error);\n          });\n      }\n      else {\n\n        this.schoolFacilityRepesentativeService.assignFacilityRepresentative(data.value).subscribe(res => {\n          this.resetForm();\n          this.openSnackBar(res.messages.ResultMessage);\n        }, error => {\n            this.errorResponse(error);\n          });\n      }\n    }\n    else {\n      this.doValidate = true;\n    }\n\n  }\n\n  resetForm(): void {\n    this.representativesData(this.schoolFacilityRepresentativeFilter);\n    this.addRepresentativeFormGroup.reset();\n    this.representativeForm.resetForm();\n    this.show = false;\n    this.closeAddPanel = true;\n    this.isUpdateData = false;\n    this.facilityDropDown = [];\n    this.staffDropDown = [];\n    this.facilityDropDown = [];\n  }\n\n\n  onCancel(): void {\n    this.addRepresentativeFormGroup.reset();\n    this.representativeForm.resetForm();\n    this.show = false;\n    this.closeAddPanel = true;\n    this.isUpdateData = false;\n    this.facilityTypeChange = false;\n    this.staffDropDown = [];\n    this.facilityDropDown = [];\n  }\n\n  getRepresentativeData(data: any): void {\n    if (data.facilityRepesentativeData !== null && data.facilityRepesentativeData !== undefined) {\n      this.editData = data.facilityRepesentativeData;\n      const staffData: any = {\n        value : null\n      };\n       staffData.value = data.facilityRepesentativeData.staffTypeCode;\n     this.staff(true, staffData);\n      this.getFacilities(data.facilityRepesentativeData.facilityTypeId);\n      \n    }\n  }\n\n  editPatchValues(): void {\n    this.addRepresentativeFormGroup.patchValue(this.editData);\n  }\n}\n","module.exports = \"<div class=\\\"px-sm-40 pt-sm-40\\\">\\n  <div class=\\\"py-8 px-20 font-size-18 text-uppercase\\\" translate>Staff Attendance</div>\\n  <div class=\\\"mat-elevation-z8 simple-table-container radius-t-20\\\">\\n    <form [formGroup]=\\\"staffAttendanceForm\\\">\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"100\\\">\\n              <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxFlex.gt-sm=\\\"30\\\" fxFlex=\\\"100\\\" class=\\\"py-20 icon-center\\\">\\n                  <mat-label translate #attendanceDate translate>Attendance Date</mat-label>\\n                  <input matInput (keyup)=\\\"forceValidation('attendanceDate',staffAttendanceForm)\\\"\\n                    formControlName=\\\"attendanceDate\\\" [matDatepicker]=\\\"picker\\\" required placeholder=\\\"Choose a start date\\\" #staffAttendanceInput>\\n                  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                  <mat-datepicker #picker></mat-datepicker>\\n                  <mat-error>\\n                    <app-validation [labelName]='attendanceDate.innerText'\\n                      [validationControl]=\\\"staffAttendanceForm.controls.attendanceDate\\\" [doValidate]=\\\"validate\\\">\\n                    </app-validation>\\n                  </mat-error>\\n                </mat-form-field>\\n          </div>\\n        \\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center end\\\" class=\\\"mr-8\\\">\\n              <button mat-button type='button' (click)=\\\"getHelpText('Staff Attendance')\\\">\\n                  <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n                </button>\\n          </div>\\n          \\n        </div>\\n    </form>\\n  </div>\\n</div>\\n\\n<app-table *ngIf=\\\"staffAttendanceForm.valid\\\" [massActionTemplateRef]=\\\"staffAttendenceActions\\\" [settings]=\\\"tableSettings\\\" (getTableData)='tableData($event)' (selectedRows)='selectedRows($event)'  (rowBasedAction)='staffAttendenceAction($event, null)' (anchorDialogClick)=\\\"showLeaveInfo($event)\\\" (radioSection)='staffAttendenceAction($event, null)'></app-table>\\n\\n<app-custom-card *ngIf=\\\"!staffAttendanceForm.valid\\\" [title]=\\\"'Staff Attendance Details'\\\" [inputMessage]=\\\"'Please Select Date'\\\">\\n</app-custom-card>\\n<ng-template #staffAttendenceActions>\\n  <form [formGroup]=\\\"massActionForm\\\" (ngSubmit)=\\\"staffAttendenceAction(massActionForm.value,massActionForm.valid)\\\">\\n    <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\">\\n      <mat-form-field class=\\\"px-20 pt-8\\\" fxLayout=\\\"column\\\">\\n        <mat-label translate>Select Action</mat-label>\\n        <mat-select formControlName=\\\"massOption\\\"  (selectionChange)=\\\"onSelect($event)\\\" placeholder=\\\"Select Action\\\">\\n          <mat-option *ngFor=\\\"let attendenceData of attendenceAction\\\" [value]=\\\"attendenceData.value\\\">\\n            {{ attendenceData.label}}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div fxLayout=\\\"column\\\">\\n        <app-custom-timepicker *ngIf=\\\"massActionForm.controls.massOption.value == 1 || massActionForm.controls.massOption.value == 2\\\" formControlName=\\\"time\\\" [is24HoursFormat]=\\\"true\\\" [showLabel]=\\\"false\\\"  class=\\\"w-120 mr-12\\\" [requiredValidator]=true [formClass]=\\\"'pt-8'\\\"></app-custom-timepicker>\\n      </div>\\n\\n      <div fxLayout=\\\"column\\\">\\n        <button [disabled]= \\\"buttonEnable\\\" (click)=\\\"onAction()\\\" type=\\\"submit\\\" mat-raised-button class=\\\"text-uppercase mr-8 mt-20 \\\" translate color=\\\"accent\\\">\\n          {{'Apply' | translate}}\\n        </button>\\n      </div>\\n\\n    </div>\\n  </form>\\n</ng-template>\\n<ng-template #leaveInfoDialog>\\n  <div fxLayout=\\\"column\\\">\\n  <h2 mat-dialog-title translate>Leave Request</h2>\\n  <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n    <div fxLayout=\\\"row\\\" class=\\\"pb-8\\\">\\n      <div class=\\\"w-68\\\">Date</div>\\n      <div><span class=\\\"px-4\\\">:</span>{{ leaveInfo.from + ' - ' + leaveInfo.to }}</div>\\n    </div>\\n    <div fxLayout=\\\"row\\\" class=\\\"pb-8\\\">\\n      <div class=\\\"w-68\\\">Reason</div>\\n      <div><span class=\\\"px-4\\\">:</span><span class=\\\"break-word\\\">{{leaveInfo.reason}}</span></div>\\n    </div>\\n    <div fxLayout=\\\"row\\\" class=\\\"pb-8\\\">\\n      <div class=\\\"w-68\\\">Status</div>\\n      <div><span class=\\\"px-4\\\">:</span><span class=\\\"break-word\\\">{{leaveInfo.status}}</span></div>\\n    </div>\\n    <div fxLayout=\\\"row\\\">\\n      <button mat-button color=\\\"accent\\\" type=\\\"button\\\"  (click)=\\\"leaveRequest()\\\" *ngIf=\\\"this.leaveInfo.attachment\\\" translate><mat-icon class=\\\"mr-4\\\">attachment</mat-icon>View Request Letter</button>\\n    </div>\\n  </div>\\n</div>\\n  <!-- <div mat-dialog-content>\\n    <p>{{'Date: ' + leaveInfo.from + ' - ' + leaveInfo.to }}</p>\\n    <p>{{'Reason:'}}</p>\\n    <div> {{leaveInfo.reason}}</div>\\n  </div> -->\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\"  mat-dialog-actions class=\\\"pb-16\\\">\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"closeLeaveRequest()\\\">{{'Close' | translate}}</button>\\n    </div>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3RhZmYvc3RhZmYtaW5mb3JtYXRpb24tc3lzdGVtL3N0YWZmLWF0dGVuZGVuY2Uvc3RhZmYtYXR0ZW5kZW5jZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { StaffAttendanceService } from 'app/service/staff-attendence/staff-attendence.service';\nimport { AppSettings, Pattern } from 'app/app.constants';\nimport { StaffAttendanceFilterView } from '../../models/staff-attendence-filter-view';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { StaffAttendanceAddResultView } from 'app/models/staff/staff-attendance-add-result-view';\nimport { TimeValidator } from 'app/shared/custom-timepicker/custom-timepicker.validators';\n\n@Component({\n  selector: 'app-staff-attendence',\n  templateUrl: './staff-attendence.component.html',\n  styleUrls: ['./staff-attendence.component.scss'],\n  providers: [StaffAttendanceService, StoreService]\n})\n\nexport class StaffAttendenceComponent extends CommonComponent implements OnInit {\n  @ViewChild('leaveInfoDialog') leaveInfoDialog;\n  @ViewChild('staffAttendanceInput') staffAttendanceInput;\n  currentComponent = 'StaffAttendenceComponent';\n  staffAttendanceForm: FormGroup;\n  massActionForm: FormGroup;\n\n  filterViewModel: StaffAttendanceFilterView;\n  staffAttendenceResultView: StaffAttendanceAddResultView;\n\n  markAttendanceDate = this.getDefaultDate();\n  tableSettings: {};\n  rows: any[];\n  totalRowsCount: number;\n  pageCnt: number;\n  selectedIdsList: any = [];\n  attendenceAction: any[];\n  private leaveInfo: any;\n  dateFormat: any;\n  leaveRequestAttachment: any;\n  selectedAttendenceTypeValue: any;\n  doValidate = false;\n  validate = true;\n  buttonEnable = true;\n  staffAttendancesList: any = [];\n  SelectedOperationEnum = {\n    NUMBER_1: 1,\n    NUMBER_2: 2,\n    NUMBER_3: 3,\n    NUMBER_4: 4,\n    NUMBER_5: 5,\n    NUMBER_6: 6\n  };\n\n  columns = [\n    { field: 'select', header: '', sortRequired: false, searchRequired: false },\n    { field: 'staffName', header: 'Name', sort: true },\n    { field: 'department', header: 'Department', sort: true },\n    { field: 'staffCodes', header: 'Staff Code', sort: true },\n    { field: 'onLeave', header: 'On Leave', sort: false, anchorDialog: true },\n    { field: 'inTime', header: 'In Time', radioAction: true, icon: 'check', activeClass: 'green-fg' },\n    { field: 'outTime', header: 'Out Time', radioAction: true, icon: 'check', activeClass: 'green-fg' },\n    { field: 'isAbscent', header: 'Absent', radioAction: true, icon: 'clear', activeClass: 'red-fg' },\n    { field: 'actions', header: 'Actions', sort: false },\n  ];\n  isTimePickerRequired: boolean;\n\n  constructor(private staffAttendanceService: StaffAttendanceService, private dialogRef: MatDialog, public commonService: CommonService,\n    private storeService: StoreService, public snackBar: MatSnackBar) {\n    super();\n    this.initializeForm();\n    this.initializeTableSettings();\n    this.initializeFilterView();\n    this.dateFormat = this.getSchoolDateFormat();\n  }\n\n  ngOnInit(): void {\n    this.initializeFilterView();\n    this.attendenceAction = [\n      { value: 1, label: 'Record In Time' },\n      { value: 2, label: 'Record Out Time' },\n      { value: 3, label: 'Record Absent' },\n      { value: 4, label: 'Clear In Time' },\n      { value: 5, label: 'Clear Out Time' },\n      { value: 6, label: 'Clear Attendance' }\n    ];\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.filterViewModel = modelTableComponent;\n    }\n    this.getAllFilteredStaffs();\n  }\n  initializeForm(): void {\n    this.massActionForm = new FormGroup({\n      massOption: new FormControl(''),\n      time: new FormControl(null)\n    });\n    this.staffAttendanceForm = new FormGroup({\n      attendanceDate: new FormControl(this.getDefaultDate(), [Validators.required])\n    });\n    this.staffAttendanceForm.valueChanges.subscribe(form => {\n      this.doValidate = true;\n      if (this.staffAttendanceForm.valid) {\n        this.staffAttendanceInput.nativeElement.blur();\n        this.markAttendanceDate = this.commonService.customDateFormat(this.staffAttendanceForm.value.attendanceDate, Pattern.DATE_FORMATE_YEAR).date;\n        this.filterViewModel.pageNumber = AppSettings.PAGENUMBER;\n        this.getAllFilteredStaffs();\n        this.selectedIdsList = [];\n        this.selectedAttendenceTypeValue = undefined;\n        this.massActionForm.reset();\n      }\n    });\n  }\n\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.columns,\n      tablename: 'Staff Attendance Details',\n      componentName: this.currentComponent,\n      model: this.filterViewModel,\n      visibleSelectAll: true,\n      isSelectRowRequired: true,\n      showSelectAll: true,\n    };\n  }\n\n  initializeFilterView(): void {\n    this.filterViewModel = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE\n    };\n  }\n\n  tableData(_event: any): void {\n    this.filterViewModel = _event;\n    this.getAllFilteredStaffs();\n  }\n\n  getAllFilteredStaffs(): void {\n    if (this.staffAttendanceForm.valid) {\n      this.staffAttendanceService.staffAttendances(\n        this.filterViewModel.staffNames,\n        this.commonService.customDateFormat(this.staffAttendanceForm.value.attendanceDate, Pattern.DATE_FORMATE_YEAR).date,\n        this.filterViewModel.departments,\n        this.filterViewModel.staffCodes,\n        this.filterViewModel.absentOrPresents,\n        this.filterViewModel.inTime,\n        this.filterViewModel.inTimeBegin,\n        this.filterViewModel.inTimeEnd,\n        this.filterViewModel.outTime,\n        this.filterViewModel.outTimeBegin,\n        this.filterViewModel.outTimeEnd,\n        this.filterViewModel.sortOrder,\n        this.filterViewModel.sortBy,\n        this.filterViewModel.pageNumber, this.filterViewModel.pageSize\n      )\n        .subscribe(res => {\n          this.bindStaffResult(res);\n        }, error => {\n          this.errorResponse(error);\n        });\n    }\n  }\n\n  bindStaffResult(data: any): void {\n    if (!data.pagedStaffAttendance) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n    } else {\n      this.rows = data.pagedStaffAttendance.list;\n      this.rows.forEach(row => {\n        row.onLeave = (row.onLeave) ? 'YES' : '';\n\n        row.operations = [\n          {\n            name: AppSettings.CLEAR_INTIME,\n            icon: AppSettings.ACCESS_TIME,\n            operationName: 4\n          },\n          {\n            name: AppSettings.CLEAR_OUTTIME,\n            icon: AppSettings.ACCESS_TIME,\n            operationName: 5\n          },\n          {\n            name: AppSettings.CLEAR_ATTENDENCE,\n            icon: AppSettings.DELETE_ICON,\n            operationName: 6\n          }\n        ];\n      });\n      this.totalRowsCount = data.pagedStaffAttendance.totalItems;\n      this.pageCnt = data.pagedStaffAttendance.totalPages;\n\n    }\n\n    this.tableSettings = {\n      model: this.filterViewModel,\n      rows: this.rows,\n      columns: this.columns,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      tablename: 'Staff Attendance Details',\n      componentName: this.currentComponent,\n      isPaginationRequired: true,\n      filtersList: data.filters,\n      isSelectRowRequired: true,\n      isMultiDeleteRequired: false,\n      visibleSelectAll: true,\n      showSelectAll: true,\n      headerOperations: {\n        addingForm: {\n          required: false\n        }\n      }\n    };\n  }\n\n\n  selectedRows(event): void {\n    this.selectedAttendenceTypeValue === undefined ? this.buttonEnable = true : this.buttonEnable = false;\n    this.selectedIdsList = event.length ? event : [];\n    this.buttonEnable = (this.selectedIdsList.length > 0);\n    let t: any;\n    if (this.massActionForm.value.massOption && this.selectedIdsList.length){\n       this.buttonEnable = false;\n    }\n    event.length ? t = '' : this.massActionForm.reset();\n  }\n\n  staffAttendenceAction(data: any, isFormValid: boolean): void {\n    if (isFormValid === null) {\n      this.selectedIdsList = [];\n    }\n    else {\n      isFormValid !== undefined && isFormValid === false ? isFormValid = false : isFormValid = true;\n      if (!isFormValid) {\n        this.doValidate = true;\n        return;\n      }\n      if (data[data.columnName]) {\n        return;\n      }\n    }\n    this.selectedAttendenceTypeValue = null;\n    this.staffAttendenceResultView = {};\n    this.staffAttendenceResultView.staffAttendancAddViews = [];\n    this.selectedIdsList.length !== 0 ? this.staffAttendenceResultView.staffAttendancAddViews\n      = this.selectedIdsList : this.staffAttendenceResultView.staffAttendancAddViews.push(data.clickedRow ? data.clickedRow : data);\n\n    data.columnName != null ? this.selectedAttendenceTypeValue = data.columnName : data.operation != null ? this.selectedAttendenceTypeValue = data.operation :\n      this.selectedAttendenceTypeValue = data.massOption;\n\n    if (this.selectedAttendenceTypeValue === 'outTime' || this.selectedAttendenceTypeValue === 'inTime') {\n      this.massActionForm.value.time = null;\n    }\n    this.massActionForm.value.time = this.massActionForm.value.time === null ?\n      (new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds()) :\n      this.massActionForm.value.time;\n\n    this.staffAttendancesList = [];\n    Object.assign(this.staffAttendancesList, this.staffAttendenceResultView.staffAttendancAddViews);\n\n    if (this.selectedAttendenceTypeValue === this.SelectedOperationEnum.NUMBER_2 || this.selectedAttendenceTypeValue === 'outTime') {\n      this.staffAttendenceResultView.inTime = null;\n      const filterTemp = this.staffAttendancesList.filter(elt => elt.inTime === null);\n      if (filterTemp && filterTemp.length) {\n        this.openSnackBar(this.staffAttendenceResultView.staffAttendancAddViews.length === 1 ? AppSettings.IN_TIME_REQUIRED : AppSettings.IN_TIME_REQUIRED_MULTI, true);\n        return;\n      } else\n        if (this.staffAttendancesList.filter(elt => elt.inTime > this.massActionForm.value.time).length > 0) {\n          this.openSnackBar(this.staffAttendenceResultView.staffAttendancAddViews.length === 1 ?\n            AppSettings.IN_TIME_GREATER_OUT_TIME : AppSettings.IN_TIME_GREATER_OUT_TIME_MULTI, true);\n          return;\n        }\n    } else if (this.selectedAttendenceTypeValue === this.SelectedOperationEnum.NUMBER_1 || this.selectedAttendenceTypeValue === 'inTime') {\n      if (this.staffAttendancesList.filter(elt =>\n        (elt.outTime)\n        && elt.outTime < this.massActionForm.value.time).length > 0) {\n        this.openSnackBar(this.staffAttendenceResultView.staffAttendancAddViews.length === 1 ?\n          AppSettings.IN_TIME_GREATER_OUT_TIME : AppSettings.IN_TIME_GREATER_OUT_TIME_MULTI, true);\n        return;\n      }\n    }\n\n    this.attendenceTypeAction(this.selectedAttendenceTypeValue);\n    this.staffAttendanceService.markStaffAttendances(this.staffAttendenceResultView).subscribe(res => {\n      this.attendenceResponse();\n    },\n      error => {\n        this.errorResponse(error);\n      });\n  }\n  attendenceResponse(): void {\n    this.doValidate = false;\n    this.getAllFilteredStaffs();\n    this.removeValidators();\n    this.massActionForm.reset();\n    this.selectedIdsList = [];\n    this.selectedAttendenceTypeValue = undefined;\n    this.buttonEnable = true;\n    this.massActionForm.patchValue({ 'massOption': null, 'time': null });\n  }\n\n  showLeaveInfo(row): void {\n    const rowData = row.leaveRequestInfo;\n    this.leaveInfo = {};\n    this.leaveInfo.from = this.commonService.customDateFormat(rowData.fromDate, this.dateFormat).date;\n    this.leaveInfo.to = this.commonService.customDateFormat(rowData.toDate, this.dateFormat).date;\n    this.leaveInfo.reason = rowData.reason;\n    this.leaveInfo.attachment = rowData.fileValue;\n    this.leaveInfo.status = rowData.status;\n    this.dialogRef.open(CustomDialogComponent, {\n      disableClose: true,\n      panelClass: 'custom-modalbox',\n      width: '400px',\n      data: { template: this.leaveInfoDialog },\n    });\n  }\n  closeLeaveRequest(): void {\n    this.dialogRef.closeAll();\n  }\n  leaveRequest(): void {\n    if (this.leaveInfo.attachment) {\n      this.leaveRequestAttachment = this.storeService.getFilePath(this.leaveInfo.attachment);\n      window.open(this.leaveRequestAttachment);\n    }\n  }\n\n  setValidators(): void {\n    this.massActionForm.get('time').setValidators([TimeValidator.validateTimeRequired]);\n    this.massActionForm.get('time').updateValueAndValidity();\n  }\n\n  removeValidators(): void {\n    this.massActionForm.get('time').clearValidators();\n    this.massActionForm.controls.time.markAsPristine();\n    this.massActionForm.get('time').updateValueAndValidity();\n  }\n\n  attendenceTypeAction(data): void {\n    this.staffAttendenceResultView.isAbscent = this.staffAttendenceResultView.isAbscent ? this.staffAttendenceResultView.isAbscent : null;\n    this.staffAttendenceResultView.calendarDate = this.commonService.customDateFormat(this.staffAttendanceForm.value.attendanceDate, Pattern.DATE_FORMATE_YEAR).date;\n\n    switch (data) {\n      case this.SelectedOperationEnum.NUMBER_1:\n      case 'inTime':\n        this.staffAttendenceResultView.selectedOperation = this.SelectedOperationEnum.NUMBER_1;\n        this.staffAttendenceResultView.inTime = (this.massActionForm.value.time === ':' || this.massActionForm.value.time === null) ?\n          (new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds()) :\n          this.massActionForm.value.time;\n        break;\n      case this.SelectedOperationEnum.NUMBER_2:\n      case 'outTime':\n        this.staffAttendenceResultView.selectedOperation = this.SelectedOperationEnum.NUMBER_2;\n        this.staffAttendenceResultView.outTime = (this.massActionForm.value.time === ':' || this.massActionForm.value.time === null) ?\n          (new Date().getHours() + ':' + new Date().getMinutes() + ':' + new Date().getSeconds()) :\n          this.massActionForm.value.time;\n        break;\n      case 'isAbscent':\n      case this.SelectedOperationEnum.NUMBER_3:\n        this.staffAttendenceResultView.selectedOperation = this.SelectedOperationEnum.NUMBER_3;\n        this.staffAttendenceResultView.isAbscent = '1';\n        break;\n      case 'clear in time':\n      case this.SelectedOperationEnum.NUMBER_4:\n        this.staffAttendenceResultView.selectedOperation = this.SelectedOperationEnum.NUMBER_4;\n        break;\n      case 'clear out time':\n      case this.SelectedOperationEnum.NUMBER_5:\n        this.staffAttendenceResultView.selectedOperation = this.SelectedOperationEnum.NUMBER_5;\n        break;\n      default:\n        this.staffAttendenceResultView.selectedOperation = this.SelectedOperationEnum.NUMBER_6;\n    }\n  }\n\n  onSelect(data): void {\n    this.buttonEnable = false;\n    this.selectedAttendenceTypeValue = data.value;\n    this.selectedAttendenceTypeValue === 1 ||\n      this.selectedAttendenceTypeValue === 2 ? (this.isTimePickerRequired = true, this.setValidators()) : (this.isTimePickerRequired = false, this.removeValidators());\n  }\n\n  onAction(): void {\n    if (!this.massActionForm.valid) {\n      this.massActionForm.controls.time.markAsDirty();\n      this.massActionForm.controls.time.updateValueAndValidity();\n      return;\n    }\n  }\n\n}\n","module.exports = \"<div class=\\\"px-sm-40 pt-sm-40\\\">\\n  <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"searchStaff(searchForm.value)\\\">\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\">\\n        <mat-label translate #staffType>StaffType</mat-label>\\n        <mat-select formControlName=\\\"staffTypeIds\\\">\\n          <mat-option *ngFor=\\\"let staffType of staffTypes\\\" [value]=\\\"staffType.value\\\">\\n            {{ staffType.label }}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"60\\\" class=\\\"px-sm-20\\\">\\n        <input #staffName matInput placeholder=\\\"{{'Search Staff' | translate}}\\\" formControlName=\\\"staffName\\\" aria-label=\\\"StaffName\\\"\\n          matInput [matAutocomplete]=\\\"auto\\\"\\n          (keyup)=\\\"preventSpace($event,'searchForm','staffName')\\\" \\n          (blur)=\\\"trimTextBoxSpaces('searchForm','staffName')\\\"\\n          >\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\"\\n          (optionSelected)='getSelectedStaff($event.option.value)'>\\n          <mat-option *ngFor=\\\"let option of filterdStaffs\\\" [value]=\\\"option.staffName\\\">\\n            {{option.staffName}}\\n            <span class=\\\"grey-400-fg\\\"> {{option.position}} </span>\\n          </mat-option>\\n        </mat-autocomplete>\\n      </mat-form-field>\\n   \\n      <div class=\\\"pb-20\\\" fxLayout=\\\"row\\\">\\n        <button mat-raised-button color=\\\"accent\\\" type=\\\"submit\\\" class=\\\" text-uppercase mr-12\\\">{{'Search' | translate}}\\n          <!-- <mat-icon class=\\\"ml-8\\\">search</mat-icon> -->\\n        </button>\\n        <button mat-raised-button type=\\\"button\\\" class=\\\"text-uppercase\\\" (click)=\\\"onClear(true)\\\">\\n          {{'Clear' | translate}}\\n        </button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\\n<app-table [settings]='tableSettings' (getTableData)='tableData($event)' (rowBasedAction)='actions($event)'\\n  [closeRowForm]=closeForm (openAddForm)='openForm()' (resetFilter)='onClear()'>\\n</app-table>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3RhZmYvc3RhZmYtaW5mb3JtYXRpb24tc3lzdGVtL3N0YWZmLWRhdGFiYXNlL3N0YWZmLWRhdGFiYXNlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CommonService } from 'app/service/common.service';\nimport { AppSettings } from 'app/app.constants';\nimport 'rxjs/add/operator/debounceTime';\nimport { StaffMemberFilterView } from '../../model/staff-member-filter-view';\nimport { StaffMemberService } from 'app/service/staff/staff-member.service';\nimport { RouteConfig } from 'app/url.config';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { MatDialog, MatSnackBar, MatAutocompleteTrigger } from '@angular/material';\nimport { StaffStatusView } from '../model/staff-status-view';\nimport { StaffJobApplicationService } from 'app/service/staff/staff-job-application.service';\n\n@Component({\n  selector: 'app-staff-database',\n  templateUrl: './staff-database.component.html',\n  styleUrls: ['./staff-database.component.scss']\n})\nexport class StaffDatabaseComponent extends CommonComponent implements OnInit {\n  @ViewChild(MatAutocompleteTrigger) _auto: MatAutocompleteTrigger;\n  @ViewChild('staffName') studentNameAutoInput: any;\n\n  tableSettings: {};\n  staffTypes: Array<{ label: string, value: string }> = [];\n  columns: any[];\n  totalRowsCount: number;\n  pageCnt: number;\n  rows: Array<any>;\n  filterViewModel: StaffMemberFilterView;\n  staffStatusView: StaffStatusView;\n  currentComponent = 'StaffDatabaseComponent';\n  searchForm: FormGroup;\n  filterdStaffs: Array<any> = [];\n  closeForm: boolean;\n  applicationInfo: any;\n  profileImage: any;\n  status: Array<any> = [];\n  httpStatus: any;\n  onSearch = false;\n  constructor(private router: Router, public commonService: CommonService,\n    public staffJobApplicationService: StaffJobApplicationService, private staffService: StaffMemberService, private storeService: StoreService,\n    private cd: ChangeDetectorRef, public dialog: MatDialog, public snackBar: MatSnackBar) {\n    super();\n    this.initializeFilterView();\n    this.setColumnHeaders();\n    this.initializeTableSettings();\n    this.staffStatusView = {};\n  }\n\n  ngOnInit(): void {\n    this.httpStatus = require('http-status-codes');\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.onSearch = true;\n      this.filterViewModel = modelTableComponent;\n    }\n    this.initializeForm();\n    this.status = [];\n    this.getAllFilteredStaffs(this.filterViewModel);\n    this.searchForm.controls['staffName'].valueChanges.debounceTime(200).subscribe((name) => {\n      name = typeof (name) === 'string' ? name.trim() : name;\n      if (name !== null && name.length >= 3) {\n        this.staffService.staffSearch(name).subscribe((res) => {\n          this.filterdStaffs = (res.staffSearchViewResult && res.staffSearchViewResult.length > 0) ? res.staffSearchViewResult : [];\n          this.cd.detectChanges();\n        });\n      }\n      else {\n        this.filterdStaffs = [];\n      }\n    });\n  }\n  initializeForm(): void {\n    this.searchForm = new FormGroup({\n      staffName: new FormControl(null),\n      staffTypeIds: new FormControl(null),\n    });\n    this.staffJobApplicationService.fetchStaffTypes().subscribe(res => this.staffTypes = res.map((obj: any) => ({ value: obj.id, label: obj.name })));\n  }\n\n  initializeFilterView(): void {\n    this.filterViewModel = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n      statusIds: [],\n      staffNames: [],\n      staffCodes: [],\n      departments: [],\n      staffTypeIds: []\n    };\n  }\n  setColumnHeaders(): void {\n    this.columns = [\n      { field: 'staffName', header: 'Name', sort: true },\n      { field: 'staffCode', header: 'Staff Code', sort: true },\n      { field: 'statusName', header: 'Status', sort: true },\n      { field: 'department', header: 'Department', sort: true },\n      { field: 'staffType', header: 'StaffType', sort: true },\n      { field: 'actions', header: 'Actions', sort: false }\n    ];\n  }\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.columns,\n      tablename: 'Staff Database',\n      componentName: this.currentComponent,\n      model: this.filterViewModel,\n      filtersList: [],\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: AppSettings.NEW\n        },\n        infoButton: {\n          required: true,\n          text: 'Staff Database'\n        }\n      }\n    };\n  }\n\n  tableData(_event: StaffMemberFilterView): void {\n    this.filterViewModel = _event;\n    const data = this.searchForm.value;\n    if (this.onSearch){\n      this.filterViewModel.staffNames = data.staffName  ? [data.staffName] : [];\n      this.filterViewModel.staffTypeIds = data.staffTypeIds ? [data.staffTypeIds] : [];\n    }else {\n      this.filterViewModel.staffTypeIds = [];\n      this.filterViewModel.staffNames = [];\n    }\n    this.getAllFilteredStaffs(this.filterViewModel);\n  }\n\n  getAllFilteredStaffs(data: any): void {\n    this.setModelDataTableComponent(this.currentComponent, this.filterViewModel);\n    this.staffService.staffMembers(data.sortBy, data.statusIds, data.staffNames,\n      data.staffCodes, data.departments, data.staffTypeIds, data.sortOrder,\n      data.pageNumber, data.pageSize).\n      subscribe((res) => {\n        this.bindStaffResult(res);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  // bindStudentResult(data: StudentResultView): void {\n  bindStaffResult(data: any): void {\n    if (!data.staffDataView) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n      if (this.filterViewModel.staffNames &&\n        this.filterViewModel.staffNames[0]){\n          this.studentNameAutoInput.nativeElement.value = this.filterViewModel.staffNames[0];\n      }\n    } else {\n      this.rows = data.staffDataView.list;\n      this.totalRowsCount = data.staffDataView.totalItems;\n      this.pageCnt = data.staffDataView.totalPages;\n      this.rows.forEach(e => {\n        if (e.statusName === AppSettings.Active) {\n          e.operations = [\n            {\n              name: AppSettings.EDIT_OPERATION,\n              icon: AppSettings.EDIT,\n              operationName: AppSettings.EDIT\n            }, {\n              name: AppSettings.VIEW,\n              icon: AppSettings.DETAILS_ICON,\n              operationName: AppSettings.VIEW\n            },\n            {\n              name: AppSettings.INACTIVE_OPERATION,\n              icon: AppSettings.INACTIVE_ICON,\n            }\n          ];\n        }\n        else {\n          e.operations = [\n            {\n              name: AppSettings.EDIT_OPERATION,\n              icon: AppSettings.EDIT,\n              operationName: AppSettings.EDIT\n            }, {\n              name: AppSettings.VIEW,\n              icon: AppSettings.DETAILS_ICON,\n              operationName: AppSettings.VIEW\n            },\n            {\n              name: AppSettings.ACTIVE_OPERATION,\n              icon: AppSettings.ACTIVE_ICON,\n            }\n          ];\n        }\n      });\n\n      if (data.filters) {\n        data.filters.forEach(s => {\n          if (s.label === AppSettings.STATUS) {\n            this.status = [];\n            s.options.forEach(element => {\n              this.status.push({\n                value: element.value,\n                label: element.label\n              });\n            });\n          }\n        });\n      }\n      if (this.filterViewModel.staffNames && this.filterViewModel.staffNames[0]){\n        this.studentNameAutoInput.nativeElement.value = this.filterViewModel.staffNames[0];\n      }\n    }\n    if (data.staffDataView != null) {\n      this.filterViewModel.pageNumber = data.staffDataView.pageNumber;\n    }\n\n    this.tableSettings = {\n      model: this.filterViewModel,\n      rows: this.rows,\n      columns: this.columns,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      tablename: 'Staff Database',\n      componentName: this.currentComponent,\n      isPaginationRequired: true,\n      filtersList: data.filters,\n      headerOperations: {\n        addingForm: {\n          required: true\n        }\n      }\n    };\n    if (localStorage.getItem('_stId') != null\n      && this.staffTypes.find(x => x.label === localStorage.getItem('_stId')) !== undefined) {\n      this.searchForm.controls['staffTypeIds'].setValue(this.staffTypes.find(x => x.label === localStorage.getItem('_stId')).value);\n    }\n    if (localStorage.getItem('_stNm') != null) {\n      this.searchForm.controls['staffName'].setValue(localStorage.getItem('_stNm'));\n    }\n  }\n\n  displayFn(data: any): void {\n    if (data) {\n      return data || data.staffName;\n    }\n  }\n\n  // Actions Performing on the row\n  actions(operationData: any): void {\n    if (operationData.operation === AppSettings.VIEW.toLowerCase()) {\n      this.router.navigate([RouteConfig._Staff_View + '/' + operationData.clickedRow.id]);\n    } else if (operationData.operation === AppSettings.EDIT.toLowerCase()) {\n      this.router.navigate([RouteConfig._Staff_Edit + '/' + operationData.clickedRow.id]);\n    }\n    else {\n      const upper = operationData.operation.replace(/^\\w/, c => c.toUpperCase());\n      const dialogRef = this.dialog.open(CustomDialogComponent, {\n        disableClose: true,\n        data: {\n          text: this.commonService.getTranslation(AppSettings.STAFF_STATUS + ' '\n            + upper, operationData.operation), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES\n        },\n      });\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          const sId = this.status.find(x => x.label.toLowerCase() === upper.toLowerCase());\n          this.staffStatusView = {\n            staffId: operationData.clickedRow.id,\n            statusId: sId.value\n          };\n          this.staffService.staffStatus(this.staffStatusView).subscribe(res => {\n            if (res.statusCode === this.httpStatus.OK) {\n              this.getAllFilteredStaffs(this.filterViewModel);\n              this.openSnackBar(res.messages.ResultMessage);\n            }\n            else {\n              this.openSnackBar(res.messages.ResultMessage, true);\n            }\n          }, error => {\n            this.errorResponse(error);\n          });\n        }\n        if (action === AppSettings.NO) {\n          this.dialog.closeAll();\n        }\n      });\n    }\n  }\n\n  getStaffDetails(data): void {\n    this.applicationInfo = data.staffMemberDetails;\n    if (data.staffMemberDetails.person.attachment) {\n      this.profileImage = this.storeService.getFilePath(data.staffMemberDetails.person.attachment.fileName);\n    }\n    if (this.applicationInfo.attachment) {\n      const fileExtension = this.applicationInfo.attachment.fileName.replace(/^.*\\./, '');\n    }\n    this.cd.detectChanges();\n  }\n  openForm(): void {\n    this.router.navigate([RouteConfig._Staff_Edit]);\n  }\n  onClear(fromHeader = false): void {\n    if (fromHeader){\n      this.searchForm.reset();\n      localStorage.removeItem('_stId');\n      localStorage.removeItem('_stNm');\n      this.filterViewModel.staffTypeIds = [];\n      this.filterViewModel.staffNames = [];\n      this.onSearch = false;\n    }\n    this.setModelDataTableComponent(this.currentComponent, this.filterViewModel);\n    this.getAllFilteredStaffs(this.filterViewModel);\n  }\n  searchStaff(data: any): void {\n    this.onSearch = true;\n    if (data.staffTypeIds != null) {\n      localStorage.setItem('_stId', this.staffTypes.find(x => x.value === data.staffTypeIds).label);\n    }\n    if (data.staffName !== null) {\n      localStorage.setItem('_stNm', data.staffName);\n    }\n    this.filterViewModel.staffNames = data.staffName !== null ? [data.staffName] : [];\n    this.filterViewModel.staffTypeIds = data.staffTypeIds !== null ? [data.staffTypeIds] : [];\n    this.getAllFilteredStaffs(this.filterViewModel);\n  }\n\n  getSelectedStaff(value: any): void {\n    if (value.id !== undefined) {\n      this.searchForm.controls['staffName'].setValue(value);\n    }\n  }\n}\n\n","module.exports = \"<div class=\\\"content p-sm-40\\\">\\n  <div class=\\\"ml-20 p-8 text-uppercase font-size-18\\\" translate>staff Member Details</div>\\n  <div class=\\\"w-100-p mat-elevation-z2 simple-table-container radius-20 mb-20\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"p-20\\\">\\n      <button mat-raised-button color=\\\"primary\\\" translate (click)=\\\"back()\\\" class=\\\"text-uppercase\\\">{{'Back' | translate}}</button>\\n      <button mat-button (click)=\\\"getHelpText('Staff Database')\\\">\\n        <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n      </button>\\n    </div>\\n    <mat-divider></mat-divider>\\n\\n    <div fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"p-24\\\">\\n\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"65\\\" fxFlexFill>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center start\\\">\\n          <div class=\\\"profile-image border m-12 radius-10\\\" fxLayout=\\\"column\\\">\\n            <img *ngIf=\\\"profileImage\\\" [src]=\\\"profileImage ? profileImage : ''\\\" class=\\\"w-200 h-200 radius-10\\\"\\n              alt=\\\"No Image\\\" />\\n            <div *ngIf=\\\"!profileImage\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"w-200 h-200\\\">No Image</div>\\n          </div>\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n            <div class=\\\"h2 primary-900-fg-custom mb-16 break-word\\\">{{(staffData?.staffName)}}</div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n              <div class=\\\"w-100 py-4 primary-300-fg\\\" translate>mobilenumber</div> : <div class=\\\"ml-24 break-word\\\">\\n                {{staffData?.contactInfo?.mobileNumber ? staffData?.contactInfo?.mobileNumber  : \\\"-\\\"}}</div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n              <div class=\\\"w-100 py-4 primary-300-fg\\\" translate>email</div> : <div class=\\\"ml-24 break-word\\\">\\n                {{staffData?.contactInfo?.primaryEmail ? staffData?.contactInfo?.primaryEmail : \\\"-\\\"}}</div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n              <div class=\\\"w-100 py-4 primary-300-fg\\\" translate>status</div> : <div class=\\\"ml-24 break-word\\\">\\n                {{ staffData?.statusName ? staffData?.statusName  : \\\"-\\\"}}</div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n              <div class=\\\"w-100 py-4 primary-300-fg\\\" translate>Date of Join</div> : <div class=\\\"ml-24 break-word\\\">\\n                {{ staffData?.dateOfJoin ? staffData?.dateOfJoin  : \\\"-\\\"}}</div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div fxLayout=\\\"column\\\" class=\\\"mx-sm-12\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"35\\\">\\n        <div fxLayout=\\\"row\\\">\\n          <div class=\\\"w-160 py-4 primary-300-fg\\\" translate>Staff Code</div> : <div class=\\\"pl-8 break-word\\\">\\n            {{ staffData?.staffCode ? staffData?.staffCode  : \\\"-\\\"}}</div>\\n        </div>\\n        <div fxLayout=\\\"row\\\">\\n          <div class=\\\"w-160 py-4 primary-300-fg\\\" translate>Staff Type</div> : <div class=\\\"pl-8 break-word\\\">\\n            {{ staffData?.staffType ? staffData?.staffType  : \\\"-\\\"}}</div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" >\\n          <div class=\\\"w-160 py-4 primary-300-fg\\\" translate>Department</div> : <div class=\\\"pl-8 break-word\\\">\\n            {{ staffData?.department ? staffData?.department  : \\\"-\\\"}}</div>\\n        </div>\\n        <div fxLayout=\\\"row\\\">\\n          <div class=\\\"w-160 py-4 primary-300-fg\\\" translate>Position</div> : <div class=\\\"pl-8 break-word\\\">\\n            {{ staffData?.position ? staffData?.position  : \\\"-\\\"}}</div>\\n        </div>\\n        <div fxLayout=\\\"row\\\">\\n          <div class=\\\"w-160 py-4 primary-300-fg\\\" translate>processedComments</div> : <div class=\\\"pl-8 break-word\\\">\\n            {{ staffData?.processedComments ? staffData?.processedComments  : \\\"-\\\"}}</div>\\n        </div>\\n        \\n      </div>\\n    </div>\\n  </div>\\n  <app-job-application-details-view [staffJobApplicantDetailsView]=\\\"applicantInfo\\\"></app-job-application-details-view>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3RhZmYvc3RhZmYtaW5mb3JtYXRpb24tc3lzdGVtL3N0YWZmLWRldGFpbC9zdGFmZi1kZXRhaWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, OnChanges, SimpleChanges, ChangeDetectorRef } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { StaffMemberService } from 'app/service/staff/staff-member.service';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { RouteConfig } from 'app/url.config';\nimport { StaffMemberViewResult } from '../../staff-admissions/model/staff-member-view-result';\nimport { MatSnackBar } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\n\n@Component({\n  selector: 'app-staff-detail',\n  templateUrl: './staff-detail.component.html',\n  styleUrls: ['./staff-detail.component.scss']\n})\nexport class StaffDetailComponent extends CommonComponent implements OnInit, OnChanges {\n\n  applicantInfo: any;\n  profileImage: any;\n  staffId: string;\n  acord: Array<Acord> = [];\n  staffData: any;\n  // applicantInfo: any;\n\n\n  constructor(private router: Router, public commonService: CommonService, private staffService: StaffMemberService, private storeService: StoreService,\n    private changeDetector: ChangeDetectorRef, private route: ActivatedRoute, public snackBar: MatSnackBar, public location: Location) {\n    super();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    // if (changes.applicantInfo.currentValue) {\n    //   if (this.applicantInfo.staffJobApplicantDetailsView && this.applicantInfo.staffJobApplicantDetailsView.applicationPerson.attachment) {\n    //     this.profileImage = this.storeService.getFilePath(this.applicantInfo.staffJobApplicantDetailsView.applicationPerson.attachment.fileName);\n    //   }\n    //   this.changeDetector.detectChanges();\n    // }\n  }\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.staffId = params.id;\n        this.getStaffDetails();\n      }\n    });\n  }\n\n\n\n  getStaffDetails(): void {\n    this.staffService.staffMemberDetails(this.staffId).subscribe(data => {\n      this.bindStaffDetails(data);\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n  bindStaffDetails(data: any): void {\n    this.staffData = data;\n    for (const key in data) { // Iterating over Key\n      if (key !== 'messages' && key !== 'statusCode') {\n        if (typeof (data[key]) !== 'object') {\n          //// Bind detailCard Data\n        }\n        else if (data[key] !== null) {\n          this.acord.push({ AccordianName: key, Items: this.getKeyValuesOfObject(data[key]) });\n        }\n      }\n    }\n    this.applicantInfo = this.acord;\n    if (data.attachmentName != null) {\n      this.profileImage = this.storeService.getFilePath(data.attachmentName);\n    }\n  }\n\n  getFormatedName(data: { middleName: string, lastName: string, firstName: string }): void {\n    if (data) {\n      if (data.middleName) {\n        const fullName: any = data.firstName + ' ' + data.middleName + ' ' + data.lastName;\n        return fullName.replace(/  +/g, ' ').trim();\n      }\n      else {\n        const fullName: any = data.firstName + ' ' + data.lastName;\n        return fullName.replace(/  +/g, ' ').trim();\n      }\n    }\n  }\n}\n\nexport interface Acord {\n  AccordianName: string;\n  Items: Array<{ Label: string, Value: string }>;\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TeacherScheduleComponent } from './teacher-schedule/teacher-schedule.component';\nimport { SchoolFacilityRepresentativesComponent } from './school-facility-representatives/school-facility-representatives.component';\nimport { ClassTeacherManagementComponent } from './class-teacher-management/class-teacher-management.component';\nimport { StaffLeaveRequestsComponent } from './staff-leave-request/staff-leave-requests.component';\nimport { StaffDatabaseComponent } from './staff-database/staff-database.component';\nimport { AddStaffAdmissionFormComponent } from '../../../shared/add-staff-admission-form/add-staff-admission-form.component';\nimport { StaffAttendenceComponent } from './staff-attendence/staff-attendence.component';\nimport { StaffDetailComponent } from './staff-detail/staff-detail.component';\n\n\nconst routes: Routes = [\n  { path: 'teacher-schedule', component: TeacherScheduleComponent,  data: {title: 'Teacher Schedule'}  },\n  { path: 'school-facility-representatives', component: SchoolFacilityRepresentativesComponent,  data: {title: 'School Facility Representatives'}  },\n  { path: 'class-teacher-management', component: ClassTeacherManagementComponent,  data: {title: 'Class Teacher Management'}  },\n  { path: 'staff-database', component: StaffDatabaseComponent,  data: {title: 'Staff Database'}  },\n  { path: 'staff-leave-requests', component: StaffLeaveRequestsComponent,  data: {title: 'Staff Leave Requests'}  },\n  { path: 'staff-database/add-staff-admission-form', component: AddStaffAdmissionFormComponent,  data: {title: 'Admission Form'}  },\n  { path: 'staff-database/add-staff-admission-form/:applicationId', component: AddStaffAdmissionFormComponent,  data: {title: 'Admission Form'}  },\n  { path: 'staff-attendance', component: StaffAttendenceComponent,  data: {title: 'Staff Attendance'}  },\n  { path: 'staff-database/staff-detail/:id', component: StaffDetailComponent,  data: {title: 'Staff- Details'}  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StaffInformationSystemRoutingModule { }\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StaffInformationSystemRoutingModule } from './staff-information-system-routing.module';\nimport { SchoolFacilityRepresentativesComponent } from './school-facility-representatives/school-facility-representatives.component';\nimport { ClassTeacherManagementComponent } from './class-teacher-management/class-teacher-management.component';\nimport { StaffDatabaseComponent } from './staff-database/staff-database.component';\nimport { MatcomponentsModule } from 'app/main/matcomponents.module';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedManagementModule } from 'app/shared/shared.module';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from 'app/interceptors/token-interceptor';\nimport { StaffLeaveRequestsComponent } from './staff-leave-request/staff-leave-requests.component';\nimport { StaffMemberService } from 'app/service/staff/staff-member.service';\nimport { AddStaffAdmissionFormComponent } from '../../../shared/add-staff-admission-form/add-staff-admission-form.component';\nimport { StaffAttendenceComponent } from './staff-attendence/staff-attendence.component';\nimport { TeachersSchedulesService } from 'app/service/staff-information-system/teachers-schedules.service';\nimport { StaffCommonService } from 'app/service/staff/staffCommon.service';\nimport { TeacherScheduleComponent } from './teacher-schedule/teacher-schedule.component';\nimport { StaffDetailComponent } from './staff-detail/staff-detail.component';\nimport { StaffAdmissionsModule } from '../staff-admissions/staff-admissions.module';\nimport { StaffJobApplicationService } from 'app/service/staff/staff-job-application.service';\n\n@NgModule({\n  declarations: [ClassTeacherManagementComponent,\n    StaffDatabaseComponent, StaffLeaveRequestsComponent, SchoolFacilityRepresentativesComponent, StaffAttendenceComponent,\n    TeacherScheduleComponent,\n    StaffDetailComponent],\n  imports: [\n    CommonModule,\n    MatcomponentsModule,\n    RouterModule,\n    FormsModule,\n    FuseSharedModule,\n    ReactiveFormsModule,\n    SharedManagementModule,\n    Ng2TelInputModule,\n    TranslateModule,    \n    StaffInformationSystemRoutingModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n    StaffMemberService,\n    TeachersSchedulesService,\n    StaffCommonService,\n    StaffJobApplicationService\n  ],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n  exports: [],\n})\nexport class StaffInformationSystemModule { }\n","module.exports = \"<app-table [settings]=\\\"tabSettings\\\" (getTableData)='staffLeaveRequestData($event)' (rowBasedAction)='rowActions($event)'\\n    [closeRowForm]='closeAddPanel' (openAddForm)=\\\"openForm()\\\" [templateRef]=\\\"addStaffLeaveRequest\\\">\\n</app-table>\\n\\n<ng-template #addStaffLeaveRequest>\\n    <form [formGroup]=\\\"leaveRequestForm\\\" (ngSubmit)=\\\"createOrUpdateLeaveRequest()\\\" #staffLeaveRequestForm=\\\"ngForm\\\">\\n\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-24\\\" fxLayout.gt-xs=\\\"row\\\">\\n\\n            <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"32\\\">\\n                <mat-label translate #stafftype>Select Staff Type</mat-label>\\n                <mat-select formControlName=\\\"staffTypeId\\\" required\\n                    (selectionChange)=\\\"getStaffs($event)\\\">\\n                    <mat-option *ngFor=\\\"let staffType of staffTypes\\\" [value]=\\\"staffType.code\\\">\\n                        {{ staffType.label }}</mat-option>\\n                </mat-select>\\n                <mat-error>\\n                    <app-validation [labelName]=\\\"stafftype.innerText\\\"\\n                        [validationControl]=\\\"leaveRequestForm.controls.staffTypeId\\\" [doValidate]=\\\"isFormSubmitted\\\">\\n                    </app-validation>\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlexFill appearance=\\\"outline\\\" class=\\\"px-sm-20\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"100\\\"\\n                fxFlex.gt-xs=\\\"36\\\">\\n                <mat-label translate #staff>Select Staff</mat-label>\\n                <mat-select formControlName=\\\"staffId\\\" required>\\n                    <mat-option *ngFor=\\\"let staff of staffs\\\" [value]=\\\"staff.value\\\">\\n                        {{ staff.label }}</mat-option>\\n                </mat-select>\\n                <mat-error>\\n                    <app-validation [labelName]=\\\"staff.innerText\\\"\\n                        [validationControl]=\\\"leaveRequestForm.controls.staffId\\\" [doValidate]=\\\"isFormSubmitted\\\">\\n                    </app-validation>\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"32\\\">\\n                <mat-label translate #reason>Reason</mat-label>\\n                <input (keyup)=\\\"preventSpace($event,'leaveRequestForm','reason')\\\" required matInput formControlName=\\\"reason\\\" (blur)=\\\"trimTextBoxSpaces('leaveRequestForm','reason')\\\">\\n                <mat-error>\\n                    <app-validation [labelName]=\\\"reason.innerText\\\"\\n                        [validationControl]=\\\"leaveRequestForm.controls.reason\\\" [doValidate]=\\\"isFormSubmitted\\\">\\n                    </app-validation>\\n                </mat-error>\\n            </mat-form-field>\\n        </div>\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" class=\\\"pt-sm-12\\\">\\n            <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"32\\\" class=\\\"icon-center\\\">\\n                <mat-label #fromDate translate>From Date</mat-label>\\n                <input matInput (keyup)=\\\"forceValidation('fromDate',leaveRequestForm)\\\" [matDatepicker]=\\\"fromDatePicker\\\"\\n                    formControlName=\\\"fromDate\\\" [min]=\\\"minDate\\\" required>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"fromDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #fromDatePicker></mat-datepicker>\\n                <mat-error>\\n                    <app-validation [labelName]='fromDate.innerText'\\n                        [validationControl]=\\\"leaveRequestForm.controls.fromDate\\\" [doValidate]=\\\"isFormSubmitted\\\">\\n                    </app-validation>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"px-sm-24 icon-center\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"100\\\"\\n                fxFlex.gt-xs=\\\"36\\\">\\n                <mat-label #toDate translate>To Date</mat-label>\\n                <input matInput (keyup)=\\\"forceValidation('toDate',leaveRequestForm)\\\" [matDatepicker]=\\\"toDatePicker\\\"\\n                    formControlName=\\\"toDate\\\" [min]=\\\"leaveRequestForm.controls.fromDate.value\\\" required>\\n                <mat-datepicker-toggle matSuffix [for]=\\\"toDatePicker\\\"></mat-datepicker-toggle>\\n                <mat-datepicker #toDatePicker></mat-datepicker>\\n                <mat-error>\\n                    <app-validation [labelName]='toDate.innerText'\\n                        [validationControl]=\\\"leaveRequestForm.controls.toDate\\\" [doValidate]=\\\"isFormSubmitted\\\">\\n                    </app-validation>\\n                </mat-error>\\n            </mat-form-field>\\n            <div fxLayout=\\\"column\\\" class=\\\"mt-12\\\">\\n                <div fxLayout=\\\"row\\\">\\n                    <button mat-raised-button type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"logoImgInput.value='';logoImgInput.click()\\\">\\n                        <mat-icon class=\\\"mr-8\\\">attachment</mat-icon>{{'Attach Leave Letter' | translate}}\\n                    </button>\\n                    <button mat-icon-button *ngIf=\\\"uploadFiles.value.staffFileNameWithExtension\\\" type=\\\"button\\\">\\n                        <mat-icon class=\\\"mb-4 grey-600-fg\\\" (click)=\\\"logoImgInput.value='';clearImages(true)\\\">highlight_off</mat-icon>\\n                    </button>\\n                </div>\\n                <input [accept]=\\\"'.doc,.docx,image/jpeg,image/jpg,image/png,application/pdf,image/*'\\\" id=\\\"logoImgInput\\\"\\n                    (change)=\\\"imgChanged(logoImgInput.files)\\\" fxHide type=\\\"file\\\" #logoImgInput>\\n                <div [style.visibility]=\\\"uploadFiles?.value?.staffFileNameWithExtension ? 'visible' : 'hidden'\\\" class=\\\"pt-8 logo-name break-word\\\">\\n                    {{uploadFiles?.value?.staffFileNameWithExtension}}</div>\\n            </div>\\n\\n        </div>\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutAlign.gt-xs=\\\"end center\\\" class=\\\"pt-16\\\">\\n            <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\" (click)=\\\"cancel()\\\">\\n                {{'Cancel' | translate}}</button>\\n            <button class=\\\"text-uppercase\\\" mat-raised-button mat-button type=\\\"submit\\\" [disabled]=\\\"isSubmit\\\"\\n                color=\\\"accent\\\">{{'Submit' | translate}}</button>\\n        </div>\\n\\n    </form>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3RhZmYvc3RhZmYtaW5mb3JtYXRpb24tc3lzdGVtL3N0YWZmLWxlYXZlLXJlcXVlc3Qvc3RhZmYtbGVhdmUtcmVxdWVzdHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, TemplateRef, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { CommonService } from 'app/service/common.service';\nimport { MatDialog, MatDialogRef, MatSnackBar } from '@angular/material';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { StaffLeaveRequestSearchViewModel } from 'app/modules/staff/staff-information-system/model/staff-leave-request-search-view';\nimport { StaffLeaveRequestViewModel } from 'app/modules/staff/staff-information-system/model/staff-leave-request-view-model';\nimport { StaffLeaveRequestService } from 'app/service/staff/staff-leave-request-service';\nimport { StaffCommonService } from 'app/service/staff/staffCommon.service';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AppSettings } from 'app/app.constants';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { TypeService } from 'app/service/academic-service/api/type.service';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { StaffJobApplicationService } from 'app/service/staff/staff-job-application.service';\n\n@Component({\n  selector: 'app-staff-leave-request',\n  templateUrl: './staff-leave-requests.component.html',\n  styleUrls: ['./staff-leave-requests.component.scss'],\n  providers: [StaffLeaveRequestService, StaffCommonService]\n})\n\nexport class StaffLeaveRequestsComponent extends CommonComponent implements OnInit {\n  @ViewChild('staffLeaveRequestForm') staffLeaveRequestForm;\n  @ViewChild('logoImgInput') logoImgInput: ElementRef;\n\n  rows: Array<any>;\n  cols: any[];\n  pageCnt: number;\n  totalItems: number;\n  custRowsPerPageOptions: Array<number> = [];\n  tabSettings: {};\n  closeAddPanel: boolean;\n  currentComponentName = 'StaffLeaveRequestsComponent';\n  modelname: string;\n  closeForm: boolean;\n  isFormSubmitted = false;\n  staffLeaveRequestSearchViewModel: StaffLeaveRequestSearchViewModel;\n  staffLeaveReuestViewModel: StaffLeaveRequestViewModel;\n  leaveRequestId: any = 0;\n  attcachmentName: any;\n  staffId: any = 0;\n  nameImgProp: any;\n  logoImgProp: any;\n  leaveRequestForm: FormGroup;\n  uploadFiles: FormGroup;\n  staffs: Array<any> = [];\n  staffTypes: any;\n  httpStatus: any;\n\n\n  constructor(private staffLeaveRequestService: StaffLeaveRequestService, private staffCommonService: StaffCommonService, private typeService: TypeService,\n    public commonService: CommonService, public dialog: MatDialog, private storeService: StoreService, private commonComponent: CommonComponent,\n    private http: HttpClient, private _fb: FormBuilder, private sanitizer: DomSanitizer, private router: Router, private cd: ChangeDetectorRef,\n    private routes: ActivatedRoute, public snackBar: MatSnackBar, public staffJobApplicationService: StaffJobApplicationService) {\n    super();\n    this.staffLeaveRequestSearchViewModel = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER, pageSize: AppSettings.PAGESIZE,\n      staffNames: [],\n      staffTypes: [],\n      reasons: [],\n      statuses: [],\n      leaveStartDatesBegin: null,\n      leaveStartDatesEnd: null,\n      leaveEndDatesBegin: null,\n      leaveEndDatesEnd: null,\n\n    };\n\n    this.staffLeaveReuestViewModel = {\n      staffId: 0,\n      reason: '',\n      fromDate: null,\n      toDate: null,\n      fileNamewithext: '',\n      fileValue: '',\n    };\n  }\n\n  ngOnInit(): void {\n    this.httpStatus = require('http-status-codes');\n    this.initialiseForm();\n    this.cols = [\n      { field: 'staff', header: 'Staff', sort: true },\n      { field: 'staffType', header: 'Staff Type', sort: true },\n      { field: 'startDate', header: 'Start Date', sort: true },\n      { field: 'endDate', header: 'End Date', sort: true },\n      { field: 'reason', header: 'Reason', sort: true },\n      { field: 'status', header: 'Status', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n\n    const modelTableComponent = this.getModelComponent(this.currentComponentName);\n    if (modelTableComponent) {\n      this.staffLeaveRequestSearchViewModel = modelTableComponent;\n    }\n    // / initializing table settings /\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.staffLeaveRequestSearchViewModel,\n      tablename: 'Staff Leave Requests',\n      componentName: this.currentComponentName,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      headerOperations: {\n        infoButton: {\n          required: true,\n          text: 'Staff Leave Requests'\n        }\n      }\n    };\n    if (this.getTokenParam('_as')) {\n      this.loadLeaveRequest();\n    }\n    else {\n      setTimeout(() => {\n        this.openSnackBar(AppSettings.SCHOOLACADEMIC_SESSION_REQUIRED, true);\n      });\n    }\n\n  }\n\n  loadLeaveRequest(): void {\n\n    this.staffLeaveRequestService.fetchStaffLeaveRequests(this.staffLeaveRequestSearchViewModel.sortBy, this.staffLeaveRequestSearchViewModel.sortOrder,\n      this.staffLeaveRequestSearchViewModel.staffNames, this.staffLeaveRequestSearchViewModel.staffTypes, this.staffLeaveRequestSearchViewModel.reasons,\n      this.staffLeaveRequestSearchViewModel.statuses, this.staffLeaveRequestSearchViewModel.leaveStartDatesBegin,\n      this.staffLeaveRequestSearchViewModel.leaveStartDatesEnd, this.staffLeaveRequestSearchViewModel.leaveEndDatesBegin,\n      this.staffLeaveRequestSearchViewModel.leaveEndDatesEnd, this.staffLeaveRequestSearchViewModel.pageNumber,\n      this.staffLeaveRequestSearchViewModel.pageSize).subscribe(data => this.response(data), error => {\n        this.errorResponse(error);\n      });\n  }\n\n  response(data: any): void {\n\n    if (localStorage.getItem(this.currentComponentName)) {\n      this.modelname = JSON.parse(localStorage.getItem(this.currentComponentName));\n    }\n\n    if (data.staffLeaveRequests) {\n      this.rows = data.staffLeaveRequests.list;\n      this.totalItems = data.staffLeaveRequests.totalItems;\n    } else {\n      this.rows = [];\n    }\n\n    this.rows.forEach((e: any) => {\n\n      switch (true) {\n        case e.status === AppSettings.APPROVE_OPERATION_LEAVE_APPROVE:\n          if (e.attachementName) {\n            e.operations = [\n              {\n                name: AppSettings.VIEW_LEAVE_REQUEST,\n                icon: AppSettings.DETAILS_ICON,\n                operationName: AppSettings.VIEW\n              }];\n          }\n          break;\n        case e.status === AppSettings.REJECT_OPERATION_LEAVE_REQUEST:\n          if (e.attachementName) {\n            e.operations = [\n              {\n                name: AppSettings.VIEW_LEAVE_REQUEST,\n                icon: AppSettings.DETAILS_ICON,\n                operationName: AppSettings.VIEW\n              }];\n          }\n          break;\n\n        case e.status === AppSettings.PENDING_STATUS_LEAVE_REQUEST:\n\n          e.operations = [\n            {\n              name: AppSettings.APPROVE_OPERATION,\n              icon: AppSettings.APPROVE_ICON,\n              operationName: AppSettings.APPROVE_OPERATION\n            },\n            {\n              name: AppSettings.REJECT_OPERATION,\n              icon: AppSettings.REJECT_ICON,\n              operationName: AppSettings.REJECT_OPERATION\n            },\n          ];\n          if (e.attachementName) {\n            e.operations.push({\n              name: AppSettings.VIEW_LEAVE_REQUEST,\n              icon: AppSettings.DETAILS_ICON,\n              operationName: AppSettings.VIEW\n            });\n          }\n          break;\n\n\n      }\n\n\n      e.startDate = (e.startDate == null) ? null : this.commonService.customDateFormat(e.startDate, this.getSchoolDateFormat()).date;\n      e.endDate = (e.endDate == null) ? null : this.commonService.customDateFormat(e.endDate, this.getSchoolDateFormat()).date;\n\n    });\n\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.staffLeaveRequestSearchViewModel,\n      rows: this.rows,\n      tablename: 'Staff Leave Requests',\n      componentName: this.currentComponentName,\n      isSelectRowRequired: false,\n      visibleSelectAll: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      filtersList: data.filters,\n      headerOperations: {\n        infoButton: {\n          required: true,\n          text: 'Staff Leave Requests'\n        },\n        addingForm: {\n          required: true,\n          btnName: AppSettings.BUTTON_NAME\n        }\n      }\n    };\n  }\n\n\n  staffLeaveRequestData(_event: StaffLeaveRequestSearchViewModel): void {\n    this.staffLeaveRequestSearchViewModel = _event;\n    this.loadLeaveRequest();\n  }\n\n  rowActions(response: any): void {\n\n    this.leaveRequestId = response.clickedRow.leaveRequestId;\n    this.staffId = response.clickedRow.staffId;\n    if (response.operation === AppSettings.APPROVE) {\n\n      const dialogRef = this.dialog.open(CustomDialogComponent, {\n        disableClose: true,\n        data: {\n          text: this.commonService.getTranslation(AppSettings.APPROVE_STAFF_LEAVE_REQUEST),\n          action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES\n        },\n      });\n\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.staffLeaveRequestService.approveOrRejectRequest(this.leaveRequestId, this.staffId, true).subscribe(res => this.approveOrRejectResponse(res), error => {\n            this.commonComponent.errorResponse(error);\n          });\n        }\n      });\n    }\n    else if (response.operation === AppSettings.REJECT) {\n\n      const dialogRef = this.dialog.open(CustomDialogComponent, {\n        disableClose: true,\n        data: {\n          text: this.commonService.getTranslation(AppSettings.REJECT_STAFF_LEAVE_REQUEST),\n          action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES\n        },\n      });\n\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.staffLeaveRequestService.approveOrRejectRequest(this.leaveRequestId, this.staffId, false).subscribe(res => this.approveOrRejectResponse(res), error => {\n            this.commonComponent.errorResponse(error);\n          });\n        }\n      });\n    }\n    else if (response.operation === (AppSettings.VIEW_LEAVE_REQUEST).toLowerCase()) {\n      if (response.clickedRow.attachementName != null) {\n        this.nameImgProp = this.storeService.getFilePath(response.clickedRow.attachementName);\n        window.open(this.nameImgProp);\n      }\n      else {\n        this.openSnackBar(AppSettings.NO_ATTACHMENTS_FOUND, true);\n        return;\n      }\n    }\n  }\n\n\n  approveOrRejectResponse(response: any): void {\n    this.loadLeaveRequest();\n    this.openSnackBar(response.messages.ResultMessage);\n  }\n\n  clearImages(logo = false): void {\n    if (logo) {\n      this.logoImgProp = {};\n      this.uploadFiles.controls.staffFileNameWithExtension.patchValue(null);\n      this.uploadFiles.controls.staffFileValue.patchValue(null);\n    }\n    this.cd.detectChanges();\n  }\n\n  initialiseForm(): void {\n\n    this.leaveRequestForm = this._fb.group({\n      staffTypeId: new FormControl(null, [Validators.required]),\n      staffId: new FormControl(null, [Validators.required]),\n      reason: new FormControl(null, [Validators.required, Validators.maxLength(200)]),\n      fromDate: new FormControl(null, [Validators.required]),\n      toDate: new FormControl(null, [Validators.required])\n    });\n\n    this.uploadFiles = this._fb.group({\n      staffFileNameWithExtension: new FormControl(null),\n      staffFileValue: new FormControl(null),\n    });\n    this.getStaffTypes();\n\n  }\n\n  openForm(): void {\n    this.closeAddPanel = true;\n    this.leaveRequestForm.reset();\n    this.staffs = [];\n    // this.staffLeaveRequestForm.resetForm();\n    this.closeAddPanel = false;\n    this.leaveRequestForm.updateValueAndValidity();\n  }\n\n\n  imgChanged(event): void {\n    if (this.checkFileSize(event[0], 'jpg|jpeg|png|text|pdf|msword|document', 2097152)) {\n      this.clearImages(true);\n      return;\n    }\n    if (event && event.length > 0) {\n      const reader = new FileReader();\n      reader.readAsDataURL(event[0]);\n      const that = this;\n      reader.onload = (_event) => {\n        this.uploadFiles.controls['staffFileNameWithExtension'].setValue(event[0].name);\n        this.uploadFiles.controls['staffFileValue'].setValue((<string>reader.result).split(',')[1]);\n        that.cd.detectChanges();\n      };\n    }\n  }\n\n  // To-Do\n  // setFileProperties(image): void {\n  //   const data = {\n  //     src: this.sanitizer.bypassSecurityTrustResourceUrl(image.src),\n  //     width: image.width,\n  //     height: image.height\n  //   };\n\n  //   this.logoImgProp = {};\n  //   this.logoImgProp = data;\n\n  //   this.cd.detectChanges();\n  // }\n\n  getStaffTypes(): void {\n    this.staffTypes = [];\n    this.leaveRequestForm.controls['staffId'].patchValue(null);\n    this.staffJobApplicationService.fetchStaffTypes().subscribe(res => {\n      this.staffTypes = res.map((obj: any) => ({ value: obj.id, label: obj.name , code: obj.code }));\n      this.staffTypes = this.staffTypes.filter(e => e.code !== 'STFT_LASST');\n    });\n  }\n\n  getStaffs(data: any): void {\n\n    this.staffs = [];\n    this.leaveRequestForm.controls['staffId'].patchValue(null);\n    this.staffCommonService.fetchStaffs(data.value).subscribe(response => {\n\n      if (response && response.length) {\n        response.forEach(element => {\n          this.staffs.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n  createOrUpdateLeaveRequest(): void {\n    if (this.leaveRequestForm.status === AppSettings.VALID) {\n      this.staffLeaveReuestViewModel.staffId = this.leaveRequestForm.value.staffId;\n      this.staffLeaveReuestViewModel.reason = this.leaveRequestForm.value.reason;\n      this.staffLeaveReuestViewModel.fromDate = this.leaveRequestForm.value.fromDate;\n      this.staffLeaveReuestViewModel.toDate = this.leaveRequestForm.value.toDate;\n      this.staffLeaveReuestViewModel.fileNamewithext = this.uploadFiles.value.staffFileNameWithExtension;\n      this.staffLeaveReuestViewModel.fileValue = this.uploadFiles.value.staffFileValue;\n\n      this.staffLeaveRequestService.createStaffLeaveRequest(this.staffLeaveReuestViewModel).subscribe(res => {\n        if (res.statusCode === this.httpStatus.OK) {\n          this.openSnackBar(res.messages.ResultMessage);\n          this.loadLeaveRequest();\n          this.cancel();\n        }\n        else {\n          this.openSnackBar(res.messages.ResultMessage, true);\n        }\n      }, error => {\n        this.errorResponse(error);\n      });\n    }\n    else {\n      this.isFormSubmitted = true;\n      return;\n    }\n\n  }\n\n  cancel(): void {\n    this.staffs = [];\n    this.closeAddPanel = true;\n    this.leaveRequestForm.reset();\n    this.staffLeaveRequestForm.resetForm();\n    this.clearImages(true);\n  }\n\n}\n\n\n\n\n\n\n\n\n\n\n","/**\n * Teacher API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams, HttpResponse, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Configuration, BASE_PATH } from '../grading-service';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { BaseUrlConfig, ModuleConfig, TeacherModuleConfig } from 'app/url.config';\nimport { StaffAttendanceAddResultView } from 'app/models/staff/staff-attendance-add-result-view';\nimport { element } from '@angular/core/src/render3';\nimport { CommonComponent } from 'app/shared/common/common.component';\n\n\n\n\n@Injectable()\nexport class StaffAttendanceService {\n\n   protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Teacher;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) \n    basePath: string, @Optional() configuration: Configuration, private commonComponent: CommonComponent) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * StaffAttendances Search\n     * \n     * @param authorization access token\n     * @param staffAttendanceAddView \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public markStaffAttendances(staffAttendanceAddView?: StaffAttendanceAddResultView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public markStaffAttendances(staffAttendanceAddView?: StaffAttendanceAddResultView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public markStaffAttendances(staffAttendanceAddView?: StaffAttendanceAddResultView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public markStaffAttendances(staffAttendanceAddView?: StaffAttendanceAddResultView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + TeacherModuleConfig._Staff_MarkAttendance,\n            staffAttendanceAddView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * StaffAttendances Search\n     * \n     * @param authorization access token\n     * @param staffNames Gets or Sets SatffNames\n     * @param attendanceDate Gets or Sets AttendanceDate\n     * @param departments Gets or Sets Department\n     * @param staffCodes Gets or Sets EmployeeCode\n     * @param absentOrPresents Gets or Sets AbsentOrPresents\n     * @param inTime Gets or Sets InTimeOutTimeRange\n     * @param outTime Gets or Sets InTimeOutTimeRange\n     * @param sortOrder Gets or Sets SortColumn\n     * @param sortBy Gets or Sets SortBy-\\&quot;\\&quot;\n     * @param pageNumber \n     * @param pageSize \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public staffAttendances(staffNames?: Array<string>, attendanceDate?: Date,\n         departments?: Array<string>, staffCodes?: Array<string>, \n         absentOrPresents?: Array<string>, inTime?: string, inTimeBegin?: string, \n         inTimeEnd?: string, outTime?: string, outTimeBegin?: string, outTimeEnd?: string, sortOrder?: 0 | 1 | -1, sortBy?: string,\n         pageNumber?: number, pageSize?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public staffAttendances(staffNames?: Array<string>, attendanceDate?: Date, departments?: Array<string>, staffCodes?: Array<string>, absentOrPresents?: Array<string>, \n        inTime?: string, inTimeBegin?: string, inTimeEnd?: string, outTime?: string, \n        outTimeBegin?: string, outTimeEnd?: string, sortOrder?: 0 | 1 | -1, sortBy?: string, pageNumber?: number,\n        pageSize?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public staffAttendances(staffNames?: Array<string>, attendanceDate?: Date, departments?: Array<string>, staffCodes?: Array<string>, absentOrPresents?: Array<string>, \n        inTime?: string, inTimeBegin?: string, inTimeEnd?: string, outTime?: string, \n        outTimeBegin?: string, outTimeEnd?: string, sortOrder?: 0 | 1 | -1, sortBy?: string, pageNumber?: number,\n         pageSize?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public staffAttendances(staffNames?: Array<string>, attendanceDate?: Date, departments?: Array<string>, staffCodes?: Array<string>, absentOrPresents?: Array<string>, \n        inTime?: string, inTimeBegin?: string, inTimeEnd?: string, outTime?: string, \n        outTimeBegin?: string, outTimeEnd?: string, sortOrder?: 0 | 1 | -1, sortBy?: string,\n         pageNumber?: number, pageSize?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        queryParameters = this.commonComponent.setQueryParams(staffNames, 'StaffNames', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(attendanceDate, 'AttendanceDate', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(departments, 'Departments', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(staffCodes, 'StaffCodes', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(inTimeBegin, 'InTimeBegin', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(inTimeEnd, 'InTimeEnd', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(outTimeBegin, 'OutTimeBegin', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(outTimeEnd, 'OutTimeEnd', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(absentOrPresents, 'AbsentOrPresents', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(inTime, 'InTime', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(outTime, 'OutTime', queryParameters);\n        let headers = this.defaultHeaders;\n        \n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + TeacherModuleConfig._Staff_Attendance,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * BaseWebAPI\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Configuration } from '../base/configuration';\nimport { BASE_PATH } from '../base/variables';\nimport { BaseUrlConfig, ModuleConfig, BaseModuleConfig } from 'app/url.config';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { SchoolFacilityRepresentativeView } from 'app/modules/staff/staff-information-system/model/school-facility-representative-view';\nimport { SchoolFacilityRepresentativeDataView } from 'app/modules/staff/staff-information-system/model/school-facility-representative-data-view';\nimport { SchoolFacilityRepresentativeFilterView } from 'app/modules/staff/staff-information-system/model/school-facility-representative-filter-view';\n\n\n@Injectable()\nexport class SchoolFacilityRepesentativeService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Base;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string,\n        @Optional() configuration: Configuration, private commonComponent: CommonComponent) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Assign school facility representative\n     * @param model \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assignFacilityRepresentative(model?: SchoolFacilityRepresentativeView,\n        observe?: 'body',\n        reportProgress?: boolean): Observable<any>;\n    public assignFacilityRepresentative(model?: SchoolFacilityRepresentativeView,\n        observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public assignFacilityRepresentative(model?: SchoolFacilityRepresentativeView,\n        observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public assignFacilityRepresentative(model?: SchoolFacilityRepresentativeView,\n        observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + BaseModuleConfig._Assign_School_Facility_Representative,\n            model,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete School facility representative\n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteFacilityRepresentative(id: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteFacilityRepresentative(id: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteFacilityRepresentative(id: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteFacilityRepresentative(id: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteFacilityRepresentative.');\n        }\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n\n        return this.httpClient.delete<any>(`${this.basePath}` + BaseModuleConfig._Assign_School_Facility_Representative,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Fetch school facility representatives\n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public facilityRepresentativeById(id: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public facilityRepresentativeById(id: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public facilityRepresentativeById(id: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public facilityRepresentativeById(id: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling facilityRepresentativeById.');\n        }\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Facility_Representative_By_Id,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Fetch school facility representatives\n     * \n     * @param dataModel Gets or Sets details\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public fetchFacilityRepresentatives(dataModel: SchoolFacilityRepresentativeFilterView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchFacilityRepresentatives(dataModel: SchoolFacilityRepresentativeFilterView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchFacilityRepresentatives(dataModel: SchoolFacilityRepresentativeFilterView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchFacilityRepresentatives(dataModel: SchoolFacilityRepresentativeFilterView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        queryParameters = this.commonComponent.setQueryParamsWithModel(dataModel, queryParameters);\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Fetch_Facility_Representatives,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update School facility representative\n     * \n    \n     * @param model \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateFacilityRepresentative(model?: SchoolFacilityRepresentativeDataView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateFacilityRepresentative(model?: SchoolFacilityRepresentativeDataView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateFacilityRepresentative(model?: SchoolFacilityRepresentativeDataView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateFacilityRepresentative(model?: SchoolFacilityRepresentativeDataView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` + BaseModuleConfig._Assign_School_Facility_Representative,\n            model,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n}\n","/**\n * Teacher API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { BASE_PATH } from '../base/variables';\nimport { Configuration } from '../base/configuration';\nimport { BaseUrlConfig, ModuleConfig, BaseModuleConfig } from '../../url.config';\nimport { ClassTeacherAssignmentModel } from 'app/modules/staff/staff-information-system/model/class-teacher-assignment-model';\n@Injectable()\nexport class ClassTeacherAssignmentService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Teacher;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Get class teachers based on schoolboard id\n     * \n     * @param authorization access token\n     * @param id \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getClassTeachers(id?: number,\n         observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getClassTeachers(id?: number, \n        observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getClassTeachers(id?: number, \n        observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getClassTeachers(id?: number,\n         observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        \n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n       \n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n        return this.httpClient.get<any>(`${this.basePath}` +  BaseModuleConfig._Get_Class_Teachers_Managements,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update class teacher with respect to class and section\n     * \n     * @param authorization access token\n     * @param classTeacherAssignmentModel \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateClassTeacher(classTeacherAssignmentModel?: ClassTeacherAssignmentModel, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateClassTeacher(classTeacherAssignmentModel?: ClassTeacherAssignmentModel,  observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateClassTeacher(classTeacherAssignmentModel?: ClassTeacherAssignmentModel, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateClassTeacher(classTeacherAssignmentModel?: ClassTeacherAssignmentModel, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n       \n\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` +  BaseModuleConfig._Class_Teacher_Update,\n            classTeacherAssignmentModel,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n"],"sourceRoot":""}