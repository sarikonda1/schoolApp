{"version":3,"sources":["webpack:///./node_modules/@agm/core/core.module.js","webpack:///./node_modules/@agm/core/directives.js","webpack:///./node_modules/@agm/core/directives/circle.js","webpack:///./node_modules/@agm/core/directives/data-layer.js","webpack:///./node_modules/@agm/core/directives/fit-bounds.js","webpack:///./node_modules/@agm/core/directives/info-window.js","webpack:///./node_modules/@agm/core/directives/kml-layer.js","webpack:///./node_modules/@agm/core/directives/map.js","webpack:///./node_modules/@agm/core/directives/marker.js","webpack:///./node_modules/@agm/core/directives/polygon.js","webpack:///./node_modules/@agm/core/directives/polyline-point.js","webpack:///./node_modules/@agm/core/directives/polyline.js","webpack:///./node_modules/@agm/core/directives/rectangle.js","webpack:///./node_modules/@agm/core/index.js","webpack:///./node_modules/@agm/core/services.js","webpack:///./node_modules/@agm/core/services/fit-bounds.js","webpack:///./node_modules/@agm/core/services/google-maps-api-wrapper.js","webpack:///./node_modules/@agm/core/services/managers/circle-manager.js","webpack:///./node_modules/@agm/core/services/managers/data-layer-manager.js","webpack:///./node_modules/@agm/core/services/managers/info-window-manager.js","webpack:///./node_modules/@agm/core/services/managers/kml-layer-manager.js","webpack:///./node_modules/@agm/core/services/managers/marker-manager.js","webpack:///./node_modules/@agm/core/services/managers/polygon-manager.js","webpack:///./node_modules/@agm/core/services/managers/polyline-manager.js","webpack:///./node_modules/@agm/core/services/managers/rectangle-manager.js","webpack:///./node_modules/@agm/core/services/maps-api-loader/lazy-maps-api-loader.js","webpack:///./node_modules/@agm/core/services/maps-api-loader/maps-api-loader.js","webpack:///./node_modules/@agm/core/services/maps-api-loader/noop-maps-api-loader.js","webpack:///./node_modules/@agm/core/utils/browser-globals.js","webpack:///./node_modules/agm-direction/fesm5/agm-direction.js","webpack:///./src/app/modules/transportation/routing/add-transport-schedules/add-transport-schedules.component.html","webpack:///./src/app/modules/transportation/routing/add-transport-schedules/add-transport-schedules.component.scss","webpack:///./src/app/modules/transportation/routing/add-transport-schedules/add-transport-schedules.component.ts","webpack:///./src/app/modules/transportation/routing/directions-map.directive.ts","webpack:///./src/app/modules/transportation/routing/manage-student-transport/manage-student-transport.component.html","webpack:///./src/app/modules/transportation/routing/manage-student-transport/manage-student-transport.component.scss","webpack:///./src/app/modules/transportation/routing/manage-student-transport/manage-student-transport.component.ts","webpack:///./src/app/modules/transportation/routing/new-route/new-route.component.html","webpack:///./src/app/modules/transportation/routing/new-route/new-route.component.scss","webpack:///./src/app/modules/transportation/routing/new-route/new-route.component.ts","webpack:///./src/app/modules/transportation/routing/routes-routing.module.ts","webpack:///./src/app/modules/transportation/routing/routes.module.ts","webpack:///./src/app/modules/transportation/routing/transport-schedules/transport-schedules.component.html","webpack:///./src/app/modules/transportation/routing/transport-schedules/transport-schedules.component.scss","webpack:///./src/app/modules/transportation/routing/transport-schedules/transport-schedules.component.ts","webpack:///./src/app/modules/transportation/routing/vehicle-route-database/vehicle-route-database.component.html","webpack:///./src/app/modules/transportation/routing/vehicle-route-database/vehicle-route-database.component.scss","webpack:///./src/app/modules/transportation/routing/vehicle-route-database/vehicle-route-database.component.ts","webpack:///./src/app/modules/transportation/routing/view-common-route/view-common-route.component.html","webpack:///./src/app/modules/transportation/routing/view-common-route/view-common-route.component.scss","webpack:///./src/app/modules/transportation/routing/view-common-route/view-common-route.component.ts","webpack:///./src/app/modules/transportation/routing/view-route/view-route.component.html","webpack:///./src/app/modules/transportation/routing/view-route/view-route.component.scss","webpack:///./src/app/modules/transportation/routing/view-route/view-route.component.ts","webpack:///./src/app/modules/transportation/routing/view-transport-schedules/view-transport-schedules.component.html","webpack:///./src/app/modules/transportation/routing/view-transport-schedules/view-transport-schedules.component.scss","webpack:///./src/app/modules/transportation/routing/view-transport-schedules/view-transport-schedules.component.ts","webpack:///./src/app/service/staff/staffCommon.service.ts","webpack:///./src/app/service/student-transport/student-transport.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACC;AACM;AACM;AACG;AACT;AACE;AACE;AACW;AACV;AACE;AAC6B;AACG;AACZ;AACP;AACL;AAC/D;AACA;AACA;AACO;AACP;AACA,QAAQ,sDAAM,EAAE,4DAAS,EAAE,qEAAa,EAAE,4DAAS,EAAE,kEAAY;AACjE,QAAQ,8DAAU,EAAE,gEAAW,EAAE,2EAAgB,EAAE,iEAAW;AAC9D,QAAQ,oEAAY,EAAE,6EAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iFAAyB;AAChD,iBAAiB,UAAU,wFAAa,YAAY,iGAAiB,EAAE;AACvE,iBAAiB,UAAU,oGAAoB;AAC/C;AACA;AACA;AACA;AACA,SAAS,OAAO,sDAAQ,UAAU,4DAA4D,IAAI;AAClG;AACA;AACA,CAAC;AACwB;AACzB,uC;;;;;;;;;;;;ACzDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACM;AACM;AACG;AACJ;AACE;AACP;AACE;AACE;AACW;AACR;AACvD,sC;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAuE;AACH;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,gDAAgD,EAAE;AACrH,yCAAyC,sCAAsC,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,kCAAkC,EAAE;AACpH;AACA;AACA;AACA,sDAAsD,uCAAuC;AAC7F,yBAAyB;AACzB;AACA;AACA,2CAA2C,UAAU,mDAAmD,EAAE;AAC1G;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,uDAAuD,iBAAiB,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sCAAsC;AACvD,iDAAiD,sCAAsC;AACvF;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4CAA4C;AAC5C,SAAS,OAAO,+EAAa,GAAG;AAChC,MAAM;AACN;AACA,sBAAsB,OAAO,mDAAK,EAAE;AACpC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,uBAAuB,OAAO,mDAAK,8BAA8B;AACjE,sBAAsB,OAAO,mDAAK,EAAE;AACpC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,0BAA0B,OAAO,mDAAK,EAAE;AACxC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,0BAA0B,OAAO,oDAAM,EAAE;AACzC,yBAAyB,OAAO,oDAAM,EAAE;AACxC,4BAA4B,OAAO,oDAAM,EAAE;AAC3C,kBAAkB,OAAO,oDAAM,EAAE;AACjC,qBAAqB,OAAO,oDAAM,EAAE;AACpC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,qBAAqB,OAAO,oDAAM,EAAE;AACpC,0BAA0B,OAAO,oDAAM,EAAE;AACzC,wBAAwB,OAAO,oDAAM,EAAE;AACvC;AACA;AACA,CAAC;AACoB;AACrB,kC;;;;;;;;;;;;ACpOA;AAAA;AAAA;AAAA;AAAuE;AACM;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB,WAAW,uBAAuB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wCAAwC,kCAAkC,EAAE,EAAE;AAC3F;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,iBAAiB,8CAA8C;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,wBAAwB,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,wFAAwF,EAAE;AAC5J;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C;AAC/C,SAAS,OAAO,sFAAgB,GAAG;AACnC,MAAM;AACN;AACA,wBAAwB,OAAO,oDAAM,EAAE;AACvC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,mBAAmB,OAAO,mDAAK,EAAE;AACjC;AACA;AACA,CAAC;AACuB;AACxB,sC;;;;;;;;;;;;ACpRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACsB;AAC9C;AACkC;AACjE;AACA;AACA,kFAAkF,wBAAwB;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,4CAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,2EAAoB;AACtC;AACA,SAAS,GAAG,gEAAS;AACrB,2CAA2C,qCAAqC,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C;AAC/C,SAAS,OAAO,sEAAiB,gBAAgB,OAAO,kDAAI,EAAE,IAAI;AAClE,SAAS,OAAO,qEAAgB,GAAG;AACnC,MAAM;AACN;AACA,0BAA0B,OAAO,mDAAK,EAAE;AACxC;AACA;AACA,CAAC;AACuB;AACxB,sC;;;;;;;;;;;;AClGA;AAAA;AAAA;AAAA;AAAmF;AACN;AAC7E;AACA;AACA,iDAAiD,gBAAgB;AACjE;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,iEAAiE,EAAE;AACtI,yCAAyC,sCAAsC,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,2CAA2C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,8BAA8B,EAAE;AACrG;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,iBAAiB,+CAA+C;AAChE;AACA;AACA;AACA,iBAAiB,gDAAgD;AACjE;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,wFAAiB,GAAG;AACpC,SAAS,OAAO,wDAAU,GAAG;AAC7B,MAAM;AACN;AACA,sBAAsB,OAAO,mDAAK,EAAE;AACpC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,oBAAoB,OAAO,mDAAK,EAAE;AAClC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,6BAA6B,OAAO,oDAAM,EAAE;AAC5C;AACA;AACA,CAAC;AACwB;AACzB,uC;;;;;;;;;;;;ACjJA;AAAA;AAAA;AAAA;AAAuE;AACI;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA,yCAAyC,0DAAY;AACrD;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,uDAAuD,EAAE;AAC3F;AACA;AACA;AACA,SAAS,IAAI;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,wCAAwC,kCAAkC,EAAE,EAAE;AAC3F,aAAa,wDAAwD,2CAA2C,EAAE,EAAE;AACpH,aAAa,+CAA+C,kCAAkC,EAAE,EAAE;AAClG;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,iBAAiB,6CAA6C;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,wBAAwB,EAAE;AAC5E;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,8CAA8C;AAC9C,SAAS,OAAO,oFAAe,GAAG;AAClC,MAAM;AACN;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,8BAA8B,OAAO,mDAAK,EAAE;AAC5C,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,iCAAiC,OAAO,mDAAK,EAAE;AAC/C,iBAAiB,OAAO,mDAAK,EAAE;AAC/B,oBAAoB,OAAO,mDAAK,EAAE;AAClC,wBAAwB,OAAO,oDAAM,EAAE;AACvC,mCAAmC,OAAO,oDAAM,EAAE;AAClD,0BAA0B,OAAO,oDAAM,EAAE;AACzC;AACA;AACA,CAAC;AACsB;AACvB,qC;;;;;;;;;;;;AChIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;AACR;AACP;AACM;AACG;AACT;AACE;AACE;AACG;AACE;AACnB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6GAA6G,mBAAmB;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAoD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+BAA+B,0CAA0C,EAAE;AAC3E,kCAAkC,iCAAiC,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,wBAAwB,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,uDAAuD,EAAE;AAC5H,yCAAyC,sCAAsC,EAAE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,+BAA+B,EAAE;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4CAA4C;AACrF,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mEAAmE,iCAAiC,EAAE;AACtG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,yEAAyE,uCAAuC,EAAE;AAClH,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,qFAAqF,yBAAyB,EAAE;AAChH;AACA;AACA;AACA;AACA;AACA,aAAa,wCAAwC;AACrD,aAAa,kDAAkD;AAC/D,aAAa,8CAA8C;AAC3D;AACA;AACA;AACA,6BAA6B,UAAU,mDAAmD;AAC1F;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,wBAAwB,sFAAoB,EAAE,+EAAa,EAAE,wFAAiB,EAAE,+EAAa,EAAE,qFAAgB;AAC/G,wBAAwB,mFAAe,EAAE,iFAAc,EAAE,oFAAe,EAAE,sFAAgB,EAAE,sFAAgB;AAC5G,wBAAwB,sEAAgB;AACxC;AACA;AACA;AACA;AACA,qBAAqB;AACrB,8DAA8D,uBAAuB,wBAAwB,OAAO,wBAAwB,qBAAqB,OAAO;AACxK;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,yCAAyC;AACzC,SAAS,OAAO,wDAAU,GAAG;AAC7B,SAAS,OAAO,sFAAoB,GAAG;AACvC,SAAS,OAAO,sEAAgB,GAAG;AACnC,MAAM;AACN;AACA,uBAAuB,OAAO,mDAAK,EAAE;AACrC,sBAAsB,OAAO,mDAAK,EAAE;AACpC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,uBAAuB,OAAO,mDAAK,2BAA2B;AAC9D,oCAAoC,OAAO,mDAAK,EAAE;AAClD,8BAA8B,OAAO,mDAAK,EAAE;AAC5C,yBAAyB,OAAO,mDAAK,EAAE;AACvC,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,yBAAyB,OAAO,mDAAK,EAAE;AACvC,gCAAgC,OAAO,mDAAK,EAAE;AAC9C,oBAAoB,OAAO,mDAAK,EAAE;AAClC,wBAAwB,OAAO,mDAAK,EAAE;AACtC,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,sCAAsC,OAAO,mDAAK,EAAE;AACpD,uBAAuB,OAAO,mDAAK,EAAE;AACrC,0BAA0B,OAAO,mDAAK,EAAE;AACxC,iCAAiC,OAAO,mDAAK,EAAE;AAC/C,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,mCAAmC,OAAO,mDAAK,EAAE;AACjD,wBAAwB,OAAO,mDAAK,EAAE;AACtC,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,2BAA2B,OAAO,mDAAK,EAAE;AACzC,kCAAkC,OAAO,mDAAK,EAAE;AAChD,+BAA+B,OAAO,mDAAK,EAAE;AAC7C,sCAAsC,OAAO,mDAAK,EAAE;AACpD,uBAAuB,OAAO,mDAAK,EAAE;AACrC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,6BAA6B,OAAO,mDAAK,EAAE;AAC3C,sBAAsB,OAAO,oDAAM,EAAE;AACrC,2BAA2B,OAAO,oDAAM,EAAE;AAC1C,yBAAyB,OAAO,oDAAM,EAAE;AACxC,0BAA0B,OAAO,oDAAM,EAAE;AACzC,0BAA0B,OAAO,oDAAM,EAAE;AACzC,6BAA6B,OAAO,oDAAM,EAAE;AAC5C,kBAAkB,OAAO,oDAAM,EAAE;AACjC,wBAAwB,OAAO,oDAAM,EAAE;AACvC,sBAAsB,OAAO,oDAAM,EAAE;AACrC;AACA;AACA,CAAC;AACiB;AAClB,+B;;;;;;;;;;;;ACreA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+G;AAC1E;AACsB;AACS;AACtB;AAC9C;AACA;AACA,4CAA4C,aAAa;AACzD;AACA;AACA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA,oCAAoC,0DAAY;AAChD;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,8BAA8B,uDAAS;AACvC;AACA;AACA,sCAAsC,kDAAa;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,uCAAuC,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,UAAU,0CAA0C,EAAE;AAC5F;AACA;AACA;AACA;AACA;AACA,gEAAgE,0BAA0B,EAAE;AAC5F;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gCAAgC,UAAU,2CAA2C,EAAE;AACvF,SAAS;AACT;AACA;AACA;AACA,kCAAkC,UAAU,2CAA2C,EAAE;AACzF,SAAS;AACT;AACA;AACA;AACA,iCAAiC,UAAU,2CAA2C,EAAE;AACxF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA,iBAAiB,2CAA2C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,wBAAwB,EAAE;AACtF;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA;AACA,yBAAyB,UAAU,sEAAiB,eAAe,gEAAU,cAAc,kBAAkB,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,4CAA4C;AAC5C,SAAS,OAAO,+EAAa,GAAG;AAChC,MAAM;AACN;AACA,sBAAsB,OAAO,mDAAK,EAAE;AACpC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,uBAAuB,OAAO,mDAAK,8BAA8B;AACjE,qBAAqB,OAAO,mDAAK,EAAE;AACnC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,qBAAqB,OAAO,mDAAK,EAAE;AACnC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,uBAAuB,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ACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,6BAA6B,0DAAY;AACzC;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,8BAA8B,0DAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,mDAAmD,EAAE;AACxH;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,yBAAyB;AACzB;AACA;AACA;AACA,qCAAqC;AACrC,yBAAyB;AACzB;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,uDAAS;AACzB;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C;AAC/C,SAAS,OAAO,qFAAgB,GAAG;AACnC,MAAM;AACN;AACA,mBAAmB,OAAO,mDAAK,EAAE;AACjC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,mBAAmB,OAAO,mDAAK,EAAE;AACjC,kBAAkB,OAAO,mDAAK,EAAE;AAChC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,uBAAuB,OAAO,mDAAK,iCAAiC;AACpE,sBAAsB,OAAO,mDAAK,EAAE;AACpC,uBAAuB,OAAO,mDAAK,EAAE;AACrC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,yBAAyB,OAAO,mDAAK,EAAE;AACvC,2BAA2B,OAAO,mDAAK,EAAE;AACzC,4BAA4B,OAAO,mDAAK,EAAE;AAC1C,0BAA0B,OAAO,mDAAK,EAAE;AACxC,qBAAqB,OAAO,mDAAK,EAAE;AACnC,oBAAoB,OAAO,mDAAK,EAAE;AAClC,0BAA0B,OAAO,oDAAM,EAAE;AACzC,4BAA4B,OAAO,oDAAM,EAAE;AAC3C,+BAA+B,OAAO,oDAAM,EAAE;AAC9C,kBAAkB,OAAO,oDAAM,EAAE;AACjC,qBAAqB,OAAO,oDAAM,EAAE;AACpC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,sBAAsB,OAAO,oDAAM,EAAE;AACrC,uBAAuB,OAAO,oDAAM,EAAE;AACtC,qBAAqB,OAAO,oDAAM,EAAE;AACpC,wBAAwB,OAAO,oDAAM,EAAE;AACvC;AACA;AACA,CAAC;AACuB;AACxB,qC;;;;;;;;;;;;AC7OA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6B;AACF;AACmB;AAC9C,iC;;;;;;;;;;;;ACHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0E;AACP;AACM;AACG;AACT;AACE;AACE;AACC;AACE;AAC0D;AACzD;AACS;AAC1B;AAC1D,oC;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACS;AAC0B;AACZ;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AAC6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,oDAAe;AAC3D,qCAAqC,oDAAe;AACpD,uBAAuB,iDAAI,qBAAqB,8DAAO,cAAc,gCAAgC,EAAE,GAAG,6DAAM,oCAAoC,gEAAS,kBAAkB,QAAQ,kDAAK,UAAU,EAAE,KAAK,0DAAG,6BAA6B,+CAA+C,EAAE,GAAG,kEAAW;AAC5S;AACA;AACA;AACA,8CAA8C,yBAAyB,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,mDAAmD;AACnD,SAAS,OAAO,8EAAa,GAAG;AAChC,MAAM;AACN;AACA,CAAC;AAC2B;AAC5B,sC;;;;;;;;;;;;ACtEA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACjB;AACgC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,8BAA8B,EAAE;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,qCAAqC,uBAAuB,EAAE;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,cAAc;AAC/C,kCAAkC,iBAAiB;AACnD;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2CAA2C,4CAA4C,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,yDAAyD,8BAA8B,2BAA2B,EAAE,EAAE,EAAE;AACxH,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,8CAA8C,8BAA8B,EAAE;AAC9E;AACA,0DAA0D,uCAAuC,sBAAsB,EAAE,EAAE;AAC3H;AACA,8CAA8C,wBAAwB,EAAE;AACxE;AACA;AACA,8CAA8C,2BAA2B,EAAE;AAC3E;AACA;AACA,8CAA8C,0BAA0B,EAAE;AAC1E;AACA;AACA,8CAA8C,wBAAwB,EAAE;AACxE;AACA;AACA,8CAA8C,0BAA0B,EAAE;AAC1E;AACA;AACA,8CAA8C,wBAAwB,EAAE;AACxE;AACA;AACA,8CAA8C,8BAA8B,EAAE;AAC9E;AACA;AACA,8CAA8C,gCAAgC,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,gDAAgD,EAAE;AAC9F;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,uDAAuD;AACvD,SAAS,OAAO,8EAAa,GAAG;AAChC,SAAS,OAAO,oDAAM,GAAG;AACzB,MAAM;AACN;AACA,CAAC;AAC+B;AAChC,mD;;;;;;;;;;;;ACpMA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACjB;AACgC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAA8C;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,4DAA4D,8BAA8B,EAAE;AAC5F;AACA;AACA,4DAA4D,sBAAsB,EAAE;AACpF;AACA;AACA,4DAA4D,sBAAsB,EAAE;AACpF;AACA;AACA,4DAA4D,sBAAsB,EAAE;AACpF;AACA;AACA,4DAA4D,qBAAqB,8CAA8C,EAAE,EAAE;AACnI;AACA;AACA,4DAA4D,uCAAuC,EAAE;AACrG;AACA;AACA,4DAA4D,yCAAyC,EAAE;AACvG;AACA;AACA,4DAA4D,qCAAqC,EAAE;AACnG;AACA;AACA,4DAA4D,mCAAmC,EAAE;AACjG;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA;AACA,kEAAkE,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AACtI,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,6EAAoB,GAAG;AACvC,SAAS,OAAO,oDAAM,GAAG;AACzB,MAAM;AACN;AACA,CAAC;AACwB;AACzB,0C;;;;;;;;;;;;AC9FA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACjB;AACkC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kFAAkF,8BAA8B,EAAE;AAClH;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,wEAAwE,8BAA8B,EAAE;AACxG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,uDAAuD,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AAC3H,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,mDAAmD;AACnD,SAAS,OAAO,6EAAoB,GAAG;AACvC,SAAS,OAAO,oDAAM,GAAG;AACzB,MAAM;AACN;AACA,CAAC;AAC2B;AAC5B,8C;;;;;;;;;;;;AC5HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkC;AACiB;AACe;AACjB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gCAAgC,uCAAuC,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,4BAA4B,EAAE;AAChH,iBAAiB;AACjB;AACA,0EAA0E,oBAAoB,EAAE;AAChG,SAAS;AACT;AACA;AACA,oEAAoE,kBAAkB,EAAE;AACxF;AACA;AACA,oEAAoE,8BAA8B,EAAE;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,uDAAuD,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AAC3H,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,6EAAoB,GAAG;AACvC,SAAS,OAAO,oDAAM,GAAG;AACzB,SAAS,OAAO,6DAAa,GAAG;AAChC,MAAM;AACN;AACA,CAAC;AAC4B;AAC7B,+C;;;;;;;;;;;;AChGA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACjB;AACkC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,mDAAmD,8BAA8B,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,uDAAuD,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AAC3H,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,6EAAoB,GAAG;AACvC,SAAS,OAAO,oDAAM,GAAG;AACzB,MAAM;AACN;AACA,CAAC;AAC0B;AAC3B,6C;;;;;;;;;;;;ACzEA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACjB;AACkC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,4DAA4D,uBAAuB,8CAA8C,EAAE,EAAE;AACrI;AACA;AACA,4DAA4D,iCAAiC,EAAE;AAC/F;AACA;AACA,4DAA4D,0BAA0B,EAAE;AACxF;AACA;AACA,4DAA4D,yCAAyC,EAAE;AACvG;AACA;AACA,4DAA4D,kCAAkC,EAAE;AAChG;AACA;AACA,4DAA4D,qCAAqC,EAAE;AACnG;AACA;AACA,4DAA4D,qCAAqC,EAAE;AACnG;AACA;AACA,4DAA4D,mCAAmC,EAAE;AACjG;AACA;AACA,4DAA4D,yCAAyC,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,8CAA8C;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,uDAAuD,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AAC3H,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,gDAAgD;AAChD,SAAS,OAAO,6EAAoB,GAAG;AACvC,SAAS,OAAO,oDAAM,GAAG;AACzB,MAAM;AACN;AACA,CAAC;AACwB;AACzB,0C;;;;;;;;;;;;ACjGA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACjB;AACgC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qCAAqC,2BAA2B,EAAE,EAAE,EAAE;AAC1G;AACA;AACA,2DAA2D,uBAAuB,EAAE;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,uDAAuD,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AAC3H,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,iDAAiD;AACjD,SAAS,OAAO,6EAAoB,GAAG;AACvC,SAAS,OAAO,oDAAM,GAAG;AACzB,MAAM;AACN;AACA,CAAC;AACyB;AAC1B,2C;;;;;;;;;;;;ACrEA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACjB;AACgC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,qCAAqC,iBAAiB,EAAE,EAAE,EAAE;AAChG;AACA;AACA,4DAA4D,uBAAuB,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B;AACA,uDAAuD,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AAC3H,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,kDAAkD;AAClD,SAAS,OAAO,6EAAoB,GAAG;AACvC,SAAS,OAAO,oDAAM,GAAG;AACzB,MAAM;AACN;AACA,CAAC;AAC0B;AAC3B,4C;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AAAA;AAAmD;AACjB;AACgC;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,kEAAkE,8BAA8B,EAAE;AAClG;AACA;AACA,kEAAkE,sBAAsB,EAAE;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,+CAAU;AACzB;AACA;AACA,kEAAkE,qCAAqC,yBAAyB,EAAE,EAAE,EAAE;AACtI,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,mDAAmD;AACnD,SAAS,OAAO,6EAAoB,GAAG;AACvC,SAAS,OAAO,oDAAM,GAAG;AACzB,MAAM;AACN;AACA,CAAC;AAC2B;AAC5B,6C;;;;;;;;;;;;ACtGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiB,SAAI,IAAI,SAAI;AAC7B;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AAC4E;AACR;AACnB;AAC3C;AACP;AACA;AACA;AACA;AACA,CAAC,4DAA4D;AAC7D;AACA,oFAAoF;AACpF,2BAA2B;AAC3B;AACO,+BAA+B,4DAAc;AACpD;AACA;AACA;AACA,gCAAgC,eAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,+BAA+B,EAAE;AACnE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,oDAAoD;AACpD,SAAS,gCAAgC,OAAO,sDAAQ,EAAE,GAAG,OAAO,oDAAM,iCAAiC,IAAI;AAC/G,SAAS,OAAO,gEAAS,GAAG;AAC5B,SAAS,OAAO,kEAAW,GAAG;AAC9B,MAAM;AACN;AACA,CAAC,CAAC,8DAAa;AACc;AAC7B,gD;;;;;;;;;;;;AClIA;AAAA;AAAA;AAA2C;AAC3C;AACA;AACA;AACA;AACA,SAAS,OAAO,wDAAU,EAAE;AAC5B;AACA;AACA,CAAC;AACwB;AACzB,2C;;;;;;;;;;;;ACVA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AAC6B;AAC7B,gD;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA,uDAAuD,eAAe;AACtE;AACA,CAAC;AACoB;AACrB;AACA;AACA;AACA,2DAA2D,iBAAiB;AAC5E;AACA,CAAC;AACsB;AAChB;AACP,2C;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAiF;AAChC;;AAEjD;AACA;AACA,cAAc,oCAAoC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA,8BAA8B,0DAAY;AAC1C;AACA,kCAAkC,0DAAY;AAC9C;AACA,0BAA0B,0DAAY;AACtC;AACA,8BAA8B,0DAAY;AAC1C,mCAAmC,0DAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"default~app-modules-student-student-module~app-modules-transportation-routing-routes-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { AgmMap } from './directives/map';\nimport { AgmCircle } from './directives/circle';\nimport { AgmRectangle } from './directives/rectangle';\nimport { AgmInfoWindow } from './directives/info-window';\nimport { AgmMarker } from './directives/marker';\nimport { AgmPolygon } from './directives/polygon';\nimport { AgmPolyline } from './directives/polyline';\nimport { AgmPolylinePoint } from './directives/polyline-point';\nimport { AgmKmlLayer } from './directives/kml-layer';\nimport { AgmDataLayer } from './directives/data-layer';\nimport { LazyMapsAPILoader } from './services/maps-api-loader/lazy-maps-api-loader';\nimport { LAZY_MAPS_API_CONFIG } from './services/maps-api-loader/lazy-maps-api-loader';\nimport { MapsAPILoader } from './services/maps-api-loader/maps-api-loader';\nimport { BROWSER_GLOBALS_PROVIDERS } from './utils/browser-globals';\nimport { AgmFitBounds } from '@agm/core/directives/fit-bounds';\n/**\n * @internal\n */\nexport function coreDirectives() {\n    return [\n        AgmMap, AgmMarker, AgmInfoWindow, AgmCircle, AgmRectangle,\n        AgmPolygon, AgmPolyline, AgmPolylinePoint, AgmKmlLayer,\n        AgmDataLayer, AgmFitBounds\n    ];\n}\n/**\n * The angular-google-maps core module. Contains all Directives/Services/Pipes\n * of the core module. Please use `AgmCoreModule.forRoot()` in your app module.\n */\nvar AgmCoreModule = /** @class */ (function () {\n    function AgmCoreModule() {\n    }\n    /**\n     * Please use this method when you register the module at the root level.\n     */\n    /**\n       * Please use this method when you register the module at the root level.\n       */\n    AgmCoreModule.forRoot = /**\n       * Please use this method when you register the module at the root level.\n       */\n    function (lazyMapsAPILoaderConfig) {\n        return {\n            ngModule: AgmCoreModule,\n            providers: BROWSER_GLOBALS_PROVIDERS.concat([\n                { provide: MapsAPILoader, useClass: LazyMapsAPILoader },\n                { provide: LAZY_MAPS_API_CONFIG, useValue: lazyMapsAPILoaderConfig }\n            ]),\n        };\n    };\n    AgmCoreModule.decorators = [\n        { type: NgModule, args: [{ declarations: coreDirectives(), exports: coreDirectives() },] },\n    ];\n    return AgmCoreModule;\n}());\nexport { AgmCoreModule };\n//# sourceMappingURL=core.module.js.map","export { AgmMap } from './directives/map';\nexport { AgmCircle } from './directives/circle';\nexport { AgmRectangle } from './directives/rectangle';\nexport { AgmInfoWindow } from './directives/info-window';\nexport { AgmKmlLayer } from './directives/kml-layer';\nexport { AgmDataLayer } from './directives/data-layer';\nexport { AgmMarker } from './directives/marker';\nexport { AgmPolygon } from './directives/polygon';\nexport { AgmPolyline } from './directives/polyline';\nexport { AgmPolylinePoint } from './directives/polyline-point';\nexport { AgmFitBounds } from './directives/fit-bounds';\n//# sourceMappingURL=directives.js.map","import { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { CircleManager } from '../services/managers/circle-manager';\nvar AgmCircle = /** @class */ (function () {\n    function AgmCircle(_manager) {\n        this._manager = _manager;\n        /**\n           * Indicates whether this Circle handles mouse events. Defaults to true.\n           */\n        this.clickable = true;\n        /**\n           * If set to true, the user can drag this circle over the map. Defaults to false.\n           */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n           * If set to true, the user can edit this circle by dragging the control points shown at\n           * the center and around the circumference of the circle. Defaults to false.\n           */\n        this.editable = false;\n        /**\n           * The radius in meters on the Earth's surface.\n           */\n        this.radius = 0;\n        /**\n           * The stroke position. Defaults to CENTER.\n           * This property is not supported on Internet Explorer 8 and earlier.\n           */\n        this.strokePosition = 'CENTER';\n        /**\n           * The stroke width in pixels.\n           */\n        this.strokeWeight = 0;\n        /**\n           * Whether this circle is visible on the map. Defaults to true.\n           */\n        this.visible = true;\n        /**\n           * This event is fired when the circle's center is changed.\n           */\n        this.centerChange = new EventEmitter();\n        /**\n           * This event emitter gets emitted when the user clicks on the circle.\n           */\n        this.circleClick = new EventEmitter();\n        /**\n           * This event emitter gets emitted when the user clicks on the circle.\n           */\n        this.circleDblClick = new EventEmitter();\n        /**\n           * This event is repeatedly fired while the user drags the circle.\n           */\n        this.drag = new EventEmitter();\n        /**\n           * This event is fired when the user stops dragging the circle.\n           */\n        this.dragEnd = new EventEmitter();\n        /**\n           * This event is fired when the user starts dragging the circle.\n           */\n        this.dragStart = new EventEmitter();\n        /**\n           * This event is fired when the DOM mousedown event is fired on the circle.\n           */\n        this.mouseDown = new EventEmitter();\n        /**\n           * This event is fired when the DOM mousemove event is fired on the circle.\n           */\n        this.mouseMove = new EventEmitter();\n        /**\n           * This event is fired on circle mouseout.\n           */\n        this.mouseOut = new EventEmitter();\n        /**\n           * This event is fired on circle mouseover.\n           */\n        this.mouseOver = new EventEmitter();\n        /**\n           * This event is fired when the DOM mouseup event is fired on the circle.\n           */\n        this.mouseUp = new EventEmitter();\n        /**\n           * This event is fired when the circle's radius is changed.\n           */\n        this.radiusChange = new EventEmitter();\n        /**\n           * This event is fired when the circle is right-clicked on.\n           */\n        this.rightClick = new EventEmitter();\n        this._circleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    /** @internal */\n    AgmCircle.prototype.ngOnInit = /** @internal */\n    function () {\n        this._manager.addCircle(this);\n        this._circleAddedToManager = true;\n        this._registerEventListeners();\n    };\n    /** @internal */\n    /** @internal */\n    AgmCircle.prototype.ngOnChanges = /** @internal */\n    function (changes) {\n        if (!this._circleAddedToManager) {\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._manager.setCenter(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        if (changes['radius']) {\n            this._manager.setRadius(this);\n        }\n        this._updateCircleOptionsChanges(changes);\n    };\n    AgmCircle.prototype._updateCircleOptionsChanges = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmCircle._mapOptions.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    };\n    AgmCircle.prototype._registerEventListeners = function () {\n        var _this = this;\n        var events = new Map();\n        events.set('center_changed', this.centerChange);\n        events.set('click', this.circleClick);\n        events.set('dblclick', this.circleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragStart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('radius_changed', this.radiusChange);\n        events.set('rightclick', this.rightClick);\n        events.forEach(function (eventEmitter, eventName) {\n            _this._eventSubscriptions.push(_this._manager.createEventObservable(eventName, _this).subscribe(function (value) {\n                switch (eventName) {\n                    case 'radius_changed':\n                        _this._manager.getRadius(_this).then(function (radius) { return eventEmitter.emit(radius); });\n                        break;\n                    case 'center_changed':\n                        _this._manager.getCenter(_this).then(function (center) {\n                            return eventEmitter.emit({ lat: center.lat(), lng: center.lng() });\n                        });\n                        break;\n                    default:\n                        eventEmitter.emit({ coords: { lat: value.latLng.lat(), lng: value.latLng.lng() } });\n                }\n            }));\n        });\n    };\n    /** @internal */\n    /** @internal */\n    AgmCircle.prototype.ngOnDestroy = /** @internal */\n    function () {\n        this._eventSubscriptions.forEach(function (s) { s.unsubscribe(); });\n        this._eventSubscriptions = null;\n        this._manager.removeCircle(this);\n    };\n    /**\n     * Gets the LatLngBounds of this Circle.\n     */\n    /**\n       * Gets the LatLngBounds of this Circle.\n       */\n    AgmCircle.prototype.getBounds = /**\n       * Gets the LatLngBounds of this Circle.\n       */\n    function () { return this._manager.getBounds(this); };\n    AgmCircle.prototype.getCenter = function () { return this._manager.getCenter(this); };\n    AgmCircle._mapOptions = [\n        'fillColor', 'fillOpacity', 'strokeColor', 'strokeOpacity', 'strokePosition', 'strokeWeight',\n        'visible', 'zIndex', 'clickable'\n    ];\n    AgmCircle.decorators = [\n        { type: Directive, args: [{\n                    selector: 'agm-circle'\n                },] },\n    ];\n    /** @nocollapse */\n    AgmCircle.ctorParameters = function () { return [\n        { type: CircleManager, },\n    ]; };\n    AgmCircle.propDecorators = {\n        \"latitude\": [{ type: Input },],\n        \"longitude\": [{ type: Input },],\n        \"clickable\": [{ type: Input },],\n        \"draggable\": [{ type: Input, args: ['circleDraggable',] },],\n        \"editable\": [{ type: Input },],\n        \"fillColor\": [{ type: Input },],\n        \"fillOpacity\": [{ type: Input },],\n        \"radius\": [{ type: Input },],\n        \"strokeColor\": [{ type: Input },],\n        \"strokeOpacity\": [{ type: Input },],\n        \"strokePosition\": [{ type: Input },],\n        \"strokeWeight\": [{ type: Input },],\n        \"visible\": [{ type: Input },],\n        \"zIndex\": [{ type: Input },],\n        \"centerChange\": [{ type: Output },],\n        \"circleClick\": [{ type: Output },],\n        \"circleDblClick\": [{ type: Output },],\n        \"drag\": [{ type: Output },],\n        \"dragEnd\": [{ type: Output },],\n        \"dragStart\": [{ type: Output },],\n        \"mouseDown\": [{ type: Output },],\n        \"mouseMove\": [{ type: Output },],\n        \"mouseOut\": [{ type: Output },],\n        \"mouseOver\": [{ type: Output },],\n        \"mouseUp\": [{ type: Output },],\n        \"radiusChange\": [{ type: Output },],\n        \"rightClick\": [{ type: Output },],\n    };\n    return AgmCircle;\n}());\nexport { AgmCircle };\n//# sourceMappingURL=circle.js.map","import { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { DataLayerManager } from './../services/managers/data-layer-manager';\nvar layerId = 0;\n/**\n * AgmDataLayer enables the user to add data layers to the map.\n *\n * ### Example\n * ```typescript\n * import { Component } from 'angular2/core';\n * import { AgmMap, AgmDataLayer } from\n * 'angular-google-maps/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  directives: [AgmMap, AgmDataLayer],\n *  styles: [`\n *    .agm-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n * <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n * \t  <agm-data-layer [geoJson]=\"geoJsonObject\" (layerClick)=\"clicked($event)\" [style]=\"styleFunc\">\n * \t  </agm-data-layer>\n * </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = -25.274449;\n *   lng: number = 133.775060;\n *   zoom: number = 5;\n *\n * clicked(clickEvent) {\n *    console.log(clickEvent);\n *  }\n *\n *  styleFunc(feature) {\n *    return ({\n *      clickable: false,\n *      fillColor: feature.getProperty('color'),\n *      strokeWeight: 1\n *    });\n *  }\n *\n *  geoJsonObject: Object = {\n *    \"type\": \"FeatureCollection\",\n *    \"features\": [\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"G\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"71\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [123.61, -22.14], [122.38, -21.73], [121.06, -21.69], [119.66, -22.22], [119.00, -23.40],\n *              [118.65, -24.76], [118.43, -26.07], [118.78, -27.56], [119.22, -28.57], [120.23, -29.49],\n *              [121.77, -29.87], [123.57, -29.64], [124.45, -29.03], [124.71, -27.95], [124.80, -26.70],\n *              [124.80, -25.60], [123.61, -25.64], [122.56, -25.64], [121.72, -25.72], [121.81, -26.62],\n *              [121.86, -26.98], [122.60, -26.90], [123.57, -27.05], [123.57, -27.68], [123.35, -28.18],\n *              [122.51, -28.38], [121.77, -28.26], [121.02, -27.91], [120.49, -27.21], [120.14, -26.50],\n *              [120.10, -25.64], [120.27, -24.52], [120.67, -23.68], [121.72, -23.32], [122.43, -23.48],\n *              [123.04, -24.04], [124.54, -24.28], [124.58, -23.20], [123.61, -22.14]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"red\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [128.84, -25.76], [128.18, -25.60], [127.96, -25.52], [127.88, -25.52], [127.70, -25.60],\n *              [127.26, -25.79], [126.60, -26.11], [126.16, -26.78], [126.12, -27.68], [126.21, -28.42],\n *              [126.69, -29.49], [127.74, -29.80], [128.80, -29.72], [129.41, -29.03], [129.72, -27.95],\n *              [129.68, -27.21], [129.33, -26.23], [128.84, -25.76]\n *            ],\n *            [\n *              [128.45, -27.44], [128.32, -26.94], [127.70, -26.82], [127.35, -27.05], [127.17, -27.80],\n *              [127.57, -28.22], [128.10, -28.42], [128.49, -27.80], [128.45, -27.44]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"o\",\n *          \"color\": \"yellow\",\n *          \"rank\": \"15\",\n *          \"ascii\": \"111\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [131.87, -25.76], [131.35, -26.07], [130.95, -26.78], [130.82, -27.64], [130.86, -28.53],\n *              [131.26, -29.22], [131.92, -29.76], [132.45, -29.87], [133.06, -29.76], [133.72, -29.34],\n *              [134.07, -28.80], [134.20, -27.91], [134.07, -27.21], [133.81, -26.31], [133.37, -25.83],\n *              [132.71, -25.64], [131.87, -25.76]\n *            ],\n *            [\n *              [133.15, -27.17], [132.71, -26.86], [132.09, -26.90], [131.74, -27.56], [131.79, -28.26],\n *              [132.36, -28.45], [132.93, -28.34], [133.15, -27.76], [133.15, -27.17]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"g\",\n *          \"color\": \"blue\",\n *          \"rank\": \"7\",\n *          \"ascii\": \"103\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [138.12, -25.04], [136.84, -25.16], [135.96, -25.36], [135.26, -25.99], [135, -26.90],\n *              [135.04, -27.91], [135.26, -28.88], [136.05, -29.45], [137.02, -29.49], [137.81, -29.49],\n *              [137.94, -29.99], [137.90, -31.20], [137.85, -32.24], [136.88, -32.69], [136.45, -32.36],\n *              [136.27, -31.80], [134.95, -31.84], [135.17, -32.99], [135.52, -33.43], [136.14, -33.76],\n *              [137.06, -33.83], [138.12, -33.65], [138.86, -33.21], [139.30, -32.28], [139.30, -31.24],\n *              [139.30, -30.14], [139.21, -28.96], [139.17, -28.22], [139.08, -27.41], [139.08, -26.47],\n *              [138.99, -25.40], [138.73, -25.00], [138.12, -25.04]\n *            ],\n *            [\n *              [137.50, -26.54], [136.97, -26.47], [136.49, -26.58], [136.31, -27.13], [136.31, -27.72],\n *              [136.58, -27.99], [137.50, -28.03], [137.68, -27.68], [137.59, -26.78], [137.50, -26.54]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"l\",\n *          \"color\": \"green\",\n *          \"rank\": \"12\",\n *          \"ascii\": \"108\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [140.14, -21.04], [140.31, -29.42], [141.67, -29.49], [141.59, -20.92], [140.14, -21.04]\n *            ]\n *          ]\n *        }\n *      },\n *      {\n *        \"type\": \"Feature\",\n *        \"properties\": {\n *          \"letter\": \"e\",\n *          \"color\": \"red\",\n *          \"rank\": \"5\",\n *          \"ascii\": \"101\"\n *        },\n *        \"geometry\": {\n *          \"type\": \"Polygon\",\n *          \"coordinates\": [\n *            [\n *              [144.14, -27.41], [145.67, -27.52], [146.86, -27.09], [146.82, -25.64], [146.25, -25.04],\n *              [145.45, -24.68], [144.66, -24.60], [144.09, -24.76], [143.43, -25.08], [142.99, -25.40],\n *              [142.64, -26.03], [142.64, -27.05], [142.64, -28.26], [143.30, -29.11], [144.18, -29.57],\n *              [145.41, -29.64], [146.46, -29.19], [146.64, -28.72], [146.82, -28.14], [144.84, -28.42],\n *              [144.31, -28.26], [144.14, -27.41]\n *            ],\n *            [\n *              [144.18, -26.39], [144.53, -26.58], [145.19, -26.62], [145.72, -26.35], [145.81, -25.91],\n *              [145.41, -25.68], [144.97, -25.68], [144.49, -25.64], [144, -25.99], [144.18, -26.39]\n *            ]\n *          ]\n *        }\n *      }\n *    ]\n *  };\n * }\n * ```\n */\nvar AgmDataLayer = /** @class */ (function () {\n    function AgmDataLayer(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId++).toString();\n        this._subscriptions = [];\n        /**\n           * This event is fired when a feature in the layer is clicked.\n           */\n        this.layerClick = new EventEmitter();\n        /**\n           * The geoJson to be displayed\n           */\n        this.geoJson = null;\n    }\n    AgmDataLayer.prototype.ngOnInit = function () {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addDataLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    };\n    AgmDataLayer.prototype._addEventListeners = function () {\n        var _this = this;\n        var listeners = [\n            { name: 'click', handler: function (ev) { return _this.layerClick.emit(ev); } },\n        ];\n        listeners.forEach(function (obj) {\n            var os = _this._manager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n    };\n    /** @internal */\n    /** @internal */\n    AgmDataLayer.prototype.id = /** @internal */\n    function () { return this._id; };\n    /** @internal */\n    /** @internal */\n    AgmDataLayer.prototype.toString = /** @internal */\n    function () { return \"AgmDataLayer-\" + this._id.toString(); };\n    /** @internal */\n    /** @internal */\n    AgmDataLayer.prototype.ngOnDestroy = /** @internal */\n    function () {\n        this._manager.deleteDataLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    /** @internal */\n    /** @internal */\n    AgmDataLayer.prototype.ngOnChanges = /** @internal */\n    function (changes) {\n        var _this = this;\n        if (!this._addedToManager) {\n            return;\n        }\n        var geoJsonChange = changes['geoJson'];\n        if (geoJsonChange) {\n            this._manager.updateGeoJson(this, geoJsonChange.currentValue);\n        }\n        var dataOptions = {};\n        AgmDataLayer._dataOptionsAttributes.forEach(function (k) { return dataOptions[k] = changes.hasOwnProperty(k) ? changes[k].currentValue : _this[k]; });\n        this._manager.setDataOptions(this, dataOptions);\n    };\n    AgmDataLayer._dataOptionsAttributes = ['style'];\n    AgmDataLayer.decorators = [\n        { type: Directive, args: [{\n                    selector: 'agm-data-layer'\n                },] },\n    ];\n    /** @nocollapse */\n    AgmDataLayer.ctorParameters = function () { return [\n        { type: DataLayerManager, },\n    ]; };\n    AgmDataLayer.propDecorators = {\n        \"layerClick\": [{ type: Output },],\n        \"geoJson\": [{ type: Input },],\n        \"style\": [{ type: Input },],\n    };\n    return AgmDataLayer;\n}());\nexport { AgmDataLayer };\n//# sourceMappingURL=data-layer.js.map","import { Directive, Self, Input } from '@angular/core';\nimport { FitBoundsService, FitBoundsAccessor } from '../services/fit-bounds';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n/**\n * Adds the given directive to the auto fit bounds feature when the value is true.\n * To make it work with you custom AGM component, you also have to implement the {@link FitBoundsAccessor} abstract class.\n * @example\n * <agm-marker [agmFitBounds]=\"true\"></agm-marker>\n */\nvar AgmFitBounds = /** @class */ (function () {\n    function AgmFitBounds(_fitBoundsAccessor, _fitBoundsService) {\n        this._fitBoundsAccessor = _fitBoundsAccessor;\n        this._fitBoundsService = _fitBoundsService;\n        /**\n           * If the value is true, the element gets added to the bounds of the map.\n           * Default: true.\n           */\n        this.agmFitBounds = true;\n        this._destroyed$ = new Subject();\n        this._latestFitBoundsDetails = null;\n    }\n    /**\n     * @internal\n     */\n    /**\n       * @internal\n       */\n    AgmFitBounds.prototype.ngOnChanges = /**\n       * @internal\n       */\n    function (changes) {\n        this._updateBounds();\n    };\n    /**\n     * @internal\n     */\n    /**\n       * @internal\n       */\n    AgmFitBounds.prototype.ngOnInit = /**\n       * @internal\n       */\n    function () {\n        var _this = this;\n        this._fitBoundsAccessor\n            .getFitBoundsDetails$()\n            .pipe(distinctUntilChanged(function (x, y) {\n            return x.latLng.lat === y.latLng.lng;\n        }), takeUntil(this._destroyed$))\n            .subscribe(function (details) { return _this._updateBounds(details); });\n    };\n    AgmFitBounds.prototype._updateBounds = function (newFitBoundsDetails) {\n        if (newFitBoundsDetails) {\n            this._latestFitBoundsDetails = newFitBoundsDetails;\n        }\n        if (!this._latestFitBoundsDetails) {\n            return;\n        }\n        if (this.agmFitBounds) {\n            this._fitBoundsService.addToBounds(this._latestFitBoundsDetails.latLng);\n        }\n        else {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n        }\n    };\n    /**\n     * @internal\n     */\n    /**\n       * @internal\n       */\n    AgmFitBounds.prototype.ngOnDestroy = /**\n       * @internal\n       */\n    function () {\n        this._destroyed$.next();\n        this._destroyed$.complete();\n        if (this._latestFitBoundsDetails !== null) {\n            this._fitBoundsService.removeFromBounds(this._latestFitBoundsDetails.latLng);\n        }\n    };\n    AgmFitBounds.decorators = [\n        { type: Directive, args: [{\n                    selector: '[agmFitBounds]'\n                },] },\n    ];\n    /** @nocollapse */\n    AgmFitBounds.ctorParameters = function () { return [\n        { type: FitBoundsAccessor, decorators: [{ type: Self },] },\n        { type: FitBoundsService, },\n    ]; };\n    AgmFitBounds.propDecorators = {\n        \"agmFitBounds\": [{ type: Input },],\n    };\n    return AgmFitBounds;\n}());\nexport { AgmFitBounds };\n//# sourceMappingURL=fit-bounds.js.map","import { Component, ElementRef, EventEmitter, Output, Input } from '@angular/core';\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\nvar infoWindowId = 0;\n/**\n * AgmInfoWindow renders a info window inside a {@link AgmMarker} or standalone.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *        <agm-info-window [disableAutoPan]=\"true\">\n *          Hi, this is the content of the <strong>info window</strong>\n *        </agm-info-window>\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmInfoWindow = /** @class */ (function () {\n    function AgmInfoWindow(_infoWindowManager, _el) {\n        this._infoWindowManager = _infoWindowManager;\n        this._el = _el;\n        /**\n           * Sets the open state for the InfoWindow. You can also call the open() and close() methods.\n           */\n        this.isOpen = false;\n        /**\n           * Emits an event when the info window is closed.\n           */\n        this.infoWindowClose = new EventEmitter();\n        this._infoWindowAddedToManager = false;\n        this._id = (infoWindowId++).toString();\n    }\n    AgmInfoWindow.prototype.ngOnInit = function () {\n        this.content = this._el.nativeElement.querySelector('.agm-info-window-content');\n        this._infoWindowManager.addInfoWindow(this);\n        this._infoWindowAddedToManager = true;\n        this._updateOpenState();\n        this._registerEventListeners();\n    };\n    /** @internal */\n    /** @internal */\n    AgmInfoWindow.prototype.ngOnChanges = /** @internal */\n    function (changes) {\n        if (!this._infoWindowAddedToManager) {\n            return;\n        }\n        if ((changes['latitude'] || changes['longitude']) && typeof this.latitude === 'number' &&\n            typeof this.longitude === 'number') {\n            this._infoWindowManager.setPosition(this);\n        }\n        if (changes['zIndex']) {\n            this._infoWindowManager.setZIndex(this);\n        }\n        if (changes['isOpen']) {\n            this._updateOpenState();\n        }\n        this._setInfoWindowOptions(changes);\n    };\n    AgmInfoWindow.prototype._registerEventListeners = function () {\n        var _this = this;\n        this._infoWindowManager.createEventObservable('closeclick', this).subscribe(function () {\n            _this.isOpen = false;\n            _this.infoWindowClose.emit();\n        });\n    };\n    AgmInfoWindow.prototype._updateOpenState = function () {\n        this.isOpen ? this.open() : this.close();\n    };\n    AgmInfoWindow.prototype._setInfoWindowOptions = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmInfoWindow._infoWindowOptionsInputs.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        this._infoWindowManager.setOptions(this, options);\n    };\n    /**\n     * Opens the info window.\n     */\n    /**\n       * Opens the info window.\n       */\n    AgmInfoWindow.prototype.open = /**\n       * Opens the info window.\n       */\n    function () { return this._infoWindowManager.open(this); };\n    /**\n     * Closes the info window.\n     */\n    /**\n       * Closes the info window.\n       */\n    AgmInfoWindow.prototype.close = /**\n       * Closes the info window.\n       */\n    function () {\n        var _this = this;\n        return this._infoWindowManager.close(this).then(function () { _this.infoWindowClose.emit(); });\n    };\n    /** @internal */\n    /** @internal */\n    AgmInfoWindow.prototype.id = /** @internal */\n    function () { return this._id; };\n    /** @internal */\n    /** @internal */\n    AgmInfoWindow.prototype.toString = /** @internal */\n    function () { return 'AgmInfoWindow-' + this._id.toString(); };\n    /** @internal */\n    /** @internal */\n    AgmInfoWindow.prototype.ngOnDestroy = /** @internal */\n    function () { this._infoWindowManager.deleteInfoWindow(this); };\n    AgmInfoWindow._infoWindowOptionsInputs = ['disableAutoPan', 'maxWidth'];\n    AgmInfoWindow.decorators = [\n        { type: Component, args: [{\n                    selector: 'agm-info-window',\n                    template: \"<div class='agm-info-window-content'>\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    AgmInfoWindow.ctorParameters = function () { return [\n        { type: InfoWindowManager, },\n        { type: ElementRef, },\n    ]; };\n    AgmInfoWindow.propDecorators = {\n        \"latitude\": [{ type: Input },],\n        \"longitude\": [{ type: Input },],\n        \"disableAutoPan\": [{ type: Input },],\n        \"zIndex\": [{ type: Input },],\n        \"maxWidth\": [{ type: Input },],\n        \"isOpen\": [{ type: Input },],\n        \"infoWindowClose\": [{ type: Output },],\n    };\n    return AgmInfoWindow;\n}());\nexport { AgmInfoWindow };\n//# sourceMappingURL=info-window.js.map","import { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { KmlLayerManager } from './../services/managers/kml-layer-manager';\nvar layerId = 0;\nvar AgmKmlLayer = /** @class */ (function () {\n    function AgmKmlLayer(_manager) {\n        this._manager = _manager;\n        this._addedToManager = false;\n        this._id = (layerId++).toString();\n        this._subscriptions = [];\n        /**\n           * If true, the layer receives mouse events. Default value is true.\n           */\n        this.clickable = true;\n        /**\n           * By default, the input map is centered and zoomed to the bounding box of the contents of the\n           * layer.\n           * If this option is set to true, the viewport is left unchanged, unless the map's center and zoom\n           * were never set.\n           */\n        this.preserveViewport = false;\n        /**\n           * Whether to render the screen overlays. Default true.\n           */\n        this.screenOverlays = true;\n        /**\n           * Suppress the rendering of info windows when layer features are clicked.\n           */\n        this.suppressInfoWindows = false;\n        /**\n           * The URL of the KML document to display.\n           */\n        this.url = null;\n        /**\n           * The z-index of the layer.\n           */\n        this.zIndex = null;\n        /**\n           * This event is fired when a feature in the layer is clicked.\n           */\n        this.layerClick = new EventEmitter();\n        /**\n           * This event is fired when the KML layers default viewport has changed.\n           */\n        this.defaultViewportChange = new EventEmitter();\n        /**\n           * This event is fired when the KML layer has finished loading.\n           * At this point it is safe to read the status property to determine if the layer loaded\n           * successfully.\n           */\n        this.statusChange = new EventEmitter();\n    }\n    AgmKmlLayer.prototype.ngOnInit = function () {\n        if (this._addedToManager) {\n            return;\n        }\n        this._manager.addKmlLayer(this);\n        this._addedToManager = true;\n        this._addEventListeners();\n    };\n    AgmKmlLayer.prototype.ngOnChanges = function (changes) {\n        if (!this._addedToManager) {\n            return;\n        }\n        this._updatePolygonOptions(changes);\n    };\n    AgmKmlLayer.prototype._updatePolygonOptions = function (changes) {\n        var options = Object.keys(changes)\n            .filter(function (k) { return AgmKmlLayer._kmlLayerOptions.indexOf(k) !== -1; })\n            .reduce(function (obj, k) {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n        if (Object.keys(options).length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    };\n    AgmKmlLayer.prototype._addEventListeners = function () {\n        var _this = this;\n        var listeners = [\n            { name: 'click', handler: function (ev) { return _this.layerClick.emit(ev); } },\n            { name: 'defaultviewport_changed', handler: function () { return _this.defaultViewportChange.emit(); } },\n            { name: 'status_changed', handler: function () { return _this.statusChange.emit(); } },\n        ];\n        listeners.forEach(function (obj) {\n            var os = _this._manager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n    };\n    /** @internal */\n    /** @internal */\n    AgmKmlLayer.prototype.id = /** @internal */\n    function () { return this._id; };\n    /** @internal */\n    /** @internal */\n    AgmKmlLayer.prototype.toString = /** @internal */\n    function () { return \"AgmKmlLayer-\" + this._id.toString(); };\n    /** @internal */\n    /** @internal */\n    AgmKmlLayer.prototype.ngOnDestroy = /** @internal */\n    function () {\n        this._manager.deleteKmlLayer(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    AgmKmlLayer._kmlLayerOptions = ['clickable', 'preserveViewport', 'screenOverlays', 'suppressInfoWindows', 'url', 'zIndex'];\n    AgmKmlLayer.decorators = [\n        { type: Directive, args: [{\n                    selector: 'agm-kml-layer'\n                },] },\n    ];\n    /** @nocollapse */\n    AgmKmlLayer.ctorParameters = function () { return [\n        { type: KmlLayerManager, },\n    ]; };\n    AgmKmlLayer.propDecorators = {\n        \"clickable\": [{ type: Input },],\n        \"preserveViewport\": [{ type: Input },],\n        \"screenOverlays\": [{ type: Input },],\n        \"suppressInfoWindows\": [{ type: Input },],\n        \"url\": [{ type: Input },],\n        \"zIndex\": [{ type: Input },],\n        \"layerClick\": [{ type: Output },],\n        \"defaultViewportChange\": [{ type: Output },],\n        \"statusChange\": [{ type: Output },],\n    };\n    return AgmKmlLayer;\n}());\nexport { AgmKmlLayer };\n//# sourceMappingURL=kml-layer.js.map","import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { GoogleMapsAPIWrapper } from '../services/google-maps-api-wrapper';\nimport { CircleManager } from '../services/managers/circle-manager';\nimport { RectangleManager } from '../services/managers/rectangle-manager';\nimport { InfoWindowManager } from '../services/managers/info-window-manager';\nimport { MarkerManager } from '../services/managers/marker-manager';\nimport { PolygonManager } from '../services/managers/polygon-manager';\nimport { PolylineManager } from '../services/managers/polyline-manager';\nimport { KmlLayerManager } from './../services/managers/kml-layer-manager';\nimport { DataLayerManager } from './../services/managers/data-layer-manager';\nimport { FitBoundsService } from '../services/fit-bounds';\n/**\n * AgmMap renders a Google Map.\n * **Important note**: To be able see a map in the browser, you have to define a height for the\n * element `agm-map`.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmMap = /** @class */ (function () {\n    function AgmMap(_elem, _mapsWrapper, _fitBoundsService) {\n        this._elem = _elem;\n        this._mapsWrapper = _mapsWrapper;\n        this._fitBoundsService = _fitBoundsService;\n        /**\n           * The longitude that defines the center of the map.\n           */\n        this.longitude = 0;\n        /**\n           * The latitude that defines the center of the map.\n           */\n        this.latitude = 0;\n        /**\n           * The zoom level of the map. The default zoom level is 8.\n           */\n        this.zoom = 8;\n        /**\n           * Enables/disables if map is draggable.\n           */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = true;\n        /**\n           * Enables/disables zoom and center on double click. Enabled by default.\n           */\n        this.disableDoubleClickZoom = false;\n        /**\n           * Enables/disables all default UI of the Google map. Please note: When the map is created, this\n           * value cannot get updated.\n           */\n        this.disableDefaultUI = false;\n        /**\n           * If false, disables scrollwheel zooming on the map. The scrollwheel is enabled by default.\n           */\n        this.scrollwheel = true;\n        /**\n           * If false, prevents the map from being controlled by the keyboard. Keyboard shortcuts are\n           * enabled by default.\n           */\n        this.keyboardShortcuts = true;\n        /**\n           * The enabled/disabled state of the Zoom control.\n           */\n        this.zoomControl = true;\n        /**\n           * Styles to apply to each of the default map types. Note that for Satellite/Hybrid and Terrain\n           * modes, these styles will only apply to labels and geometry.\n           */\n        this.styles = [];\n        /**\n           * When true and the latitude and/or longitude values changes, the Google Maps panTo method is\n           * used to\n           * center the map. See: https://developers.google.com/maps/documentation/javascript/reference#Map\n           */\n        this.usePanning = false;\n        /**\n           * The initial enabled/disabled state of the Street View Pegman control.\n           * This control is part of the default UI, and should be set to false when displaying a map type\n           * on which the Street View road overlay should not appear (e.g. a non-Earth map type).\n           */\n        this.streetViewControl = true;\n        /**\n           * Sets the viewport to contain the given bounds.\n           * If this option to `true`, the bounds get automatically computed from all elements that use the {@link AgmFitBounds} directive.\n           */\n        this.fitBounds = false;\n        /**\n           * The initial enabled/disabled state of the Scale control. This is disabled by default.\n           */\n        this.scaleControl = false;\n        /**\n           * The initial enabled/disabled state of the Map type control.\n           */\n        this.mapTypeControl = false;\n        /**\n           * The initial enabled/disabled state of the Pan control.\n           */\n        this.panControl = false;\n        /**\n           * The initial enabled/disabled state of the Rotate control.\n           */\n        this.rotateControl = false;\n        /**\n           * The initial enabled/disabled state of the Fullscreen control.\n           */\n        this.fullscreenControl = false;\n        /**\n           * The map mapTypeId. Defaults to 'roadmap'.\n           */\n        this.mapTypeId = 'roadmap';\n        /**\n           * When false, map icons are not clickable. A map icon represents a point of interest,\n           * also known as a POI. By default map icons are clickable.\n           */\n        this.clickableIcons = true;\n        /**\n           * This setting controls how gestures on the map are handled.\n           * Allowed values:\n           * - 'cooperative' (Two-finger touch gestures pan and zoom the map. One-finger touch gestures are not handled by the map.)\n           * - 'greedy'      (All touch gestures pan or zoom the map.)\n           * - 'none'        (The map cannot be panned or zoomed by user gestures.)\n           * - 'auto'        [default] (Gesture handling is either cooperative or greedy, depending on whether the page is scrollable or not.\n           */\n        this.gestureHandling = 'auto';\n        this._observableSubscriptions = [];\n        /**\n           * This event emitter gets emitted when the user clicks on the map (but not when they click on a\n           * marker or infoWindow).\n           */\n        this.mapClick = new EventEmitter();\n        /**\n           * This event emitter gets emitted when the user right-clicks on the map (but not when they click\n           * on a marker or infoWindow).\n           */\n        this.mapRightClick = new EventEmitter();\n        /**\n           * This event emitter gets emitted when the user double-clicks on the map (but not when they click\n           * on a marker or infoWindow).\n           */\n        this.mapDblClick = new EventEmitter();\n        /**\n           * This event emitter is fired when the map center changes.\n           */\n        this.centerChange = new EventEmitter();\n        /**\n           * This event is fired when the viewport bounds have changed.\n           */\n        this.boundsChange = new EventEmitter();\n        /**\n           * This event is fired when the mapTypeId property changes.\n           */\n        this.mapTypeIdChange = new EventEmitter();\n        /**\n           * This event is fired when the map becomes idle after panning or zooming.\n           */\n        this.idle = new EventEmitter();\n        /**\n           * This event is fired when the zoom level has changed.\n           */\n        this.zoomChange = new EventEmitter();\n        /**\n           * This event is fired when the google map is fully initialized.\n           * You get the google.maps.Map instance as a result of this EventEmitter.\n           */\n        this.mapReady = new EventEmitter();\n    }\n    /** @internal */\n    /** @internal */\n    AgmMap.prototype.ngOnInit = /** @internal */\n    function () {\n        // todo: this should be solved with a new component and a viewChild decorator\n        var container = this._elem.nativeElement.querySelector('.agm-map-container-inner');\n        this._initMapInstance(container);\n    };\n    AgmMap.prototype._initMapInstance = function (el) {\n        var _this = this;\n        this._mapsWrapper.createMap(el, {\n            center: { lat: this.latitude || 0, lng: this.longitude || 0 },\n            zoom: this.zoom,\n            minZoom: this.minZoom,\n            maxZoom: this.maxZoom,\n            disableDefaultUI: this.disableDefaultUI,\n            disableDoubleClickZoom: this.disableDoubleClickZoom,\n            scrollwheel: this.scrollwheel,\n            backgroundColor: this.backgroundColor,\n            draggable: this.draggable,\n            draggableCursor: this.draggableCursor,\n            draggingCursor: this.draggingCursor,\n            keyboardShortcuts: this.keyboardShortcuts,\n            styles: this.styles,\n            zoomControl: this.zoomControl,\n            zoomControlOptions: this.zoomControlOptions,\n            streetViewControl: this.streetViewControl,\n            streetViewControlOptions: this.streetViewControlOptions,\n            scaleControl: this.scaleControl,\n            scaleControlOptions: this.scaleControlOptions,\n            mapTypeControl: this.mapTypeControl,\n            mapTypeControlOptions: this.mapTypeControlOptions,\n            panControl: this.panControl,\n            panControlOptions: this.panControlOptions,\n            rotateControl: this.rotateControl,\n            rotateControlOptions: this.rotateControlOptions,\n            fullscreenControl: this.fullscreenControl,\n            fullscreenControlOptions: this.fullscreenControlOptions,\n            mapTypeId: this.mapTypeId,\n            clickableIcons: this.clickableIcons,\n            gestureHandling: this.gestureHandling\n        })\n            .then(function () { return _this._mapsWrapper.getNativeMap(); })\n            .then(function (map) { return _this.mapReady.emit(map); });\n        // register event listeners\n        this._handleMapCenterChange();\n        this._handleMapZoomChange();\n        this._handleMapMouseEvents();\n        this._handleBoundsChange();\n        this._handleMapTypeIdChange();\n        this._handleIdleEvent();\n    };\n    /** @internal */\n    /** @internal */\n    AgmMap.prototype.ngOnDestroy = /** @internal */\n    function () {\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });\n        // remove all listeners from the map instance\n        this._mapsWrapper.clearInstanceListeners();\n        if (this._fitBoundsSubscription) {\n            this._fitBoundsSubscription.unsubscribe();\n        }\n    };\n    /* @internal */\n    /* @internal */\n    AgmMap.prototype.ngOnChanges = /* @internal */\n    function (changes) {\n        this._updateMapOptionsChanges(changes);\n        this._updatePosition(changes);\n    };\n    AgmMap.prototype._updateMapOptionsChanges = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmMap._mapOptionsAttributes.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { options[k] = changes[k].currentValue; });\n        this._mapsWrapper.setMapOptions(options);\n    };\n    /**\n     * Triggers a resize event on the google map instance.\n     * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n     * Returns a promise that gets resolved after the event was triggered.\n     */\n    /**\n       * Triggers a resize event on the google map instance.\n       * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n       * Returns a promise that gets resolved after the event was triggered.\n       */\n    AgmMap.prototype.triggerResize = /**\n       * Triggers a resize event on the google map instance.\n       * When recenter is true, the of the google map gets called with the current lat/lng values or fitBounds value to recenter the map.\n       * Returns a promise that gets resolved after the event was triggered.\n       */\n    function (recenter) {\n        var _this = this;\n        if (recenter === void 0) { recenter = true; }\n        // Note: When we would trigger the resize event and show the map in the same turn (which is a\n        // common case for triggering a resize event), then the resize event would not\n        // work (to show the map), so we trigger the event in a timeout.\n        return new Promise(function (resolve) {\n            setTimeout(function () {\n                return _this._mapsWrapper.triggerMapEvent('resize').then(function () {\n                    if (recenter) {\n                        _this.fitBounds != null ? _this._fitBounds() : _this._setCenter();\n                    }\n                    resolve();\n                });\n            });\n        });\n    };\n    AgmMap.prototype._updatePosition = function (changes) {\n        if (changes['latitude'] == null && changes['longitude'] == null &&\n            !changes['fitBounds']) {\n            // no position update needed\n            return;\n        }\n        // we prefer fitBounds in changes\n        if ('fitBounds' in changes) {\n            this._fitBounds();\n            return;\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        this._setCenter();\n    };\n    AgmMap.prototype._setCenter = function () {\n        var newCenter = {\n            lat: this.latitude,\n            lng: this.longitude,\n        };\n        if (this.usePanning) {\n            this._mapsWrapper.panTo(newCenter);\n        }\n        else {\n            this._mapsWrapper.setCenter(newCenter);\n        }\n    };\n    AgmMap.prototype._fitBounds = function () {\n        switch (this.fitBounds) {\n            case true:\n                this._subscribeToFitBoundsUpdates();\n                break;\n            case false:\n                if (this._fitBoundsSubscription) {\n                    this._fitBoundsSubscription.unsubscribe();\n                }\n                break;\n            default:\n                this._updateBounds(this.fitBounds);\n        }\n    };\n    AgmMap.prototype._subscribeToFitBoundsUpdates = function () {\n        var _this = this;\n        this._fitBoundsSubscription = this._fitBoundsService.getBounds$().subscribe(function (b) { return _this._updateBounds(b); });\n    };\n    AgmMap.prototype._updateBounds = function (bounds) {\n        if (this._isLatLngBoundsLiteral(bounds) && google && google.maps) {\n            var newBounds = google.maps.LatLngBounds();\n            newBounds.union(bounds);\n            bounds = newBounds;\n        }\n        if (this.usePanning) {\n            this._mapsWrapper.panToBounds(bounds);\n            return;\n        }\n        this._mapsWrapper.fitBounds(bounds);\n    };\n    AgmMap.prototype._isLatLngBoundsLiteral = function (bounds) {\n        return bounds != null && bounds.extend === undefined;\n    };\n    AgmMap.prototype._handleMapCenterChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('center_changed').subscribe(function () {\n            _this._mapsWrapper.getCenter().then(function (center) {\n                _this.latitude = center.lat();\n                _this.longitude = center.lng();\n                _this.centerChange.emit({ lat: _this.latitude, lng: _this.longitude });\n            });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleBoundsChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('bounds_changed').subscribe(function () {\n            _this._mapsWrapper.getBounds().then(function (bounds) { _this.boundsChange.emit(bounds); });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleMapTypeIdChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('maptypeid_changed').subscribe(function () {\n            _this._mapsWrapper.getMapTypeId().then(function (mapTypeId) { _this.mapTypeIdChange.emit(mapTypeId); });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleMapZoomChange = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('zoom_changed').subscribe(function () {\n            _this._mapsWrapper.getZoom().then(function (z) {\n                _this.zoom = z;\n                _this.zoomChange.emit(z);\n            });\n        });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleIdleEvent = function () {\n        var _this = this;\n        var s = this._mapsWrapper.subscribeToMapEvent('idle').subscribe(function () { _this.idle.emit(void 0); });\n        this._observableSubscriptions.push(s);\n    };\n    AgmMap.prototype._handleMapMouseEvents = function () {\n        var _this = this;\n        var events = [\n            { name: 'click', emitter: this.mapClick },\n            { name: 'rightclick', emitter: this.mapRightClick },\n            { name: 'dblclick', emitter: this.mapDblClick },\n        ];\n        events.forEach(function (e) {\n            var s = _this._mapsWrapper.subscribeToMapEvent(e.name).subscribe(function (event) {\n                var value = { coords: { lat: event.latLng.lat(), lng: event.latLng.lng() } };\n                e.emitter.emit(value);\n            });\n            _this._observableSubscriptions.push(s);\n        });\n    };\n    /**\n       * Map option attributes that can change over time\n       */\n    AgmMap._mapOptionsAttributes = [\n        'disableDoubleClickZoom', 'scrollwheel', 'draggable', 'draggableCursor', 'draggingCursor',\n        'keyboardShortcuts', 'zoomControl', 'zoomControlOptions', 'styles', 'streetViewControl',\n        'streetViewControlOptions', 'zoom', 'mapTypeControl', 'mapTypeControlOptions', 'minZoom',\n        'maxZoom', 'panControl', 'panControlOptions', 'rotateControl', 'rotateControlOptions',\n        'fullscreenControl', 'fullscreenControlOptions', 'scaleControl', 'scaleControlOptions',\n        'mapTypeId', 'clickableIcons', 'gestureHandling'\n    ];\n    AgmMap.decorators = [\n        { type: Component, args: [{\n                    selector: 'agm-map',\n                    providers: [\n                        GoogleMapsAPIWrapper, MarkerManager, InfoWindowManager, CircleManager, RectangleManager,\n                        PolylineManager, PolygonManager, KmlLayerManager, DataLayerManager, DataLayerManager,\n                        FitBoundsService\n                    ],\n                    host: {\n                        // todo: deprecated - we will remove it with the next version\n                        '[class.sebm-google-map-container]': 'true'\n                    },\n                    styles: [\"\\n    .agm-map-container-inner {\\n      width: inherit;\\n      height: inherit;\\n    }\\n    .agm-map-content {\\n      display:none;\\n    }\\n  \"],\n                    template: \"\\n    <div class='agm-map-container-inner sebm-google-map-container-inner'></div>\\n    <div class='agm-map-content'>\\n      <ng-content></ng-content>\\n    </div>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    AgmMap.ctorParameters = function () { return [\n        { type: ElementRef, },\n        { type: GoogleMapsAPIWrapper, },\n        { type: FitBoundsService, },\n    ]; };\n    AgmMap.propDecorators = {\n        \"longitude\": [{ type: Input },],\n        \"latitude\": [{ type: Input },],\n        \"zoom\": [{ type: Input },],\n        \"minZoom\": [{ type: Input },],\n        \"maxZoom\": [{ type: Input },],\n        \"draggable\": [{ type: Input, args: ['mapDraggable',] },],\n        \"disableDoubleClickZoom\": [{ type: Input },],\n        \"disableDefaultUI\": [{ type: Input },],\n        \"scrollwheel\": [{ type: Input },],\n        \"backgroundColor\": [{ type: Input },],\n        \"draggableCursor\": [{ type: Input },],\n        \"draggingCursor\": [{ type: Input },],\n        \"keyboardShortcuts\": [{ type: Input },],\n        \"zoomControl\": [{ type: Input },],\n        \"zoomControlOptions\": [{ type: Input },],\n        \"styles\": [{ type: Input },],\n        \"usePanning\": [{ type: Input },],\n        \"streetViewControl\": [{ type: Input },],\n        \"streetViewControlOptions\": [{ type: Input },],\n        \"fitBounds\": [{ type: Input },],\n        \"scaleControl\": [{ type: Input },],\n        \"scaleControlOptions\": [{ type: Input },],\n        \"mapTypeControl\": [{ type: Input },],\n        \"mapTypeControlOptions\": [{ type: Input },],\n        \"panControl\": [{ type: Input },],\n        \"panControlOptions\": [{ type: Input },],\n        \"rotateControl\": [{ type: Input },],\n        \"rotateControlOptions\": [{ type: Input },],\n        \"fullscreenControl\": [{ type: Input },],\n        \"fullscreenControlOptions\": [{ type: Input },],\n        \"mapTypeId\": [{ type: Input },],\n        \"clickableIcons\": [{ type: Input },],\n        \"gestureHandling\": [{ type: Input },],\n        \"mapClick\": [{ type: Output },],\n        \"mapRightClick\": [{ type: Output },],\n        \"mapDblClick\": [{ type: Output },],\n        \"centerChange\": [{ type: Output },],\n        \"boundsChange\": [{ type: Output },],\n        \"mapTypeIdChange\": [{ type: Output },],\n        \"idle\": [{ type: Output },],\n        \"zoomChange\": [{ type: Output },],\n        \"mapReady\": [{ type: Output },],\n    };\n    return AgmMap;\n}());\nexport { AgmMap };\n//# sourceMappingURL=map.js.map","import { ContentChildren, Directive, EventEmitter, Input, Output, QueryList, forwardRef } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { FitBoundsAccessor } from '../services/fit-bounds';\nimport { MarkerManager } from '../services/managers/marker-manager';\nimport { AgmInfoWindow } from './info-window';\nvar markerId = 0;\n/**\n * AgmMarker renders a map marker inside a {@link AgmMap}.\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-marker [latitude]=\"lat\" [longitude]=\"lng\" [label]=\"'M'\">\n *      </agm-marker>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmMarker = /** @class */ (function () {\n    function AgmMarker(_markerManager) {\n        this._markerManager = _markerManager;\n        /**\n           * If true, the marker can be dragged. Default value is false.\n           */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n           * If true, the marker is visible\n           */\n        this.visible = true;\n        /**\n           * Whether to automatically open the child info window when the marker is clicked.\n           */\n        this.openInfoWindow = true;\n        /**\n           * The marker's opacity between 0.0 and 1.0.\n           */\n        this.opacity = 1;\n        /**\n           * All markers are displayed on the map in order of their zIndex, with higher values displaying in\n           * front of markers with lower values. By default, markers are displayed according to their\n           * vertical position on screen, with lower markers appearing in front of markers further up the\n           * screen.\n           */\n        this.zIndex = 1;\n        /**\n           * If true, the marker can be clicked. Default value is true.\n           */\n        // tslint:disable-next-line:no-input-rename\n        this.clickable = true;\n        /**\n           * This event emitter gets emitted when the user clicks on the marker.\n           */\n        this.markerClick = new EventEmitter();\n        /**\n           * This event is fired when the user rightclicks on the marker.\n           */\n        this.markerRightClick = new EventEmitter();\n        /**\n           * This event is fired when the user stops dragging the marker.\n           */\n        this.dragEnd = new EventEmitter();\n        /**\n           * This event is fired when the user mouses over the marker.\n           */\n        this.mouseOver = new EventEmitter();\n        /**\n           * This event is fired when the user mouses outside the marker.\n           */\n        this.mouseOut = new EventEmitter();\n        /**\n           * @internal\n           */\n        this.infoWindow = new QueryList();\n        this._markerAddedToManger = false;\n        this._observableSubscriptions = [];\n        this._fitBoundsDetails$ = new ReplaySubject(1);\n        this._id = (markerId++).toString();\n    }\n    /* @internal */\n    /* @internal */\n    AgmMarker.prototype.ngAfterContentInit = /* @internal */\n    function () {\n        var _this = this;\n        this.handleInfoWindowUpdate();\n        this.infoWindow.changes.subscribe(function () { return _this.handleInfoWindowUpdate(); });\n    };\n    AgmMarker.prototype.handleInfoWindowUpdate = function () {\n        var _this = this;\n        if (this.infoWindow.length > 1) {\n            throw new Error('Expected no more than one info window.');\n        }\n        this.infoWindow.forEach(function (marker) {\n            marker.hostMarker = _this;\n        });\n    };\n    /** @internal */\n    /** @internal */\n    AgmMarker.prototype.ngOnChanges = /** @internal */\n    function (changes) {\n        if (typeof this.latitude === 'string') {\n            this.latitude = Number(this.latitude);\n        }\n        if (typeof this.longitude === 'string') {\n            this.longitude = Number(this.longitude);\n        }\n        if (typeof this.latitude !== 'number' || typeof this.longitude !== 'number') {\n            return;\n        }\n        if (!this._markerAddedToManger) {\n            this._markerManager.addMarker(this);\n            this._updateFitBoundsDetails();\n            this._markerAddedToManger = true;\n            this._addEventListeners();\n            return;\n        }\n        if (changes['latitude'] || changes['longitude']) {\n            this._markerManager.updateMarkerPosition(this);\n            this._updateFitBoundsDetails();\n        }\n        if (changes['title']) {\n            this._markerManager.updateTitle(this);\n        }\n        if (changes['label']) {\n            this._markerManager.updateLabel(this);\n        }\n        if (changes['draggable']) {\n            this._markerManager.updateDraggable(this);\n        }\n        if (changes['iconUrl']) {\n            this._markerManager.updateIcon(this);\n        }\n        if (changes['opacity']) {\n            this._markerManager.updateOpacity(this);\n        }\n        if (changes['visible']) {\n            this._markerManager.updateVisible(this);\n        }\n        if (changes['zIndex']) {\n            this._markerManager.updateZIndex(this);\n        }\n        if (changes['clickable']) {\n            this._markerManager.updateClickable(this);\n        }\n        if (changes['animation']) {\n            this._markerManager.updateAnimation(this);\n        }\n    };\n    /**\n     * @internal\n     */\n    /**\n       * @internal\n       */\n    AgmMarker.prototype.getFitBoundsDetails$ = /**\n       * @internal\n       */\n    function () {\n        return this._fitBoundsDetails$.asObservable();\n    };\n    AgmMarker.prototype._updateFitBoundsDetails = function () {\n        this._fitBoundsDetails$.next({ latLng: { lat: this.latitude, lng: this.longitude } });\n    };\n    AgmMarker.prototype._addEventListeners = function () {\n        var _this = this;\n        var cs = this._markerManager.createEventObservable('click', this).subscribe(function () {\n            if (_this.openInfoWindow) {\n                _this.infoWindow.forEach(function (infoWindow) { return infoWindow.open(); });\n            }\n            _this.markerClick.emit(_this);\n        });\n        this._observableSubscriptions.push(cs);\n        var rc = this._markerManager.createEventObservable('rightclick', this).subscribe(function () {\n            _this.markerRightClick.emit(null);\n        });\n        this._observableSubscriptions.push(rc);\n        var ds = this._markerManager.createEventObservable('dragend', this)\n            .subscribe(function (e) {\n            _this.dragEnd.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(ds);\n        var mover = this._markerManager.createEventObservable('mouseover', this)\n            .subscribe(function (e) {\n            _this.mouseOver.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mover);\n        var mout = this._markerManager.createEventObservable('mouseout', this)\n            .subscribe(function (e) {\n            _this.mouseOut.emit({ coords: { lat: e.latLng.lat(), lng: e.latLng.lng() } });\n        });\n        this._observableSubscriptions.push(mout);\n    };\n    /** @internal */\n    /** @internal */\n    AgmMarker.prototype.id = /** @internal */\n    function () { return this._id; };\n    /** @internal */\n    /** @internal */\n    AgmMarker.prototype.toString = /** @internal */\n    function () { return 'AgmMarker-' + this._id.toString(); };\n    /** @internal */\n    /** @internal */\n    AgmMarker.prototype.ngOnDestroy = /** @internal */\n    function () {\n        this._markerManager.deleteMarker(this);\n        // unsubscribe all registered observable subscriptions\n        this._observableSubscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    AgmMarker.decorators = [\n        { type: Directive, args: [{\n                    selector: 'agm-marker',\n                    providers: [\n                        { provide: FitBoundsAccessor, useExisting: forwardRef(function () { return AgmMarker; }) }\n                    ],\n                    inputs: [\n                        'latitude', 'longitude', 'title', 'label', 'draggable: markerDraggable', 'iconUrl',\n                        'openInfoWindow', 'opacity', 'visible', 'zIndex', 'animation'\n                    ],\n                    outputs: ['markerClick', 'dragEnd', 'mouseOver', 'mouseOut']\n                },] },\n    ];\n    /** @nocollapse */\n    AgmMarker.ctorParameters = function () { return [\n        { type: MarkerManager, },\n    ]; };\n    AgmMarker.propDecorators = {\n        \"latitude\": [{ type: Input },],\n        \"longitude\": [{ type: Input },],\n        \"title\": [{ type: Input },],\n        \"label\": [{ type: Input },],\n        \"draggable\": [{ type: Input, args: ['markerDraggable',] },],\n        \"iconUrl\": [{ type: Input },],\n        \"visible\": [{ type: Input },],\n        \"openInfoWindow\": [{ type: Input },],\n        \"opacity\": [{ type: Input },],\n        \"zIndex\": [{ type: Input },],\n        \"clickable\": [{ type: Input, args: ['markerClickable',] },],\n        \"markerClick\": [{ type: Output },],\n        \"markerRightClick\": [{ type: Output },],\n        \"dragEnd\": [{ type: Output },],\n        \"mouseOver\": [{ type: Output },],\n        \"mouseOut\": [{ type: Output },],\n        \"infoWindow\": [{ type: ContentChildren, args: [AgmInfoWindow,] },],\n    };\n    return AgmMarker;\n}());\nexport { AgmMarker };\n//# sourceMappingURL=marker.js.map","import { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { PolygonManager } from '../services/managers/polygon-manager';\n/**\n * AgmPolygon renders a polygon on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    agm-map {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polygon [paths]=\"paths\">\n *      </agm-polygon>\n *    </agm-map>\n *  `\n * })\n * export class MyMapCmp {\n *   lat: number = 0;\n *   lng: number = 0;\n *   zoom: number = 10;\n *   paths: Array<LatLngLiteral> = [\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ]\n *   // Nesting paths will create a hole where they overlap;\n *   nestedPaths: Array<Array<LatLngLiteral>> = [[\n *     { lat: 0,  lng: 10 },\n *     { lat: 0,  lng: 20 },\n *     { lat: 10, lng: 20 },\n *     { lat: 10, lng: 10 },\n *     { lat: 0,  lng: 10 }\n *   ], [\n *     { lat: 0, lng: 15 },\n *     { lat: 0, lng: 20 },\n *     { lat: 5, lng: 20 },\n *     { lat: 5, lng: 15 },\n *     { lat: 0, lng: 15 }\n *   ]]\n * }\n * ```\n */\nvar AgmPolygon = /** @class */ (function () {\n    function AgmPolygon(_polygonManager) {\n        this._polygonManager = _polygonManager;\n        /**\n           * Indicates whether this Polygon handles mouse events. Defaults to true.\n           */\n        this.clickable = true;\n        /**\n           * If set to true, the user can drag this shape over the map. The geodesic\n           * property defines the mode of dragging. Defaults to false.\n           */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n           * If set to true, the user can edit this shape by dragging the control\n           * points shown at the vertices and on each segment. Defaults to false.\n           */\n        this.editable = false;\n        /**\n           * When true, edges of the polygon are interpreted as geodesic and will\n           * follow the curvature of the Earth. When false, edges of the polygon are\n           * rendered as straight lines in screen space. Note that the shape of a\n           * geodesic polygon may appear to change when dragged, as the dimensions\n           * are maintained relative to the surface of the earth. Defaults to false.\n           */\n        this.geodesic = false;\n        /**\n           * The ordered sequence of coordinates that designates a closed loop.\n           * Unlike polylines, a polygon may consist of one or more paths.\n           *  As a result, the paths property may specify one or more arrays of\n           * LatLng coordinates. Paths are closed automatically; do not repeat the\n           * first vertex of the path as the last vertex. Simple polygons may be\n           * defined using a single array of LatLngs. More complex polygons may\n           * specify an array of arrays. Any simple arrays are converted into Arrays.\n           * Inserting or removing LatLngs from the Array will automatically update\n           * the polygon on the map.\n           */\n        this.paths = [];\n        /**\n           * This event is fired when the DOM click event is fired on the Polygon.\n           */\n        this.polyClick = new EventEmitter();\n        /**\n           * This event is fired when the DOM dblclick event is fired on the Polygon.\n           */\n        this.polyDblClick = new EventEmitter();\n        /**\n           * This event is repeatedly fired while the user drags the polygon.\n           */\n        this.polyDrag = new EventEmitter();\n        /**\n           * This event is fired when the user stops dragging the polygon.\n           */\n        this.polyDragEnd = new EventEmitter();\n        /**\n           * This event is fired when the user starts dragging the polygon.\n           */\n        this.polyDragStart = new EventEmitter();\n        /**\n           * This event is fired when the DOM mousedown event is fired on the Polygon.\n           */\n        this.polyMouseDown = new EventEmitter();\n        /**\n           * This event is fired when the DOM mousemove event is fired on the Polygon.\n           */\n        this.polyMouseMove = new EventEmitter();\n        /**\n           * This event is fired on Polygon mouseout.\n           */\n        this.polyMouseOut = new EventEmitter();\n        /**\n           * This event is fired on Polygon mouseover.\n           */\n        this.polyMouseOver = new EventEmitter();\n        /**\n           * This event is fired whe the DOM mouseup event is fired on the Polygon\n           */\n        this.polyMouseUp = new EventEmitter();\n        /**\n           * This even is fired when the Polygon is right-clicked on.\n           */\n        this.polyRightClick = new EventEmitter();\n        this._polygonAddedToManager = false;\n        this._subscriptions = [];\n    }\n    /** @internal */\n    /** @internal */\n    AgmPolygon.prototype.ngAfterContentInit = /** @internal */\n    function () {\n        if (!this._polygonAddedToManager) {\n            this._init();\n        }\n    };\n    AgmPolygon.prototype.ngOnChanges = function (changes) {\n        if (!this._polygonAddedToManager) {\n            this._init();\n            return;\n        }\n        this._polygonManager.setPolygonOptions(this, this._updatePolygonOptions(changes));\n    };\n    AgmPolygon.prototype._init = function () {\n        this._polygonManager.addPolygon(this);\n        this._polygonAddedToManager = true;\n        this._addEventListeners();\n    };\n    AgmPolygon.prototype._addEventListeners = function () {\n        var _this = this;\n        var handlers = [\n            { name: 'click', handler: function (ev) { return _this.polyClick.emit(ev); } },\n            { name: 'dblclick', handler: function (ev) { return _this.polyDblClick.emit(ev); } },\n            { name: 'drag', handler: function (ev) { return _this.polyDrag.emit(ev); } },\n            { name: 'dragend', handler: function (ev) { return _this.polyDragEnd.emit(ev); } },\n            { name: 'dragstart', handler: function (ev) { return _this.polyDragStart.emit(ev); } },\n            { name: 'mousedown', handler: function (ev) { return _this.polyMouseDown.emit(ev); } },\n            { name: 'mousemove', handler: function (ev) { return _this.polyMouseMove.emit(ev); } },\n            { name: 'mouseout', handler: function (ev) { return _this.polyMouseOut.emit(ev); } },\n            { name: 'mouseover', handler: function (ev) { return _this.polyMouseOver.emit(ev); } },\n            { name: 'mouseup', handler: function (ev) { return _this.polyMouseUp.emit(ev); } },\n            { name: 'rightclick', handler: function (ev) { return _this.polyRightClick.emit(ev); } },\n        ];\n        handlers.forEach(function (obj) {\n            var os = _this._polygonManager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n    };\n    AgmPolygon.prototype._updatePolygonOptions = function (changes) {\n        return Object.keys(changes)\n            .filter(function (k) { return AgmPolygon._polygonOptionsAttributes.indexOf(k) !== -1; })\n            .reduce(function (obj, k) {\n            obj[k] = changes[k].currentValue;\n            return obj;\n        }, {});\n    };\n    /** @internal */\n    /** @internal */\n    AgmPolygon.prototype.id = /** @internal */\n    function () { return this._id; };\n    /** @internal */\n    /** @internal */\n    AgmPolygon.prototype.ngOnDestroy = /** @internal */\n    function () {\n        this._polygonManager.deletePolygon(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    AgmPolygon._polygonOptionsAttributes = [\n        'clickable', 'draggable', 'editable', 'fillColor', 'fillOpacity', 'geodesic', 'icon', 'map',\n        'paths', 'strokeColor', 'strokeOpacity', 'strokeWeight', 'visible', 'zIndex', 'draggable',\n        'editable', 'visible'\n    ];\n    AgmPolygon.decorators = [\n        { type: Directive, args: [{\n                    selector: 'agm-polygon'\n                },] },\n    ];\n    /** @nocollapse */\n    AgmPolygon.ctorParameters = function () { return [\n        { type: PolygonManager, },\n    ]; };\n    AgmPolygon.propDecorators = {\n        \"clickable\": [{ type: Input },],\n        \"draggable\": [{ type: Input, args: ['polyDraggable',] },],\n        \"editable\": [{ type: Input },],\n        \"fillColor\": [{ type: Input },],\n        \"fillOpacity\": [{ type: Input },],\n        \"geodesic\": [{ type: Input },],\n        \"paths\": [{ type: Input },],\n        \"strokeColor\": [{ type: Input },],\n        \"strokeOpacity\": [{ type: Input },],\n        \"strokeWeight\": [{ type: Input },],\n        \"visible\": [{ type: Input },],\n        \"zIndex\": [{ type: Input },],\n        \"polyClick\": [{ type: Output },],\n        \"polyDblClick\": [{ type: Output },],\n        \"polyDrag\": [{ type: Output },],\n        \"polyDragEnd\": [{ type: Output },],\n        \"polyDragStart\": [{ type: Output },],\n        \"polyMouseDown\": [{ type: Output },],\n        \"polyMouseMove\": [{ type: Output },],\n        \"polyMouseOut\": [{ type: Output },],\n        \"polyMouseOver\": [{ type: Output },],\n        \"polyMouseUp\": [{ type: Output },],\n        \"polyRightClick\": [{ type: Output },],\n    };\n    return AgmPolygon;\n}());\nexport { AgmPolygon };\n//# sourceMappingURL=polygon.js.map","import { Directive, EventEmitter, Input, Output } from '@angular/core';\n/**\n * AgmPolylinePoint represents one element of a polyline within a  {@link\n * SembGoogleMapPolyline}\n */\nvar AgmPolylinePoint = /** @class */ (function () {\n    function AgmPolylinePoint() {\n        /**\n           * This event emitter gets emitted when the position of the point changed.\n           */\n        this.positionChanged = new EventEmitter();\n    }\n    AgmPolylinePoint.prototype.ngOnChanges = function (changes) {\n        if (changes['latitude'] || changes['longitude']) {\n            var position = {\n                lat: changes['latitude'].currentValue,\n                lng: changes['longitude'].currentValue\n            };\n            this.positionChanged.emit(position);\n        }\n    };\n    AgmPolylinePoint.decorators = [\n        { type: Directive, args: [{ selector: 'agm-polyline-point' },] },\n    ];\n    /** @nocollapse */\n    AgmPolylinePoint.ctorParameters = function () { return []; };\n    AgmPolylinePoint.propDecorators = {\n        \"latitude\": [{ type: Input },],\n        \"longitude\": [{ type: Input },],\n        \"positionChanged\": [{ type: Output },],\n    };\n    return AgmPolylinePoint;\n}());\nexport { AgmPolylinePoint };\n//# sourceMappingURL=polyline-point.js.map","import { ContentChildren, Directive, EventEmitter, QueryList, Input, Output } from '@angular/core';\nimport { PolylineManager } from '../services/managers/polyline-manager';\nimport { AgmPolylinePoint } from './polyline-point';\nvar polylineId = 0;\n/**\n * AgmPolyline renders a polyline on a {@link AgmMap}\n *\n * ### Example\n * ```typescript\n * import { Component } from '@angular/core';\n *\n * @Component({\n *  selector: 'my-map-cmp',\n *  styles: [`\n *    .agm-map-container {\n *      height: 300px;\n *    }\n * `],\n *  template: `\n *    <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [zoom]=\"zoom\">\n *      <agm-polyline>\n *          <agm-polyline-point [latitude]=\"latA\" [longitude]=\"lngA\">\n *          </agm-polyline-point>\n *          <agm-polyline-point [latitude]=\"latB\" [longitude]=\"lngB\">\n *          </agm-polyline-point>\n *      </agm-polyline>\n *    </agm-map>\n *  `\n * })\n * ```\n */\nvar AgmPolyline = /** @class */ (function () {\n    function AgmPolyline(_polylineManager) {\n        this._polylineManager = _polylineManager;\n        /**\n           * Indicates whether this Polyline handles mouse events. Defaults to true.\n           */\n        this.clickable = true;\n        /**\n           * If set to true, the user can drag this shape over the map. The geodesic property defines the\n           * mode of dragging. Defaults to false.\n           */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n           * If set to true, the user can edit this shape by dragging the control points shown at the\n           * vertices and on each segment. Defaults to false.\n           */\n        this.editable = false;\n        /**\n           * When true, edges of the polygon are interpreted as geodesic and will follow the curvature of\n           * the Earth. When false, edges of the polygon are rendered as straight lines in screen space.\n           * Note that the shape of a geodesic polygon may appear to change when dragged, as the dimensions\n           * are maintained relative to the surface of the earth. Defaults to false.\n           */\n        this.geodesic = false;\n        /**\n           * Whether this polyline is visible on the map. Defaults to true.\n           */\n        this.visible = true;\n        /**\n           * This event is fired when the DOM click event is fired on the Polyline.\n           */\n        this.lineClick = new EventEmitter();\n        /**\n           * This event is fired when the DOM dblclick event is fired on the Polyline.\n           */\n        this.lineDblClick = new EventEmitter();\n        /**\n           * This event is repeatedly fired while the user drags the polyline.\n           */\n        this.lineDrag = new EventEmitter();\n        /**\n           * This event is fired when the user stops dragging the polyline.\n           */\n        this.lineDragEnd = new EventEmitter();\n        /**\n           * This event is fired when the user starts dragging the polyline.\n           */\n        this.lineDragStart = new EventEmitter();\n        /**\n           * This event is fired when the DOM mousedown event is fired on the Polyline.\n           */\n        this.lineMouseDown = new EventEmitter();\n        /**\n           * This event is fired when the DOM mousemove event is fired on the Polyline.\n           */\n        this.lineMouseMove = new EventEmitter();\n        /**\n           * This event is fired on Polyline mouseout.\n           */\n        this.lineMouseOut = new EventEmitter();\n        /**\n           * This event is fired on Polyline mouseover.\n           */\n        this.lineMouseOver = new EventEmitter();\n        /**\n           * This event is fired whe the DOM mouseup event is fired on the Polyline\n           */\n        this.lineMouseUp = new EventEmitter();\n        /**\n           * This even is fired when the Polyline is right-clicked on.\n           */\n        this.lineRightClick = new EventEmitter();\n        this._polylineAddedToManager = false;\n        this._subscriptions = [];\n        this._id = (polylineId++).toString();\n    }\n    /** @internal */\n    /** @internal */\n    AgmPolyline.prototype.ngAfterContentInit = /** @internal */\n    function () {\n        var _this = this;\n        if (this.points.length) {\n            this.points.forEach(function (point) {\n                var s = point.positionChanged.subscribe(function () { _this._polylineManager.updatePolylinePoints(_this); });\n                _this._subscriptions.push(s);\n            });\n        }\n        if (!this._polylineAddedToManager) {\n            this._init();\n        }\n        var s = this.points.changes.subscribe(function () { return _this._polylineManager.updatePolylinePoints(_this); });\n        this._subscriptions.push(s);\n        this._polylineManager.updatePolylinePoints(this);\n    };\n    AgmPolyline.prototype.ngOnChanges = function (changes) {\n        if (!this._polylineAddedToManager) {\n            this._init();\n            return;\n        }\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmPolyline._polylineOptionsAttributes.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) { return options[k] = changes[k].currentValue; });\n        this._polylineManager.setPolylineOptions(this, options);\n    };\n    AgmPolyline.prototype._init = function () {\n        this._polylineManager.addPolyline(this);\n        this._polylineAddedToManager = true;\n        this._addEventListeners();\n    };\n    AgmPolyline.prototype._addEventListeners = function () {\n        var _this = this;\n        var handlers = [\n            { name: 'click', handler: function (ev) { return _this.lineClick.emit(ev); } },\n            { name: 'dblclick', handler: function (ev) { return _this.lineDblClick.emit(ev); } },\n            { name: 'drag', handler: function (ev) { return _this.lineDrag.emit(ev); } },\n            { name: 'dragend', handler: function (ev) { return _this.lineDragEnd.emit(ev); } },\n            { name: 'dragstart', handler: function (ev) { return _this.lineDragStart.emit(ev); } },\n            { name: 'mousedown', handler: function (ev) { return _this.lineMouseDown.emit(ev); } },\n            { name: 'mousemove', handler: function (ev) { return _this.lineMouseMove.emit(ev); } },\n            { name: 'mouseout', handler: function (ev) { return _this.lineMouseOut.emit(ev); } },\n            { name: 'mouseover', handler: function (ev) { return _this.lineMouseOver.emit(ev); } },\n            { name: 'mouseup', handler: function (ev) { return _this.lineMouseUp.emit(ev); } },\n            { name: 'rightclick', handler: function (ev) { return _this.lineRightClick.emit(ev); } },\n        ];\n        handlers.forEach(function (obj) {\n            var os = _this._polylineManager.createEventObservable(obj.name, _this).subscribe(obj.handler);\n            _this._subscriptions.push(os);\n        });\n    };\n    /** @internal */\n    /** @internal */\n    AgmPolyline.prototype._getPoints = /** @internal */\n    function () {\n        if (this.points) {\n            return this.points.toArray();\n        }\n        return [];\n    };\n    /** @internal */\n    /** @internal */\n    AgmPolyline.prototype.id = /** @internal */\n    function () { return this._id; };\n    /** @internal */\n    /** @internal */\n    AgmPolyline.prototype.ngOnDestroy = /** @internal */\n    function () {\n        this._polylineManager.deletePolyline(this);\n        // unsubscribe all registered observable subscriptions\n        this._subscriptions.forEach(function (s) { return s.unsubscribe(); });\n    };\n    AgmPolyline._polylineOptionsAttributes = [\n        'draggable', 'editable', 'visible', 'geodesic', 'strokeColor', 'strokeOpacity', 'strokeWeight',\n        'zIndex'\n    ];\n    AgmPolyline.decorators = [\n        { type: Directive, args: [{\n                    selector: 'agm-polyline'\n                },] },\n    ];\n    /** @nocollapse */\n    AgmPolyline.ctorParameters = function () { return [\n        { type: PolylineManager, },\n    ]; };\n    AgmPolyline.propDecorators = {\n        \"clickable\": [{ type: Input },],\n        \"draggable\": [{ type: Input, args: ['polylineDraggable',] },],\n        \"editable\": [{ type: Input },],\n        \"geodesic\": [{ type: Input },],\n        \"strokeColor\": [{ type: Input },],\n        \"strokeOpacity\": [{ type: Input },],\n        \"strokeWeight\": [{ type: Input },],\n        \"visible\": [{ type: Input },],\n        \"zIndex\": [{ type: Input },],\n        \"lineClick\": [{ type: Output },],\n        \"lineDblClick\": [{ type: Output },],\n        \"lineDrag\": [{ type: Output },],\n        \"lineDragEnd\": [{ type: Output },],\n        \"lineDragStart\": [{ type: Output },],\n        \"lineMouseDown\": [{ type: Output },],\n        \"lineMouseMove\": [{ type: Output },],\n        \"lineMouseOut\": [{ type: Output },],\n        \"lineMouseOver\": [{ type: Output },],\n        \"lineMouseUp\": [{ type: Output },],\n        \"lineRightClick\": [{ type: Output },],\n        \"points\": [{ type: ContentChildren, args: [AgmPolylinePoint,] },],\n    };\n    return AgmPolyline;\n}());\nexport { AgmPolyline };\n//# sourceMappingURL=polyline.js.map","import { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { RectangleManager } from '../services/managers/rectangle-manager';\nvar AgmRectangle = /** @class */ (function () {\n    function AgmRectangle(_manager) {\n        this._manager = _manager;\n        /**\n           * Indicates whether this Rectangle handles mouse events. Defaults to true.\n           */\n        this.clickable = true;\n        /**\n           * If set to true, the user can drag this rectangle over the map. Defaults to false.\n           */\n        // tslint:disable-next-line:no-input-rename\n        this.draggable = false;\n        /**\n           * If set to true, the user can edit this rectangle by dragging the control points shown at\n           * the center and around the circumference of the rectangle. Defaults to false.\n           */\n        this.editable = false;\n        /**\n           * The stroke position. Defaults to CENTER.\n           * This property is not supported on Internet Explorer 8 and earlier.\n           */\n        this.strokePosition = 'CENTER';\n        /**\n           * The stroke width in pixels.\n           */\n        this.strokeWeight = 0;\n        /**\n           * Whether this rectangle is visible on the map. Defaults to true.\n           */\n        this.visible = true;\n        /**\n           * This event is fired when the rectangle's is changed.\n           */\n        this.boundsChange = new EventEmitter();\n        /**\n           * This event emitter gets emitted when the user clicks on the rectangle.\n           */\n        this.rectangleClick = new EventEmitter();\n        /**\n           * This event emitter gets emitted when the user clicks on the rectangle.\n           */\n        this.rectangleDblClick = new EventEmitter();\n        /**\n           * This event is repeatedly fired while the user drags the rectangle.\n           */\n        this.drag = new EventEmitter();\n        /**\n           * This event is fired when the user stops dragging the rectangle.\n           */\n        this.dragEnd = new EventEmitter();\n        /**\n           * This event is fired when the user starts dragging the rectangle.\n           */\n        this.dragStart = new EventEmitter();\n        /**\n           * This event is fired when the DOM mousedown event is fired on the rectangle.\n           */\n        this.mouseDown = new EventEmitter();\n        /**\n           * This event is fired when the DOM mousemove event is fired on the rectangle.\n           */\n        this.mouseMove = new EventEmitter();\n        /**\n           * This event is fired on rectangle mouseout.\n           */\n        this.mouseOut = new EventEmitter();\n        /**\n           * This event is fired on rectangle mouseover.\n           */\n        this.mouseOver = new EventEmitter();\n        /**\n           * This event is fired when the DOM mouseup event is fired on the rectangle.\n           */\n        this.mouseUp = new EventEmitter();\n        /**\n           * This event is fired when the rectangle is right-clicked on.\n           */\n        this.rightClick = new EventEmitter();\n        this._rectangleAddedToManager = false;\n        this._eventSubscriptions = [];\n    }\n    /** @internal */\n    /** @internal */\n    AgmRectangle.prototype.ngOnInit = /** @internal */\n    function () {\n        this._manager.addRectangle(this);\n        this._rectangleAddedToManager = true;\n        this._registerEventListeners();\n    };\n    /** @internal */\n    /** @internal */\n    AgmRectangle.prototype.ngOnChanges = /** @internal */\n    function (changes) {\n        if (!this._rectangleAddedToManager) {\n            return;\n        }\n        if (changes['north'] ||\n            changes['east'] ||\n            changes['south'] ||\n            changes['west']) {\n            this._manager.setBounds(this);\n        }\n        if (changes['editable']) {\n            this._manager.setEditable(this);\n        }\n        if (changes['draggable']) {\n            this._manager.setDraggable(this);\n        }\n        if (changes['visible']) {\n            this._manager.setVisible(this);\n        }\n        this._updateRectangleOptionsChanges(changes);\n    };\n    AgmRectangle.prototype._updateRectangleOptionsChanges = function (changes) {\n        var options = {};\n        var optionKeys = Object.keys(changes).filter(function (k) { return AgmRectangle._mapOptions.indexOf(k) !== -1; });\n        optionKeys.forEach(function (k) {\n            options[k] = changes[k].currentValue;\n        });\n        if (optionKeys.length > 0) {\n            this._manager.setOptions(this, options);\n        }\n    };\n    AgmRectangle.prototype._registerEventListeners = function () {\n        var _this = this;\n        var events = new Map();\n        events.set('bounds_changed', this.boundsChange);\n        events.set('click', this.rectangleClick);\n        events.set('dblclick', this.rectangleDblClick);\n        events.set('drag', this.drag);\n        events.set('dragend', this.dragEnd);\n        events.set('dragStart', this.dragStart);\n        events.set('mousedown', this.mouseDown);\n        events.set('mousemove', this.mouseMove);\n        events.set('mouseout', this.mouseOut);\n        events.set('mouseover', this.mouseOver);\n        events.set('mouseup', this.mouseUp);\n        events.set('rightclick', this.rightClick);\n        events.forEach(function (eventEmitter, eventName) {\n            _this._eventSubscriptions.push(_this._manager\n                .createEventObservable(eventName, _this)\n                .subscribe(function (value) {\n                switch (eventName) {\n                    case 'bounds_changed':\n                        _this._manager.getBounds(_this).then(function (bounds) {\n                            return eventEmitter.emit({\n                                north: bounds.getNorthEast().lat(),\n                                east: bounds.getNorthEast().lng(),\n                                south: bounds.getSouthWest().lat(),\n                                west: bounds.getSouthWest().lng()\n                            });\n                        });\n                        break;\n                    default:\n                        eventEmitter.emit({\n                            coords: { lat: value.latLng.lat(), lng: value.latLng.lng() }\n                        });\n                }\n            }));\n        });\n    };\n    /** @internal */\n    /** @internal */\n    AgmRectangle.prototype.ngOnDestroy = /** @internal */\n    function () {\n        this._eventSubscriptions.forEach(function (s) {\n            s.unsubscribe();\n        });\n        this._eventSubscriptions = null;\n        this._manager.removeRectangle(this);\n    };\n    /**\n     * Gets the LatLngBounds of this Rectangle.\n     */\n    /**\n       * Gets the LatLngBounds of this Rectangle.\n       */\n    AgmRectangle.prototype.getBounds = /**\n       * Gets the LatLngBounds of this Rectangle.\n       */\n    function () {\n        return this._manager.getBounds(this);\n    };\n    AgmRectangle._mapOptions = [\n        'fillColor',\n        'fillOpacity',\n        'strokeColor',\n        'strokeOpacity',\n        'strokePosition',\n        'strokeWeight',\n        'visible',\n        'zIndex',\n        'clickable'\n    ];\n    AgmRectangle.decorators = [\n        { type: Directive, args: [{\n                    selector: 'agm-rectangle'\n                },] },\n    ];\n    /** @nocollapse */\n    AgmRectangle.ctorParameters = function () { return [\n        { type: RectangleManager, },\n    ]; };\n    AgmRectangle.propDecorators = {\n        \"north\": [{ type: Input },],\n        \"east\": [{ type: Input },],\n        \"south\": [{ type: Input },],\n        \"west\": [{ type: Input },],\n        \"clickable\": [{ type: Input },],\n        \"draggable\": [{ type: Input, args: ['rectangleDraggable',] },],\n        \"editable\": [{ type: Input },],\n        \"fillColor\": [{ type: Input },],\n        \"fillOpacity\": [{ type: Input },],\n        \"strokeColor\": [{ type: Input },],\n        \"strokeOpacity\": [{ type: Input },],\n        \"strokePosition\": [{ type: Input },],\n        \"strokeWeight\": [{ type: Input },],\n        \"visible\": [{ type: Input },],\n        \"zIndex\": [{ type: Input },],\n        \"boundsChange\": [{ type: Output },],\n        \"rectangleClick\": [{ type: Output },],\n        \"rectangleDblClick\": [{ type: Output },],\n        \"drag\": [{ type: Output },],\n        \"dragEnd\": [{ type: Output },],\n        \"dragStart\": [{ type: Output },],\n        \"mouseDown\": [{ type: Output },],\n        \"mouseMove\": [{ type: Output },],\n        \"mouseOut\": [{ type: Output },],\n        \"mouseOver\": [{ type: Output },],\n        \"mouseUp\": [{ type: Output },],\n        \"rightClick\": [{ type: Output },],\n    };\n    return AgmRectangle;\n}());\nexport { AgmRectangle };\n//# sourceMappingURL=rectangle.js.map","export * from './directives';\nexport * from './services';\nexport { AgmCoreModule } from './core.module';\n//# sourceMappingURL=index.js.map","export { GoogleMapsAPIWrapper } from './services/google-maps-api-wrapper';\nexport { CircleManager } from './services/managers/circle-manager';\nexport { RectangleManager } from './services/managers/rectangle-manager';\nexport { InfoWindowManager } from './services/managers/info-window-manager';\nexport { MarkerManager } from './services/managers/marker-manager';\nexport { PolygonManager } from './services/managers/polygon-manager';\nexport { PolylineManager } from './services/managers/polyline-manager';\nexport { KmlLayerManager } from './services/managers/kml-layer-manager';\nexport { DataLayerManager } from './services/managers/data-layer-manager';\nexport { GoogleMapsScriptProtocol, LAZY_MAPS_API_CONFIG, LazyMapsAPILoader } from './services/maps-api-loader/lazy-maps-api-loader';\nexport { MapsAPILoader } from './services/maps-api-loader/maps-api-loader';\nexport { NoOpMapsAPILoader } from './services/maps-api-loader/noop-maps-api-loader';\nexport { FitBoundsAccessor } from './services/fit-bounds';\n//# sourceMappingURL=services.js.map","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, from, timer } from 'rxjs';\nimport { flatMap, map, sample, switchMap, shareReplay } from 'rxjs/operators';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nvar /**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nFitBoundsAccessor = /** @class */ (function () {\n    function FitBoundsAccessor() {\n    }\n    return FitBoundsAccessor;\n}());\n/**\n * Class to implement when you what to be able to make it work with the auto fit bounds feature\n * of AGM.\n */\nexport { FitBoundsAccessor };\n/**\n * The FitBoundsService is responsible for computing the bounds of the a single map.\n */\nvar FitBoundsService = /** @class */ (function () {\n    function FitBoundsService(loader) {\n        var _this = this;\n        this._boundsChangeSampleTime$ = new BehaviorSubject(200);\n        this._includeInBounds$ = new BehaviorSubject(new Map());\n        this.bounds$ = from(loader.load()).pipe(flatMap(function () { return _this._includeInBounds$; }), sample(this._boundsChangeSampleTime$.pipe(switchMap(function (time) { return timer(0, time); }))), map(function (includeInBounds) { return _this._generateBounds(includeInBounds); }), shareReplay(1));\n    }\n    FitBoundsService.prototype._generateBounds = function (includeInBounds) {\n        var bounds = new google.maps.LatLngBounds();\n        includeInBounds.forEach(function (b) { return bounds.extend(b); });\n        return bounds;\n    };\n    FitBoundsService.prototype.addToBounds = function (latLng) {\n        var id = this._createIdentifier(latLng);\n        if (this._includeInBounds$.value.has(id)) {\n            return;\n        }\n        var map = this._includeInBounds$.value;\n        map.set(id, latLng);\n        this._includeInBounds$.next(map);\n    };\n    FitBoundsService.prototype.removeFromBounds = function (latLng) {\n        var map = this._includeInBounds$.value;\n        map.delete(this._createIdentifier(latLng));\n        this._includeInBounds$.next(map);\n    };\n    FitBoundsService.prototype.changeFitBoundsChangeSampleTime = function (timeMs) {\n        this._boundsChangeSampleTime$.next(timeMs);\n    };\n    FitBoundsService.prototype.getBounds$ = function () {\n        return this.bounds$;\n    };\n    FitBoundsService.prototype._createIdentifier = function (latLng) {\n        return latLng.lat + \"+\" + latLng.lng;\n    };\n    FitBoundsService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    FitBoundsService.ctorParameters = function () { return [\n        { type: MapsAPILoader, },\n    ]; };\n    return FitBoundsService;\n}());\nexport { FitBoundsService };\n//# sourceMappingURL=fit-bounds.js.map","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { MapsAPILoader } from './maps-api-loader/maps-api-loader';\n/**\n * Wrapper class that handles the communication with the Google Maps Javascript\n * API v3\n */\nvar GoogleMapsAPIWrapper = /** @class */ (function () {\n    function GoogleMapsAPIWrapper(_loader, _zone) {\n        var _this = this;\n        this._loader = _loader;\n        this._zone = _zone;\n        this._map =\n            new Promise(function (resolve) { _this._mapResolver = resolve; });\n    }\n    GoogleMapsAPIWrapper.prototype.createMap = function (el, mapOptions) {\n        var _this = this;\n        return this._zone.runOutsideAngular(function () {\n            return _this._loader.load().then(function () {\n                var map = new google.maps.Map(el, mapOptions);\n                _this._mapResolver(map);\n                return;\n            });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.setMapOptions = function (options) {\n        this._map.then(function (m) { m.setOptions(options); });\n    };\n    /**\n     * Creates a google map marker with the map context\n     */\n    /**\n       * Creates a google map marker with the map context\n       */\n    GoogleMapsAPIWrapper.prototype.createMarker = /**\n       * Creates a google map marker with the map context\n       */\n    function (options, addToMap) {\n        if (options === void 0) { options = {}; }\n        if (addToMap === void 0) { addToMap = true; }\n        return this._map.then(function (map) {\n            if (addToMap) {\n                options.map = map;\n            }\n            return new google.maps.Marker(options);\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createInfoWindow = function (options) {\n        return this._map.then(function () { return new google.maps.InfoWindow(options); });\n    };\n    /**\n     * Creates a google.map.Circle for the current map.\n     */\n    /**\n       * Creates a google.map.Circle for the current map.\n       */\n    GoogleMapsAPIWrapper.prototype.createCircle = /**\n       * Creates a google.map.Circle for the current map.\n       */\n    function (options) {\n        return this._map.then(function (map) {\n            options.map = map;\n            return new google.maps.Circle(options);\n        });\n    };\n    /**\n     * Creates a google.map.Rectangle for the current map.\n     */\n    /**\n       * Creates a google.map.Rectangle for the current map.\n       */\n    GoogleMapsAPIWrapper.prototype.createRectangle = /**\n       * Creates a google.map.Rectangle for the current map.\n       */\n    function (options) {\n        return this._map.then(function (map) {\n            options.map = map;\n            return new google.maps.Rectangle(options);\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createPolyline = function (options) {\n        return this.getNativeMap().then(function (map) {\n            var line = new google.maps.Polyline(options);\n            line.setMap(map);\n            return line;\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.createPolygon = function (options) {\n        return this.getNativeMap().then(function (map) {\n            var polygon = new google.maps.Polygon(options);\n            polygon.setMap(map);\n            return polygon;\n        });\n    };\n    /**\n     * Creates a new google.map.Data layer for the current map\n     */\n    /**\n       * Creates a new google.map.Data layer for the current map\n       */\n    GoogleMapsAPIWrapper.prototype.createDataLayer = /**\n       * Creates a new google.map.Data layer for the current map\n       */\n    function (options) {\n        return this._map.then(function (m) {\n            var data = new google.maps.Data(options);\n            data.setMap(m);\n            return data;\n        });\n    };\n    /**\n     * Determines if given coordinates are insite a Polygon path.\n     */\n    /**\n       * Determines if given coordinates are insite a Polygon path.\n       */\n    GoogleMapsAPIWrapper.prototype.containsLocation = /**\n       * Determines if given coordinates are insite a Polygon path.\n       */\n    function (latLng, polygon) {\n        return google.maps.geometry.poly.containsLocation(latLng, polygon);\n    };\n    GoogleMapsAPIWrapper.prototype.subscribeToMapEvent = function (eventName) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._map.then(function (m) {\n                m.addListener(eventName, function (arg) { _this._zone.run(function () { return observer.next(arg); }); });\n            });\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.clearInstanceListeners = function () {\n        this._map.then(function (map) {\n            google.maps.event.clearInstanceListeners(map);\n        });\n    };\n    GoogleMapsAPIWrapper.prototype.setCenter = function (latLng) {\n        return this._map.then(function (map) { return map.setCenter(latLng); });\n    };\n    GoogleMapsAPIWrapper.prototype.getZoom = function () { return this._map.then(function (map) { return map.getZoom(); }); };\n    GoogleMapsAPIWrapper.prototype.getBounds = function () {\n        return this._map.then(function (map) { return map.getBounds(); });\n    };\n    GoogleMapsAPIWrapper.prototype.getMapTypeId = function () {\n        return this._map.then(function (map) { return map.getMapTypeId(); });\n    };\n    GoogleMapsAPIWrapper.prototype.setZoom = function (zoom) {\n        return this._map.then(function (map) { return map.setZoom(zoom); });\n    };\n    GoogleMapsAPIWrapper.prototype.getCenter = function () {\n        return this._map.then(function (map) { return map.getCenter(); });\n    };\n    GoogleMapsAPIWrapper.prototype.panTo = function (latLng) {\n        return this._map.then(function (map) { return map.panTo(latLng); });\n    };\n    GoogleMapsAPIWrapper.prototype.panBy = function (x, y) {\n        return this._map.then(function (map) { return map.panBy(x, y); });\n    };\n    GoogleMapsAPIWrapper.prototype.fitBounds = function (latLng) {\n        return this._map.then(function (map) { return map.fitBounds(latLng); });\n    };\n    GoogleMapsAPIWrapper.prototype.panToBounds = function (latLng) {\n        return this._map.then(function (map) { return map.panToBounds(latLng); });\n    };\n    /**\n     * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n     */\n    /**\n       * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n       */\n    GoogleMapsAPIWrapper.prototype.getNativeMap = /**\n       * Returns the native Google Maps Map instance. Be careful when using this instance directly.\n       */\n    function () { return this._map; };\n    /**\n     * Triggers the given event name on the map instance.\n     */\n    /**\n       * Triggers the given event name on the map instance.\n       */\n    GoogleMapsAPIWrapper.prototype.triggerMapEvent = /**\n       * Triggers the given event name on the map instance.\n       */\n    function (eventName) {\n        return this._map.then(function (m) { return google.maps.event.trigger(m, eventName); });\n    };\n    GoogleMapsAPIWrapper.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    GoogleMapsAPIWrapper.ctorParameters = function () { return [\n        { type: MapsAPILoader, },\n        { type: NgZone, },\n    ]; };\n    return GoogleMapsAPIWrapper;\n}());\nexport { GoogleMapsAPIWrapper };\n//# sourceMappingURL=google-maps-api-wrapper.js.map","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nvar CircleManager = /** @class */ (function () {\n    function CircleManager(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._circles = new Map();\n    }\n    CircleManager.prototype.addCircle = function (circle) {\n        this._circles.set(circle, this._apiWrapper.createCircle({\n            center: { lat: circle.latitude, lng: circle.longitude },\n            clickable: circle.clickable,\n            draggable: circle.draggable,\n            editable: circle.editable,\n            fillColor: circle.fillColor,\n            fillOpacity: circle.fillOpacity,\n            radius: circle.radius,\n            strokeColor: circle.strokeColor,\n            strokeOpacity: circle.strokeOpacity,\n            strokePosition: circle.strokePosition,\n            strokeWeight: circle.strokeWeight,\n            visible: circle.visible,\n            zIndex: circle.zIndex\n        }));\n    };\n    /**\n     * Removes the given circle from the map.\n     */\n    /**\n       * Removes the given circle from the map.\n       */\n    CircleManager.prototype.removeCircle = /**\n       * Removes the given circle from the map.\n       */\n    function (circle) {\n        var _this = this;\n        return this._circles.get(circle).then(function (c) {\n            c.setMap(null);\n            _this._circles.delete(circle);\n        });\n    };\n    CircleManager.prototype.setOptions = function (circle, options) {\n        return this._circles.get(circle).then(function (c) { return c.setOptions(options); });\n    };\n    CircleManager.prototype.getBounds = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getBounds(); });\n    };\n    CircleManager.prototype.getCenter = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getCenter(); });\n    };\n    CircleManager.prototype.getRadius = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.getRadius(); });\n    };\n    CircleManager.prototype.setCenter = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setCenter({ lat: circle.latitude, lng: circle.longitude }); });\n    };\n    CircleManager.prototype.setEditable = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setEditable(circle.editable); });\n    };\n    CircleManager.prototype.setDraggable = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setDraggable(circle.draggable); });\n    };\n    CircleManager.prototype.setVisible = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setVisible(circle.visible); });\n    };\n    CircleManager.prototype.setRadius = function (circle) {\n        return this._circles.get(circle).then(function (c) { return c.setRadius(circle.radius); });\n    };\n    CircleManager.prototype.createEventObservable = function (eventName, circle) {\n        var _this = this;\n        return new Observable(function (observer) {\n            var listener = null;\n            _this._circles.get(circle).then(function (c) {\n                listener = c.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n            return function () {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    };\n    CircleManager.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    CircleManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper, },\n        { type: NgZone, },\n    ]; };\n    return CircleManager;\n}());\nexport { CircleManager };\n//# sourceMappingURL=circle-manager.js.map","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\n/**\n * Manages all Data Layers for a Google Map instance.\n */\nvar DataLayerManager = /** @class */ (function () {\n    function DataLayerManager(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new Data Layer to the map.\n     */\n    /**\n       * Adds a new Data Layer to the map.\n       */\n    DataLayerManager.prototype.addDataLayer = /**\n       * Adds a new Data Layer to the map.\n       */\n    function (layer) {\n        var _this = this;\n        var newLayer = this._wrapper.createDataLayer({\n            style: layer.style\n        })\n            .then(function (d) {\n            if (layer.geoJson) {\n                _this.getDataFeatures(d, layer.geoJson).then(function (features) { return d.features = features; });\n            }\n            return d;\n        });\n        this._layers.set(layer, newLayer);\n    };\n    DataLayerManager.prototype.deleteDataLayer = function (layer) {\n        var _this = this;\n        this._layers.get(layer).then(function (l) {\n            l.setMap(null);\n            _this._layers.delete(layer);\n        });\n    };\n    DataLayerManager.prototype.updateGeoJson = function (layer, geoJson) {\n        var _this = this;\n        this._layers.get(layer).then(function (l) {\n            l.forEach(function (feature) {\n                l.remove(feature);\n                var index = l.features.indexOf(feature, 0);\n                if (index > -1) {\n                    l.features.splice(index, 1);\n                }\n            });\n            _this.getDataFeatures(l, geoJson).then(function (features) { return l.features = features; });\n        });\n    };\n    DataLayerManager.prototype.setDataOptions = function (layer, options) {\n        this._layers.get(layer).then(function (l) {\n            l.setControlPosition(options.controlPosition);\n            l.setControls(options.controls);\n            l.setDrawingMode(options.drawingMode);\n            l.setStyle(options.style);\n        });\n    };\n    /**\n     * Creates a Google Maps event listener for the given DataLayer as an Observable\n     */\n    /**\n       * Creates a Google Maps event listener for the given DataLayer as an Observable\n       */\n    DataLayerManager.prototype.createEventObservable = /**\n       * Creates a Google Maps event listener for the given DataLayer as an Observable\n       */\n    function (eventName, layer) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._layers.get(layer).then(function (d) {\n                d.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    /**\n     * Extract features from a geoJson using google.maps Data Class\n     * @param d : google.maps.Data class instance\n     * @param geoJson : url or geojson object\n     */\n    /**\n       * Extract features from a geoJson using google.maps Data Class\n       * @param d : google.maps.Data class instance\n       * @param geoJson : url or geojson object\n       */\n    DataLayerManager.prototype.getDataFeatures = /**\n       * Extract features from a geoJson using google.maps Data Class\n       * @param d : google.maps.Data class instance\n       * @param geoJson : url or geojson object\n       */\n    function (d, geoJson) {\n        return new Promise(function (resolve, reject) {\n            if (typeof geoJson === 'object') {\n                try {\n                    var features = d.addGeoJson(geoJson);\n                    resolve(features);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            }\n            else if (typeof geoJson === 'string') {\n                d.loadGeoJson(geoJson, null, resolve);\n            }\n            else {\n                reject(\"Impossible to extract features from geoJson: wrong argument type\");\n            }\n        });\n    };\n    DataLayerManager.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    DataLayerManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper, },\n        { type: NgZone, },\n    ]; };\n    return DataLayerManager;\n}());\nexport { DataLayerManager };\n//# sourceMappingURL=data-layer-manager.js.map","import { Observable } from 'rxjs';\nimport { Injectable, NgZone } from '@angular/core';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nimport { MarkerManager } from './marker-manager';\nvar InfoWindowManager = /** @class */ (function () {\n    function InfoWindowManager(_mapsWrapper, _zone, _markerManager) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markerManager = _markerManager;\n        this._infoWindows = new Map();\n    }\n    InfoWindowManager.prototype.deleteInfoWindow = function (infoWindow) {\n        var _this = this;\n        var iWindow = this._infoWindows.get(infoWindow);\n        if (iWindow == null) {\n            // info window already deleted\n            return Promise.resolve();\n        }\n        return iWindow.then(function (i) {\n            return _this._zone.run(function () {\n                i.close();\n                _this._infoWindows.delete(infoWindow);\n            });\n        });\n    };\n    InfoWindowManager.prototype.setPosition = function (infoWindow) {\n        return this._infoWindows.get(infoWindow).then(function (i) {\n            return i.setPosition({\n                lat: infoWindow.latitude,\n                lng: infoWindow.longitude\n            });\n        });\n    };\n    InfoWindowManager.prototype.setZIndex = function (infoWindow) {\n        return this._infoWindows.get(infoWindow)\n            .then(function (i) { return i.setZIndex(infoWindow.zIndex); });\n    };\n    InfoWindowManager.prototype.open = function (infoWindow) {\n        var _this = this;\n        return this._infoWindows.get(infoWindow).then(function (w) {\n            if (infoWindow.hostMarker != null) {\n                return _this._markerManager.getNativeMarker(infoWindow.hostMarker).then(function (marker) {\n                    return _this._mapsWrapper.getNativeMap().then(function (map) { return w.open(map, marker); });\n                });\n            }\n            return _this._mapsWrapper.getNativeMap().then(function (map) { return w.open(map); });\n        });\n    };\n    InfoWindowManager.prototype.close = function (infoWindow) {\n        return this._infoWindows.get(infoWindow).then(function (w) { return w.close(); });\n    };\n    InfoWindowManager.prototype.setOptions = function (infoWindow, options) {\n        return this._infoWindows.get(infoWindow).then(function (i) { return i.setOptions(options); });\n    };\n    InfoWindowManager.prototype.addInfoWindow = function (infoWindow) {\n        var options = {\n            content: infoWindow.content,\n            maxWidth: infoWindow.maxWidth,\n            zIndex: infoWindow.zIndex,\n            disableAutoPan: infoWindow.disableAutoPan\n        };\n        if (typeof infoWindow.latitude === 'number' && typeof infoWindow.longitude === 'number') {\n            options.position = { lat: infoWindow.latitude, lng: infoWindow.longitude };\n        }\n        var infoWindowPromise = this._mapsWrapper.createInfoWindow(options);\n        this._infoWindows.set(infoWindow, infoWindowPromise);\n    };\n    /**\n     * Creates a Google Maps event listener for the given InfoWindow as an Observable\n     */\n    /**\n        * Creates a Google Maps event listener for the given InfoWindow as an Observable\n        */\n    InfoWindowManager.prototype.createEventObservable = /**\n        * Creates a Google Maps event listener for the given InfoWindow as an Observable\n        */\n    function (eventName, infoWindow) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._infoWindows.get(infoWindow).then(function (i) {\n                i.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    InfoWindowManager.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    InfoWindowManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper, },\n        { type: NgZone, },\n        { type: MarkerManager, },\n    ]; };\n    return InfoWindowManager;\n}());\nexport { InfoWindowManager };\n//# sourceMappingURL=info-window-manager.js.map","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\n/**\n * Manages all KML Layers for a Google Map instance.\n */\nvar KmlLayerManager = /** @class */ (function () {\n    function KmlLayerManager(_wrapper, _zone) {\n        this._wrapper = _wrapper;\n        this._zone = _zone;\n        this._layers = new Map();\n    }\n    /**\n     * Adds a new KML Layer to the map.\n     */\n    /**\n       * Adds a new KML Layer to the map.\n       */\n    KmlLayerManager.prototype.addKmlLayer = /**\n       * Adds a new KML Layer to the map.\n       */\n    function (layer) {\n        var newLayer = this._wrapper.getNativeMap().then(function (m) {\n            return new google.maps.KmlLayer({\n                clickable: layer.clickable,\n                map: m,\n                preserveViewport: layer.preserveViewport,\n                screenOverlays: layer.screenOverlays,\n                suppressInfoWindows: layer.suppressInfoWindows,\n                url: layer.url,\n                zIndex: layer.zIndex\n            });\n        });\n        this._layers.set(layer, newLayer);\n    };\n    KmlLayerManager.prototype.setOptions = function (layer, options) {\n        this._layers.get(layer).then(function (l) { return l.setOptions(options); });\n    };\n    KmlLayerManager.prototype.deleteKmlLayer = function (layer) {\n        var _this = this;\n        this._layers.get(layer).then(function (l) {\n            l.setMap(null);\n            _this._layers.delete(layer);\n        });\n    };\n    /**\n     * Creates a Google Maps event listener for the given KmlLayer as an Observable\n     */\n    /**\n       * Creates a Google Maps event listener for the given KmlLayer as an Observable\n       */\n    KmlLayerManager.prototype.createEventObservable = /**\n       * Creates a Google Maps event listener for the given KmlLayer as an Observable\n       */\n    function (eventName, layer) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._layers.get(layer).then(function (m) {\n                m.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    KmlLayerManager.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    KmlLayerManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper, },\n        { type: NgZone, },\n    ]; };\n    return KmlLayerManager;\n}());\nexport { KmlLayerManager };\n//# sourceMappingURL=kml-layer-manager.js.map","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMapsAPIWrapper } from './../google-maps-api-wrapper';\nvar MarkerManager = /** @class */ (function () {\n    function MarkerManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._markers = new Map();\n    }\n    MarkerManager.prototype.deleteMarker = function (marker) {\n        var _this = this;\n        var m = this._markers.get(marker);\n        if (m == null) {\n            // marker already deleted\n            return Promise.resolve();\n        }\n        return m.then(function (m) {\n            return _this._zone.run(function () {\n                m.setMap(null);\n                _this._markers.delete(marker);\n            });\n        });\n    };\n    MarkerManager.prototype.updateMarkerPosition = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setPosition({ lat: marker.latitude, lng: marker.longitude }); });\n    };\n    MarkerManager.prototype.updateTitle = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setTitle(marker.title); });\n    };\n    MarkerManager.prototype.updateLabel = function (marker) {\n        return this._markers.get(marker).then(function (m) { m.setLabel(marker.label); });\n    };\n    MarkerManager.prototype.updateDraggable = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setDraggable(marker.draggable); });\n    };\n    MarkerManager.prototype.updateIcon = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setIcon(marker.iconUrl); });\n    };\n    MarkerManager.prototype.updateOpacity = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setOpacity(marker.opacity); });\n    };\n    MarkerManager.prototype.updateVisible = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setVisible(marker.visible); });\n    };\n    MarkerManager.prototype.updateZIndex = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setZIndex(marker.zIndex); });\n    };\n    MarkerManager.prototype.updateClickable = function (marker) {\n        return this._markers.get(marker).then(function (m) { return m.setClickable(marker.clickable); });\n    };\n    MarkerManager.prototype.updateAnimation = function (marker) {\n        return this._markers.get(marker).then(function (m) {\n            if (typeof marker.animation === 'string') {\n                m.setAnimation(google.maps.Animation[marker.animation]);\n            }\n            else {\n                m.setAnimation(marker.animation);\n            }\n        });\n    };\n    MarkerManager.prototype.addMarker = function (marker) {\n        var markerPromise = this._mapsWrapper.createMarker({\n            position: { lat: marker.latitude, lng: marker.longitude },\n            label: marker.label,\n            draggable: marker.draggable,\n            icon: marker.iconUrl,\n            opacity: marker.opacity,\n            visible: marker.visible,\n            zIndex: marker.zIndex,\n            title: marker.title,\n            clickable: marker.clickable,\n            animation: (typeof marker.animation === 'string') ? google.maps.Animation[marker.animation] : marker.animation\n        });\n        this._markers.set(marker, markerPromise);\n    };\n    MarkerManager.prototype.getNativeMarker = function (marker) {\n        return this._markers.get(marker);\n    };\n    MarkerManager.prototype.createEventObservable = function (eventName, marker) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._markers.get(marker).then(function (m) {\n                m.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    MarkerManager.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    MarkerManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper, },\n        { type: NgZone, },\n    ]; };\n    return MarkerManager;\n}());\nexport { MarkerManager };\n//# sourceMappingURL=marker-manager.js.map","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nvar PolygonManager = /** @class */ (function () {\n    function PolygonManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polygons = new Map();\n    }\n    PolygonManager.prototype.addPolygon = function (path) {\n        var polygonPromise = this._mapsWrapper.createPolygon({\n            clickable: path.clickable,\n            draggable: path.draggable,\n            editable: path.editable,\n            fillColor: path.fillColor,\n            fillOpacity: path.fillOpacity,\n            geodesic: path.geodesic,\n            paths: path.paths,\n            strokeColor: path.strokeColor,\n            strokeOpacity: path.strokeOpacity,\n            strokeWeight: path.strokeWeight,\n            visible: path.visible,\n            zIndex: path.zIndex,\n        });\n        this._polygons.set(path, polygonPromise);\n    };\n    PolygonManager.prototype.updatePolygon = function (polygon) {\n        var _this = this;\n        var m = this._polygons.get(polygon);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) { return _this._zone.run(function () { l.setPaths(polygon.paths); }); });\n    };\n    PolygonManager.prototype.setPolygonOptions = function (path, options) {\n        return this._polygons.get(path).then(function (l) { l.setOptions(options); });\n    };\n    PolygonManager.prototype.deletePolygon = function (paths) {\n        var _this = this;\n        var m = this._polygons.get(paths);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) {\n            return _this._zone.run(function () {\n                l.setMap(null);\n                _this._polygons.delete(paths);\n            });\n        });\n    };\n    PolygonManager.prototype.createEventObservable = function (eventName, path) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._polygons.get(path).then(function (l) {\n                l.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    PolygonManager.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PolygonManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper, },\n        { type: NgZone, },\n    ]; };\n    return PolygonManager;\n}());\nexport { PolygonManager };\n//# sourceMappingURL=polygon-manager.js.map","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nvar PolylineManager = /** @class */ (function () {\n    function PolylineManager(_mapsWrapper, _zone) {\n        this._mapsWrapper = _mapsWrapper;\n        this._zone = _zone;\n        this._polylines = new Map();\n    }\n    PolylineManager._convertPoints = function (line) {\n        var path = line._getPoints().map(function (point) {\n            return { lat: point.latitude, lng: point.longitude };\n        });\n        return path;\n    };\n    PolylineManager.prototype.addPolyline = function (line) {\n        var path = PolylineManager._convertPoints(line);\n        var polylinePromise = this._mapsWrapper.createPolyline({\n            clickable: line.clickable,\n            draggable: line.draggable,\n            editable: line.editable,\n            geodesic: line.geodesic,\n            strokeColor: line.strokeColor,\n            strokeOpacity: line.strokeOpacity,\n            strokeWeight: line.strokeWeight,\n            visible: line.visible,\n            zIndex: line.zIndex,\n            path: path\n        });\n        this._polylines.set(line, polylinePromise);\n    };\n    PolylineManager.prototype.updatePolylinePoints = function (line) {\n        var _this = this;\n        var path = PolylineManager._convertPoints(line);\n        var m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) { return _this._zone.run(function () { l.setPath(path); }); });\n    };\n    PolylineManager.prototype.setPolylineOptions = function (line, options) {\n        return this._polylines.get(line).then(function (l) { l.setOptions(options); });\n    };\n    PolylineManager.prototype.deletePolyline = function (line) {\n        var _this = this;\n        var m = this._polylines.get(line);\n        if (m == null) {\n            return Promise.resolve();\n        }\n        return m.then(function (l) {\n            return _this._zone.run(function () {\n                l.setMap(null);\n                _this._polylines.delete(line);\n            });\n        });\n    };\n    PolylineManager.prototype.createEventObservable = function (eventName, line) {\n        var _this = this;\n        return new Observable(function (observer) {\n            _this._polylines.get(line).then(function (l) {\n                l.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n        });\n    };\n    PolylineManager.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PolylineManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper, },\n        { type: NgZone, },\n    ]; };\n    return PolylineManager;\n}());\nexport { PolylineManager };\n//# sourceMappingURL=polyline-manager.js.map","import { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GoogleMapsAPIWrapper } from '../google-maps-api-wrapper';\nvar RectangleManager = /** @class */ (function () {\n    function RectangleManager(_apiWrapper, _zone) {\n        this._apiWrapper = _apiWrapper;\n        this._zone = _zone;\n        this._rectangles = new Map();\n    }\n    RectangleManager.prototype.addRectangle = function (rectangle) {\n        this._rectangles.set(rectangle, this._apiWrapper.createRectangle({\n            bounds: {\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west\n            },\n            clickable: rectangle.clickable,\n            draggable: rectangle.draggable,\n            editable: rectangle.editable,\n            fillColor: rectangle.fillColor,\n            fillOpacity: rectangle.fillOpacity,\n            strokeColor: rectangle.strokeColor,\n            strokeOpacity: rectangle.strokeOpacity,\n            strokePosition: rectangle.strokePosition,\n            strokeWeight: rectangle.strokeWeight,\n            visible: rectangle.visible,\n            zIndex: rectangle.zIndex\n        }));\n    };\n    /**\n     * Removes the given rectangle from the map.\n     */\n    /**\n       * Removes the given rectangle from the map.\n       */\n    RectangleManager.prototype.removeRectangle = /**\n       * Removes the given rectangle from the map.\n       */\n    function (rectangle) {\n        var _this = this;\n        return this._rectangles.get(rectangle).then(function (r) {\n            r.setMap(null);\n            _this._rectangles.delete(rectangle);\n        });\n    };\n    RectangleManager.prototype.setOptions = function (rectangle, options) {\n        return this._rectangles.get(rectangle).then(function (r) { return r.setOptions(options); });\n    };\n    RectangleManager.prototype.getBounds = function (rectangle) {\n        return this._rectangles.get(rectangle).then(function (r) { return r.getBounds(); });\n    };\n    RectangleManager.prototype.setBounds = function (rectangle) {\n        return this._rectangles.get(rectangle).then(function (r) {\n            return r.setBounds({\n                north: rectangle.north,\n                east: rectangle.east,\n                south: rectangle.south,\n                west: rectangle.west\n            });\n        });\n    };\n    RectangleManager.prototype.setEditable = function (rectangle) {\n        return this._rectangles.get(rectangle).then(function (r) {\n            return r.setEditable(rectangle.editable);\n        });\n    };\n    RectangleManager.prototype.setDraggable = function (rectangle) {\n        return this._rectangles.get(rectangle).then(function (r) {\n            return r.setDraggable(rectangle.draggable);\n        });\n    };\n    RectangleManager.prototype.setVisible = function (rectangle) {\n        return this._rectangles.get(rectangle).then(function (r) {\n            return r.setVisible(rectangle.visible);\n        });\n    };\n    RectangleManager.prototype.createEventObservable = function (eventName, rectangle) {\n        var _this = this;\n        return Observable.create(function (observer) {\n            var listener = null;\n            _this._rectangles.get(rectangle).then(function (r) {\n                listener = r.addListener(eventName, function (e) { return _this._zone.run(function () { return observer.next(e); }); });\n            });\n            return function () {\n                if (listener !== null) {\n                    listener.remove();\n                }\n            };\n        });\n    };\n    RectangleManager.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    RectangleManager.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper, },\n        { type: NgZone, },\n    ]; };\n    return RectangleManager;\n}());\nexport { RectangleManager };\n//# sourceMappingURL=rectangle-manager.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { DocumentRef, WindowRef } from '../../utils/browser-globals';\nimport { MapsAPILoader } from './maps-api-loader';\nexport var GoogleMapsScriptProtocol;\n(function (GoogleMapsScriptProtocol) {\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTP\"] = 1] = \"HTTP\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"HTTPS\"] = 2] = \"HTTPS\";\n    GoogleMapsScriptProtocol[GoogleMapsScriptProtocol[\"AUTO\"] = 3] = \"AUTO\";\n})(GoogleMapsScriptProtocol || (GoogleMapsScriptProtocol = {}));\n/**\n * Token for the config of the LazyMapsAPILoader. Please provide an object of type {@link\n * LazyMapsAPILoaderConfig}.\n */\nexport var LAZY_MAPS_API_CONFIG = new InjectionToken('angular-google-maps LAZY_MAPS_API_CONFIG');\nvar LazyMapsAPILoader = /** @class */ (function (_super) {\n    __extends(LazyMapsAPILoader, _super);\n    function LazyMapsAPILoader(config, w, d) {\n        if (config === void 0) { config = null; }\n        var _this = _super.call(this) || this;\n        _this._SCRIPT_ID = 'agmGoogleMapsApiScript';\n        _this.callbackName = \"agmLazyMapsAPILoader\";\n        _this._config = config || {};\n        _this._windowRef = w;\n        _this._documentRef = d;\n        return _this;\n    }\n    LazyMapsAPILoader.prototype.load = function () {\n        var window = this._windowRef.getNativeWindow();\n        if (window.google && window.google.maps) {\n            // Google maps already loaded on the page.\n            return Promise.resolve();\n        }\n        if (this._scriptLoadingPromise) {\n            return this._scriptLoadingPromise;\n        }\n        // this can happen in HMR situations or Stackblitz.io editors.\n        var scriptOnPage = this._documentRef.getNativeDocument().getElementById(this._SCRIPT_ID);\n        if (scriptOnPage) {\n            this._assignScriptLoadingPromise(scriptOnPage);\n            return this._scriptLoadingPromise;\n        }\n        var script = this._documentRef.getNativeDocument().createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.defer = true;\n        script.id = this._SCRIPT_ID;\n        script.src = this._getScriptSrc(this.callbackName);\n        this._assignScriptLoadingPromise(script);\n        this._documentRef.getNativeDocument().body.appendChild(script);\n        return this._scriptLoadingPromise;\n    };\n    LazyMapsAPILoader.prototype._assignScriptLoadingPromise = function (scriptElem) {\n        var _this = this;\n        this._scriptLoadingPromise = new Promise(function (resolve, reject) {\n            _this._windowRef.getNativeWindow()[_this.callbackName] = function () {\n                resolve();\n            };\n            scriptElem.onerror = function (error) {\n                reject(error);\n            };\n        });\n    };\n    LazyMapsAPILoader.prototype._getScriptSrc = function (callbackName) {\n        var protocolType = (this._config && this._config.protocol) || GoogleMapsScriptProtocol.HTTPS;\n        var protocol;\n        switch (protocolType) {\n            case GoogleMapsScriptProtocol.AUTO:\n                protocol = '';\n                break;\n            case GoogleMapsScriptProtocol.HTTP:\n                protocol = 'http:';\n                break;\n            case GoogleMapsScriptProtocol.HTTPS:\n                protocol = 'https:';\n                break;\n        }\n        var hostAndPath = this._config.hostAndPath || 'maps.googleapis.com/maps/api/js';\n        var queryParams = {\n            v: this._config.apiVersion || '3',\n            callback: callbackName,\n            key: this._config.apiKey,\n            client: this._config.clientId,\n            channel: this._config.channel,\n            libraries: this._config.libraries,\n            region: this._config.region,\n            language: this._config.language\n        };\n        var params = Object.keys(queryParams)\n            .filter(function (k) { return queryParams[k] != null; })\n            .filter(function (k) {\n            // remove empty arrays\n            return !Array.isArray(queryParams[k]) ||\n                (Array.isArray(queryParams[k]) && queryParams[k].length > 0);\n        })\n            .map(function (k) {\n            // join arrays as comma seperated strings\n            var i = queryParams[k];\n            if (Array.isArray(i)) {\n                return { key: k, value: i.join(',') };\n            }\n            return { key: k, value: queryParams[k] };\n        })\n            .map(function (entry) {\n            return entry.key + \"=\" + entry.value;\n        })\n            .join('&');\n        return protocol + \"//\" + hostAndPath + \"?\" + params;\n    };\n    LazyMapsAPILoader.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    LazyMapsAPILoader.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LAZY_MAPS_API_CONFIG,] },] },\n        { type: WindowRef, },\n        { type: DocumentRef, },\n    ]; };\n    return LazyMapsAPILoader;\n}(MapsAPILoader));\nexport { LazyMapsAPILoader };\n//# sourceMappingURL=lazy-maps-api-loader.js.map","import { Injectable } from '@angular/core';\nvar MapsAPILoader = /** @class */ (function () {\n    function MapsAPILoader() {\n    }\n    MapsAPILoader.decorators = [\n        { type: Injectable },\n    ];\n    return MapsAPILoader;\n}());\nexport { MapsAPILoader };\n//# sourceMappingURL=maps-api-loader.js.map","/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nvar /**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nNoOpMapsAPILoader = /** @class */ (function () {\n    function NoOpMapsAPILoader() {\n    }\n    NoOpMapsAPILoader.prototype.load = function () {\n        if (!window.google || !window.google.maps) {\n            throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n        }\n        return Promise.resolve();\n    };\n    return NoOpMapsAPILoader;\n}());\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nexport { NoOpMapsAPILoader };\n//# sourceMappingURL=noop-maps-api-loader.js.map","var WindowRef = /** @class */ (function () {\n    function WindowRef() {\n    }\n    WindowRef.prototype.getNativeWindow = function () { return window; };\n    return WindowRef;\n}());\nexport { WindowRef };\nvar DocumentRef = /** @class */ (function () {\n    function DocumentRef() {\n    }\n    DocumentRef.prototype.getNativeDocument = function () { return document; };\n    return DocumentRef;\n}());\nexport { DocumentRef };\nexport var BROWSER_GLOBALS_PROVIDERS = [WindowRef, DocumentRef];\n//# sourceMappingURL=browser-globals.js.map","import { Directive, Input, Output, EventEmitter, NgModule } from '@angular/core';\nimport { GoogleMapsAPIWrapper } from '@agm/core';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar AgmDirection = /** @class */ (function () {\n    function AgmDirection(gmapsApi) {\n        this.gmapsApi = gmapsApi;\n        // Options\n        this.travelMode = 'DRIVING';\n        this.transitOptions = undefined;\n        this.drivingOptions = undefined;\n        this.waypoints = [];\n        this.optimizeWaypoints = true;\n        this.provideRouteAlternatives = false;\n        this.avoidHighways = false;\n        this.avoidTolls = false;\n        // Remove or draw direction\n        this.visible = true;\n        // Direction change event handler\n        this.onChange = new EventEmitter();\n        // Direction response for the new request\n        this.onResponse = new EventEmitter();\n        // Send a custom infowindow\n        this.sendInfoWindow = new EventEmitter();\n        // Status of Directions Query (google.maps.DirectionsStatus.OVER_QUERY_LIMIT)\n        this.status = new EventEmitter();\n        // Marker drag event handler\n        this.originDrag = new EventEmitter();\n        this.destinationDrag = new EventEmitter();\n        this.directionsService = undefined;\n        this.directionsDisplay = undefined;\n        this.waypointsMarker = [];\n        // Use for visible flag\n        this.isFirstChange = true;\n    }\n    /**\n     * @return {?}\n     */\n    AgmDirection.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (this.visible === true) {\n            this.directionDraw();\n        }\n    };\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    AgmDirection.prototype.ngOnChanges = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        /**\n         * When visible is false then remove the direction layer\n         */\n        if (!this.visible) {\n            try {\n                this.removeMarkers();\n                this.removeDirections();\n            }\n            catch (e) { }\n        }\n        else {\n            if (this.isFirstChange) {\n                /**\n                 * When visible is false at the first time\n                 */\n                if (typeof this.directionsDisplay === 'undefined') {\n                    this.directionDraw();\n                }\n                this.isFirstChange = false;\n                return;\n            }\n            /**\n             * When renderOptions are not first change then reset the display\n             */\n            if (typeof obj.renderOptions !== 'undefined') {\n                if (obj.renderOptions.firstChange === false) {\n                    this.removeMarkers();\n                    this.removeDirections();\n                }\n            }\n            this.directionDraw();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    AgmDirection.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.destroyMarkers();\n        this.removeDirections();\n    };\n    /**\n     * This event is fired when the user creating or updating this direction\n     */\n    /**\n     * This event is fired when the user creating or updating this direction\n     * @return {?}\n     */\n    AgmDirection.prototype.directionDraw = /**\n     * This event is fired when the user creating or updating this direction\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.gmapsApi.getNativeMap().then(function (map) {\n            if (typeof _this.directionsDisplay === 'undefined') {\n                _this.directionsDisplay = new google.maps.DirectionsRenderer(_this.renderOptions);\n                _this.directionsDisplay.setMap(map);\n                _this.directionsDisplay.addListener('directions_changed', function () {\n                    _this.onChange.emit(_this.directionsDisplay.getDirections());\n                });\n            }\n            if (typeof _this.directionsService === 'undefined') {\n                _this.directionsService = new google.maps.DirectionsService;\n            }\n            if (typeof _this.panel === 'undefined') {\n                _this.directionsDisplay.setPanel(null);\n            }\n            else {\n                _this.directionsDisplay.setPanel(_this.panel);\n            }\n            // Render exist direction\n            if (typeof _this.renderRoute === 'object' && _this.renderRoute !== null) {\n                _this.directionsDisplay.setDirections(_this.renderRoute);\n                _this.renderRoute = null; // or set undefined, ''\n            }\n            else {\n                // Request new direction\n                _this.directionsService.route({\n                    origin: _this.origin,\n                    destination: _this.destination,\n                    travelMode: _this.travelMode,\n                    transitOptions: _this.transitOptions,\n                    drivingOptions: _this.drivingOptions,\n                    waypoints: _this.waypoints,\n                    optimizeWaypoints: _this.optimizeWaypoints,\n                    provideRouteAlternatives: _this.provideRouteAlternatives,\n                    avoidHighways: _this.avoidHighways,\n                    avoidTolls: _this.avoidTolls,\n                }, function (response, status) {\n                    _this.onResponse.emit(response);\n                    // Emit Query Status\n                    _this.status.emit(status);\n                    /**\n                     * DirectionsStatus\n                     * https://developers.google.com/maps/documentation/javascript/directions#DirectionsStatus\n                     */\n                    switch (status) {\n                        case 'OK':\n                            _this.directionsDisplay.setDirections(response);\n                            /**\n                             * Emit The DirectionsResult Object\n                             * https://developers.google.com/maps/documentation/javascript/directions?hl=en#DirectionsResults\n                             */\n                            // Custom Markers\n                            if (typeof _this.markerOptions !== 'undefined') {\n                                _this.destroyMarkers();\n                                // Set custom markers\n                                /** @type {?} */\n                                var _route_1 = response.routes[0].legs[0];\n                                try {\n                                    // Origin Marker\n                                    if (typeof _this.markerOptions.origin !== 'undefined') {\n                                        _this.markerOptions.origin.map = map;\n                                        _this.markerOptions.origin.position = _route_1.start_location;\n                                        _this.originMarker = _this.setMarker(map, _this.originMarker, _this.markerOptions.origin, _route_1.start_address);\n                                        if (_this.markerOptions.origin.draggable) {\n                                            _this.originMarker.addListener('dragend', function () {\n                                                _this.origin = _this.originMarker.position;\n                                                _this.directionDraw();\n                                                _this.originDrag.emit(_this.origin);\n                                            });\n                                        }\n                                    }\n                                    // Destination Marker\n                                    if (typeof _this.markerOptions.destination !== 'undefined') {\n                                        _this.markerOptions.destination.map = map;\n                                        _this.markerOptions.destination.position = _route_1.end_location;\n                                        _this.destinationMarker = _this.setMarker(map, _this.destinationMarker, _this.markerOptions.destination, _route_1.end_address);\n                                        if (_this.markerOptions.destination.draggable) {\n                                            _this.destinationMarker.addListener('dragend', function () {\n                                                _this.destination = _this.destinationMarker.position;\n                                                _this.directionDraw();\n                                                _this.destinationDrag.emit(_this.destination);\n                                            });\n                                        }\n                                    }\n                                    // Waypoints Marker\n                                    if (typeof _this.markerOptions.waypoints !== 'undefined') {\n                                        _this.waypoints.forEach(function (waypoint, index) {\n                                            // If waypoints are not array then set all the same\n                                            if (!Array.isArray(_this.markerOptions.waypoints)) {\n                                                _this.markerOptions.waypoints.map = map;\n                                                _this.markerOptions.waypoints.position = _route_1.via_waypoints[index];\n                                                _this.waypointsMarker.push(_this.setMarker(map, waypoint, _this.markerOptions.waypoints, _route_1.via_waypoints[index]));\n                                            }\n                                            else {\n                                                _this.markerOptions.waypoints[index].map = map;\n                                                _this.markerOptions.waypoints[index].position = _route_1.via_waypoints[index];\n                                                _this.waypointsMarker.push(_this.setMarker(map, waypoint, _this.markerOptions.waypoints[index], _route_1.via_waypoints[index]));\n                                            }\n                                        }); // End forEach\n                                    }\n                                }\n                                catch (err) {\n                                    console.error('MarkerOptions error.', err);\n                                }\n                            }\n                            break;\n                        default:\n                            // console.warn(status);\n                            break;\n                    } // End switch\n                });\n            }\n        });\n    };\n    /**\n     * Custom Origin and Destination Icon\n     * @param map map\n     * @param marker marker\n     * @param markerOpts properties\n     * @param content marker's infowindow content\n     * @returns new marker\n     * @memberof AgmDirection\n     */\n    /**\n     * Custom Origin and Destination Icon\n     * \\@memberof AgmDirection\n     * @param {?} map map\n     * @param {?} marker marker\n     * @param {?} markerOpts properties\n     * @param {?} content marker's infowindow content\n     * @return {?} new marker\n     */\n    AgmDirection.prototype.setMarker = /**\n     * Custom Origin and Destination Icon\n     * \\@memberof AgmDirection\n     * @param {?} map map\n     * @param {?} marker marker\n     * @param {?} markerOpts properties\n     * @param {?} content marker's infowindow content\n     * @return {?} new marker\n     */\n    function (map, marker, markerOpts, content) {\n        var _this = this;\n        if (typeof this.infoWindow === 'undefined') {\n            this.infoWindow = new google.maps.InfoWindow({});\n            this.sendInfoWindow.emit(this.infoWindow);\n        }\n        marker = new google.maps.Marker(markerOpts);\n        // https://developers.google.com/maps/documentation/javascript/reference/marker?hl=zh-tw#MarkerOptions.clickable\n        if (marker.clickable) {\n            marker.addListener('click', function () {\n                /** @type {?} */\n                var infowindoContent = typeof markerOpts.infoWindow === 'undefined' ? content : markerOpts.infoWindow;\n                _this.infoWindow.setContent(infowindoContent);\n                _this.infoWindow.open(map, marker);\n            });\n        }\n        return marker;\n    };\n    /**\n     * This event is fired when remove markers\n     */\n    /**\n     * This event is fired when remove markers\n     * @return {?}\n     */\n    AgmDirection.prototype.removeMarkers = /**\n     * This event is fired when remove markers\n     * @return {?}\n     */\n    function () {\n        if (typeof this.originMarker !== 'undefined') {\n            this.originMarker.setMap(null);\n        }\n        if (typeof this.destinationMarker !== 'undefined') {\n            this.destinationMarker.setMap(null);\n        }\n        this.waypointsMarker.forEach(function (w) {\n            if (typeof w !== 'undefined') {\n                w.setMap(null);\n            }\n        });\n    };\n    /**\n     * This event is fired when remove directions\n     */\n    /**\n     * This event is fired when remove directions\n     * @return {?}\n     */\n    AgmDirection.prototype.removeDirections = /**\n     * This event is fired when remove directions\n     * @return {?}\n     */\n    function () {\n        if (this.directionsDisplay !== undefined) {\n            this.directionsDisplay.setPanel(null);\n            this.directionsDisplay.setMap(null);\n            this.directionsDisplay = undefined;\n        }\n    };\n    /**\n     * This event is fired when destroy markers\n     */\n    /**\n     * This event is fired when destroy markers\n     * @return {?}\n     */\n    AgmDirection.prototype.destroyMarkers = /**\n     * This event is fired when destroy markers\n     * @return {?}\n     */\n    function () {\n        // Remove origin markers\n        try {\n            if (typeof this.originMarker !== 'undefined') {\n                google.maps.event.clearListeners(this.originMarker, 'click');\n                if (this.markerOptions.origin.draggable) {\n                    google.maps.event.clearListeners(this.originMarker, 'dragend');\n                }\n            }\n            if (typeof this.destinationMarker !== 'undefined') {\n                google.maps.event.clearListeners(this.destinationMarker, 'click');\n                if (this.markerOptions.origin.draggable) {\n                    google.maps.event.clearListeners(this.destinationMarker, 'dragend');\n                }\n            }\n            this.waypointsMarker.forEach(function (w) {\n                if (typeof w !== 'undefined') {\n                    google.maps.event.clearListeners(w, 'click');\n                }\n            });\n            this.removeMarkers();\n        }\n        catch (err) {\n            console.error('Can not reset custom marker.', err);\n        }\n    };\n    AgmDirection.decorators = [\n        { type: Directive, args: [{\n                    selector: 'agm-direction',\n                },] }\n    ];\n    /** @nocollapse */\n    AgmDirection.ctorParameters = function () { return [\n        { type: GoogleMapsAPIWrapper }\n    ]; };\n    AgmDirection.propDecorators = {\n        origin: [{ type: Input }],\n        destination: [{ type: Input }],\n        travelMode: [{ type: Input }],\n        transitOptions: [{ type: Input }],\n        drivingOptions: [{ type: Input }],\n        waypoints: [{ type: Input }],\n        optimizeWaypoints: [{ type: Input }],\n        provideRouteAlternatives: [{ type: Input }],\n        avoidHighways: [{ type: Input }],\n        avoidTolls: [{ type: Input }],\n        renderOptions: [{ type: Input }],\n        panel: [{ type: Input }],\n        markerOptions: [{ type: Input }],\n        infoWindow: [{ type: Input }],\n        visible: [{ type: Input }],\n        renderRoute: [{ type: Input }],\n        onChange: [{ type: Output }],\n        onResponse: [{ type: Output }],\n        sendInfoWindow: [{ type: Output }],\n        status: [{ type: Output }],\n        originDrag: [{ type: Output }],\n        destinationDrag: [{ type: Output }]\n    };\n    return AgmDirection;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nvar AgmDirectionModule = /** @class */ (function () {\n    function AgmDirectionModule() {\n    }\n    /**\n     * @return {?}\n     */\n    AgmDirectionModule.forRoot = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngModule: AgmDirectionModule,\n        };\n    };\n    AgmDirectionModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [],\n                    declarations: [\n                        AgmDirection,\n                    ],\n                    exports: [\n                        AgmDirection,\n                    ]\n                },] }\n    ];\n    return AgmDirectionModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { AgmDirectionModule, AgmDirection as ɵa };\n//# sourceMappingURL=agm-direction.js.map\n","module.exports = \"<div class=\\\"p-sm-40\\\">\\n  <div class=\\\"mat-elevation-z3 simple-table-container radius-t-20\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"p-20 border-bottom\\\">\\n      <div class=\\\"font-size-18 text-uppercase\\\" translate>New Transportation Schedule</div>\\n      <div>\\n        <button mat-raised-button color=\\\"primary\\\" type='button' (click)=\\\"onAction(true)\\\"\\n          class=\\\"mr-4 text-uppercase\\\">{{'Back' | translate}}</button>\\n        <button mat-button type='button' (click)=\\\"getHelpText('Schedules')\\\">\\n          <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n        </button>\\n      </div>\\n    </div>\\n    <form [formGroup]=\\\"scheduleForm\\\" #scheduleform=\\\"ngForm\\\" class=\\\"px-28 pt-28\\\">\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\">\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\">\\n          <mat-label translate #scheduleName>Schedule Name</mat-label>\\n          <input matInput (blur)=\\\"trimTextBoxSpaces('scheduleForm','name')\\\" formControlName=\\\"name\\\" required autofocus id=\\\"focusField\\\">\\n          <mat-error>\\n            <app-validation [labelName]='scheduleName.innerText' [validationControl]=\\\"scheduleForm.controls.name\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\"\\n          class=\\\"pl-sm-16\\\">\\n          <mat-label translate #typeId>Type</mat-label>\\n          <mat-select required formControlName=\\\"inboundOrOutbound\\\" (selectionChange)=\\\"onTypeChange($event)\\\">\\n            <mat-option *ngFor=\\\"let type of routeTypeList\\\" [value]=\\\"type.code\\\">\\n              {{ type.name }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='typeId.innerText' [validationControl]=\\\"scheduleForm.controls.inboundOrOutbound\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\" class=\\\"formfield-pb-0 pl-sm-16\\\">\\n          <app-custom-timepicker [label]=\\\"'Start Time'\\\" appearance=\\\"outline\\\" formControlName=\\\"startTime\\\"\\n            [is24HoursFormat]=\\\"true\\\" [showLabel]=\\\"true\\\" [isRequired]=\\\"true\\\" [errorClass]=\\\"'pt-20'\\\" [requiredValidator]=true></app-custom-timepicker>\\n          <!-- <mat-error *ngIf=\\\"scheduleForm.controls.startTime.dirty\\\">\\n            <app-validation [labelName]=\\\"'Start Time'\\\" [validationControl]=\\\"scheduleForm.controls.startTime\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error> -->\\n        </div>\\n        <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\" class=\\\"formfield-pb-0 pl-sm-16\\\">\\n          <app-custom-timepicker [label]=\\\"'End Time'\\\" appearance=\\\"outline\\\" formControlName=\\\"endTime\\\"\\n            [is24HoursFormat]=\\\"true\\\" [showLabel]=\\\"true\\\" timeValidator=true [errorClass]=\\\"'pt-20'\\\" ngDefaultControl></app-custom-timepicker>\\n          <!-- <mat-error *ngIf=\\\"scheduleForm.controls.endTime.dirty\\\">\\n            <app-validation [labelName]=\\\"'End Time'\\\" [validationControl]=\\\"scheduleForm.controls.endTime\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error> -->\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"!isShowRoutesForm && !routeListForm.value?.routesList?.length\\\" fxLayout=\\\"row\\\" class=\\\"py-20\\\">\\n        <button mat-raised-button color=\\\"accent\\\" class=\\\"text-uppercase\\\" (click)=\\\"isShowRoutesForm = true\\\" translate><span>Add Routes</span></button>\\n      </div>\\n    </form>\\n    <form *ngIf=\\\"isShowRoutesForm || routeListForm.value?.routesList?.length\\\" [formGroup]=\\\"routeSelectionForm\\\" #form=\\\"ngForm\\\" fxLayout=\\\"row\\\" class=\\\"px-28 pt-12\\\">\\n      <div (click)=\\\"onClickForm()\\\" fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\">\\n          <mat-label translate #routeId>Route Name</mat-label>\\n          <mat-select (selectionChange)=\\\"onRouteChange($event)\\\" required formControlName=\\\"transportRouteId\\\">\\n            <mat-option [disabled]=\\\"route.disable\\\" *ngFor=\\\"let route of routesList\\\" [value]=\\\"route.id\\\">\\n              {{route.name}}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='routeId.innerText'\\n              [validationControl]=\\\"routeSelectionForm.controls.transportRouteId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\"\\n          class=\\\"pl-sm-16\\\">\\n          <mat-label translate #vehicleId>Vehicle</mat-label>\\n          <mat-select formControlName=\\\"vehicleId\\\" required>\\n            <mat-option [disabled]=\\\"vehicle.disable\\\" *ngFor=\\\"let vehicle of vehiclesList\\\" [value]=\\\"vehicle.id\\\">\\n              {{vehicle.name}}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='vehicleId.innerText'\\n              [validationControl]=\\\"routeSelectionForm.controls.vehicleId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"22\\\" class=\\\"pl-sm-16\\\">\\n          <mat-label translate #driverId>Driver</mat-label>\\n          <mat-select formControlName=\\\"driverStaffId\\\" required>\\n            <mat-option [disabled]=\\\"driver.disable\\\" *ngFor=\\\"let driver of driversList\\\" [value]=\\\"driver.id\\\">\\n              {{driver.name}}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='driverId.innerText'\\n              [validationControl]=\\\"routeSelectionForm.controls.driverStaffId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\"\\n          class=\\\"pl-sm-16\\\">\\n          <mat-label translate #assistantId>Assistant</mat-label>\\n          <mat-select formControlName=\\\"assistantStaffId\\\" required>\\n            <mat-option [disabled]=\\\"driverAssistant.disable\\\" *ngFor=\\\"let driverAssistant of driversAssistantsList\\\"\\n              [value]=\\\"driverAssistant.id\\\">\\n              {{driverAssistant.name}}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='assistantId.innerText'\\n              [validationControl]=\\\"routeSelectionForm.controls.assistantStaffId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <div fxLayout=\\\"column\\\" class=\\\"mt-12 pl-sm-16\\\">\\n          <button class mat-raised-button (click)=\\\"onSelectRoute()\\\" type=\\\"submit\\\" color=\\\"accent\\\">\\n            {{'Select' | translate}}\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n    <div class=\\\"simple-table-container\\\" fxLayout=\\\"column\\\" *ngIf=\\\"routeListForm.value?.routesList?.length\\\">\\n      <div class=\\\"font-size-20 p-20 border-bottom\\\" translate>Selected Routes</div>\\n      <table class=\\\"simple\\\">\\n        <thead>\\n          <tr>\\n            <th translate>Route No</th>\\n            <th translate>Route Name</th>\\n            <th translate>Route Description</th>\\n            <th translate>Vehicle</th>\\n            <th translate>Driver</th>\\n            <th translate>Assistant</th>\\n            <th translate>Action</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let route of routeListForm.get('routesList')?.controls; let i = index\\\">\\n            <td><span class=\\\"p-4 \\\"> {{route.value.routeNumber}} </span>\\n            </td>\\n            <td><span class=\\\"p-4 text-bold\\\"> {{getLabelById('routesList', route.value.transportRouteId)}} </span>\\n            </td>\\n            <td>\\n              <p>{{route.value.routeDescription}}</p>\\n            </td>\\n            <td>\\n              <p> {{getLabelById('vehiclesList', route.value.vehicleId)}} </p>\\n            </td>\\n            <td>\\n              <p> {{getLabelById('driversList', route.value.driverStaffId)}} </p>\\n            </td>\\n            <td>\\n              <p>{{getLabelById('driversAssistantsList', route.value.assistantStaffId)}} </p>\\n            </td>\\n            <td> <button mat-icon-button type=\\\"button\\\">\\n                <mat-icon class=\\\"red-300-fg\\\" (click)=\\\"removeRoute(route,i)\\\">delete</mat-icon>\\n              </button>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"px-24 py-16\\\">\\n      <button (click)=\\\"onAction(true)\\\" mat-raised-button type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n        {{'cancel' | translate}}</button>\\n      <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\" (click)=\\\"onAction()\\\">\\n        {{(updateRouteId ? 'update' : 'submit') | translate}}\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vcm91dGluZy9hZGQtdHJhbnNwb3J0LXNjaGVkdWxlcy9hZGQtdHJhbnNwb3J0LXNjaGVkdWxlcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, Validators, FormControl, FormBuilder, FormArray, NgForm } from '@angular/forms';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { TimeValidator } from 'app/shared/custom-timepicker/custom-timepicker.validators';\nimport { RoutingService } from 'app/service/Transport/routing.service';\nimport { SearchTransportRoutesView } from '../model/search-transport-routes-view';\nimport { AppSettings } from 'app/app.constants';\nimport { ScheduleService } from 'app/service/Transport/schedule.service';\nimport { ClassTimetableService } from 'app/service/class-schedules/class-time-table.service';\nimport { StaffCommonService } from 'app/service/staff/staffCommon.service';\nimport { TransportScheduleView } from '../model/transport-schedule-view';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { RouteConfig } from 'app/url.config';\nimport { TransportScheduleRoutesUpdateView } from '../model/transport-schedule-routes-update-view';\n\n@Component({\n  selector: 'app-add-transport-schedules',\n  templateUrl: './add-transport-schedules.component.html',\n  styleUrls: ['./add-transport-schedules.component.scss'],\n  providers: [RoutingService, ScheduleService, ClassTimetableService, StaffCommonService]\n})\nexport class AddTransportSchedulesComponent extends CommonComponent implements OnInit {\n  @ViewChild('form') form: NgForm;\n  @ViewChild('scheduleform') scheduleform;\n  currentComponent = 'AddTransportSchedulesComponent';\n  rows: any = [];\n  routeTypeList: any[] = [];\n  routesList: any[] = [];\n  driversList: any[] = [];\n  vehiclesList: any[] = [];\n  driversAssistantsList: any[] = [];\n  tableName = 'Routes Covered in this schedule';\n  validate = true;\n  scheduleForm: FormGroup;\n  routeListForm: FormGroup;\n  routeSelectionForm: FormGroup;\n  schoolBoardsList: any = [];\n  classes: any = [];\n  activeColumn: any = '';\n  sortDirection: any = '';\n  staffList: any = [];\n  isOnEdit = false;\n  teachersData: any = [];\n  selectedSchoolBoardId: any;\n  schoolHasBoard = false;\n  padding = false;\n  updateRouteId: any;\n  firstClick = true;\n  filterViewModel: SearchTransportRoutesView;\n  transportSchedule: TransportScheduleView;\n  isShowRoutesForm = false;\n  @ViewChild('transportTemplate') transportTemplate;\n  constructor(private routingService: RoutingService, private _formBuilder: FormBuilder, private classTimetableService: ClassTimetableService,\n    private staffCommonService: StaffCommonService, private scheduleService: ScheduleService, public dialogRef: MatDialog,\n    public commonService: CommonService, private router: Router, private route: ActivatedRoute, public snackBar: MatSnackBar) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.setScheduleForm();\n    this.getRouteTypes();\n    this.getStaff();\n    this.getStaff(true);\n    this.getVehicles();\n    this.initializeFilterView();\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.updateRouteId = params.id;\n        // this.isShowRoutesForm = true;\n        this.getTransportScheduleDetails();\n      }\n      else {\n        this.focus();\n      }\n    });\n  }\n\n  focus(): void {\n    if (document.getElementById('focusField')) {\n      document.getElementById('focusField').focus();\n    }\n  }\n  getTransportScheduleDetails(): void {\n    this.scheduleService.transportSchedulesDetails(this.updateRouteId)\n      .subscribe(res => {\n        this.setTransportScheduleDetails(res.transportSchedulesDataView);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n  setTransportScheduleDetails(response): void {\n    this.scheduleForm.patchValue(response);\n    response.transportScheduleRoutesDataView.forEach((element, i) => {\n      (this.routeListForm.controls['routesList'] as FormArray).push(this.setRouteListArray(element));\n    });\n    this.getRoutes();\n    this.focus();\n  }\n  getRoutes(): void {\n    const id = this.routeTypeList.find(e => {\n      return e.code === this.scheduleForm.value.inboundOrOutbound;\n    }).id;\n    this.scheduleService.fetchTransportRoutes(id)\n      .subscribe(res => this.setRoutes(res));\n  }\n  setRoutes(response): void {\n    if (response) {\n      this.routesList = response.transportScheduleDetailsView;\n    }\n    this.routeListForm.value.routesList.map((e, i) => {\n      this.actionOptions(true, i, true);\n    });\n  }\n  getStaff(assistant = false): void {\n    let code;\n    if (assistant) {\n      code = AppSettings.DRIVER_ASSISTANT_STAFF_CODE;\n    } else {\n      code = AppSettings.DRIVER_STAFF_CODE;\n    }\n    this.staffCommonService.fetchStaffs(code)\n      .subscribe(res => this.setStaffData(res, assistant));\n  }\n  getVehicles(): void {\n    this.scheduleService.fetchVehicle()\n      .subscribe(res => this.setVehiclesData(res));\n  }\n  setVehiclesData(response): void {\n    this.vehiclesList = response.commonViewModel;\n  }\n  setStaffData(response, assistant): void {\n    if (assistant) {\n      this.driversAssistantsList = response;\n    } else {\n      this.driversList = response;\n    }\n  }\n  initializeFilterView(): void {\n    this.filterViewModel = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n      routeName: [],\n      routeNumber: [],\n      routeTypeId: [],\n      routeDescription: [],\n    };\n  }\n  setRouteListArray(route): any {\n    return this._formBuilder.group({\n      id: [route.id],\n      routeNumber: [route.routeNumber, [Validators.required]],\n      transportRouteId: [route.transportRouteId, [Validators.required]],\n      routeDescription: [route.routeDescription, [Validators.required]],\n      vehicleId: [route.vehicleId, [Validators.required]],\n      driverStaffId: [route.driverStaffId, [Validators.required]],\n      assistantStaffId: [route.assistantStaffId, [Validators.required]]\n    });\n  }\n  onTypeChange($event): void {\n    this.routeListForm.setControl('routesList', this._formBuilder.array([]));\n    this.routesList = [];\n    this.getRoutes();\n    this.resetAllDropDowns();\n  }\n  onRouteChange($event): void {\n    const route = this.routesList.find(e => {\n      return e.id === $event.value;\n    });\n    this.routeSelectionForm.patchValue({ routeNumber: route.routeNumber, routeDescription: route.routeDescription });\n  }\n  getRouteTypes(): void {\n    this.routingService.routeTypes()\n      .subscribe(res => this.routeTypeList = res);\n  }\n  removeRoute(route, i): void {\n    this.actionOptions(false, route);\n    (this.routeListForm.controls['routesList'] as FormArray).removeAt(i);\n  }\n  setScheduleForm(): void {\n    this.scheduleForm = new FormGroup({\n      name: new FormControl(null, [Validators.required, Validators.maxLength(45)]),\n      inboundOrOutbound: new FormControl(null, [Validators.required]),\n      startTime: new FormControl(null, [TimeValidator.validateTimeRequired]),\n      endTime: new FormControl(null, [TimeValidator.validateOnlyTimeRequired])\n    });\n    this.routeSelectionForm = new FormGroup({\n      routeNumber: new FormControl(null),\n      routeDescription: new FormControl(null),\n      transportRouteId: new FormControl(null),\n      vehicleId: new FormControl(null),\n      driverStaffId: new FormControl(null),\n      assistantStaffId: new FormControl(null)\n    });\n    this.routeListForm = new FormGroup({\n      routesList: this._formBuilder.array([])\n    });\n  }\n  onSelectRoute(): void {\n    this.showValidations();\n    this.setRoutesValidators();\n    if (this.routeSelectionForm.valid && this.scheduleForm.valid) {\n      (this.routeListForm.controls['routesList'] as FormArray).push(this.setRouteListArray(this.routeSelectionForm.value));\n      this.actionOptions();\n      setTimeout(() => this.form.resetForm(), 0);\n    }\n  }\n  actionOptions(disable = true, routeOnIndex = null, onEdit = false): void {\n    let route;\n    if (disable) {\n      route = !onEdit ? this.routeSelectionForm.value : this.routeListForm.value.routesList[routeOnIndex];\n    } else {\n      route = routeOnIndex.value;\n    }\n    this.vehiclesList.find(e => {\n      return e.id === route.vehicleId;\n    }).disable = disable;\n    this.driversList.find(e => {\n      return e.id === route.driverStaffId;\n    }).disable = disable;\n    if (this.driversAssistantsList && this.driversAssistantsList.length) {\n      this.driversAssistantsList.find(e => {\n        return e.id === route.assistantStaffId;\n      }).disable = disable;\n    }\n    this.routesList.find(e => {\n      return e.id === route.transportRouteId;\n    }).disable = disable;\n  }\n  addRoutes(): void {\n\n  }\n  getLabelById(arrayName, value): string {\n    if (value === '' || value === 0) {\n      return '';\n    }\n    let x;\n    return (x = this[arrayName] && this[arrayName].find(element => element.id === value)) ? (arrayName === 'routesList' ? x.routeName : x.name) : '';\n  }\n  onAction(cancel = false): void {\n    if (!cancel) {\n      this.setRoutesValidators();\n      if (!this.scheduleForm.valid) {\n        this.showValidations();\n        return;\n      }\n      if (this.updateRouteId) {\n        this.transportSchedule = this.scheduleForm.value;\n        this.setEndTime();\n        this.transportSchedule['transportScheduleRoutesUpdateView'] = [];\n        this.routeListForm.value.routesList.forEach(element => {\n          if (!element.id) {\n            element.id = 0;\n          }\n          this.transportSchedule['transportScheduleRoutesUpdateView'].push(element);\n        });\n        this.transportSchedule['id'] = this.updateRouteId;\n        this.scheduleService.updateSchedule(this.transportSchedule).subscribe(res => this.onPageAction(res), err => this.errorResponse(err));\n      } else {\n        this.transportSchedule = this.scheduleForm.value;\n        this.setEndTime();\n        this.transportSchedule.transportScheduleRoutesView = this.routeListForm.value.routesList;\n        this.scheduleService.createSchedule(this.transportSchedule)\n          .subscribe(res => this.onPageAction(res), err => this.errorResponse(err));\n      }\n    } else {\n      this.clearRouteValidators();\n      this.redirectPage();\n    }\n  }\n  onPageAction(response): void {\n    this.updateRouteId = null;\n    this.redirectPage();\n    this.openSnackBar(response.messages.ResultMessage);\n  }\n  redirectPage(): void {\n    this.router.navigate([RouteConfig._Transport_Schedule]);\n  }\n  resetAllDropDowns(): void {\n    this.vehiclesList.map(e => {\n      e.disable = false;\n    });\n    this.driversList.map(e => {\n      e.disable = false;\n    });\n    this.driversAssistantsList.map(e => {\n      e.disable = false;\n    });\n    this.routesList.map(e => {\n      e.disable = true;\n    });\n  }\n  showValidations(): void {\n    this.scheduleform.submitted = true;\n    this.scheduleForm.controls.startTime.markAsDirty();\n    this.scheduleForm.controls.startTime.updateValueAndValidity();\n  }\n  setRoutesValidators(): void {\n    this.routeSelectionForm.controls.transportRouteId.setValidators([Validators.required]);\n    this.routeSelectionForm.controls.transportRouteId.updateValueAndValidity();\n\n    this.routeSelectionForm.controls.vehicleId.setValidators([Validators.required]);\n    this.routeSelectionForm.controls.vehicleId.updateValueAndValidity();\n\n    this.routeSelectionForm.controls.driverStaffId.setValidators([Validators.required]);\n    this.routeSelectionForm.controls.driverStaffId.updateValueAndValidity();\n\n    this.routeSelectionForm.controls.assistantStaffId.setValidators([Validators.required]);\n    this.routeSelectionForm.controls.assistantStaffId.updateValueAndValidity();\n  }\n  clearRouteValidators(): void {\n    this.routeSelectionForm.controls.transportRouteId.clearValidators();\n    this.routeSelectionForm.controls.transportRouteId.updateValueAndValidity();\n\n    this.routeSelectionForm.controls.vehicleId.clearValidators();\n    this.routeSelectionForm.controls.vehicleId.updateValueAndValidity();\n\n    this.routeSelectionForm.controls.driverStaffId.clearValidators();\n    this.routeSelectionForm.controls.driverStaffId.updateValueAndValidity();\n\n    this.routeSelectionForm.controls.assistantStaffId.clearValidators();\n    this.routeSelectionForm.controls.assistantStaffId.updateValueAndValidity();\n  }\n  setEndTime(): void {\n    if (this.scheduleForm.value.endTime) {\n      let endTime = this.scheduleForm.value.endTime.trim();\n      endTime = endTime.replace(/^([:]*)/g, '');\n      this.transportSchedule.endTime = endTime;\n    }\n  }\n  onClickForm(): void {\n    if (this.firstClick) {\n      this.firstClick = false;\n      this.setRoutes(false);\n    }\n  }\n}\n","import {Directive, Input, OnChanges, OnInit, SimpleChanges, Output, EventEmitter} from '@angular/core';\nimport {GoogleMapsAPIWrapper} from '@agm/core';\n\n// You can use any other interface for origin and destination, but it must contain latlng data\nexport interface ILatLng {\n  latitude: number;\n  longitude: number;\n}\n\n// the will keep typescript from throwing errors w.r.t the google object\ndeclare var google: any;\n\n@Directive({\n  selector: '[appDirectionsMap]'\n})\nexport class DirectionsMapDirective implements OnInit, OnChanges {\n  @Input() markers: any[] = [];\n  @Output() getDirections: EventEmitter<any> = new EventEmitter<any>();\n\n  // We'll keep a single google maps directions renderer instance so we get to reuse it.\n  // using a new renderer instance every time will leave the previous one still active and visible on the page\n  private directionsRenderer: any;\n  showDirection = true;\n  // We inject AGM's google maps api wrapper that handles the communication with the Google Maps Javascript\n  constructor(private gmapsApi: GoogleMapsAPIWrapper) {}\n\n  drawDirectionsRoute(): void {\n      this.gmapsApi.getNativeMap().then(map => {\n        if (!this.directionsRenderer) {\n          this.directionsRenderer = new google.maps.DirectionsRenderer({suppressMarkers: true, preserveViewport: true});\n        }\n        const directionsRenderer = this.directionsRenderer;\n        if (this.showDirection) {\n            const directionsService = new google.maps.DirectionsService; \n            directionsRenderer.setMap(map);\n            directionsService.route({\n                origin: this.getFormatedValues(this.markers[0]),\n                destination: this.getFormatedValues(this.markers[this.markers.length - 1]),\n                waypoints: this.getwayPoints(),\n                travelMode: 'DRIVING',\n                transitOptions: { modes: ['BUS'] },\n                unitSystem: google.maps.UnitSystem.METRIC \n            }, (response, status) => {\n                if (response){\n                  this.getDirections.emit(response);\n                }\n                if (status === 'OK') {\n                    directionsRenderer.setDirections(response);\n                } else {\n                    // console.log('Directions request failed due to ' + status);\n                }\n            });\n        }\n\n      });\n  }\n  getFormatedValues(point): any{\n      return {\n        lat: point.latitude,\n        lng: point.longitude\n      };\n  }\n  getwayPoints(): any {\n    const wayPoints = [];\n    if (this.markers.length > 2) {\n      for (let i = 1; i < this.markers.length - 1; i++) {\n        wayPoints.push({\n          location: { lat: this.markers[i].latitude, lng: this.markers[i].longitude },\n          stopover: true\n        });\n      }\n      return wayPoints;\n    } else {\n      return [];\n    }\n  }\n  ngOnInit(): void{\n    if (this.directionsRenderer !== undefined) { \n        this.directionsRenderer.setDirections({routes: []});\n        return;\n    }\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n      if (changes.markers.currentValue && changes.markers.currentValue.length > 1){\n        this.drawDirectionsRoute();\n      }else{\n        if (this.directionsRenderer !== undefined) { \n            this.directionsRenderer.setDirections({routes: []});\n            return;\n        }\n      }\n  }\n}\n","module.exports = \"<div class=\\\"content px-sm-40 py-sm-20\\\">\\n  <div class=\\\"mat-elevation-z2 simple-table-container radius-t-20 mb-20\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"p-20\\\">\\n      <div fxlayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxFlex=\\\"100\\\">\\n        <div class=\\\"h3 secondary-text\\\" translate>STUDENT INFORMATION</div>\\n      </div>\\n      <button mat-raised-button color=\\\"primary\\\" class=\\\"text-uppercase\\\" translate (click)=\\\"onCancel()\\\">{{'Back' | translate}}</button>\\n      <button mat-button (click)=\\\"getHelpText('Student Transport')\\\">\\n        <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n      </button>\\n    </div>\\n    <mat-divider></mat-divider>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"ml-24 py-20\\\">\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"50\\\">\\n        <div class=\\\"font-size-18 primary-900-fg-custom mb-16\\\">{{getFormatedName(studentInfo?.studentDetails)}}</div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <div class=\\\"w-140 py-4 primary-300-fg\\\" translate>mobilenumber</div> : <div class=\\\"ml-24\\\">\\n            {{studentInfo?.studentDetails?.mobileTel ? studentInfo?.studentDetails?.mobileTel : \\\"-\\\"}}</div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <div class=\\\"w-140 py-4 primary-300-fg\\\" translate>email</div> : <div class=\\\"ml-24\\\">\\n            {{studentInfo?.studentDetails?.email1 ? studentInfo?.studentDetails?.email1 : \\\"-\\\"}}</div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <div class=\\\"w-140 py-4 primary-300-fg\\\" translate>Class</div> : <div class=\\\"ml-24\\\">\\n            {{studentInfo?.className ? studentInfo?.className : \\\"-\\\"}}</div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <div class=\\\"w-140 py-4 primary-300-fg\\\" translate>status</div> : <div class=\\\"ml-24\\\">\\n            {{ studentInfo?.statusName ? studentInfo?.statusName  : \\\"-\\\"}}</div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <div class=\\\"w-140 py-4 primary-300-fg\\\" translate>dateofbirth</div> : <div class=\\\"ml-24\\\">\\n            {{ studentInfo?.studentDetails.dateOfBirth ? getFormattedDateBySchoolDateFormat(studentInfo.studentDetails.dateOfBirth)  : \\\"-\\\"}}</div>\\n        </div>\\n      </div>\\n\\n\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"50\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <div class=\\\"w-140 py-4 primary-300-fg\\\" translate>admissionNumber</div> : <div class=\\\"ml-24\\\">\\n            {{studentInfo?.admissionNumber ? studentInfo?.admissionNumber : \\\"-\\\"}}</div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <div class=\\\"w-140 py-4 primary-300-fg\\\" translate>Father Name</div> : <div class=\\\"ml-24\\\">\\n            {{studentInfo?.fatherDetails ? getFormatedName(studentInfo?.fatherDetails) : \\\"-\\\"}}</div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <div class=\\\"w-140 py-4 primary-300-fg\\\" translate>Mother Name</div> : <div class=\\\"ml-24\\\">\\n            {{studentInfo?.motherDetails ? getFormatedName(studentInfo?.motherDetails) : \\\"-\\\"}}</div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <div class=\\\"w-140 py-4 primary-300-fg\\\" translate>Guardian Name</div> : <div class=\\\"ml-24\\\">\\n            {{studentInfo?.guardianDetails ? getFormatedName(studentInfo?.guardianDetails) : \\\"-\\\"}}</div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"mat-elevation-z2 simple-table-container radius-t-20 my-20\\\">\\n    <form [formGroup]=\\\"studentTransport\\\" #manualForm=\\\"ngForm\\\" class=\\\"p-24\\\">\\n      <div fxLayout=\\\"row\\\" class=\\\"pt-12\\\">\\n        <div fxLayout=\\\"column\\\" fxFlex=\\\"50\\\" class=\\\"pr-20\\\">\\n          <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label #picUpLocationLabel translate>Requested Pick-up Location</mat-label>\\n            <input #picUpLocation formControlName=\\\"requestedPickupAddress\\\" matInput\\n              (blur)=\\\"trimTextBoxSpaces('studentTransport','requestedPickupAddress')\\\">\\n            <mat-error>\\n              <app-validation [labelName]='picUpLocationLabel.innerText'\\n                [validationControl]=\\\"studentTransport.controls.requestedPickupAddress\\\" [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"column\\\" fxFlex=\\\"50\\\">\\n          <mat-form-field appearance=\\\"outline\\\">\\n            <mat-label  #dropOffLocationLabel translate>Requested Drop-off Location</mat-label>\\n            <input  #dropOffLocation formControlName=\\\"requestedDropoffAddress\\\" matInput\\n              (blur)=\\\"trimTextBoxSpaces('studentTransport','requestedDropoffAddress')\\\">\\n            <mat-error>\\n              <app-validation [labelName]='dropOffLocationLabel.innerText'\\n                [validationControl]=\\\"studentTransport.controls.requestedDropoffAddress\\\" [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n\\n\\n  <div class=\\\"mat-elevation-z2 simple-table-container radius-t-20 \\\">\\n    <div fxLayout=\\\"row\\\" class=\\\"p-20\\\" fxLayoutAlign=\\\"space-between center\\\">\\n        <div class=\\\"h3 secondary-text\\\">\\n          <strong translate>Route & Schedule Assignment</strong>\\n        </div> \\n      <div fxLayout=\\\"row\\\" *ngIf=\\\"getTotalDistance()\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\"  *ngIf=\\\"getTotalDuration()\\\">\\n          <mat-icon class=\\\"mr-4 grey-600-fg\\\">access_time</mat-icon>\\n          <div fxLayout=\\\"column\\\">\\n            <span class=\\\"grey-500-fg\\\">Estimated Travel Time</span>\\n            <span>{{getTotalDuration()}}</span>\\n          </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"px-24\\\" *ngIf=\\\"getTotalDistance()\\\">\\n            <mat-icon class=\\\"mr-4 grey-600-fg\\\">place</mat-icon>\\n            <div fxLayout=\\\"column\\\">\\n              <span class=\\\"grey-500-fg\\\">Estimated Total Distance</span>\\n              <span>{{getTotalDistance()}} km</span>\\n            </div>\\n          </div>\\n      </div>\\n    </div>\\n \\n    <mat-divider></mat-divider>\\n      <!-- <div class=\\\"h5 p-12 secondary-text\\\">\\n        <strong>Pick-up Location</strong>\\n      </div>  -->\\n      <div class=\\\"pt-24 px-24 font-size-18\\\" translate>Pick-up Location</div>\\n    <form [formGroup]=\\\"pickupPoint\\\" #pickUpForm=\\\"ngForm\\\" fxLayout=\\\"row\\\">\\n      <div fxLayout=\\\"column\\\" class=\\\"px-24\\\" fxLayout.gt-sm=\\\"row\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\">\\n          <mat-label translate #scheduleId>Schedule</mat-label>\\n          <mat-select (selectionChange)=\\\"clearFormData('schedule');getTransportRoutes($event.value)\\\"\\n            formControlName=\\\"transportScheduleId\\\">\\n            <mat-option [style.display]=\\\"schedule.code == 'I' ? 'block': 'none'\\\" *ngFor=\\\"let schedule of schedulesList\\\"\\n              [value]=\\\"schedule.id\\\">\\n              {{schedule.name}}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='scheduleId.innerText'\\n              [validationControl]=\\\"pickupPoint.controls.transportScheduleId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\" class=\\\"px-sm-20\\\">\\n          <mat-label translate #routeId>Route</mat-label>\\n          <mat-select (selectionChange)=\\\"clearFormData('route')\\\" formControlName=\\\"transportRouteId\\\">\\n            <mat-option *ngFor=\\\"let inbound of inBoundroutesList\\\" [value]=\\\"inbound.transportRouteId\\\">\\n              {{inbound.name}}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='routeId.innerText' [validationControl]=\\\"pickupPoint.controls.transportRouteId\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\">\\n          <mat-label #pickUp translate>Pick-up Location</mat-label>\\n          <input readonly matInput formControlName=\\\"pointAddres\\\"\\n            (blur)=\\\"trimTextBoxSpaces('pickupPoint','pointAddres')\\\">\\n          <mat-error>\\n            <app-validation [labelName]='pickUp.innerText' [validationControl]=\\\"pickupPoint.controls.pointAddres\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <div fxLayout=\\\"column\\\" class=\\\"pt-12 px-20\\\">\\n          <button class mat-raised-button (click)=\\\"onSelectRoute()\\\" type=\\\"submit\\\" color=\\\"accent\\\">\\n            {{'Select' | translate}}\\n          </button>       \\n        </div>\\n        <div fxLayout=\\\"column\\\" *ngIf=\\\"pickupPoint.value.transportScheduleId\\\" fxLayout=\\\"column\\\" class=\\\"pt-12\\\">\\n          <button class mat-raised-button (click)=\\\"onClear()\\\" type=\\\"reset\\\" color=\\\"primary\\\">\\n            {{'Clear' | translate}}\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n    <div class=\\\"px-24 font-size-18\\\" translate>Drop-off Location</div>\\n    <form [formGroup]=\\\"dropoffPoint\\\" #dropOffForm=\\\"ngForm\\\" fxLayout=\\\"row\\\">\\n      <div fxLayout=\\\"column\\\" class=\\\"px-24\\\" fxLayout.gt-sm=\\\"row\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\">\\n          <mat-label translate #scheduleOutId>Schedule</mat-label>\\n          <mat-select (selectionChange)=\\\"clearFormData('schedule',false);getTransportRoutes($event.value, false)\\\"\\n            formControlName=\\\"transportScheduleId\\\">\\n            <mat-option [style.display]=\\\"schedule.code == 'O' ? 'block': 'none'\\\" *ngFor=\\\"let schedule of schedulesList\\\"\\n              [value]=\\\"schedule.id\\\">\\n              {{schedule.name}}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='scheduleOutId.innerText'\\n              [validationControl]=\\\"dropoffPoint.controls.transportScheduleId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n            <button *ngIf=\\\"0\\\" class mat-raised-button id=\\\"resetForm\\\" type=\\\"reset\\\" color=\\\"accent\\\">\\n              {{'reset' | translate}}\\n            </button>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\" class=\\\"px-sm-20\\\">\\n          <mat-label translate #transportRouteId>Route</mat-label>\\n          <mat-select (selectionChange)=\\\"clearFormData('route',false)\\\" formControlName=\\\"transportRouteId\\\">\\n            <mat-option *ngFor=\\\"let outbound of outBoundroutesList\\\" [value]=\\\"outbound.transportRouteId\\\">\\n              {{outbound.name}}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='transportRouteId.innerText'\\n              [validationControl]=\\\"dropoffPoint.controls.transportRouteId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\">\\n          <mat-label translate #dropOff>Drop-off Location</mat-label>\\n          <input readonly matInput formControlName=\\\"pointAddres\\\"\\n            (blur)=\\\"trimTextBoxSpaces('dropoffPoint','pointAddres')\\\">\\n          <mat-error>\\n            <app-validation [labelName]='dropOff.innerText' [validationControl]=\\\"dropoffPoint.controls.pointAddres\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <div fxLayout=\\\"column\\\" class=\\\"pt-12 px-20\\\">\\n          <button class mat-raised-button (click)=\\\"onSelectRoute(false)\\\" type=\\\"submit\\\" color=\\\"accent\\\">\\n            {{'Select' | translate}}\\n          </button>\\n        </div>\\n        <div *ngIf=\\\"dropoffPoint.value.transportScheduleId\\\" fxLayout=\\\"column\\\" class=\\\"pt-12\\\">\\n          <button class mat-raised-button (click)=\\\"onClear(false)\\\" type=\\\"reset\\\" color=\\\"primary\\\">\\n            {{'Clear' | translate}}\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n\\n\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-32 pr-32\\\">\\n    <button (click)=\\\"submitRoute(false)\\\" mat-raised-button type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">{{'cancel' | translate}}</button>\\n    <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\" (click)=\\\"submitRoute(true)\\\">\\n       {{(studentTransportAssignmentInfo ? 'update' : 'submit') | translate}}\\n    </button>\\n  </div>\\n</div>\\n<ng-template #popupMap>\\n  <app-view-common-route [inBound]=\\\"inBound\\\" [requestedPoint]=\\\"inBound ? requestedPoint.inBound : requestedPoint.outBound\\\" [selectedPoint]=\\\"inBound ? pickupPoint.value : dropoffPoint.value\\\" (onSelectLocation)=\\\"onSelectFromPopUp($event)\\\" [routePoints]=\\\"routePoints\\\">\\n  </app-view-common-route>\\n</ng-template>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vcm91dGluZy9tYW5hZ2Utc3R1ZGVudC10cmFuc3BvcnQvbWFuYWdlLXN0dWRlbnQtdHJhbnNwb3J0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, TemplateRef, NgZone, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { MatDialog, MatDialogRef, MatSnackBar } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\nimport { FormGroup, FormControl, Validators, NgForm } from '@angular/forms';\nimport { StudentTransportService } from 'app/service/student-transport/student-transport.service';\nimport { StudentTransportView } from '../model/student-transport-view';\nimport { StudentAdmissionService } from 'app/service/student-admissions-service/student-admission.service';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { AppSettings } from 'app/app.constants';\nimport { RouteConfig } from 'app/url.config';\nimport { MapsAPILoader } from '@agm/core';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { Location } from '@angular/common';\ndeclare var google: any;\n\n@Component({\n  selector: 'app-manage-student-transport',\n  templateUrl: './manage-student-transport.component.html',\n  styleUrls: ['./manage-student-transport.component.scss'],\n  providers: [StudentTransportService, StudentAdmissionService]\n})\nexport class ManageStudentTransportComponent extends CommonComponent implements OnInit {\n  @ViewChild('manualForm') manualForm: any;\n  @ViewChild('pickUpForm') pickUpForm: any;\n  @ViewChild('dropOffForm') dropOffForm: any;\n  @ViewChild('popupMap') popupMap: TemplateRef<any>;\n  @ViewChild('picUpLocation')\n  private picUpLocation: ElementRef;\n  @ViewChild('dropOffLocation')\n  private dropOffLocation: ElementRef;\n  schedulesList: any[] = [];\n  inBoundroutesList: any[] = [];\n  outBoundroutesList: any[] = [];\n  studentId: any;\n  studentInfo: any;\n  pickupPoint: FormGroup;\n  dropoffPoint: FormGroup;\n  studentTransport: FormGroup;\n  viewDialog: MatDialogRef<any>;\n  validate = true;\n  routePoints: any;\n  inBound = true;\n  studentTransportView: StudentTransportView;\n  studentTransportAssignmentInfo: any;\n  routePointsData = {\n    inBound: [],\n    outBound: []\n  };\n  requestedPoint = {\n    inBound: null,\n    outBound: null\n  };\n  studetRouteInfo = {\n    inBound: null,\n    outBound: null\n  };\n  constructor(private router: Router, private route: ActivatedRoute,\n    public dialog: MatDialog, public commonService: CommonService, private studentTransportService: StudentTransportService, public dialogRef: MatDialog,\n    private studentAdmissionService: StudentAdmissionService, public snackBar: MatSnackBar, private mapsAPILoader: MapsAPILoader, private ngZone: NgZone,\n    public changeDetector: ChangeDetectorRef, public location: Location) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.getSchedules();\n    this.studentTransport = new FormGroup({\n      assigneeId: new FormControl(null, [Validators.required]),\n      requestedPickupAddress: new FormControl(null, Validators.maxLength(180)),\n      requestedDropoffAddress: new FormControl(null, Validators.maxLength(180)),\n      pickupPointId: new FormControl(null),\n      dropoffPointId: new FormControl(null)\n    });\n    this.pickupPoint = new FormGroup({\n      transportScheduleId: new FormControl(null, [Validators.required]),\n      transportRouteId: new FormControl(null, [Validators.required]),\n      name: new FormControl(null),\n      latitude: new FormControl(null),\n      longitude: new FormControl(null),\n      position: new FormControl(null),\n      pointAddres: new FormControl(null),\n      id: new FormControl(null)\n    });\n\n    this.dropoffPoint = new FormGroup({\n      transportScheduleId: new FormControl(null, [Validators.required]),\n      transportRouteId: new FormControl(null, [Validators.required]),\n      name: new FormControl(null),\n      latitude: new FormControl(null),\n      longitude: new FormControl(null),\n      position: new FormControl(null),\n      pointAddres: new FormControl(null),\n      id: new FormControl(null)\n    });\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.studentId = params.id;\n        this.getStudentDetails(this.studentId);\n        this.getStudentTrasportAssignmentDetails(this.studentId);\n        this.studentTransport.controls.assigneeId.setValue(this.studentId);\n      }\n    });\n    this.studentTransport.controls.requestedPickupAddress.valueChanges.pipe(distinctUntilChanged()).subscribe(val => {\n      if (!val) {\n        this.requestedPoint.inBound = null;\n      }\n    });\n    this.studentTransport.controls.requestedDropoffAddress.valueChanges.pipe(distinctUntilChanged()).subscribe(val => {\n      if (!val) {\n        this.requestedPoint.outBound = null;\n      }\n    });\n    this.initializeMap();\n    this.initializeMap(true);\n  }\n  getStudentDetails(id): void {\n    this.studentAdmissionService.studentDetails(id)\n      .subscribe(res => {\n        this.setStudentDetails(res);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n  initializeMap(pickUp = false): void {\n    this.mapsAPILoader.load().then(() => {\n      const autocomplete = new google.maps.places.Autocomplete(pickUp ? this.picUpLocation.nativeElement : this.dropOffLocation.nativeElement, {\n        types: ['establishment']\n      });\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n          const place = autocomplete.getPlace();\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n          const currentMarker = {\n            latitude: place.geometry.location.lat(),\n            longitude: place.geometry.location.lng(),\n            label: '',\n            draggable: true,\n            name: place.name,\n            pointAddres: place.formatted_address.substring(0, 200),\n            latlng: {\n              lat: place.geometry.location.lat(),\n              lng: place.geometry.location.lng()\n            }\n          };\n          if (pickUp) {\n            this.requestedPoint.inBound = currentMarker;\n          } else {\n            this.requestedPoint.outBound = currentMarker;\n          }\n        });\n      });\n    });\n  }\n  setStudentDetails(res): void {\n    this.studentInfo = res.studentDetailsView;\n  }\n  getStudentTrasportAssignmentDetails(id): void {\n    this.studentTransportService.fetchTransportAssignment(id).subscribe(res => {\n      this.setStudentTransportDetails(res);\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  setStudentTransportDetails(res): void {\n    if (res.studentTransportDataView) {\n      this.studentTransportAssignmentInfo = res.studentTransportDataView;\n      this.studentTransport.patchValue(this.studentTransportAssignmentInfo);\n\n      if (this.studentTransportAssignmentInfo.pickupPoint) {\n        if (this.studentTransportAssignmentInfo.pickupPoint.id !== null && this.studentTransportAssignmentInfo.pickupPoint.id !== 0) {\n          this.studentTransport.controls.pickupPointId.patchValue(this.studentTransportAssignmentInfo.pickupPoint.id);\n          this.pickupPoint.patchValue(this.studentTransportAssignmentInfo.pickupPoint);\n          this.getTransportRoutes(this.pickupPoint.value.transportScheduleId);\n          this.onSelectRoute(true, true);\n        } else {\n          this.studentTransportAssignmentInfo.pickupPoint = null;\n        }\n      }\n\n      if (this.studentTransportAssignmentInfo.dropoffPoint) {\n        if (this.studentTransportAssignmentInfo.dropoffPoint.id !== null && this.studentTransportAssignmentInfo.dropoffPoint.id !== 0) {\n          this.studentTransport.controls.dropoffPointId.patchValue(this.studentTransportAssignmentInfo.dropoffPoint.id);\n          this.dropoffPoint.patchValue(this.studentTransportAssignmentInfo.dropoffPoint);\n          this.getTransportRoutes(this.dropoffPoint.value.transportScheduleId, false);\n          this.onSelectRoute(false, true);\n        } else {\n          this.studentTransportAssignmentInfo.dropoffPoint = null;\n        }\n      }\n\n    }\n  }\n  getSchedules(): void {\n    this.studentTransportService.fetchTransportSchedules()\n      .subscribe(res => this.setTransportSchedules(res));\n  }\n  setTransportSchedules(res): void {\n    this.schedulesList = res.typeListViewModels;\n  }\n  getTransportRoutes(id, inBound = true): void {\n    this.studentTransportService.fetchTransportRoutes(id)\n      .subscribe(res => this.setTransportRoutes(res, inBound));\n  }\n  setTransportRoutes(res, inBound = true): void {\n    if (inBound) {\n      this.inBoundroutesList = res.transportScheduleRoutesView;\n    } else {\n      this.outBoundroutesList = res.transportScheduleRoutesView;\n    }\n  }\n  clearFormData(formField, inBound = true): void {\n    this[inBound ? 'pickupPoint' : 'dropoffPoint'].patchValue({\n      transportRouteId: (formField === 'schedule') ? null : this[inBound ? 'pickupPoint' : 'dropoffPoint'].value.transportRouteId,\n      name: null,\n      latitude: null,\n      longitude: null,\n      position: null,\n      pointAddres: null,\n      id: null\n    });\n    if (inBound) {\n      this.studentTransport.patchValue({ pickupPointId: null });\n      this.routePointsData.inBound = [];\n    } else {\n      this.studentTransport.patchValue({ dropoffPointId: null });\n      this.routePointsData.outBound = [];\n    }\n  }\n  setValidatorsOnSelect(selectedForm): void {\n    this[selectedForm].controls.transportRouteId.setValidators(Validators.required);\n    this[selectedForm].controls.transportRouteId.updateValueAndValidity();\n\n    this[selectedForm].controls.transportScheduleId.setValidators(Validators.required);\n    this[selectedForm].controls.transportScheduleId.updateValueAndValidity();\n\n    this[selectedForm].controls.pointAddres.clearValidators();\n    this[selectedForm].controls.pointAddres.updateValueAndValidity();\n  }\n  onSelectRoute(inBound = true, onUpdate = false): void {\n    if (inBound) {\n      this.setValidatorsOnSelect('pickupPoint');\n    } else {\n      this.setValidatorsOnSelect('dropoffPoint');\n    }\n    if (inBound && this.pickupPoint.valid || !inBound && this.dropoffPoint.valid) {\n      if (((inBound && !this.pickupPoint.value.latitude) || (!inBound && !this.dropoffPoint.value.latitude) || onUpdate)) {\n        this.studentTransportService.fetchRoutePoints(inBound ? this.pickupPoint.value.transportRouteId : this.dropoffPoint.value.transportRouteId)\n          .subscribe(res => this.setRoutePoints(res, inBound, onUpdate));\n      } else {\n        this.inBound = inBound;\n        this.routePoints = this.routePointsData[inBound ? 'inBound' : 'outBound'];\n        this.viewDialog = this.dialogRef.open(this.popupMap,\n          {\n            disableClose: true,\n            width: '100%',\n            panelClass: 'rootmap-popup'\n          }\n        );\n      }\n    }\n  }\n  setRoutePoints(res, inBound, onUpdate): void {\n    this.inBound = inBound;\n    if (res.routePointsView) {\n      res.routePointsView.forEach(element => {\n        element.transportRouteId = inBound ? this.pickupPoint.value.transportRouteId : this.dropoffPoint.value.transportRouteId;\n      });\n      this.routePoints = res.routePointsView;\n      if (this.studentTransportAssignmentInfo) {\n        this.routePointsData[inBound ? 'inBound' : 'outBound'] = res.routePointsView.sort((a, b) => a.position - b.position);\n      }\n      if (!onUpdate) {\n        this.viewDialog = this.dialogRef.open(this.popupMap,\n          {\n            disableClose: true,\n            width: '100%',\n            panelClass: 'rootmap-popup'\n          }\n        );\n      } else {\n        this.calculateFinalDistanceDuration(inBound);\n      }\n    }\n  }\n  calculateFinalDistanceDuration(inBound): void {\n    const directionsService = new google.maps.DirectionsService;\n    directionsService.route({\n      origin: this.setMarkerData(inBound ? this.routePointsData['inBound'][+this.pickupPoint.value.position - 1] : this.routePointsData['outBound'][0]),\n      // tslint:disable-next-line: max-line-length\n      destination: this.setMarkerData(!inBound ? this.routePointsData['outBound'][+this.dropoffPoint.value.position - 1] : this.routePointsData['inBound'][this.routePointsData['inBound'].length - 1]),\n      waypoints: this.getwayPoints(inBound, +this[inBound ? 'pickupPoint' : 'dropoffPoint'].value.position - 1),\n      travelMode: 'DRIVING',\n      transitOptions: { modes: ['BUS'] },\n      unitSystem: google.maps.UnitSystem.METRIC\n    }, (response, status) => {\n      if (inBound) {\n        this.studetRouteInfo.inBound = {\n          distance: response.routes[0].legs[0].distance.value,\n          duration: response.routes[0].legs[0].duration.value\n        };\n      } else {\n        this.studetRouteInfo.outBound = {\n          distance: response.routes[0].legs[0].distance.value,\n          duration: response.routes[0].legs[0].duration.value\n        };\n      }\n      this.getTotalDuration();\n      this.changeDetector.detectChanges();\n    });\n  }\n  getTotalDistance(): any {\n    if (this.studetRouteInfo.inBound || this.studetRouteInfo.outBound) {\n      const dist = ((this.studetRouteInfo.inBound ? this.studetRouteInfo.inBound.distance : 0) +\n        (this.studetRouteInfo.outBound ? this.studetRouteInfo.outBound.distance : 0));\n      this.changeDetector.markForCheck();\n      return Math.round(dist / 1000);\n    }\n  }\n  getTotalDuration(): any {\n    if (this.studetRouteInfo.inBound || this.studetRouteInfo.outBound) {\n      const dur = ((this.studetRouteInfo.inBound ? this.studetRouteInfo.inBound.duration : 0) +\n        (this.studetRouteInfo.outBound ? this.studetRouteInfo.outBound.duration : 0)) / 60;\n      this.changeDetector.markForCheck();\n      return (Math.floor(dur / 60) ? Math.floor(dur / 60) + 'hr ' : '') + Math.round(dur % 60) + 'min ';\n    }\n  }\n  getwayPoints(inBound, index): any {\n    const wayPoints = [];\n    if (this.routePointsData[inBound ? 'inBound' : 'outBound'].length > 2) {\n      for (let i = (inBound ? index + 1 : 1); i < (inBound ? this.routePointsData[inBound ? 'inBound' : 'outBound'].length - 1 : index); i++) {\n        wayPoints.push({\n          location: { lat: this.routePointsData[inBound ? 'inBound' : 'outBound'][i].latitude, lng: this.routePointsData[inBound ? 'inBound' : 'outBound'][i].longitude },\n          stopover: false\n        });\n      }\n      return wayPoints;\n    } else {\n      return [];\n    }\n  }\n  setMarkerData(point): any {\n    return { lat: point.latitude, lng: point.longitude };\n  }\n  onSelectFromPopUp(event): void {\n    this.viewDialog.close();\n    if (!event) {\n      return;\n    }\n    if (event.selectedRouteMarker) {\n      if (event.inBound) {\n        this.studentTransport.controls.pickupPointId.patchValue(event.selectedPoint.id);\n        this.routePointsData.inBound = event.updatedPoints;\n      } else {\n        this.studentTransport.controls.dropoffPointId.patchValue(event.selectedPoint.id);\n        this.routePointsData.outBound = event.updatedPoints;\n      }\n    } else {\n      if (event.inBound) {\n        this.routePointsData.inBound = event.updatedPoints;\n        this.studentTransport.controls.pickupPointId.patchValue(null);\n      } else {\n        this.routePointsData.outBound = event.updatedPoints;\n        this.studentTransport.controls.dropoffPointId.patchValue(null);\n      }\n    }\n    const selectedLocation = {\n      latitude: event.selectedPoint.latitude,\n      longitude: event.selectedPoint.longitude,\n      name: event.selectedPoint.name ? event.selectedPoint.name.substring(0, 45) : null,\n      pointAddres: event.selectedPoint.pointAddres ? event.selectedPoint.pointAddres.substring(0, 200) : null,\n      position: event.selectedPoint.position,\n      id: event.selectedPoint.id\n    };\n    if (event.inBound) {\n      this.pickupPoint.patchValue(selectedLocation);\n    } else {\n      this.dropoffPoint.patchValue(selectedLocation);\n    }\n    this.calculateFinalDistanceDuration(event.inBound);\n  }\n  getFormatedName(data): void {\n    if (data) {\n      if (data.middleName) {\n        const fullName: any = data.firstName + ' ' + data.middleName + ' ' + data.lastName;\n        return fullName.replace(/  +/g, ' ').trim();\n      }\n      else {\n        const fullName: any = data.firstName + ' ' + data.lastName;\n        return fullName.replace(/  +/g, ' ').trim();\n      }\n    }\n  }\n  setUpFormValidations(formName): void {\n    if (this[formName].value.transportScheduleId || this[formName].value.transportRouteId) {\n      this[formName].controls.pointAddres.setValidators([Validators.required]);\n      this[formName].controls.pointAddres.updateValueAndValidity();\n    } else {\n      this[formName].controls.transportRouteId.clearValidators();\n      this[formName].controls.transportRouteId.updateValueAndValidity();\n\n      this[formName].controls.transportScheduleId.clearValidators();\n      this[formName].controls.transportScheduleId.updateValueAndValidity();\n\n      this[formName].controls.pointAddres.clearValidators();\n      this[formName].controls.pointAddres.updateValueAndValidity();\n    }\n  }\n  setAPiDataForRoutePoints(inBound = true): void {\n    if (this.routePointsData[inBound ? 'inBound' : 'outBound'].length) {\n      this.routePointsData[inBound ? 'inBound' : 'outBound'] = this.routePointsData[inBound ? 'inBound' : 'outBound'].filter(e => {\n        if (e.id) {\n          return e.position = e.position;\n        }\n      });\n    }\n  }\n  submitRoute(onSubmit = false): void {\n    if (onSubmit) {\n      this.setUpFormValidations('pickupPoint');\n      this.setUpFormValidations('dropoffPoint');\n      if (this.studentTransport.valid && this.pickupPoint.valid && this.dropoffPoint.valid) {\n        if (!(this.pickupPoint.value.latitude || this.dropoffPoint.value.latitude)) {\n          this.openSnackBar(AppSettings.ATLEAST_ONE_LOCATION_ERROR, true);\n          return;\n        }\n        if (this.studentTransport.value.requestedPickupAddress) {\n          // tslint:disable-next-line: max-line-length\n          this.studentTransport.controls.requestedPickupAddress.setValue(this.requestedPoint.inBound ? this.requestedPoint.inBound.name : this.studentTransport.value.requestedPickupAddress);\n        }\n\n        if\n          (this.studentTransport.value.requestedDropoffAddress) {\n          // tslint:disable-next-line: max-line-length\n          this.studentTransport.controls.requestedDropoffAddress.setValue(this.requestedPoint.outBound ? this.requestedPoint.outBound.name : this.studentTransport.value.requestedDropoffAddress);\n        }\n        this.studentTransportView = this.studentTransport.value;\n        this.setAPiDataForRoutePoints();\n        this.setAPiDataForRoutePoints(false);\n        this.studentTransportView.routePointDetails = this.routePointsData.inBound.concat(this.routePointsData.outBound);\n        if (!this.studentTransportView.routePointDetails.length) {\n          this.studentTransportView.routePointDetails = null;\n        }\n        // tslint:disable-next-line: max-line-length\n        this.studentTransportView.transportScheduleInboundRouteId = this.pickupPoint.value.transportRouteId ? this.inBoundroutesList.find(e => e.transportRouteId === this.pickupPoint.value.transportRouteId).id : null;\n\n        // tslint:disable-next-line: max-line-length\n        this.studentTransportView.transportScheduleOutboundRoutesId = this.dropoffPoint.value.transportRouteId ? this.outBoundroutesList.find(e => e.transportRouteId === this.dropoffPoint.value.transportRouteId).id : null;\n        this.setPointsDataForApi('pickupPoint');\n        this.setPointsDataForApi('dropoffPoint');\n        if (this.studentTransportAssignmentInfo) {\n          this.studentTransportView['id'] = this.studentTransportAssignmentInfo.id;\n          this.studentTransportService.updateTransportAssignments(this.studentTransportView)\n            .subscribe(res => this.afterSubmit(res), err => this.errorResponse(err));\n        } else {\n          this.studentTransportService.createTransportAssignments(this.studentTransportView).subscribe(res => this.afterSubmit(res), err => this.errorResponse(err));\n        }\n      } else {\n        this.manualForm.submitted = true;\n        this.pickUpForm.submitted = true;\n        this.dropOffForm.submitted = true;\n      }\n    } else {\n      this.onCancel();\n    }\n  }\n  setPointsDataForApi(key): void {\n    if (this.studentTransport.value[key === 'pickupPoint' ? 'pickupPointId' : 'dropoffPointId']) {\n      this.studentTransportView[key] = null;\n    } else if (this[key].value.transportRouteId) {\n      this.studentTransportView[key] = this[key].value;\n      this.studentTransportView[key].position = this.studentTransportView[key].position;\n    } else {\n      this.studentTransportView[key] = null;\n    }\n  }\n  onCancel(): void {\n    this.back();\n  }\n  afterSubmit(res): void {\n    this.onCancel();\n    this.openSnackBar(res.messages.ResultMessage);\n  }\n  onClear(pickUp = true): void {\n    if (pickUp) {\n      this.pickupPoint.reset();\n      this.studentTransport.controls.pickupPointId.reset();\n      this.routePointsData.inBound = [];\n      this.pickUpForm.submitted = false;\n      this.studetRouteInfo.inBound = null;\n    } else {\n      this.dropoffPoint.reset();\n      this.studentTransport.controls.dropoffPointId.reset();\n      this.routePointsData.outBound = [];\n      this.dropOffForm.submitted = false;\n      this.studetRouteInfo.outBound = null;\n    }\n  }\n}\n","module.exports = \"<div class=\\\"p-32 content allTable-grid\\\">\\n  <div class=\\\"text-uppercase font-size-18 pl-12\\\" translate>new route</div>\\n  <div class=\\\"simple-table-container radius-t-20 mat-elevation-z3\\\" id=\\\"route-form\\\">\\n    <form [formGroup]=\\\"routeForm\\\" #class=\\\"ngForm\\\" fxLayout=\\\"column\\\">\\n      <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24 pb-12 px-20\\\">\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\">\\n          <mat-label translate #routeName>Route Name</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'routeForm','name')\\\"  matInput required formControlName=\\\"name\\\" (blur)=\\\"trimTextBoxSpaces('routeForm','name')\\\">\\n          <mat-error>\\n            <app-validation [labelName]=\\\"routeName.innerText\\\" [validationControl]=\\\"routeForm.controls.name\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\"\\n          class=\\\"px-sm-20\\\">\\n          <mat-label translate #type>Type</mat-label>\\n          <mat-select placeholder=\\\"Select Type\\\" formControlName=\\\"routeTypeId\\\" required>\\n            <mat-option *ngFor=\\\"let type of routeTypeList\\\" [value]=\\\"type.id\\\">\\n              {{ type.name }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"type.innerText\\\" [validationControl]=\\\"routeForm.controls.routeTypeId\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\">\\n          <mat-label translate #routeNumber>Route Number</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'routeForm','routeNumber')\\\" matInput required formControlName=\\\"routeNumber\\\" (blur)=\\\"trimTextBoxSpaces('routeForm','routeNumber')\\\">\\n          <mat-error>\\n            <app-validation [labelName]=\\\"routeNumber.innerText\\\" [validationControl]=\\\"routeForm.controls.routeNumber\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\" class=\\\"pl-sm-20\\\">\\n          <mat-label translate #description>Route Description</mat-label>\\n          <textarea matInput required formControlName=\\\"routeDescription\\\"\\n          (blur)=\\\"trimTextBoxSpaces('routeForm','routeDescription')\\\"></textarea>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"description.innerText\\\"\\n              [validationControl]=\\\"routeForm.controls.routeDescription\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div> \\n      <mat-divider></mat-divider>\\n      <div fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxLayoutAlign.gt-sm=\\\"space-between center\\\" class=\\\"mt-32 px-sm-12\\\">\\n        <mat-form-field fxlayout=\\\"column\\\" fxFlex=\\\"40\\\">               \\n          <input (keyup)=\\\"preventSpaceForArray($event,searchControl)\\\" id=\\\"inputId\\\" matInput placeholder=\\\"{{'Search Place' | translate}}\\\" [formControl]=\\\"searchControl\\\" #search>\\n        </mat-form-field>\\n        <h3 class=\\\"px-16 break-word\\\" translate>Use the map to click on and build the route</h3>\\n        <div fxLayout=\\\"row\\\" *ngIf=\\\"duration && distance\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"w-140\\\">\\n            <mat-icon class=\\\"mr-4 grey-600-fg\\\">access_time</mat-icon>\\n            <div fxLayout=\\\"column\\\">\\n              <span class=\\\"grey-500-fg\\\" translate>Travel Time</span>\\n              <span>{{duration}}</span>\\n            </div>\\n          </div>\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"px-24\\\" class=\\\"w-140\\\">\\n              <mat-icon class=\\\"mr-4 grey-600-fg\\\">place</mat-icon>\\n              <div fxLayout=\\\"column\\\">\\n                <span class=\\\"grey-500-fg\\\" translate>Total Distance</span>\\n                <span>{{distance}} km</span>\\n              </div>\\n            </div>\\n        </div>\\n      </div>\\n      <agm-map appDirectionsMap (getDirections)=\\\"getDirections($event)\\\" [streetViewControl]=\\\"false\\\" [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" class=\\\"h-600 mat-elevation-z3 mx-20 radius-10\\\"  [showDirection]=\\\"true\\\" (mapClick)=\\\"mapClicked($event)\\\"  travelMode=\\\"DRIVING\\\"\\n       [clickableIcons]=\\\"false\\\" [streetViewControl]=\\\"false\\\" (dblclick)=\\\"mapDoubleClicked($event)\\\" maxZoom=\\\"16\\\"\\n       [disableDefaultUI]=\\\"true\\\" [markers]=\\\"markers\\\"\\n       [zoom]=\\\"markers?.length ? 10 : 8\\\"  [fitBounds]=\\\"(markers?.length || currentLocation) ? true : false\\\"> \\n       \\n      <agm-marker *ngFor=\\\"let m of markers;let i = index;\\\" [agmFitBounds]=\\\"true\\\"\\n      [latitude]=\\\"m.latitude\\\" [markerDraggable]=\\\"m.draggable\\\"\\n      [longitude]=\\\"m.longitude\\\" [label]=\\\"(m.label)?.toString()\\\" [agmFitBounds]=\\\"true\\\" (dragEnd)=\\\"markerDragEnd(i, $event)\\\" [animation]=\\\"'DROP'\\\">\\n      <agm-info-window [isOpen]=\\\"m.openInfoWindow\\\">\\n      {{m.pointAddress}} \\n      </agm-info-window>\\n      </agm-marker>\\n      \\n      <agm-marker [agmFitBounds]=\\\"markers?.length ? false : true\\\" *ngIf=\\\"currentLocation\\\"\\n      [latitude]=\\\"currentLocation?.latitude\\\" [markerDraggable]=\\\"currentLocation?.draggable\\\"\\n      [longitude]=\\\"currentLocation?.longitude\\\" [label]=\\\"(currentLocation?.label)?.toString()\\\" [agmFitBounds]=\\\"true\\\" [iconUrl]=\\\"'assets/images/custom-icons/currentlocation.png'\\\" > \\n      </agm-marker>\\n\\n      <agm-marker *ngIf=\\\"selectedPoint?.latitude\\\" [latitude]=\\\"selectedPoint?.latitude\\\"\\n      [longitude]=\\\"selectedPoint?.longitude\\\" [label]=\\\"(selectedPoint?.label)?.toString()\\\" [agmFitBounds]=\\\"true\\\" [markerDraggable]=\\\"true\\\" (dragEnd)=\\\"markerAction($event)\\\">\\n        <agm-info-window [isOpen]=\\\"true\\\" (infoWindowClose)=\\\"selectedPoint = null\\\">\\n          <div class=\\\"font-size-14 pr-4\\\"> {{selectedPoint?.pointAddress}} </div> \\n          <div fxLayoutAlign=\\\"end center\\\" class=\\\"py-12 min-width-400\\\"> \\n              <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"50\\\">\\n                  <mat-label translate #infoWindo>Add At Stop</mat-label>\\n                  <input [formControl]=\\\"infoWindow\\\" type=\\\"number\\\" (keyup)=\\\"preventSpaceForArray($event,infoWindow)\\\"  matInput required >               \\n                </mat-form-field>\\n                <mat-error class=\\\"p-absolute\\\">\\n                  <app-validation labelName=\\\"Add at Stop\\\"\\n                                  [validationControl]=\\\"infoWindow\\\" [doValidate]=\\\"true\\\">\\n                  </app-validation>\\n                </mat-error>\\n                <button (click)=\\\"addSelectedPoint(selectedPoint)\\\" class=\\\"ml-8 mb-16\\\" mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" [disabled]=\\\"infoWindow.invalid\\\">\\n                  {{'Add Stop' | translate}}\\n                </button>      \\n          </div>\\n         \\n        </agm-info-window>\\n      </agm-marker>\\n\\n    </agm-map>\\n      <div class=\\\"scrolltable mb-12\\\">\\n        <mat-table #table *ngIf=\\\"markers?.length\\\" formArrayName=\\\"routePointsView\\\" class=\\\"tableBar mt-28\\\" mat-table\\n          [dataSource]=\\\"rows | async\\\" matSort matSortDisable cdkDropList\\n          [cdkDropListData]=\\\"rows | async\\\"\\n          (cdkDropListDropped)=\\\"dropTable($event)\\\" [cdkDropConnectedTo]=\\\"[table]\\\">\\n          <ng-container *ngFor=\\\"let column of columns; let i = index\\\" matColumnDef=\\\"{{column.field}}\\\">\\n            <mat-header-cell *matHeaderCellDef>\\n              <div class=\\\"headerTitle w-100-p\\\"  mat-sort-header disableClear\\n                [disabled]=\\\"!column.sort || (rows && rows.length == 0)\\\">\\n                <strong class=\\\"mb-0 title mat-subheading-2\\\" translate >{{column.header}}</strong>\\n              </div>\\n            </mat-header-cell>\\n            <mat-cell cdkDragHandle *matCellDef=\\\"let row; let i = index\\\" [row]=\\\"row\\\" [column]=\\\"column\\\" [formGroupName]=\\\"i\\\">     \\n                <mat-form-field *ngIf=\\\"column.field == 'name';else elseBlock\\\" class=\\\"pb-28 pt-12\\\">       \\n                  <mat-label translate #name>Name</mat-label>\\n                  <input required (blur)=\\\"trimTextBoxSpacesForTable(i)\\\"  (keyup)=\\\"preventSpaceForArray($event, routeForm.get('routePointsView')?.controls[i]?.controls?.name)\\\" matInput #name formControlName=\\\"name\\\">\\n                  <mat-error>\\n                    <app-validation labelName=\\\"name\\\"\\n                      [validationControl]=\\\"routeForm.get('routePointsView')?.controls[i]?.controls?.name\\\"\\n                      [doValidate]=\\\"validate\\\">\\n                    </app-validation>\\n                  </mat-error>\\n                </mat-form-field>\\n              <ng-template #elseBlock>\\n                <button mat-icon-button type=\\\"button\\\" *ngIf=\\\"column.field == 'delete';else fieldValue\\\">\\n                  <mat-icon (click)=\\\"deleteAction(i)\\\" class=\\\"red-300-fg\\\">delete</mat-icon>\\n                </button>\\n              </ng-template>\\n              <ng-template #fieldValue>\\n                <p>\\n                  {{row[column.field]}}\\n                </p>\\n              </ng-template>\\n            </mat-cell>\\n          </ng-container>\\n          <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"grey-header\\\"></mat-header-row>\\n          <mat-row class=\\\"cursor-drag\\\" cdkDragHandle cdkDrag [cdkDragData]=\\\"row\\\" *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n          </mat-row>\\n        </mat-table>\\n      </div>\\n      <div *ngIf=\\\"!markers.length\\\" class=\\\"errorMsg\\\">\\n        <h2 class=\\\"red-text text-center mb-0 font-weight-bold p-24\\\" translate>Add locations to create a route</h2>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"p-20\\\">\\n        <button (click)=\\\"onAction()\\\" mat-raised-button type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">{{'cancel' | translate}}</button>\\n        <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\" (click)=\\\"onAction(true)\\\">\\n        {{(updateRouteId ? 'update' : 'submit') | translate}}\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"","module.exports = \"agm-map ::ng-deep .agm-map-container-inner {\\n  border-radius: 10px; }\\n\\nagm-map ::ng-deep .agm-info-window-content {\\n  padding-right: 20px;\\n  display: table; }\\n\\nagm-map ::ng-deep .gm-ui-hover-effect {\\n  top: 0 !important;\\n  right: 0 !important; }\\n\\nagm-map ::ng-deep .gm-style-cc {\\n  display: none; }\\n\\nagm-map ::ng-deep .min-width-400 {\\n  min-width: 400px; }\\n\\nagm-map ::ng-deep .p-absolute span {\\n  position: absolute;\\n  bottom: 18px;\\n  right: 64px;\\n  left: 50px;\\n  text-align: center;\\n  min-width: 300px; }\\n\\n.grey-header .mat-header-cell {\\n  background-color: #f5f5f5;\\n  color: rgba(0, 0, 0, 0.87); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vcm91dGluZy9uZXctcm91dGUvbmV3LXJvdXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBR00sbUJBQW1CLEVBQUE7O0FBSHpCO0VBT00sbUJBQW1CO0VBQ25CLGNBQWMsRUFBQTs7QUFScEI7RUFZTSxpQkFBaUI7RUFDakIsbUJBQW1CLEVBQUE7O0FBYnpCO0VBaUJNLGFBQWEsRUFBQTs7QUFqQm5CO0VBb0JFLGdCQUFnQixFQUFBOztBQXBCbEI7RUF3QlEsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixXQUFXO0VBQ1gsVUFBVTtFQUNWLGtCQUFrQjtFQUNsQixnQkFBZ0IsRUFBQTs7QUFLeEI7RUFDRSx5QkFBMEI7RUFDMUIsMEJBQTBCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3RyYW5zcG9ydGF0aW9uL3JvdXRpbmcvbmV3LXJvdXRlL25ldy1yb3V0ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImFnbS1tYXAge1xuICA6Om5nLWRlZXAge1xuICAgIC5hZ20tbWFwLWNvbnRhaW5lci1pbm5lciB7XG4gICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIH1cblxuICAgIC5hZ20taW5mby13aW5kb3ctY29udGVudCB7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xuICAgICAgZGlzcGxheTogdGFibGU7XG4gICAgfVxuXG4gICAgLmdtLXVpLWhvdmVyLWVmZmVjdCB7XG4gICAgICB0b3A6IDAgIWltcG9ydGFudDtcbiAgICAgIHJpZ2h0OiAwICFpbXBvcnRhbnQ7XG4gICAgfVxuXG4gICAgLmdtLXN0eWxlLWNjIHtcbiAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuLm1pbi13aWR0aC00MDB7XG4gIG1pbi13aWR0aDogNDAwcHg7XG59XG4gICAgLnAtYWJzb2x1dGUge1xuICAgICAgc3BhbiB7XG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgYm90dG9tOiAxOHB4O1xuICAgICAgICByaWdodDogNjRweDtcbiAgICAgICAgbGVmdDogNTBweDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBtaW4td2lkdGg6IDMwMHB4O1xuICAgICAgfVxuICAgIH1cbiAgfVxufVxuLmdyZXktaGVhZGVyIC5tYXQtaGVhZGVyLWNlbGx7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjUgO1xuICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjg3KSA7XG59Il19 */\"","import { Component, OnInit, ElementRef, ViewChild, NgZone, ChangeDetectorRef } from '@angular/core';\nimport { FormControl, FormGroup, Validators, FormBuilder, FormArray } from '@angular/forms';\nimport { MapsAPILoader, AgmMap } from '@agm/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { AppSettings, Pattern } from 'app/app.constants';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\nimport { RoutingService } from 'app/service/Transport/routing.service';\nimport { TransportRoutesView } from '../model/transport-routes-view';\nimport { RoutePointsView } from '../model/route-points-view';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RouteConfig } from 'app/url.config';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem, CdkDragHandle } from '@angular/cdk/drag-drop';\n\ndeclare var google: any;\n\n// just an interface for type safety.\ninterface Marker {\n  name: string;\n  latitude: number;\n  longitude: number;\n  label?: number;\n  draggable: boolean;\n  pointAddress: string;\n  latlng?: { lat?: number, lng?: number };\n  id?: number;\n}\n\n\n@Component({\n  selector: 'app-new-route',\n  templateUrl: './new-route.component.html',\n  styleUrls: ['./new-route.component.scss'],\n  providers: [RoutingService]\n})\nexport class NewRouteComponent extends CommonComponent implements OnInit {\n  latitude = 20.5937;\n  longitude = 78.9629;\n  public searchControl: FormControl;\n  @ViewChild('search')\n  public searchElementRef: ElementRef;\n  @ViewChild(AgmMap)\n  public agmMap: AgmMap;\n  @ViewChild('table') table;\n  public renderOptions = {\n    suppressMarkers: true,\n  };\n  distance: any;\n  duration: any;\n  markers: Marker[] = [];\n  rows = Promise.resolve([]);\n  routeForm: FormGroup;\n  validate = true;\n  routeTypeList: any[] = [];\n  columns = [\n    { field: 'label', header: 'Stop No.', sort: false },\n    { field: 'name', header: 'Name', sort: false },\n    { field: 'latitude', header: 'Latitute', sort: false },\n    { field: 'longitude', header: 'Longitude', sort: false },\n    { field: 'pointAddress', header: 'Position Address', sort: false },\n    { field: 'delete', header: 'Action', sort: false }\n  ];\n  displayedColumns = ['label', 'name', 'latitude', 'longitude', 'pointAddress', 'delete'];\n  transportRouteData: TransportRoutesView;\n  pointsView: RoutePointsView;\n  updateRouteId: any;\n  id: number;\n  isSingleClick: Boolean = true;\n  currentLocation: any;\n  selectedPoint: any;\n  public infoWindow: FormControl;\n  lastmarkerForWayPoint: any;\n  constructor(private mapsAPILoader: MapsAPILoader, private ngZone: NgZone, private changedetector: ChangeDetectorRef,\n    public dialogRef: MatDialog, public commonService: CommonService, private _formBuilder: FormBuilder, private routingService: RoutingService,\n    private route: ActivatedRoute, private router: Router, public snackBar: MatSnackBar) {\n    super();\n\n    this.setCurrentLoation();\n  }\n  setCurrentLoation(): void {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.currentLocation = {\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        };\n        this.changedetector.detectChanges();\n      });\n    }\n  }\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.updateRouteId = params.id;\n        this.getRouteInfo(params.id);\n      }\n    });\n    this.getRouteTypes();\n    this.routeForm = this._formBuilder.group({\n      routePointsView: this._formBuilder.array([]),\n      name: [null, [Validators.required, Validators.maxLength(45)]],\n      routeNumber: [null, [Validators.required, Validators.pattern(Pattern.ALPHANUMERIC), Validators.maxLength(5)]],\n      routeTypeId: [null, Validators.required],\n      routeDescription: [null, [Validators.required, Validators.maxLength(135)]],\n    });\n    this.searchControl = new FormControl();\n    this.infoWindow = new FormControl(null, [Validators.required, Validators.min(1), Validators.max(99)]);\n    this.mapsAPILoader.load().then(() => {\n      const input = document.getElementById('inputId');\n      google.maps.event.addDomListener(input, 'keydown', function (event) {\n        if (event.keyCode === 13) {\n          event.preventDefault();\n        }\n      });\n      const autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {\n        types: ['establishment']\n      });\n\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n          const place = autocomplete.getPlace();\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n          const currentMarker = {\n            latitude: place.geometry.location.lat(),\n            longitude: place.geometry.location.lng(),\n            draggable: true,\n            name: place.name,\n            pointAddress: place.formatted_address.substring(0, 200),\n            latlng: {\n              lat: place.geometry.location.lat(),\n              lng: place.geometry.location.lng()\n            }\n          };\n          this.infoWindow.setValue(this.markers.length + 1);\n          this.selectedPoint = currentMarker;\n          this.searchControl.setValue(null);\n        });\n      });\n    });\n  }\n  addRoute(currentMarker): void {\n    this.addRouteMarker(currentMarker);\n  }\n  updateRoute(currentMarker, index): void {\n    this.updateRouteMarker(currentMarker, index);\n  }\n  setPositionsForUpdate(currentMarker, index): any {\n    const start = this.setLatLngForDirections(this.markers);\n    start[index] = currentMarker.latlng;\n    start.pop();\n    const end = this.setLatLngForDirections(this.markers);\n    end[index] = currentMarker.latlng;\n    end.shift();\n    return { start: start, end: end };\n  }\n  addRouteMarker(currentMarker): void {\n    this.ngZone.run(() => {\n      if (this.isMarkerAlreadyExists(currentMarker) === -1) {\n        (this.routeForm.controls['routePointsView'] as FormArray).push(this._formBuilder.group({\n          name: [currentMarker.name, [Validators.required, Validators.maxLength(45)]]\n        }));\n        this.lastmarkerForWayPoint = {\n          index : this.infoWindow.value > this.markers.length ? this.markers.length + 1 : this.infoWindow.value,\n          point: this.selectedPoint\n        };\n        if (this.infoWindow.value > this.markers.length) {\n          this.markers.push(currentMarker);\n        } else {\n          this.markers.splice(this.infoWindow.value - 1, 0, currentMarker);\n          const pointsData = this.routeForm.value.routePointsView;\n          pointsData.splice(this.infoWindow.value - 1, 0, { name: currentMarker.name });\n          pointsData.pop();\n          (this.routeForm.controls['routePointsView'] as FormArray).setValue(pointsData);\n        }\n        this.selectedPoint = null;\n        this.setMarkerAndRows();\n      } else {\n        this.openSnackBar(AppSettings.LOCATION_ALREADY_EXISTS, true);\n      }\n    });\n  }\n  isMarkerAlreadyExists(currentMarker): any {\n    return this.markers.findIndex(e =>\n      (e.latitude === currentMarker.latitude && e.longitude === currentMarker.longitude));\n  }\n  updateRouteMarker(currentMarker, index): void {\n    this.ngZone.run(() => {\n      Object.assign(this.lastmarkerForWayPoint = {}, {\n        point: this.markers[index],\n        index: index,\n        formValues: this.routeForm.value.routePointsView,\n        isDrag: true\n      });\n\n      (this.routeForm.controls['routePointsView'] as FormArray).controls[index].setValue({ name: currentMarker.name });\n      currentMarker.label = index + 1;\n      this.markers[index] = currentMarker;\n      this.setMarkerAndRows();\n    });\n  }\n  setPositionsForAdd(marker): any {\n    let start;\n    let end;\n    if (this.markers.length > 0) {\n      start = this.setLatLngForDirections(this.markers);\n      end = this.setLatLngForDirections(this.markers);\n      end.push(marker.latlng);\n      end.shift();\n    }\n    return { start: start, end: end };\n  }\n  setLatLngForDirections(markers): any {\n    const latLng = [];\n    for (const marker of markers) {\n      latLng.push(marker.latlng);\n    }\n    return latLng;\n  }\n  getRouteInfo(id): void {\n    this.routingService.transportRoutesDetails(id)\n      .subscribe(res => this.setRouteDetails(res.transportRouteDetailsView));\n  }\n  setRouteDetails(res): void {\n    this.routeForm.patchValue(res);\n    this.markers = [];\n    const locationArray = (this.routeForm.controls['routePointsView'] as FormArray);\n    res.routePointsDetailsView.sort((a, b) => a.position - b.position);\n    for (const marker of res.routePointsDetailsView) {\n      locationArray.push(this._formBuilder.group({\n        name: [marker.name, [Validators.required, Validators.maxLength(45)]]\n      }));\n      this.ngZone.run(() => {\n        this.markers.push({\n          name: marker.name,\n          latitude: marker.latitude,\n          longitude: marker.longitude,\n          label: marker.position,\n          draggable: true,\n          pointAddress: marker.pointAddress,\n          latlng: { lat: marker.latitude, lng: marker.longitude },\n          id: marker.id\n        });\n      });\n    }\n    this.rows = Promise.resolve(this.markers);\n    this.mapsAPILoader.load().then(() => {\n      if (this.markers.length > 1) {\n         this.setMarkerAndRows();\n      }\n    });\n    this.changedetector.detectChanges();\n  }\n  getRouteTypes(): void {\n    this.routingService.routeTypes()\n      .subscribe(res => this.routeTypeList = res);\n  }\n  onAction(submit = false): void {\n    if (submit) {\n      if (this.routeForm.valid && this.routeForm.value.routePointsView.length > 1) {\n        const positionArray = this.routeForm.value.routePointsView;\n        for (let i = 0; i < this.routeForm.value.routePointsView.length; i++) {\n          this.markers[i].name = positionArray[i].name;\n        }\n        const pointsView = [];\n        for (const marker of this.markers) {\n          pointsView.push(this.setUpApiData(marker));\n        }\n        if (this.updateRouteId) {\n          this.transportRouteData = {\n            id: this.updateRouteId\n          };\n          for (const key in this.routeForm.value) {\n            if (this.routeForm.value.hasOwnProperty(key) && key !== 'routePointsView') {\n              this.transportRouteData[key] = this.routeForm.value[key];\n            }\n          }\n          this.transportRouteData.routePoints = [];\n          this.transportRouteData.routePoints = pointsView;\n          this.routingService.updateTransportRoute(this.transportRouteData).subscribe(res => this.addUpdateRoute(res), err => this.errorResponse(err));\n        } else {\n          this.transportRouteData = this.routeForm.value;\n          this.transportRouteData.routePointsView = [];\n          this.transportRouteData.routePointsView = pointsView;\n          this.routingService.addVehicleRoutes(this.transportRouteData).subscribe(res => this.addUpdateRoute(res), err => this.errorResponse(err));\n        }\n      } else if (this.routeForm.valid && this.routeForm.value.routePointsView.length < 2) {\n        this.openSnackBar(AppSettings.ATLEAST_TWO_ROUTES_ERROR, true);\n      } else {\n        if (this.routeForm.controls.routePointsView.valid) {\n          this.scrollIntoViewById('route-form');\n        }\n      }\n    } else {\n      this.onCancel();\n    }\n  }\n  onCancel(): void {\n    this.router.navigate([RouteConfig._Route_Database]);\n  }\n  setUpApiData(marker): any {\n    return {\n      name: marker.name, latitude: marker.latitude, longitude: marker.longitude, position: parseInt(marker.label, 0),\n      pointAddress: marker.pointAddress, id: marker.id ? marker.id : 0\n    };\n  }\n  addUpdateRoute(res): void {\n    this.onCancel();\n    this.openSnackBar(res.messages.ResultMessage);\n  }\n  markerAction($event, index = 0, clicked = true): void {\n    if (navigator.geolocation) {\n      const geocoder = new google.maps.Geocoder();\n      const latlng = new google.maps.LatLng($event.coords.lat, $event.coords.lng);\n      const request = { latLng: latlng };\n      geocoder.geocode(request, (results: any, status: any) => {\n        if (status === google.maps.GeocoderStatus.OK) {\n          const result = results[0];\n          if (result) {\n            const currentMaker = {\n              latitude: $event.coords.lat,\n              longitude: $event.coords.lng,\n              pointAddress: result.formatted_address.substring(0, 200),\n              draggable: true,\n              name: this.getAddressObject(result),\n              latlng: {\n                lat: $event.coords.lat,\n                lng: $event.coords.lng\n              }\n            };\n            if (!clicked) {\n              this.updateRoute(currentMaker, index);\n            } else {\n              this.infoWindow.setValue(this.markers.length + 1);\n              this.selectedPoint = currentMaker;\n            }\n            this.changedetector.detectChanges();\n          } else {\n            this.openSnackBar(AppSettings.ADDRESS_NOT_FOUND, true);\n          }\n        }\n      });\n    }\n  }\n  addSelectedPoint(currentMaker): void {\n    this.addRoute(currentMaker);\n  }\n  getAddressObject(response): any {\n    const ShouldBeComponent = {\n      premise: 'premise',\n      route: 'route',\n      sublocality_level_2: 'sublocality_level_2',\n      sublocality_level_1: 'sublocality_level_1'\n    };\n\n    const address = {\n      premise: '',\n      route: '',\n      sublocality_level_2: '',\n      sublocality_level_1: ''\n    };\n    response.address_components.forEach(component => {\n      for (const shouldBe in ShouldBeComponent) {\n        if (component.types.indexOf(ShouldBeComponent[shouldBe]) !== -1) {\n          address[shouldBe] = component.long_name ? component.long_name + ',' : '';\n        }\n      }\n    });\n    const data = (address.premise + '' + address.route + '' + address.sublocality_level_2 + '' + address.sublocality_level_1).replace(/,+/g, ',').replace(/,\\s*$/, '');\n    return data ? data.substring(0, 45) : response.formatted_address.substring(0, 45);\n  }\n  mapClicked($event: any): void {\n    this.isSingleClick = true;\n    setTimeout(() => {\n      if (this.isSingleClick) {\n        this.markerAction($event);\n      }\n    }, 300);\n  }\n  mapDoubleClicked($event: any): void {\n    this.isSingleClick = false;\n  }\n  markerDragEnd(i: number, $event: any): void {\n    this.markerAction($event, i, false);\n  }\n  deleteAction(index): void {\n    (<FormArray>this.routeForm.controls['routePointsView']).removeAt(index);\n    this.markers.splice(index, 1);\n    if (this.markers.length > 1) {\n      const positions = this.setPositionsForDelete();\n        this.setMarkerAndRows();\n    } else {\n      this.distance = 0;\n      this.duration = 0;\n      this.setMarkerAndRows();\n    }\n    this.changedetector.detectChanges();\n\n  }\n  setPositionsForDelete(): any {\n    const start = this.setLatLngForDirections(this.markers);\n    start.pop();\n    const end = this.setLatLngForDirections(this.markers);\n    end.shift();\n\n    return { start: start, end: end };\n  }\n  setMarkerAndRows(): void {\n    this.rows = Promise.resolve(this.markers);\n    const markerPoints = [];\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].label = i + 1;\n      markerPoints.push(this.markers[i]);\n    }\n    this.markers = markerPoints;\n    this.changedetector.detectChanges();\n  }\n  trimTextBoxSpacesForTable(i): void {\n    (this.routeForm.controls['routePointsView'] as FormArray).controls[i].setValue({ name: this.commonService.trimSpaces(this.routeForm.value.routePointsView[i].name) });\n  }\n  dropTable(event): void {\n    const prevIndex = this.markers.findIndex((d) => d === event.item.data);\n    if (prevIndex < 0 || event.currentIndex < 0) {\n      return;\n    }\n    const tempMarker = this.markers[prevIndex];\n    this.markers[prevIndex] = this.markers[event.currentIndex];\n    this.markers[event.currentIndex] = tempMarker;\n    const temp = this.routeForm.value.routePointsView[prevIndex].name;\n\n    (this.routeForm.controls['routePointsView'] as FormArray).controls[prevIndex].setValue({ name: this.routeForm.value.routePointsView[event.currentIndex].name });\n\n    (this.routeForm.controls['routePointsView'] as FormArray).controls[event.currentIndex].setValue({ name: temp });\n\n    this.table.renderRows();\n    this.markers.map((e, i) => e.label = i + 1);\n    if (this.markers.length > 1) {\n       this.setMarkerAndRows();\n    }\n  }\n  getDirections(res): void{\n    if (res.status === 'OK'){\n        this.distance = 0;\n        this.duration = 0;\n        const response = res.routes[0].legs;\n        for (let i = 0; i < response.length; i++) {\n          if (response[i].distance) {\n            this.distance += response[i].distance.value;\n          }\n          if (response[i].duration) {\n            this.duration += response[i].duration.value;\n          }\n        }\n        this.distance = Math.round(this.distance / 1000);\n        this.duration = this.duration / 60;\n        this.duration = (Math.floor(this.duration / 60) ? Math.floor(this.duration / 60) + 'hr ' : '') + Math.round(this.duration % 60) + 'min ';\n          this.changedetector.detectChanges();\n    }else{\n      if (this.lastmarkerForWayPoint && this.lastmarkerForWayPoint.isDrag){\n          if (this.lastmarkerForWayPoint.formValues){\n            (this.routeForm.controls['routePointsView'] as FormArray).setValue(this.lastmarkerForWayPoint.formValues);\n          }\n          this.markers[this.lastmarkerForWayPoint.index] = this.lastmarkerForWayPoint.point;\n          this.setMarkerAndRows();\n      } else{\n          this.markers.splice(this.lastmarkerForWayPoint.index - 1, 1);\n        const pointsData = this.routeForm.value.routePointsView;\n        pointsData.splice(this.lastmarkerForWayPoint.index - 1, 1);\n        (this.routeForm.controls['routePointsView'] as FormArray).removeAt(this.lastmarkerForWayPoint.index - 1);\n        (this.routeForm.controls['routePointsView'] as FormArray).setValue(pointsData);\n        this.setMarkerAndRows();\n      }\n      if (res.status === 'ZERO_RESULTS'){\n        if (!this.lastmarkerForWayPoint.isDrag){\n          this.selectedPoint = this.lastmarkerForWayPoint.point;\n          this.selectedPoint.label = '';\n          this.changedetector.detectChanges();\n        }\n      return this.openSnackBar(AppSettings.DISTANCE_NOT_FOUND_VIA_ROAD, true);\n      }else if (res.status === 'MAX_WAYPOINTS_EXCEEDED'){\n        this.selectedPoint = null;\n        return this.openSnackBar(AppSettings.MAX_WAY_POINTS_EXCEEDS, true);\n      } \n    }\n  }\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NewRouteComponent } from './new-route/new-route.component';\nimport { VehicleRouteDatabaseComponent } from './vehicle-route-database/vehicle-route-database.component';\nimport { ViewRouteComponent } from './view-route/view-route.component';\nimport { AddTransportSchedulesComponent } from './add-transport-schedules/add-transport-schedules.component';\nimport { TransportSchedulesComponent } from './transport-schedules/transport-schedules.component';\nimport { ManageStudentTransportComponent } from './manage-student-transport/manage-student-transport.component';\nimport { ViewTransportSchedulesComponent } from './view-transport-schedules/view-transport-schedules.component';\nimport { StudentBasicSearchComponent } from 'app/shared/student-basic-search/student-basic-search.component';\n\n\nconst routes: Routes = [\n  { path: 'vehicle-route-database/new-route', component: NewRouteComponent, data: {title: 'New Route'} },\n  { path: 'vehicle-route-database/edit-route/:id', component: NewRouteComponent, data: {title: 'Edit Route'} },\n  { path: 'vehicle-route-database', component: VehicleRouteDatabaseComponent, data: {title: 'Vehicle Route Database'} },\n  { path: 'vehicle-route-database/view-route/:id/:routeName', component: ViewRouteComponent, data: {title: 'View Route'} },\n  { path: 'transport-schedules/new-transport-schedule', component: AddTransportSchedulesComponent, data: {title: 'New Transport Schedule'} },\n  { path: 'transport-schedules/edit-transport-schedule/:id', component: AddTransportSchedulesComponent, data: {title: 'Edit Transport Schedule'} },\n  { path: 'transport-schedules', component: TransportSchedulesComponent, data: {title: 'Transport Schedules'} }, \n  { path: 'student-transport/manage-student-transport/:id', component: ManageStudentTransportComponent, data: {title: 'Manage Student Transport'} },\n  { path: 'transport-schedules/view-transport-schedule/:id', component: ViewTransportSchedulesComponent, data: {title: 'View Transport Schedule'} },\n  { path: 'student-transport', component: StudentBasicSearchComponent, data: {title: 'Student Transport'} },\n];\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RoutesRoutingModule { }\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RoutesRoutingModule } from './routes-routing.module';\nimport { MatcomponentsModule } from 'app/main/matcomponents.module';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedManagementModule } from 'app/shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from 'app/interceptors/token-interceptor';\nimport { NewRouteComponent } from './new-route/new-route.component';\nimport { VehicleRouteDatabaseComponent } from './vehicle-route-database/vehicle-route-database.component';\nimport { AgmCoreModule } from '@agm/core';\nimport { AgmDirectionModule } from 'agm-direction';\nimport { ViewRouteComponent } from './view-route/view-route.component';\nimport { TransportSchedulesComponent } from './transport-schedules/transport-schedules.component';\nimport { AddTransportSchedulesComponent } from './add-transport-schedules/add-transport-schedules.component';\nimport { ManageStudentTransportComponent } from './manage-student-transport/manage-student-transport.component';\nimport { ViewTransportSchedulesComponent } from './view-transport-schedules/view-transport-schedules.component';\nimport { ViewCommonRouteComponent } from './view-common-route/view-common-route.component';\nimport { DirectionsMapDirective } from './directions-map.directive';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\n\n@NgModule({\n  declarations: [NewRouteComponent,\n    VehicleRouteDatabaseComponent,\n    ViewRouteComponent, TransportSchedulesComponent, AddTransportSchedulesComponent, ManageStudentTransportComponent, ViewTransportSchedulesComponent, ViewCommonRouteComponent, DirectionsMapDirective],\n    entryComponents: [ViewCommonRouteComponent],\n  imports: [\n    CommonModule,\n    RoutesRoutingModule,\n    CommonModule,\n    MatcomponentsModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedManagementModule,\n    TranslateModule,\n    FuseSharedModule,\n    Ng2TelInputModule,\n    AgmDirectionModule,\n    DragDropModule, \n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyD5OFmlQeSKDj7YPHKwTHFzuit2sUY4UNA',\n      libraries: ['places']\n    }),\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n  ],\n  exports: [ViewRouteComponent],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class RoutesModule { }\n","module.exports = \"<app-table [settings]=\\\"tableSettings\\\" (getTableData)='tableData($event)'(openAddForm)=\\\"onAddFormClick()\\\" (rowBasedAction)='actions($event)'></app-table>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vcm91dGluZy90cmFuc3BvcnQtc2NoZWR1bGVzL3RyYW5zcG9ydC1zY2hlZHVsZXMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { Router } from '@angular/router';\nimport { ScheduleService } from 'app/service/Transport/schedule.service';\nimport { TransportScheduleFilterView } from '../model/search-transport-schedules-view';\nimport { AppSettings } from 'app/app.constants';\nimport { RouteConfig } from 'app/url.config';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-transport-schedules',\n  templateUrl: './transport-schedules.component.html',\n  styleUrls: ['./transport-schedules.component.scss'],\n  providers: [ScheduleService]\n\n})\nexport class TransportSchedulesComponent extends CommonComponent implements OnInit {\n  filterViewModel: TransportScheduleFilterView;\n  httpStatus: any;\n\n  // table variables\n  tableSettings: {};\n  rows: Array<any> = [];\n  pageCnt: number;\n  totalRowsCount: number;\n  custRowsPerPageOptions: Array<number> = [];\n  cols: any[];\n  currentComponent = 'TransportSchedulesComponent';\n\n  constructor(private router: Router, private scheduleService: ScheduleService, public snackBar: MatSnackBar) {\n    super();\n    this.initializeFilterView();\n    this.setColumnHeaders();\n    this.initializeTableSettings();\n  }\n\n  ngOnInit(): void {\n    this.httpStatus = require('http-status-codes');\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.filterViewModel = modelTableComponent;\n    }\n    this.getAllFilteredTransportSchedule();\n  }\n\n  initializeFilterView(): void {\n    this.filterViewModel = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n  }\n\n  setColumnHeaders(): void {\n    this.cols = [\n      { field: 'name', header: 'Schedule Name', sort: true },\n      { field: 'inboundOrOutbound', header: 'Type', sort: true },\n      { field: 'startTime', header: 'Start Time', sort: true },\n      { field: 'endTime', header: 'End Time', sort: true },\n      { field: 'actions', header: 'Actions', sort: false }\n    ];\n  }\n\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.filterViewModel,\n      tablename: 'Transportation Schedules',\n      componentName: this.currentComponent,\n    };\n  }\n\n  tableData(_event: TransportScheduleFilterView): void {\n    this.filterViewModel = _event;\n    this.getAllFilteredTransportSchedule();\n  }\n\n  getAllFilteredTransportSchedule(): void {\n    this.scheduleService.TransportSchedules(this.filterViewModel.sortBy, this.filterViewModel.scheduleName,\n      this.filterViewModel.routeTypeId, this.filterViewModel.startTime, this.filterViewModel.startTimeBegin,\n      this.filterViewModel.startTimeEnd, this.filterViewModel.endTimeBegin,\n      this.filterViewModel.endTimeEnd, this.filterViewModel.endTime, this.filterViewModel.sortOrder,\n      this.filterViewModel.pageNumber, this.filterViewModel.pageSize).\n      subscribe(res => {\n        this.bindTransportRoutesResult(res);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  bindTransportRoutesResult(data: any): void {\n    if (!data.transportSchedulesDataView) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n    } else {\n      data.transportSchedulesDataView.list.map(e => {\n        e.startTime = e.startTime ? e.startTime.substring(0, 5) : null;\n        e.endTime = e.endTime ? e.endTime.substring(0, 5) : null;\n      });\n      this.rows = data.transportSchedulesDataView.list;\n      this.totalRowsCount = data.transportSchedulesDataView.totalItems;\n      this.pageCnt = data.transportSchedulesDataView.totalPages;\n      this.rows.forEach(e => {\n        if (e.inboundOrOutbound === 'I') {\n          e.inboundOrOutbound = 'InBound';\n        }\n        else {\n          e.inboundOrOutbound = 'OutBound';\n        }\n        e.operations = [\n          {\n            name: AppSettings.EDIT_OPERATION,\n            icon: AppSettings.EDIT,\n            operationName: AppSettings.EDIT\n          }, {\n            name: AppSettings.VIEW_OPERATION,\n            icon: AppSettings.DETAILS_ICON,\n            operationName: AppSettings.VIEW\n          }\n        ];\n      });\n    }\n    if (data.transportSchedulesDataView) {\n      this.filterViewModel.pageNumber = data.transportSchedulesDataView.pageNumber;\n    }\n    this.tableSettings = {\n      model: this.filterViewModel,\n      rows: this.rows,\n      columns: this.cols,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      tablename: 'Transportation Schedules',\n      componentName: this.currentComponent,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      isPaginationRequired: true,\n      filtersList: data.filters,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: AppSettings.NEW\n        },\n        infoButton: {\n          required: true,\n          text: 'Schedules'\n        }\n      }\n    };\n  }\n\n  onAddFormClick(): void {\n    this.router.navigate([RouteConfig._Add_Transport_Schedule]);\n  }\n\n  actions(operationData): void {\n    if (operationData.operation === AppSettings.VIEW.toLowerCase()) {\n      this.router.navigate([RouteConfig._View_Transport_Schedule + operationData.clickedRow.id]);\n    } else {\n      this.router.navigate([RouteConfig._Edit_Transport_Schedule + operationData.clickedRow.id]);\n    }\n  }\n}\n","module.exports = \"<div class=\\\"px-sm-40 pt-sm-40\\\">\\n  <div class=\\\"py-8 px-20 font-size-18 text-uppercase\\\" translate>Vehicle Route Database</div>\\n  <div class=\\\"mat-elevation-z3 simple-table-container radius-t-20\\\">\\n    <form [formGroup]=\\\"routeTypeForm\\\">\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"100\\\">         \\n          <af-select class=\\\"pt-20 w-332\\\" [required]=\\\"true\\\" [options]=\\\"routeTypes\\\" placeholder=\\\"Route Type\\\"\\n            label=\\\"Route Type\\\" (selectionChange)=\\\"getTableDataDetails($event)\\\" formControlName=\\\"routeTypeId\\\"\\n            appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"  [value]=\\\"selectedItem\\\"></af-select>\\n        </div>\\n        <div class=\\\"pb-20\\\" fxLayout=\\\"row\\\">\\n          <button mat-raised-button color=\\\"accent\\\" type=\\\"button\\\" class=\\\" text-uppercase mr-12\\\"\\n            (click)=\\\"reDirect()\\\">{{'new route' | translate}}\\n          </button>\\n          <button (click)=\\\"getHelpText('Routes')\\\" mat-button type='button'>\\n            <mat-icon  class=\\\"grey-600-fg\\\">info</mat-icon>\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n<app-table *ngIf=\\\"routeTypeForm.valid\\\" [settings]=\\\"tableSettings\\\" (getTableData)='tableData($event)'\\n  (rowBasedAction)='actions($event)'></app-table>\\n\\n<app-custom-card *ngIf=\\\"!routeTypeForm.valid\\\" [title]=\\\"'List Of Vehicle Routes'\\\"\\n  [inputMessage]=\\\"'Please Select Route Type'\\\">\\n</app-custom-card>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vcm91dGluZy92ZWhpY2xlLXJvdXRlLWRhdGFiYXNlL3ZlaGljbGUtcm91dGUtZGF0YWJhc2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { RouteConfig } from 'app/url.config';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\nimport { RoutingService } from 'app/service/Transport/routing.service';\nimport { SearchTransportRoutesView } from '../model/search-transport-routes-view';\nimport { AppSettings } from 'app/app.constants';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\n@Component({\n  selector: 'app-vehicle-route-database',\n  templateUrl: './vehicle-route-database.component.html',\n  styleUrls: ['./vehicle-route-database.component.scss'],\n  providers: [RoutingService]\n})\nexport class VehicleRouteDatabaseComponent extends CommonComponent implements OnInit {\n  filterViewModel: SearchTransportRoutesView;\n  routeTypeForm: FormGroup;\n  routeTypes: any[];\n  httpStatus: any;\n\n  // table variables\n  tableSettings: {};\n  rows: Array<any> = [];\n  pageCnt: number;\n  totalRowsCount: number;\n  custRowsPerPageOptions: Array<number> = [];\n  cols: any[];\n  currentComponent = 'VehicleRouteDatabaseComponent';\n  routeTypesData: { label: string; value: string; code: string }[];\n  routeId: any;\n  selectedItem: any;\n  constructor(private router: Router, private routingService: RoutingService,\n    public dialog: MatDialog, public commonService: CommonService, public dialogRef: MatDialog,\n    public snackBar: MatSnackBar) {\n    super();\n    this.initializeForm();\n    this.initializeFilterView();\n    this.setColumnHeaders();\n    this.initializeTableSettings();\n  }\n\n  ngOnInit(): void {\n    this.getRouteTypes();\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.filterViewModel = modelTableComponent;\n      if (this.filterViewModel.routeTypeId && this.filterViewModel.routeTypeId.length) {\n        const id = this.filterViewModel.routeTypeId[0];\n        this.routeTypeForm.controls['routeTypeId'].setValue(id);\n        this.selectedItem = id;\n        this.getAllFilteredTransportRoutes();\n      }\n    }\n  }\n\n  getRouteTypes(): void {\n    this.routeTypesData = [];\n    this.routingService.routeTypes().\n      subscribe((res) => {\n        res.forEach(e => {\n          this.routeTypesData.push({\n            value: e.id, label: e.name,\n            code: e.code\n          });\n        });\n        this.routeTypes = this.routeTypesData;\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  initializeForm(): void {\n    this.routeTypeForm = new FormGroup({\n      routeTypeId: new FormControl(null, [Validators.required])\n    });\n  }\n\n  initializeFilterView(): void {\n    this.filterViewModel = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n      // routeName: [],\n      // routeNumber: [],\n      // routeTypeId: [],\n      // routeDescription: [],\n    };\n  }\n\n  setColumnHeaders(): void {\n    this.cols = [\n      { field: 'routeName', header: 'Route Name', sort: true },\n      { field: 'routeNumber', header: 'Route Number', sort: true },\n      { field: 'routeDescription', header: 'Route Description', sort: true },\n      { field: 'routeType', header: 'Route Type', sort: false },\n      { field: 'actions', header: 'Actions', sort: false }\n    ];\n  }\n\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.filterViewModel,\n      tablename: 'List Of Vehicle Routes',\n      componentName: this.currentComponent,\n    };\n  }\n\n  getTableDataDetails(data: any): void {\n    this.routeTypeForm.controls['routeTypeId'].reset();\n    if (data && !Array.isArray(data)) {\n      this.filterViewModel.routeTypeId = [data];\n    } else {\n      this.filterViewModel.routeTypeId = [];\n    }\n    this.getAllFilteredTransportRoutes();\n  }\n\n  tableData(_event: SearchTransportRoutesView): void {\n    this.filterViewModel = _event;\n    this.filterViewModel.routeTypeId = [this.routeTypeForm.value.routeTypeId];\n    this.getAllFilteredTransportRoutes();\n  }\n\n  getAllFilteredTransportRoutes(): void {\n    this.setModelDataTableComponent(this.currentComponent, this.filterViewModel);\n    this.routingService.vehicleRouteS(this.filterViewModel.sortBy, this.filterViewModel.routeName, this.filterViewModel.routeNumber, this.filterViewModel.routeTypeId,\n      this.filterViewModel.routeDescription, this.filterViewModel.sortOrder,\n      this.filterViewModel.pageNumber, this.filterViewModel.pageSize).\n      subscribe(res => {\n        this.bindTransportRoutesResult(res);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n  actions(operationData): void {\n    if (operationData.operation === AppSettings.VIEW.toLowerCase()) {\n      this.router.navigate([RouteConfig._View_Route + operationData.clickedRow.id + '/' + operationData.clickedRow.routeType]);\n    } else if (operationData.operation === AppSettings.EDIT.toLowerCase()) {\n      this.router.navigate([RouteConfig._Edit_Route + operationData.clickedRow.id]);\n    }\n    else if (operationData.operation === AppSettings.DELETE.toLowerCase()) {\n      const dialogRef = this.dialog.open(CustomDialogComponent, {\n        width: '400px',\n        disableClose: true,\n        data: { text: this.commonService.getTranslation('Pleaseconfirmtodeletetheselectedroute'), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n      });\n\n      // Conformation for Delete Route\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.routingService.deleteTransportRoute(operationData.clickedRow.id).\n            subscribe(res => {\n              this.deleteTransportRoutesResult(res);\n            }, error => {\n              this.errorResponse(error);\n            });\n        }\n      });\n    }\n  }\n\n  deleteTransportRoutesResult(data: any): void {\n    this.getAllFilteredTransportRoutes();\n    this.openSnackBar(data.messages.ResultMessage);\n  }\n\n  bindTransportRoutesResult(data: any): void {\n    if (!data.vehicleDetailsDataView) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n    } else {\n      this.rows = data.vehicleDetailsDataView.list;\n      this.totalRowsCount = data.vehicleDetailsDataView.totalItems;\n      this.pageCnt = data.vehicleDetailsDataView.totalPages;\n      this.rows.forEach(e => {\n        e.operations = [\n          {\n            name: AppSettings.EDIT_OPERATION,\n            icon: AppSettings.EDIT,\n            operationName: AppSettings.EDIT\n          }, {\n            name: AppSettings.VIEW_OPERATION,\n            icon: AppSettings.DETAILS_ICON,\n            operationName: AppSettings.VIEW\n          },\n          {\n            name: AppSettings.DELETE_OPERATION,\n            icon: AppSettings.DELETE_ICON,\n            operationName: AppSettings.DELETE\n          }\n        ];\n      });\n    }\n    if (data.vehicleDetailsDataView) {\n      this.filterViewModel.pageNumber = data.vehicleDetailsDataView.pageNumber;\n    }\n    this.tableSettings = {\n      model: this.filterViewModel,\n      rows: this.rows,\n      columns: this.cols,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      tablename: 'List Of Vehicle Routes',\n      componentName: this.currentComponent,\n      isPaginationRequired: true,\n      filtersList: data.filters.filter(x => x.type === 'text'),\n    };\n  }\n\n  reDirect(): void {\n    this.router.navigate([RouteConfig._Add_Route]);\n  }\n}\n","module.exports = \"\\n     \\n     <div fxLayout=\\\"row\\\" class=\\\"text-right border-bottom mb-20 pb-12\\\" fxLayoutAlign=\\\"space-between center\\\">\\n        <div class=\\\"font-size-20\\\">Select the Route Point <small>or</small> Add new Point</div>\\n        <div fxLayout=\\\"row\\\">\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" *ngIf=\\\"duration\\\">\\n                <mat-icon class=\\\"mr-4 grey-600-fg\\\">access_time</mat-icon>\\n                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n                  <span class=\\\"grey-500-fg\\\">Travel Time</span>\\n                  <span>{{duration}}</span>\\n                </div>\\n              </div>\\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"px-24\\\" *ngIf=\\\"distance\\\">\\n                <mat-icon class=\\\"mr-4 grey-600-fg\\\">place</mat-icon>\\n                <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n                  <span class=\\\"grey-500-fg\\\">Total Distance</span>\\n                  <span>{{distance}} km</span>\\n                </div>\\n              </div>\\n        </div>\\n       \\n      </div>\\n\\n     <mat-dialog-content class=\\\"mat-typography\\\"> \\n      <div class=\\\"mat-elevation-z6 radius-5\\\">\\n      <agm-map  class=\\\"h-540\\\" appDirectionsMap [showDirection]=\\\"true\\\" (mapClick)=\\\"mapClicked($event)\\\" ravelMode=\\\"DRIVING\\\"\\n       [clickableIcons]=\\\"false\\\"  [streetViewControl]=\\\"false\\\" (dblclick)=\\\"mapDoubleClicked($event)\\\"\\n       [disableDefaultUI]=\\\"true\\\" [markers]=\\\"markers\\\"\\n       [zoom]=\\\"markers?.length ? 10 : 4\\\"  [fitBounds]=\\\"markers?.length ? true : false\\\"\\n       (getDirections)=\\\"getDirections($event)\\\">\\n        <agm-marker *ngFor=\\\"let m of markers;let i = index;\\\"\\n        [latitude]=\\\"m.latitude\\\" [markerDraggable]=\\\"false\\\" [label]=\\\"m.studentIcon ? {color: 'blue', text: (m?.position)?.toString()} : (m.position)?.toString()\\\"\\n        [longitude]=\\\"m.longitude\\\"  [agmFitBounds]=\\\"true\\\">\\n          <agm-info-window [isOpen]=\\\"m.openInfoWindow || m.studentIcon\\\"> \\n            <div class=\\\"font-size-14 pr-20\\\">{{m.pointAddres}} </div> \\n            <div fxLayoutAlign=\\\"end center\\\" class=\\\"pt-8\\\"> \\n            <button *ngIf=\\\"!m.studentIcon\\\" (click)=\\\"onClickRouteMarker(m,i)\\\"  mat-stroked-button color=\\\"accent\\\">\\n                {{'Select Stop' | translate}}\\n              </button>\\n            </div>    \\n          </agm-info-window>\\n        </agm-marker>\\n\\n        <agm-marker *ngIf=\\\"selectedPoint?.latitude\\\" [latitude]=\\\"selectedPoint?.latitude\\\" \\n         [label]=\\\"{color: 'blue', text: selectedPoint?.position?.toString() ? selectedPoint?.position?.toString() : ' '}\\\"\\n        [longitude]=\\\"selectedPoint?.longitude\\\" [agmFitBounds]=\\\"true\\\" [markerDraggable]=\\\"true\\\" (dragEnd)=\\\"addMarker($event,true)\\\">\\n          <agm-info-window [isOpen]=\\\"true\\\"  (infoWindowClose)=\\\"selectedPoint = null\\\" >\\n            <div class=\\\"font-size-14 pr-20\\\">{{selectedPoint.pointAddres}} </div> \\n            <div fxLayoutAlign=\\\"end center\\\" class=\\\"pt-8\\\"> \\n                <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\" class=\\\"formfield-pb-0\\\">\\n                    <mat-label translate #infoWindo>Add At Stop</mat-label>\\n                    <input [formControl]=\\\"infoWindow\\\" (keyup)=\\\"preventSpace($event)\\\" matInput required>  \\n                    \\n                  </mat-form-field>\\n            <button (click)=\\\"addSelectedPoint()\\\" mat-raised-button color=\\\"accent\\\" [disabled]=\\\"infoWindow?.invalid\\\" class=\\\"ml-8\\\">\\n              {{'Add Stop & Select' | translate}}\\n            </button>\\n            </div>\\n          </agm-info-window>\\n        </agm-marker>\\n\\n        <agm-marker [agmFitBounds]=\\\"markers?.length ? false : true\\\" *ngIf=\\\"currentLocation\\\"\\n        [latitude]=\\\"currentLocation?.latitude\\\" [markerDraggable]=\\\"currentLocation?.draggable\\\"\\n        [longitude]=\\\"currentLocation?.longitude\\\" [label]=\\\"currentLocation?.label\\\" [agmFitBounds]=\\\"true\\\" [iconUrl]=\\\"'assets/images/custom-icons/currentlocation.png'\\\" > \\n        </agm-marker>\\n\\n      </agm-map> \\n    </div>\\n      <div class=\\\"simple-table-container mat-elevation-z6 my-20 radius-t-20\\\" *ngIf=\\\"markers.length>0\\\">\\n        <table class=\\\"simple\\\" cdkDropList (cdkDropListDropped)=\\\"onListDrop($event)\\\">\\n          <thead>\\n            <tr>\\n              <th>Stop No</th>\\n              <th>Name</th>\\n              <th>Students Count</th>\\n              <th>Latitute</th>\\n              <th>Longitude</th>\\n              <th>Position Address</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr  cdkDrag *ngFor=\\\"let column of markers\\\" class=\\\"cursor-drag\\\">\\n              <td>{{column.position}}</td>\\n              <td>{{column.name}}</td>\\n              <td>{{column.studentCount ? column.studentCount : 0}}</td>\\n              <td>{{column.latitude}}</td>\\n              <td>{{column.longitude}}</td>\\n              <td>{{column.pointAddres}}</td>           \\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>   \\n    \\n  </mat-dialog-content>\\n     <mat-dialog-actions align=\\\"end\\\" class=\\\"pb-20 border-top\\\">\\n        <button mat-raised-button color=\\\"primary\\\" translate [mat-dialog-close]=\\\"true\\\" class=\\\"text-uppercase\\\">{{'cancel' | translate}}</button>\\n       <button (click)=\\\"onBackButtonClick()\\\"  mat-raised-button [mat-dialog-close]=\\\"true\\\" cdkFocusInitial color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n          {{'Ok' | translate}}\\n        </button>\\n     </mat-dialog-actions>\\n\"","module.exports = \"::ng-deep .agm-map-container-inner {\\n  border-radius: 6px; }\\n  ::ng-deep .agm-map-container-inner .gm-ui-hover-effect {\\n    top: 0 !important;\\n    right: 0 !important; }\\n  ::ng-deep .agm-map-container-inner .gm-style-cc {\\n    display: none; }\\n  ::ng-deep .agm-map-container-inner .agm-info-window-content {\\n    max-width: 400px; }\\n  .table.simple tr:last-child td {\\n  border-bottom: none !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vcm91dGluZy92aWV3LWNvbW1vbi1yb3V0ZS92aWV3LWNvbW1vbi1yb3V0ZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVJLGtCQUFrQixFQUFBO0VBRnRCO0lBSVEsaUJBQWlCO0lBQ2pCLG1CQUFtQixFQUFBO0VBTDNCO0lBUVEsYUFBYSxFQUFBO0VBUnJCO0lBV08sZ0JBQWdCLEVBQUE7RUFJdkI7RUFHWSw4QkFBNkIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vcm91dGluZy92aWV3LWNvbW1vbi1yb3V0ZS92aWV3LWNvbW1vbi1yb3V0ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcHtcbi5hZ20tbWFwLWNvbnRhaW5lci1pbm5lcntcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgLmdtLXVpLWhvdmVyLWVmZmVjdHtcbiAgICAgICAgdG9wOiAwICFpbXBvcnRhbnQ7XG4gICAgICAgIHJpZ2h0OiAwICFpbXBvcnRhbnQ7XG4gICAgfVxuICAgIC5nbS1zdHlsZS1jY3tcbiAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgIH1cbiAgIC5hZ20taW5mby13aW5kb3ctY29udGVudHtcbiAgICAgICBtYXgtd2lkdGg6IDQwMHB4O1xuICAgfVxufVxufSAgXG4udGFibGUuc2ltcGxle1xuICAgIHRye1xuICAgICAgICAmOmxhc3QtY2hpbGQgdGR7XG4gICAgICAgICAgICBib3JkZXItYm90dG9tOm5vbmUgIWltcG9ydGFudDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG4gICJdfQ== */\"","import { Component, OnInit, ChangeDetectorRef, NgZone, ViewChild, Input, EventEmitter, Output, Inject, SimpleChanges } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { RoutingService } from 'app/service/Transport/routing.service';\nimport { AgmMap, MapsAPILoader } from '@agm/core';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { AppSettings, Pattern } from 'app/app.constants';\nimport { CommonService } from 'app/service/common.service';\nimport { FormControl, Validators } from '@angular/forms';\nimport { moveItemInArray } from '@angular/cdk/drag-drop';\n\ndeclare var google: any;\n// just an interface for type safety.\ninterface Marker {\n  name: string;\n  latitude: number;\n  longitude: number;\n  position: number;\n  pointAddres: string;\n  latlng?: { lat?: number, lng?: number };\n  distance?: any;\n  studentIcon?: boolean;\n  id?: number;\n  transportRouteId?: number;\n  draggable?: boolean;\n  openInfoWindow?: boolean;\n  studentCount?: number;\n}\n\n@Component({\n  selector: 'app-view-common-route',\n  templateUrl: './view-common-route.component.html',\n  styleUrls: ['./view-common-route.component.scss'],\n  providers: [RoutingService]\n})\nexport class ViewCommonRouteComponent extends CommonComponent implements OnInit {\n  @Input() routePoints: any;\n  @Input() inBound: any;\n  @Input() selectedPoint: any;\n  @Input() requestedPoint: any;\n  @Output() onSelectLocation: EventEmitter<any> = new EventEmitter<any>();\n  @ViewChild(AgmMap)\n  public agmMap: AgmMap;\n  markers: Marker[] = [];\n  markerOptionsData: any;\n  wayPoints: any[];\n  fitBounds = false;\n  distance: any;\n  duration: any;\n  // selectedPoint:any;\n  outputData: any;\n  zoom = 4;\n  markersCount = 0;\n  isSingleClick: Boolean = true;\n  currentLocation: any;\n  public infoWindow: FormControl; \n  lastPointIndexPosition = 0;\n  constructor(private ngZone: NgZone,\n     private changedetector: ChangeDetectorRef, private dialogRef: MatDialog, public commonService: CommonService, private mapsAPILoader: MapsAPILoader,\n      public snackBar: MatSnackBar) {\n    super();\n    this.infoWindow = new FormControl(null, [Validators.required, Validators.pattern(Pattern.NATURAL_NUMBER_PATTERN)]);\n  }\n  ngOnInit(): void {\n    this.markers = [];\n    if (this.routePoints){\n      this.setRouteDetails(this.routePoints);\n    }\n    this.setCurrentLoation(); \n  } \n  setCurrentLoation(): void{\n    if (navigator.geolocation) { \n      navigator.geolocation.getCurrentPosition(position =>  { \n         this.currentLocation = {\n           latitude:  position.coords.latitude,\n           longitude: position.coords.longitude\n         };\n         this.changedetector.detectChanges();\n     });\n    } \n  }\n  setRouteDetails(data: any): void {\n    this.markers = [];\n    var pointMatched = false;\n    for (const marker of data) {\n      this.ngZone.run(() => {\n        this.markers.push({\n          name: marker.name,\n          latitude: marker.latitude,\n          longitude: marker.longitude,\n          position: marker.position,\n          pointAddres: marker.pointAddres,\n          latlng: { lat: marker.latitude, lng: marker.longitude },\n          id: marker.id ?  marker.id : null,\n          transportRouteId: marker.transportRouteId,\n          studentCount: marker.studentCount\n        });\n        if (marker.id === this.selectedPoint.id) {\n          pointMatched = true;\n          this.markers[this.markers.length - 1].studentIcon = true;\n          this.markers[this.markers.length - 1].openInfoWindow = true;\n        }\n      });\n    } \n\n    if (!pointMatched){\n      if (!this.selectedPoint.id && this.selectedPoint.latitude){\n        this.selectedPoint.latlng = { lat: this.selectedPoint.latitude, lng: this.selectedPoint.longitude };\n        this.selectedPoint.studentIcon = true;\n        this.selectedPoint.openInfoWindow = true;\n        this.markers.splice(this.selectedPoint.position - 1, 0, this.selectedPoint);\n        const temp = [];\n        for (let i = 0; i < this.markers.length; i++ ){\n            if (i >= +this.selectedPoint.position){\n              this.markers[i].position = this.markers[i].position + 1;\n            }\n            temp.push(this.markers[i]);\n        }\n        this.markers = temp; \n        this.selectedPoint = {}; \n      }else{\n        this.selectedPoint = this.requestedPoint;\n      } \n    }else{\n      this.selectedPoint = {};\n    }  \n    this.markerOptionsData = this.markers;\n    this.infoWindow.setValue(this.markers.length + 1);\n    this.markerOptionsData.sort((a, b) => a.position - b.position);\n    this.markers = this.markerOptionsData; \n     this.changedetector.detectChanges();\n  } \n  onBackButtonClick(): void {\n    this.onSelectLocation.emit(this.outputData); \n  }\n  getwayPoints(index): any {\n    const wayPoints = [];\n    if (this.markers.length > 2) {\n      for (let i = (this.outputData.inBound ? index + 1 : 1); i < (this.outputData.inBound ? this.markers.length - 1 : index - 1); i++) {\n        wayPoints.push({\n          location: { lat: this.markers[i].latitude, lng: this.markers[i].longitude },\n          stopover: false\n        });\n      }\n      return wayPoints;\n    } else {\n      return [];\n    }\n  } \n  setMarkerData(point): any{\n    return {lat: point.latitude, lng: point.longitude};\n  }\n  mapDoubleClicked($event: any): void{\n    this.isSingleClick = false;\n  }\n  mapClicked($event: any): void{\n    this.isSingleClick = true;\n      setTimeout(() => {\n        if (this.isSingleClick){\n          this.resetMarkerPoints();\n          this.addMarker($event);\n        }\n    }, 500);\n  }\n  resetMarkerPoints(marker: any = false): void{ \n    const temp = [];\n    this.routePoints = this.routePoints.filter(e => e.id);\n    this.routePoints = this.routePoints.sort((a, b) => a.position - b.position); \n    for (let i = 0; i < this.routePoints.length; i++){\n      this.routePoints[i].position = i + 1;\n      if (marker && (this.routePoints[i].latitude === marker.latitude && this.routePoints[i].longitude === marker.longitude)){\n        this.routePoints[i].studentIcon = true;\n      }else{\n        this.routePoints[i].studentIcon = false;\n      }\n      temp.push(this.routePoints[i]); \n    }\n    this.markers = temp;\n  }\n  addSelectedPoint(): void{ \n    if (this.isMarkerAlreadyExists(this.selectedPoint) === -1){\n      this.findClosest(this.selectedPoint); \n    }else{\n      this.openSnackBar(AppSettings.LOCATION_ALREADY_EXISTS, true);\n    }\n  } \n  addMarker($event, onDrag = false): void {  \n    if (navigator.geolocation) {\n      const geocoder = new google.maps.Geocoder();\n      const latlng = new google.maps.LatLng($event.coords.lat, $event.coords.lng);\n      const request = { latLng: latlng };\n      geocoder.geocode(request, (results: any, status: any) => {\n        if (status === google.maps.GeocoderStatus.OK) { \n          const result = results[0];\n          if (result) {\n            this.ngZone.run(() => {\n              this.selectedPoint = {\n                latitude: $event.coords.lat,\n                longitude: $event.coords.lng,\n                pointAddres: result.formatted_address,\n                draggable: true,\n                label: '',\n                position: '',\n                name: this.getAddressObject(result),\n                latlng: {\n                  lat: $event.coords.lat,\n                  lng: $event.coords.lng\n                },\n                inBound: this.inBound\n              }; \n              this.infoWindow.setValue(this.markers.length  + 1);\n            });\n          } else {\n           this.openSnackBar(AppSettings.ADDRESS_NOT_FOUND, true);\n          }\n        }\n      });\n    }\n  }\n  findClosest(pt): void{\n    const closest = [];\n    for (let i = 0; i < this.markers.length; i++) {\n       this.markers[i].distance = google.maps.geometry.spherical.computeDistanceBetween(new google.maps.LatLng(pt.latitude, pt.longitude),\n        new google.maps.LatLng(this.markers[i].latitude, this.markers[i].longitude));\n       closest.push(this.markers[i]);\n    }\n    closest.sort((a, b) => (a.distance - b.distance));\n     const distanceBWpoints = google.maps.geometry.spherical.computeDistanceBetween(new google.maps.LatLng(closest[0].latitude, closest[0].longitude),\n        new google.maps.LatLng(closest[1].latitude, closest[1].longitude));\n        let finalPosition;\n        if (closest[1].distance > distanceBWpoints){\n          if (closest[0].position > closest[1].position){\n            finalPosition = closest[0].position + 1;\n          }else{\n            finalPosition = closest[0].position;\n          }\n        }else{\n          if (closest[0].position > closest[1].position){\n            finalPosition =  closest[0].position;\n          }else{\n            finalPosition = closest[0].position + 1;\n          }\n        }\n        finalPosition = this.infoWindow.value > this.markers.length ? this.markers.length + 1 : this.infoWindow.value;\n        // this is for removing marker if points way_points_exceeds\n        this.lastPointIndexPosition = finalPosition;\n\n        this.selectedPoint.position = finalPosition;\n        this.selectedPoint.label = finalPosition;\n        this.selectedPoint.studentIcon = true;\n        this.markers.splice(finalPosition - 1, 0, this.selectedPoint );\n        this.selectedPoint = {}; \n      const temp = [];\n      for (let i = 0; i < this.markers.length; i++ ){\n          if (i >= finalPosition){\n            this.markers[i].position = i + 1;\n          }\n          temp.push(this.markers[i]);\n      }\n      this.markers = temp;  \n      this.outputData = {\n          selectedPoint: this.markers[finalPosition - 1] ? this.markers[finalPosition - 1] : this.markers[this.markers.length - 1],\n          selectedRouteMarker: false,\n          inBound: this.inBound,\n          updatedPoints: this.markers\n      };\n    this.changedetector.detectChanges();\n  }\n  onClickRouteMarker(obj, i): void{\n      this.resetMarkerPoints(obj);  \n      const updatedPosition = this.markers.findIndex(e => e.latitude === obj.latitude && e.longitude === obj.longitude);\n      \n      obj.position = updatedPosition + 1;\n      this.outputData = {\n          selectedPoint: obj,\n          selectedRouteMarker: true,\n          inBound: this.inBound,\n          updatedPoints: this.markers\n      };  \n  }\n  isMarkerAlreadyExists(currentMarker): any {\n    return this.markers.findIndex(e => \n      (e.latitude.toPrecision(6) === currentMarker.latitude.toPrecision(6) && e.longitude.toPrecision(6) === currentMarker.longitude.toPrecision(6)));\n } \n  getAddressObject(result): any {\n    const ShouldBeComponent = {\n      premise: 'premise',\n      route: 'route',\n      sublocality_level_2: 'sublocality_level_2',\n      sublocality_level_1: 'sublocality_level_1'\n    }; \n    const address = {\n      premise: '',\n      route: '',\n      sublocality_level_2: '',\n      sublocality_level_1: ''\n    };\n    result.address_components.forEach(component => {\n      for (const shouldBe in ShouldBeComponent) {\n        if (component.types.indexOf(ShouldBeComponent[shouldBe]) !== -1) {\n          address[shouldBe] = component.long_name ? component.long_name + ',' : '';\n        }\n      }\n    });\n    const data = (address.premise + '' + address.route + '' + address.sublocality_level_2 + '' + address.sublocality_level_1).replace(/,+/g, ',').replace(/,\\s*$/, '') ;\n    return data ? data : result.formatted_address.substring(0, 45);\n  }\n  getDirections(event): void{\n     if (event.status === 'OK'){\n        this.distance = 0;\n        this.duration = 0;\n        const myroute = event.routes[0];\n        for (let i = 0; i < myroute.legs.length; i++) {\n          this.distance += myroute.legs[i].distance.value;\n          this.duration += myroute.legs[i].duration.value;\n        }  \n        this.distance = Math.round(this.distance / 1000);\n        this.duration = this.duration / 60;\n        this.duration = (Math.floor(this.duration / 60) ? Math.floor(this.duration / 60) + 'hr ' : '') + Math.round(this.duration % 60) + 'min '; \n        return;\n      }else if (event.status === 'ZERO_RESULTS'){\n        this.openSnackBar(AppSettings.DISTANCE_NOT_FOUND_VIA_ROAD, true);\n    }else if (event.status === 'MAX_WAYPOINTS_EXCEEDED'){\n      this.openSnackBar(AppSettings.MAX_WAY_POINTS_EXCEEDS, true);\n    }\n    this.resetMarkerPoints();\n    this.outputData = null;\n  }\n  onListDrop(event): void{ \n    moveItemInArray(this.markers, event.previousIndex, event.currentIndex);\n    const temp = [];\n    this.markers.map((e, i) => {\n       e.position = i + 1; \n       temp.push(e);\n      }); \n    this.markers = temp; \n    this.changedetector.detectChanges(); \n  }\n}\n","module.exports = \"<div class=\\\"content p-sm-40\\\" *ngIf=\\\"markers?.length > 0\\\">\\n  <div class=\\\"w-100-p mat-elevation-z3 simple-table-container radius-t-20\\\" fxLayout=\\\"column\\\">\\n    <div fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxLayoutAlign.gt-sm=\\\"space-between center\\\" class=\\\"p-12\\\">\\n      <h2>{{!trackingPoint ? 'Route Point Details' : 'Track Route ----------- Total Route Time and Distance --->' | translate}}{{routeName ? '('+routeName+')' : ''}}</h2>\\n      <div fxLayout=\\\"row\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" *ngIf=\\\"duration\\\">\\n          <mat-icon class=\\\"mr-4 grey-600-fg\\\">access_time</mat-icon>\\n          <div fxLayout=\\\"column\\\">\\n            <span class=\\\"grey-500-fg\\\" translate>Travel Time</span>\\n            <span>{{ duration }}</span>\\n          </div>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"px-24\\\" *ngIf=\\\"distance\\\">\\n          <mat-icon class=\\\"mr-4 grey-600-fg\\\">place</mat-icon>\\n          <div fxLayout=\\\"column\\\">\\n            <span class=\\\"grey-500-fg\\\" translate>Total Distance</span>\\n            <span>{{ distance }} km</span>\\n          </div>\\n        </div>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n        <button *ngIf=\\\"!trackingPoint\\\" mat-raised-button translate type=\\\"button\\\" color=\\\"primary\\\" class=\\\"mr-4 text-uppercase\\\"\\n          (click)=\\\"onBackButtonClick()\\\">{{(fromStudentTransport ? 'Close' : 'Back') | translate}}</button>\\n        <button mat-button *ngIf=\\\"!fromStudentTransport\\\" (click)=\\\"getHelpText('Routes')\\\">\\n          <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n        </button>\\n      </div>\\n    </div>\\n\\n    <agm-map appDirectionsMap (getDirections)=\\\"getDirections($event)\\\" [markers]=\\\"markers\\\" [zoom]=\\\"zoom\\\" [fitBounds]=\\\"true\\\" class=\\\"h-600\\\" [streetViewControl]=\\\"false\\\" >\\n      <!-- <agm-direction *ngIf=\\\"markers?.length > 1\\\" [origin]=\\\"markers[0]?.latlng\\\"\\n        [destination]=\\\"markers[markers.length - 1].latlng\\\" travelMode=\\\"DRIVING\\\" [optimizeWaypoints]=\\\"false\\\"\\n        [renderOptions]=\\\"renderOptions\\\" [markerOptions]=\\\"markerOptions\\\" [waypoints]=\\\"wayPoints\\\">\\n      </agm-direction> -->\\n\\n      <agm-marker *ngIf=\\\"trackingPoint\\\"  [iconHeight]=\\\"20\\\" [iconWidth]=\\\"20\\\"\\n      [agmFitBounds]=\\\"true\\\"\\n      [label]=\\\"test\\\" [iconUrl]=\\\"icon\\\"  [latitude]=\\\"trackingPoint.lat\\\" [longitude]=\\\"trackingPoint.lng\\\"></agm-marker>\\n\\n      <span *ngFor=\\\"let m of markers; let i = index; let l = last; let f = first\\\">\\n        <agm-marker [latitude]=\\\"m.latitude\\\"\\n          [longitude]=\\\"m.longitude\\\" [agmFitBounds]=\\\"true\\\"\\n          [label]=\\\"m.studentIcon ? {color: 'blue', text: (m?.position)?.toString()} : (m.position)?.toString()\\\">\\n          <agm-info-window [isOpen]=\\\"m.studentIcon\\\">\\n            {{ m.pointAddress }}\\n          </agm-info-window>\\n        </agm-marker>\\n      </span>\\n    </agm-map>\\n    <div class=\\\"simple-table-container\\\" *ngIf=\\\"markers.length > 0\\\">\\n      <table class=\\\"simple\\\">\\n        <thead>\\n          <tr>\\n            <th>{{'Sr No.' | translate}}</th>\\n            <th>{{'Name' | translate}}</th>\\n            <th>{{'Latitute' | translate}}</th>\\n            <th>{{'Longitude' | translate}}</th>\\n            <th>{{'Position Address' | translate}}</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let column of markers\\\" [ngClass]=\\\"{'student-location': column.studentIcon}\\\">\\n            <td>{{ column.position }}</td>\\n            <td>{{ column.name }}</td>\\n            <td>{{ column.latitude }}</td>\\n            <td>{{ column.longitude }}</td>\\n            <td>{{ column.pointAddress }}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".student-location {\\n  background-color: #98c198; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vcm91dGluZy92aWV3LXJvdXRlL3ZpZXctcm91dGUuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBeUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vcm91dGluZy92aWV3LXJvdXRlL3ZpZXctcm91dGUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3R1ZGVudC1sb2NhdGlvbntcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOThjMTk4O1xufSJdfQ== */\"","import { Component, OnInit, ChangeDetectorRef, NgZone, ViewChild, Input, OnChanges, Output, EventEmitter, SimpleChanges } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { RoutingService } from 'app/service/Transport/routing.service';\nimport { AgmMap, MapsAPILoader } from '@agm/core';\nimport { RouteConfig } from 'app/url.config';\nimport { Location } from '@angular/common';\nimport { CommonService } from 'app/service/common.service';\nimport { MatSnackBar } from '@angular/material';\ndeclare var google: any;\n// just an interface for type safety.\ninterface Marker {\n  name: string;\n  latitude: number;\n  longitude: number;\n  position: string;\n  pointAddress: string;\n  latlng?: { lat?: number, lng?: number };\n  studentIcon: boolean;\n}\n\n@Component({\n  selector: 'app-view-route',\n  templateUrl: './view-route.component.html',\n  styleUrls: ['./view-route.component.scss'],\n  providers: [RoutingService]\n})\nexport class ViewRouteComponent extends CommonComponent implements OnInit, OnChanges {\n  transportRoutesId: any;\n  markers: Marker[] = [];\n  markerOptions = { origin: { label: '1' }, destination: { label: '2' } };\n  markerOptionsData: any;\n  wayPoints: any[];\n  @ViewChild(AgmMap)\n  public agmMap: AgmMap;\n  public renderOptions = {\n    suppressMarkers: true,\n  };\n  zoom = 4;\n  fitBounds = false;\n  distance: any;\n  duration: any;\n  @Input() routePoints: any;\n  @Input() fromStudentTransport: boolean;\n  @Input() routeName: any;\n  @Input() trackingPoint: any;\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() onClosePanel: EventEmitter<any> = new EventEmitter<any>();\n  icon: any;\n  constructor(\n    public commonService: CommonService,\n    private ngZone: NgZone,\n    private router: Router,\n    private routes: ActivatedRoute,\n    private routingService: RoutingService,\n    private changedetector: ChangeDetectorRef,\n    public mapsAPILoader: MapsAPILoader,\n    public location: Location, public snackBar: MatSnackBar) {\n    super();\n    this.icon = {\n      url: 'assets/images/custom-icons/navigation.gif',\n      scaledSize: {\n        width: 80,\n        height: 80\n      }\n    };\n  }\n\n  ngOnInit(): void {\n    this.routes.params\n      .subscribe((params: Params) => {\n        if (params['id']) {\n          this.transportRoutesId = params['id'];\n          this.routeName = params['routeName'];\n          this.getTransportRouteDetails();\n        }\n      });\n    this.markers = [];\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes.trackingPoint && this.routePoints){\n        this.setRouteDetails(this.routePoints);\n    }\n  }\n  getTransportRouteDetails(): void {\n    this.routingService.transportRoutesDetails(this.transportRoutesId)\n      .subscribe(res => {\n        this.setRouteDetails(res.transportRouteDetailsView.routePointsDetailsView);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  setRouteDetails(data: any): any {\n    this.markers = [];\n    for (const marker of data) {\n      this.ngZone.run(() => {\n        this.markers.push({\n          name: marker.name,\n          latitude: marker.latitude,\n          longitude: marker.longitude,\n          position: marker.position.toString(),\n          pointAddress: this.fromStudentTransport ? marker.pointAddres : marker.pointAddress,\n          latlng: { lat: marker.latitude, lng: marker.longitude },\n          studentIcon: marker.studentIcon || false\n        });\n      });\n    }\n\n    if (this.markers && !this.markers.length) {\n      return;\n    }\n    this.markerOptionsData = this.markers;\n    this.markerOptionsData.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\n    this.markers = this.markerOptionsData;\n    this.changedetector.detectChanges();\n    if (this.markers[0].studentIcon) {\n      this.markerOptions.origin['icon'] = 'http://maps.google.com/mapfiles/ms/icons/green-dot.png';\n    } else {\n      this.markerOptions.origin['icon'] = '';\n    }\n    if (this.markers[this.markers.length - 1].studentIcon) {\n      this.markerOptions.destination['icon'] = 'http://maps.google.com/mapfiles/ms/icons/green-dot.png';\n    } else {\n      this.markerOptions.destination['icon'] = '';\n    }\n    this.markerOptions.destination.label = this.markers.length.toString();\n    this.wayPoints = [];\n    if (this.markers.length > 2) {\n      for (let i = 1; i < this.markers.length - 1; i++) {\n        this.wayPoints.push({\n          location: { lat: this.markers[i].latitude, lng: this.markers[i].longitude },\n          stopover: false\n        });\n      }\n    } else {\n      this.wayPoints = [];\n    }\n    this.changedetector.detectChanges();\n    this.changedetector.markForCheck();\n  }\n  setLatLngForDirections(markers): any {\n    const latLng = [];\n    for (const marker of markers) {\n      latLng.push(marker.latlng);\n    }\n    return latLng;\n  }\n\n  \n  getDirections(res): void{\n    this.distance = 0;\n    this.duration = 0;\n        const response = res.routes[0].legs;\n        for (let i = 0; i < response.length; i++) {\n          if (response[i].distance){\n            this.distance += response[i].distance.value;\n          }\n          if (response[i].duration){\n            this.duration += response[i].duration.value;\n          }\n        }\n        this.distance = Math.round(this.distance / 1000);\n        this.duration = this.duration / 60;\n        this.duration = (Math.floor(this.duration / 60) ? Math.floor(this.duration / 60) + 'hr ' : '') + Math.round(this.duration % 60) + 'min ';\n  }\n  onBackButtonClick(): void {\n    if (this.fromStudentTransport) {\n      this.onClosePanel.emit();\n    } else {\n      this.location.back();\n    }\n  }\n}\n","module.exports = \"<div class=\\\"content p-sm-40\\\">\\n  <div class=\\\"mat-elevation-z3 simple-table-container radius-t-20 mb-20\\\" fxLayout=\\\"column\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"p-20\\\">\\n      <div class=\\\"p-8 text-uppercase font-size-18\\\" translate>Transport Schedule Details</div>\\n      <div>\\n        <button mat-raised-button color=\\\"primary\\\" translate (click)=\\\"onBackButtonClick()\\\" class=\\\"text-uppercase\\\"><span translate>Back</span></button>\\n        <button mat-button (click)=\\\"getHelpText('Schedules')\\\">\\n          <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n        </button>\\n      </div>\\n    </div>\\n    <mat-divider></mat-divider>\\n\\n    <div fxLayout=\\\"row wrap\\\" fxFlex=\\\"100\\\" class=\\\"w-90-p m-auto p-20\\\">\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\" *ngFor=\\\"let item of transportSchedules;\\\">\\n        <div class=\\\"grey-500-fg pb-4\\\" translate>{{item.label}}</div>\\n        <div class=\\\"break-word pr-8\\\">{{item?.value ? item?.value : \\\"---\\\"}}</div>\\n      </div>\\n    </div>\\n   \\n\\n    <div class=\\\"px-28 py-20 mt-28 text-uppercase font-size-18 border-vertical\\\" translate>Routes in this transport schedule</div>\\n  \\n    <app-table *ngIf=\\\"loaded | async\\\" [settings]=\\\"transportScheduleTab\\\"></app-table>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vcm91dGluZy92aWV3LXRyYW5zcG9ydC1zY2hlZHVsZXMvdmlldy10cmFuc3BvcnQtc2NoZWR1bGVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { ScheduleService } from 'app/service/Transport/schedule.service';\nimport { RouteConfig } from 'app/url.config';\nimport { StaffCommonService } from 'app/service/staff/staffCommon.service';\nimport { MatSnackBar } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\n\n@Component({\n  selector: 'app-view-transport-schedules',\n  templateUrl: './view-transport-schedules.component.html',\n  styleUrls: ['./view-transport-schedules.component.scss'],\n  providers: [ScheduleService, StaffCommonService]\n})\nexport class ViewTransportSchedulesComponent extends CommonComponent implements OnInit {\n  transportScheduleId: any;\n  transportSchedules: any;\n\n  transportScheduleTab: {};\n  rows: any[];\n  transportScheduleGridHeaderData: any[];\n  loaded = Promise.resolve(true);\n  columns: { field: string; header: string; sort: boolean; }[];\n  staffDetails: any;\n  resStaffDetails: any;\n\n  constructor(private router: Router, private routes: ActivatedRoute,\n    private scheduleService: ScheduleService, private changedetector: ChangeDetectorRef, private staffCommonService: StaffCommonService,\n    public commonService: CommonService, public snackBar: MatSnackBar) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.routes.params\n      .subscribe((params: Params) => {\n        this.transportScheduleId = params['id'];\n        this.getTransportScheduleDetails();\n      });\n    this.transportScheduleGridHeaderData = [\n      { field: 'routeName', header: 'Route Name', sort: false },\n      { field: 'routeNumber', header: 'Route Number', sort: false },\n      { field: 'vehicleNo', header: 'Vehicle', sort: false },\n      { field: 'driverStaffId', header: 'Driver Name', sort: false },\n      { field: 'assistantStaffId', header: 'Driver Assistant Name', sort: false },\n    ];\n  }\n\n  getTransportScheduleDetails(): void {\n    this.scheduleService.transportSchedulesDetails(this.transportScheduleId)\n      .subscribe(res => {\n        this.setTransportScheduleDetails(res.transportSchedulesDataView);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  setTransportScheduleDetails(data: any): void {\n    const headerData = [];\n    for (const key in data) {\n      if (key !== 'transportScheduleRoutesDataView' && key !== 'id' &&\n        key !== 'routeType') {\n        if (data[key] === 'I') {\n          data[key] = 'Inbound';\n        }\n        else if (data[key] === 'O') {\n          data[key] = 'Outbound';\n        }else if (key === 'startTime' || key === 'endTime'){\n          data[key] = data[key] ? data[key].substring(0, 5) : null;\n        }\n        headerData.push({ label: key, value: data[key] });\n      }\n    }\n    this.resStaffDetails = data.transportScheduleRoutesDataView;\n    this.getStaffDetails();\n    this.transportSchedules = headerData;\n    this.loaded = Promise.resolve(true);\n  }\n\n  getStaffDetails(): void {\n    this.staffCommonService.fetchStaffs().\n      subscribe((res) => {\n        const staffData = [];\n        res.forEach(obj => {\n          staffData.push({\n            value: obj.id, label: obj.name\n          });\n        });\n        this.staffDetails = staffData;\n        this.assignStaffDetails(this.resStaffDetails);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  assignStaffDetails(data: any): void {\n    data.forEach(e => {\n      const sName = this.staffDetails.filter(x => x.value === e.driverStaffId);\n      if (sName.length > 0) {\n        e.driverStaffId = sName[0].label;\n      }\n      const asName = this.staffDetails.filter(x => x.value === e.assistantStaffId);\n      if (asName.length > 0) {\n        e.assistantStaffId = asName[0].label;\n      }\n    });\n\n    this.transportScheduleTab = {\n      padding: true,\n      rows: data,\n      columns: this.transportScheduleGridHeaderData,\n      // tablename: 'List of Transport Schedules',\n      isPaginationRequired: false,\n      hideHeader: true,\n      \n     \n    };\n  }\n\n  onBackButtonClick(): any {\n    this.router.navigate([RouteConfig._Transport_Schedule]);\n  }\n}\n","/**\n * Teacher API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { BASE_PATH } from '../base/variables';\nimport { Configuration } from '../base/configuration';\nimport { BaseUrlConfig, ModuleConfig, BaseModuleConfig } from '../../url.config';\n\n@Injectable()\nexport class StaffCommonService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Teacher;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Fetch Staff Types\n     * \n     * @param authorization access token\n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public fetchStaffTypes(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchStaffTypes(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchStaffTypes(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchStaffTypes(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n        \n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Staff_Types,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Fetch Staffs\n     * \n     * @param authorization access token\n     * @param staffTypeCode \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public fetchStaffs(staffTypeCode?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchStaffs(staffTypeCode?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchStaffs(staffTypeCode?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchStaffs(staffTypeCode?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        \n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (staffTypeCode !== undefined && staffTypeCode !== null) {\n            queryParameters = queryParameters.set('staffTypeCode', <any>staffTypeCode);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Staff_Based_On_Code,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * BaseWebAPI\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\n\n\n\nimport { Observable } from 'rxjs';\nimport { HttpResponse, HttpEvent, HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable, Optional, Inject } from '@angular/core';\nimport { Configuration } from '../base/configuration';\nimport { BaseUrlConfig, ModuleConfig, BaseModuleConfig } from 'app/url.config';\nimport { BASE_PATH } from '../base/variables';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { StudentTransportView } from 'app/modules/transportation/routing/model/student-transport-view';\nimport { StudentTransportDataView } from 'app/modules/transportation/routing/model/student-transport-data-view';\n\n\n\n\n@Injectable()\nexport class StudentTransportService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Base;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Add Transport Assignments\n     * \n     * @param studentTransportView \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createTransportAssignments(studentTransportView?: StudentTransportView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createTransportAssignments(studentTransportView?: StudentTransportView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createTransportAssignments(studentTransportView?: StudentTransportView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createTransportAssignments(studentTransportView?: StudentTransportView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + BaseModuleConfig._Student_Transport_Assignment,\n            studentTransportView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get All Route Points Details\n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public fetchRoutePoints(id?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchRoutePoints(id?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchRoutePoints(id?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchRoutePoints(id?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Student_Transport_Route_Points,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Transport Assignment Details\n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public fetchTransportAssignment(id?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchTransportAssignment(id?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchTransportAssignment(id?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchTransportAssignment(id?: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Student_Transport_Assignment,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get All Transport Routes Details\n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public fetchTransportRoutes(id?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchTransportRoutes(id?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchTransportRoutes(id?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchTransportRoutes(id?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Student_Transport_Routes,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get All Transport Schedules Details\n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public fetchTransportSchedules(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchTransportSchedules(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchTransportSchedules(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchTransportSchedules(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Student_Transport_Schedules,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n    * Update Transport Assignments\n    * \n    * @param studentTransportDataView \n    * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n    * @param reportProgress flag to report request and response progress.\n    */\n    public updateTransportAssignments(studentTransportDataView?: StudentTransportDataView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateTransportAssignments(studentTransportDataView?: StudentTransportDataView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateTransportAssignments(studentTransportDataView?: StudentTransportDataView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateTransportAssignments(studentTransportDataView?: StudentTransportDataView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` + BaseModuleConfig._Student_Transport_Assignment,\n            studentTransportDataView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Transport Assignment Details by StudentID\n     * \n     * @param authorization access token\n     * @param id \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public fetchTransportAssignmentStudentId(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchTransportAssignmentStudentId(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchTransportAssignmentStudentId(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchTransportAssignmentStudentId(observe: any = 'body', reportProgress: boolean = false ): Observable<any> { \n      \n        let headers = this.defaultHeaders; \n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig.__Trasport_Assignment_By_Id,\n            {\n               \n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    // tracking\n\n    /**\n     * Get Route Trip Progress Details by StudentId\n     * \n     * @param id \n     * @param authorization access token\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public fetchRouteTripProgressStudentId(id: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchRouteTripProgressStudentId(id: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchRouteTripProgressStudentId(id: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchRouteTripProgressStudentId(id: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling fetchRouteTripProgressStudentId.');\n        }\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig.__Student_Route_Tracking,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n}\n"],"sourceRoot":""}