{"version":3,"sources":["webpack:///./src/app/modules/staff/staff-admissions/add-job-applications/add-job-applications.component.html","webpack:///./src/app/modules/staff/staff-admissions/add-job-applications/add-job-applications.component.scss","webpack:///./src/app/modules/staff/staff-admissions/add-job-applications/add-job-applications.component.ts","webpack:///./src/app/modules/staff/staff-admissions/approve-job-application/approve-job-application.component.html","webpack:///./src/app/modules/staff/staff-admissions/approve-job-application/approve-job-application.component.scss","webpack:///./src/app/modules/staff/staff-admissions/approve-job-application/approve-job-application.component.ts","webpack:///./src/app/modules/staff/staff-admissions/job-application-details/job-application-details.component.html","webpack:///./src/app/modules/staff/staff-admissions/job-application-details/job-application-details.component.scss","webpack:///./src/app/modules/staff/staff-admissions/job-application-details/job-application-details.component.ts","webpack:///./src/app/modules/staff/staff-admissions/job-applications/job-applications.component.html","webpack:///./src/app/modules/staff/staff-admissions/job-applications/job-applications.component.scss","webpack:///./src/app/modules/staff/staff-admissions/job-applications/job-applications.component.ts","webpack:///./src/app/modules/staff/staff-admissions/staff-admissions-routing.module.ts","webpack:///./src/app/modules/staff/staff-admissions/staff-admissions.module.ts"],"names":[],"mappings":"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","file":"app-modules-staff-staff-admissions-staff-admissions-module.js","sourcesContent":["module.exports = \"<mat-horizontal-stepper class=\\\"custom-horizontal-step\\\" [linear]=\\\"true\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" #stepper (animationDone)=\\\"onStepperAnimationDone(stepper.selectedIndex, true)\\\"\\n  (selectionChange)=\\\"OnSelectionChange($event)\\\">\\n  <mat-step [stepControl]=\\\"applicantDetails\\\">\\n    <form fxLayout=\\\"column\\\" [formGroup]=\\\"applicantDetails\\\" #applicantDetailsForm=\\\"ngForm\\\">\\n      <ng-template matStepLabel><span translate>Applicant Details</span></ng-template>\\n      <div class=\\\"pt-24 font-size-18\\\"><span translate>Applicant Details</span></div>\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n          <mat-label #seekingPosition translate>Seeking Position</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'applicantDetails','seekingPosition')\\\" (blur)=\\\"trimTextBoxSpaces('applicantDetails','seekingPosition')\\\" formControlName=\\\"seekingPosition\\\" matInput>\\n          <mat-error>\\n            <app-validation [labelName]='seekingPosition.innerText'\\n              [validationControl]=\\\"applicantDetails.controls.seekingPosition\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\"\\n          class=\\\"px-sm-20\\\">\\n          <mat-label #personTitleTypeId translate>Select Suffix</mat-label>\\n          <mat-select formControlName=\\\"personTitleTypeId\\\">\\n            <mat-option *ngFor=\\\"let suffix of suffixType\\\" [value]=\\\"suffix.id\\\">{{suffix.name}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n          <mat-label #firstname translate>firstname</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'applicantDetails','firstName')\\\" (blur)=\\\"trimTextBoxSpaces('applicantDetails','firstName')\\\"\\n            formControlName=\\\"firstName\\\" matInput required>\\n          <mat-error>\\n            <app-validation [labelName]='firstname.innerText' [validationControl]=\\\"applicantDetails.controls.firstName\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\"\\n          class=\\\"px-sm-20\\\">\\n          <mat-label #middlename translate>middlename</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'applicantDetails','middleName')\\\" (blur)=\\\"trimTextBoxSpaces('applicantDetails','middleName')\\\"\\n            formControlName=\\\"middleName\\\" matInput>\\n          <mat-error>\\n            <app-validation [labelName]='middlename.innerText'\\n              [validationControl]=\\\"applicantDetails.controls.middleName\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n          <mat-label #lastName translate>lastname</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'applicantDetails','lastName')\\\" (blur)=\\\"trimTextBoxSpaces('applicantDetails','lastName')\\\"\\n            formControlName=\\\"lastName\\\" matInput required>\\n          <mat-error>\\n            <app-validation [labelName]='lastName.innerText' [validationControl]=\\\"applicantDetails.controls.lastName\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\" class=\\\"icon-center\\\">\\n          <mat-label #dateofbirth translate>Date Of Birth</mat-label>\\n          <input matInput (keyup)=\\\"forceValidation('dateOfBirth',applicantDetails)\\\" [matDatepicker]=\\\"dateOfBirth\\\"\\n            [max]=\\\"currentDate\\\" formControlName=\\\"dateOfBirth\\\" required>\\n          <mat-datepicker-toggle matSuffix [for]=\\\"dateOfBirth\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #dateOfBirth></mat-datepicker>\\n          <mat-error>\\n            <app-validation [labelName]='dateofbirth.innerText'\\n              [validationControl]=\\\"applicantDetails.controls.dateOfBirth\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\"\\n          class=\\\"px-sm-20\\\">\\n          <mat-label #aadhaarNumber translate>Aadhaar Number</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'applicantDetails','aadhaarNumber')\\\" (blur)=\\\"trimTextBoxSpaces('applicantDetails','aadhaarNumber')\\\"\\n            formControlName=\\\"aadhaarNumber\\\" matInput>\\n          <mat-error>\\n            <app-validation [labelName]='aadhaarNumber.innerText'\\n              [validationControl]=\\\"applicantDetails.controls.aadhaarNumber\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n          <mat-label #panNumber translate>panNumber</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'applicantDetails','panNumber')\\\" (blur)=\\\"trimTextBoxSpaces('applicantDetails','panNumber')\\\"\\n            formControlName=\\\"panNumber\\\" matInput>\\n          <mat-error>\\n            <app-validation [labelName]='panNumber.innerText' [validationControl]=\\\"applicantDetails.controls.panNumber\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n          <mat-label #genderTypeId translate>gender</mat-label>\\n          <mat-select formControlName=\\\"genderTypeId\\\" required>\\n            <mat-option *ngFor=\\\"let gender of genders\\\" [value]=\\\"gender.id\\\">{{gender.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='genderTypeId.innerText'\\n              [validationControl]=\\\"applicantDetails.controls.genderTypeId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"px-sm-20\\\"\\n          fxFlex.gt-sm=\\\"36\\\">\\n          <mat-label #maritalStatusTypeId translate>Marital Status</mat-label>\\n          <mat-select formControlName=\\\"maritalStatusTypeId\\\">\\n            <mat-option *ngIf=\\\"maritalTypes?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let maritalStatus of maritalTypes\\\" [value]=\\\"maritalStatus.id\\\">{{maritalStatus.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='maritalStatusTypeId.innerText'\\n              [validationControl]=\\\"applicantDetails.controls.maritalStatusTypeId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n          <mat-label #nationalityCountryId translate>Nationality</mat-label>\\n          <mat-select formControlName=\\\"nationalityCountryId\\\" required>\\n            <mat-option *ngFor=\\\"let country of countryOptionsSelect\\\" [value]=\\\"country.id\\\">{{country.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='nationalityCountryId.innerText'\\n              [validationControl]=\\\"applicantDetails.controls.nationalityCountryId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n          <mat-label #religionTypeId translate>religion</mat-label>\\n          <mat-select formControlName=\\\"religionTypeId\\\">\\n            <mat-option *ngIf=\\\"religions?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let religion of religions\\\" [value]=\\\"religion.id\\\">{{religion.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='religionTypeId.innerText'\\n              [validationControl]=\\\"applicantDetails.controls.religionTypeId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"px-sm-20\\\"\\n          fxFlex.gt-sm=\\\"36\\\">\\n          <mat-label #casteTypeId translate>caste</mat-label>\\n          <mat-select formControlName=\\\"casteTypeId\\\">\\n            <mat-option *ngIf=\\\"casts?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let cast of casts\\\" [value]=\\\"cast.id\\\">{{cast.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='casteTypeId.innerText'\\n              [validationControl]=\\\"applicantDetails.controls.casteTypeId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"66\\\">\\n          <mat-label #languagesSpoken translate>Languages Spoken</mat-label>\\n          <textarea (keyup)=\\\"preventSpace($event,'applicantDetails','languagesSpoken')\\\" formControlName=\\\"languagesSpoken\\\" matInput></textarea>\\n          <mat-error>\\n            <app-validation [labelName]='languagesSpoken.innerText'\\n              [validationControl]=\\\"applicantDetails.controls.languagesSpoken\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-16\\\">\\n        <button #resetButtonStepper mat-raised-button id=\\\"resetButtonStepper\\\" (click)=\\\"onCancel()\\\" type=\\\"reset\\\"\\n          class=\\\"text-uppercase mr-12\\\">\\n          {{'Cancel' | translate}}\\n        </button>\\n        <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n          {{'Next' | translate}}\\n        </button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"experienceDetails\\\" [optional]=\\\"isNestedObjectEmpty(experienceDetails.value)\\\">\\n    <form fxLayout=\\\"column\\\" [formGroup]=\\\"experienceDetails\\\" #experienceDetailsForm=\\\"ngForm\\\">\\n      <ng-template matStepLabel><span translate>Work Experience Summary</span></ng-template>\\n      <div class=\\\"pt-24 font-size-18\\\"><span translate>Work Experience Summary</span></div>\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n          <mat-label #years translate>Years</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'experienceDetails','years')\\\" (blur)=\\\"trimTextBoxSpaces('experienceDetails','years')\\\"\\n            formControlName=\\\"years\\\" matInput>\\n          <mat-error>\\n            <app-validation [labelName]='years.innerText' [validationControl]=\\\"experienceDetails.controls.years\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\"\\n          class=\\\"px-sm-20\\\">\\n          <mat-label #months translate>Months</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'experienceDetails','months')\\\" (blur)=\\\"trimTextBoxSpaces('experienceDetails','months')\\\"\\n            formControlName=\\\"months\\\" matInput>\\n          <mat-error>\\n            <app-validation [labelName]='months.innerText' [validationControl]=\\\"experienceDetails.controls.months\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"45\\\">\\n          <mat-label #specialQualifications translate>Special Qualifications</mat-label>\\n          <textarea (blur)=\\\"trimTextBoxSpaces('experienceDetails','specialQualifications')\\\" (keyup)=\\\"preventSpace($event,'experienceDetails','specialQualifications')\\\" formControlName=\\\"specialQualifications\\\" matInput></textarea>\\n          <mat-error>\\n            <app-validation [labelName]='specialQualifications.innerText'\\n              [validationControl]=\\\"experienceDetails.controls.specialQualifications\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"55\\\"\\n          class=\\\"pl-sm-20\\\">\\n          <mat-label #references translate>References</mat-label>\\n          <textarea (blur)=\\\"trimTextBoxSpaces('experienceDetails','references')\\\"  (keyup)=\\\"preventSpace($event,'experienceDetails','references')\\\" formControlName=\\\"references\\\" matInput></textarea>\\n          <mat-error>\\n            <app-validation [labelName]='references.innerText'\\n              [validationControl]=\\\"experienceDetails.controls.references\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div formArrayName=\\\"experienceListView\\\" fxLayout=\\\"column\\\"\\n        *ngFor=\\\"let itemrow of addNewRowExperienceform.controls; let i=index\\\" class=\\\"border-bottom pb-20 mb-20\\\">\\n        <div [formGroupName]=\\\"i\\\" fxLayout=\\\"column\\\">\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\">\\n            <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"34\\\" class=\\\"icon-center pr-sm-16\\\">\\n              <mat-label #StartDate translate>Start Date</mat-label>\\n              <input matInput (keyup)=\\\"forceValidation('startDate',itemrow)\\\" [matDatepicker]=\\\"startDate\\\"\\n                [max]=\\\"currentDate\\\" formControlName=\\\"startDate\\\" required>\\n              <mat-datepicker-toggle matSuffix [for]=\\\"startDate\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #startDate></mat-datepicker>\\n              <mat-error>\\n                <app-validation [labelName]='StartDate.innerText' [validationControl]=\\\"itemrow.controls.startDate\\\"\\n                  [doValidate]=\\\"true\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n            <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"36\\\"\\n              class=\\\"pr-sm-16 icon-center\\\">\\n              <mat-label #endDates translate>End Date</mat-label>\\n              <input matInput (keyup)=\\\"forceValidation('endDate',itemrow)\\\" [matDatepicker]=\\\"endDate\\\" [min]=\\\"itemrow.controls.startDate.value\\\"\\n                [max]=\\\"currentDate\\\" formControlName=\\\"endDate\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"endDate\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #endDate [startAt]=\\\"itemrow.controls.startDate.value\\\"></mat-datepicker>\\n              <mat-error>\\n                <app-validation [labelName]='endDates.innerText' [validationControl]=\\\"itemrow.controls.endDate\\\"\\n                  [doValidate]=\\\"true\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\">\\n              <mat-label #currency translate>currency</mat-label>\\n              <input  (keyup)=\\\"preventSpaceForArray($event, itemrow.controls.currency)\\\"   (blur)=\\\"trimSpacess('experienceDetails','experienceListView',i,'currency')\\\" formControlName=\\\"currency\\\" matInput>\\n              <mat-error>\\n                <app-validation [labelName]='currency.innerText' [validationControl]=\\\"itemrow.controls.currency\\\"\\n                  [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>         \\n          </div>\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\">\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\" >\\n              <mat-label #salary translate>salary</mat-label>\\n              <input  (keyup)=\\\"preventSpaceForArray($event, itemrow.controls.salary)\\\"  (blur)=\\\"trimSpacess('experienceDetails','experienceListView',i,'salary')\\\" formControlName=\\\"salary\\\" matInput>\\n              <mat-error>\\n                <app-validation [labelName]='salary.innerText' [validationControl]=\\\"itemrow.controls.salary\\\"\\n                  [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\"  class=\\\"px-sm-20\\\">\\n              <mat-label #companyName translate>Company</mat-label>\\n              <input (keyup)=\\\"preventSpaceForArray($event, itemrow.controls.companyName)\\\" (blur)=\\\"trimSpacess('experienceDetails','experienceListView',i,'companyName')\\\" formControlName=\\\"companyName\\\" matInput required>\\n              <mat-error>\\n                <app-validation [labelName]='companyName.innerText'\\n                  [validationControl]=\\\"itemrow.controls.companyName\\\" [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n              <mat-label #designation translate>designation</mat-label>\\n              <input (keyup)=\\\"preventSpaceForArray($event, itemrow.controls.designation)\\\" (blur)=\\\"trimSpacess('experienceDetails','experienceListView',i,'designation')\\\" formControlName=\\\"designation\\\" matInput required>\\n              <mat-error>\\n                <app-validation [labelName]='designation.innerText'\\n                  [validationControl]=\\\"itemrow.controls.designation\\\" [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div fxLayout=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill>\\n              <mat-label #jobDescription translate>Job Description</mat-label>\\n              <input (keyup)=\\\"preventSpaceForArray($event, itemrow.controls.description)\\\" (blur)=\\\"trimSpacess('experienceDetails','experienceListView',i,'description')\\\" formControlName=\\\"description\\\" matInput>\\n              <mat-error>\\n                <app-validation [labelName]='jobDescription.innerText'\\n                  [validationControl]=\\\"itemrow.controls.description\\\" [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div>\\n\\n          <button *ngIf=\\\"itemrow.value.isRemoveVisible\\\" mat-raised-button type=\\\"button\\\"\\n            class=\\\"text-uppercase pr-16 pl-8 mr-12\\\" color=\\\"primary\\\" (click)=\\\"deleteRow(i)\\\">\\n            <mat-icon class=\\\"pt-4 font-size-14\\\">clear</mat-icon>Remove\\n          </button>\\n\\n          <button *ngIf=\\\"itemrow.value.isAddVisible\\\" mat-raised-button color=\\\"accent\\\" class=\\\"text-uppercase pr-16 pl-8\\\"\\n            type=\\\"button\\\" (click)=\\\"addNewRow()\\\" [disabled]=\\\"isDisabled || !experienceDetails.valid\\\">\\n            <mat-icon class=\\\"pt-4 font-size-14\\\">add</mat-icon><span translate>Add</span>\\n          </button>\\n          \\n        </div>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-16\\\">\\n        <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n          {{'Previous' | translate}}\\n        </button>\\n        <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n          {{'Next' | translate}}\\n        </button>\\n      </div>\\n    </form>\\n  </mat-step>\\n\\n  <mat-step [stepControl]=\\\"contactDetails\\\">\\n    <form fxLayout=\\\"column\\\" [formGroup]=\\\"contactDetails\\\" #contactDetailsForm=\\\"ngForm\\\">\\n      <ng-template matStepLabel><span translate>contactInfo</span></ng-template>\\n      <div class=\\\"pt-24 font-size-18\\\"><span translate>contactInfo</span></div>\\n\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #email1 translate>primaryEmail</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'contactDetails','email1')\\\" (blur)=\\\"trimTextBoxSpaces('contactDetails','email1')\\\"\\n            formControlName=\\\"email1\\\" matInput required>\\n          <mat-error>\\n            <app-validation [labelName]='email1.innerText' [validationControl]=\\\"contactDetails.controls.email1\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\"\\n          class=\\\"pl-sm-24\\\">\\n          <mat-label #email2 translate>secondaryEmail</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'contactDetails','email2')\\\" (blur)=\\\"trimTextBoxSpaces('contactDetails','email2')\\\"\\n            formControlName=\\\"email2\\\" matInput>\\n          <mat-error>\\n            <app-validation [labelName]='email2.innerText' [validationControl]=\\\"contactDetails.controls.email2\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n      </div>\\n\\n      <div *ngIf=\\\"loaded\\\" fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\"\\n          class=\\\"coutline\\\">\\n          <mat-label #mobileTel translate>mobilenumber</mat-label>\\n          <input type=\\\"text\\\" required matInput formControlName=\\\"mobileTel\\\" ng2TelInput\\n            (hasError)=\\\"onError($event,'mobileTel','contactDetails')\\\" [ng2TelInputOptions]=\\\"telOptions\\\"\\n            (ng2TelOutput)=\\\"getNumber($event,'mobileTel','contactDetails')\\\"\\n            (countryChange)=\\\"onCountryChangeMobile($event,'mobileTel','contactDetails')\\\" />\\n          <mat-error>\\n            <app-validation [labelName]='mobileTel.innerText' [validationControl]=\\\"contactDetails.controls.mobileTel\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\"\\n          class=\\\"pl-sm-20 coutline\\\">\\n          <mat-label #landTel translate>landlinenumber</mat-label>\\n          <input type=\\\"text\\\" matInput formControlName=\\\"landTel\\\" ng2TelInput\\n            (hasError)=\\\"onError($event,'landTel','contactDetails')\\\" [ng2TelInputOptions]=\\\"telOptions\\\"\\n            (ng2TelOutput)=\\\"getNumber($event,'landTel','contactDetails')\\\"\\n            (countryChange)=\\\"onCountryChangeMobile($event,'landTel','contactDetails')\\\" />\\n          <mat-error>\\n            <app-validation [labelName]='landTel.innerText' [validationControl]=\\\"contactDetails.controls.landTel\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div *ngIf=\\\"loaded\\\" fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"coutline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n          fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #otherTel translate>alternatenumber</mat-label>\\n          <input type=\\\"text\\\" matInput formControlName=\\\"otherTel\\\" ng2TelInput\\n            (hasError)=\\\"onError($event,'otherTel','contactDetails')\\\" [ng2TelInputOptions]=\\\"telOptions\\\"\\n            (ng2TelOutput)=\\\"getNumber($event,'otherTel','contactDetails')\\\"\\n            (countryChange)=\\\"onCountryChangeMobile($event,'otherTel','contactDetails')\\\" />\\n          <mat-error>\\n            <app-validation [labelName]='otherTel.innerText' [validationControl]=\\\"contactDetails.controls.otherTel\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-16\\\">\\n        <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n          {{'Previous' | translate}}\\n        </button>\\n        <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n          {{'Next' | translate}}\\n        </button>\\n      </div>\\n    </form>\\n  </mat-step>\\n\\n  <mat-step [stepControl]=\\\"addressInfo\\\">\\n    <form fxLayout=\\\"column\\\" [formGroup]=\\\"addressInfo\\\" #addressInfoForm=\\\"ngForm\\\">\\n      <ng-template matStepLabel><span translate>addressInfo</span></ng-template>\\n      <div class=\\\"pt-24 font-size-18\\\"><span translate>addressInfo</span></div>\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #addressLine1 translate>addressline1</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'addressInfo','addressLine1')\\\" (blur)=\\\"trimTextBoxSpaces('addressInfo','addressLine1')\\\"\\n            formControlName=\\\"addressLine1\\\" matInput required>\\n          <mat-error>\\n            <app-validation [labelName]='addressLine1.innerText' [validationControl]=\\\"addressInfo.controls.addressLine1\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"pl-sm-20\\\"\\n          fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #addressLine2 translate>addressline2</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'addressInfo','addressLine2')\\\" (blur)=\\\"trimTextBoxSpaces('addressInfo','addressLine2')\\\"\\n            formControlName=\\\"addressLine2\\\" matInput>\\n          <mat-error>\\n            <app-validation [labelName]='addressLine2.innerText' [validationControl]=\\\"addressInfo.controls.addressLine2\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n      </div>\\n\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #addressCity translate>city</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'addressInfo','addressCity')\\\" (blur)=\\\"trimTextBoxSpaces('addressInfo','addressCity')\\\" formControlName=\\\"addressCity\\\"\\n            matInput required>\\n          <mat-error>\\n            <app-validation [labelName]='addressCity.innerText' [validationControl]=\\\"addressInfo.controls.addressCity\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"pl-sm-20\\\"\\n          fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #addressCountryId translate>country</mat-label>\\n          <mat-select formControlName=\\\"addressCountryId\\\" required (selectionChange)=\\\"countryChanged($event)\\\">\\n            <mat-option *ngFor=\\\"let country of countryOptionsSelect\\\" [value]=\\\"country.id\\\">{{country.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='addressCountryId.innerText'\\n              [validationControl]=\\\"addressInfo.controls.addressCountryId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #addressStateId translate>state</mat-label>\\n          <mat-select formControlName=\\\"addressStateId\\\" required>\\n            <mat-option *ngFor=\\\"let state of stateOptionsSelect\\\" [value]=\\\"state.id\\\">{{state.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='addressStateId.innerText'\\n              [validationControl]=\\\"addressInfo.controls.addressStateId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"pl-sm-20\\\"\\n          fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #addressPincode translate>pincode</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'addressInfo','addressPincode')\\\" (blur)=\\\"trimTextBoxSpaces('addressInfo','addressPincode')\\\" formControlName=\\\"addressPincode\\\"\\n            matInput required>\\n          <mat-error>\\n            <app-validation [labelName]='addressPincode.innerText' [validationControl]=\\\"addressInfo.controls.addressPincode\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-16\\\">\\n        <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n          {{'Previous' | translate}}\\n        </button>\\n        <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n          {{'Next' | translate}}\\n        </button>\\n      </div>\\n    </form>\\n  </mat-step>\\n\\n  <mat-step [stepControl]=\\\"passportDetails\\\" [optional]=\\\"isNestedObjectEmpty(this.passportDetails.value) && !issueDatepicker?.value && !expiryDatepicker?.value\\\">\\n    <form fxLayout=\\\"column\\\" [formGroup]=\\\"passportDetails\\\" #passportDetailsForm=\\\"ngForm\\\">\\n      <ng-template matStepLabel><span translate>Passport Info</span></ng-template>\\n      <div class=\\\"pt-24 font-size-18\\\"><span translate>Passport Info</span></div>\\n\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #passportFullName translate>Full Name</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'passportDetails','passportFullName')\\\" (blur)=\\\"trimTextBoxSpaces('passportDetails','passportFullName')\\\"\\n            formControlName=\\\"passportFullName\\\" matInput required>\\n          <mat-error>\\n            <app-validation [labelName]='passportFullName.innerText' [validationControl]=\\\"passportDetails.controls.passportFullName\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"pl-sm-20\\\"\\n          fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #passportNumber translate>Passport Number</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'passportDetails','passportNumber')\\\" (blur)=\\\"trimTextBoxSpaces('passportDetails','passportNumber')\\\"\\n            formControlName=\\\"passportNumber\\\" matInput required>\\n          <mat-error>\\n            <app-validation [labelName]='passportNumber.innerText'\\n              [validationControl]=\\\"passportDetails.controls.passportNumber\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #passportPlaceOfIssue translate>placeOfIssue</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'passportDetails','passportPlaceOfIssue')\\\" (blur)=\\\"trimTextBoxSpaces('passportDetails','passportPlaceOfIssue')\\\"\\n            formControlName=\\\"passportPlaceOfIssue\\\" matInput required>\\n          <mat-error>\\n            <app-validation [labelName]='passportPlaceOfIssue.innerText'\\n              [validationControl]=\\\"passportDetails.controls.passportPlaceOfIssue\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"pl-sm-20\\\"\\n          fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #passportIssueCountryId translate>country</mat-label>\\n          <mat-select formControlName=\\\"passportIssueCountryId\\\" required>\\n            <mat-option *ngFor=\\\"let country of countryOptionsSelect\\\" [value]=\\\"country.id\\\">{{country.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='passportIssueCountryId.innerText'\\n              [validationControl]=\\\"passportDetails.controls.passportIssueCountryId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"icon-center\\\">\\n          <mat-label #dateOfIssue translate>dateOfIssue</mat-label>\\n          <input #issueDatepicker matInput (keyup)=\\\"forceValidation('passportDateOfIssue',passportDetails)\\\"\\n            [matDatepicker]=\\\"passportDateOfIssue\\\" [max]=\\\"currentDate\\\" formControlName=\\\"passportDateOfIssue\\\" required>\\n          <mat-datepicker-toggle matSuffix [for]=\\\"passportDateOfIssue\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #passportDateOfIssue></mat-datepicker>\\n          <mat-error>\\n            <app-validation [labelName]='dateOfIssue.innerText'\\n              [validationControl]=\\\"passportDetails.controls.passportDateOfIssue\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\"\\n          class=\\\"pl-sm-20 icon-center\\\">\\n          <mat-label #expiryDate translate>expiryDate</mat-label>\\n          <input matInput #expiryDatepicker (keyup)=\\\"forceValidation('passportExpiryDate',passportDetails)\\\"\\n            [matDatepicker]=\\\"passportExpiryDate\\\" formControlName=\\\"passportExpiryDate\\\" required [min]=\\\"passportDetails.value.passportDateOfIssue\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"passportExpiryDate\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #passportExpiryDate></mat-datepicker>\\n          <mat-error>\\n            <app-validation [labelName]='expiryDate.innerText'\\n              [validationControl]=\\\"passportDetails.controls.passportExpiryDate\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-16\\\">\\n        <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n          {{'Previous' | translate}}\\n        </button>\\n        <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n          {{'Next' | translate}}\\n        </button>\\n      </div>\\n    </form>\\n  </mat-step>\\n\\n\\n  <mat-step [stepControl]=\\\"educationDetails\\\">\\n    <form fxLayout=\\\"column\\\" [formGroup]=\\\"educationDetails\\\" #educationDetailsForm=\\\"ngForm\\\">\\n      <ng-template matStepLabel><span translate>educationDetails</span></ng-template>\\n      <div class=\\\"pt-24 font-size-18\\\"><span translate>educationDetails</span></div>\\n      <div formArrayName=\\\"educationalListView\\\" fxLayout=\\\"column\\\"\\n        *ngFor=\\\"let itemrow of addNewRowEducationDetailsform.controls; let i=index\\\" class=\\\"border-bottom pb-20 mb-20\\\">\\n        <div [formGroupName]=\\\"i\\\" fxLayout=\\\"column\\\">\\n\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\" fxFlex=\\\"100\\\">\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n              <mat-label #university translate>university</mat-label>\\n              <input (keyup)=\\\"preventSpaceForArray($event, itemrow.controls.university)\\\"  (blur)=\\\"trimSpacess('educationDetails','educationalListView',i,'university')\\\" formControlName=\\\"university\\\" matInput>\\n              <mat-error>\\n                <app-validation [labelName]='university.innerText' [validationControl]=\\\"itemrow.controls.university\\\"\\n                  [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\"\\n              class=\\\"px-sm-24\\\">\\n              <mat-label #institution translate>institute</mat-label>\\n              <input (keyup)=\\\"preventSpaceForArray($event, itemrow.controls.institution)\\\"  (blur)=\\\"trimSpacess('educationDetails','educationalListView',i,'institution')\\\" formControlName=\\\"institution\\\" matInput>\\n              <mat-error>\\n                <app-validation [labelName]='institution.innerText' [validationControl]=\\\"itemrow.controls.institution\\\"\\n                  [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n              <mat-label #qualification translate>Qualification/ Course</mat-label>\\n              <input (keyup)=\\\"preventSpaceForArray($event, itemrow.controls.qualification)\\\"  (blur)=\\\"trimSpacess('educationDetails','educationalListView',i,'qualification')\\\" formControlName=\\\"qualification\\\" matInput required>\\n              <mat-error>\\n                <app-validation [labelName]='qualification.innerText'\\n                  [validationControl]=\\\"itemrow.controls.qualification\\\" [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n              <mat-label #specialization translate>specialization</mat-label>\\n              <input (keyup)=\\\"preventSpaceForArray($event, itemrow.controls.specialization)\\\" (blur)=\\\"trimSpacess('educationDetails','educationalListView',i,'specialization')\\\" formControlName=\\\"specialization\\\" matInput>\\n              <mat-error>\\n                <app-validation [labelName]='specialization.innerText'\\n                  [validationControl]=\\\"itemrow.controls.specialization\\\" [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\"\\n              class=\\\"px-sm-24\\\">\\n              <mat-label #result translate>result</mat-label>\\n              <input (keyup)=\\\"preventSpaceForArray($event, itemrow.controls.result)\\\" (keyup)=\\\"preventSpace($event)\\\" (blur)=\\\"trimSpacess('educationDetails','educationalListView',i,'result')\\\" formControlName=\\\"result\\\" matInput>\\n              <mat-error>\\n                <app-validation [labelName]='result.innerText' [validationControl]=\\\"itemrow.controls.result\\\"\\n                  [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\" class=\\\"icon-center\\\">\\n              <mat-label #eduStartDate translate>Start Date</mat-label>\\n              <input matInput (keyup)=\\\"forceValidation('startDate',itemrow)\\\" [matDatepicker]=\\\"startDate\\\"\\n                required [max]=\\\"currentDate\\\" formControlName=\\\"startDate\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"startDate\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #startDate></mat-datepicker>\\n              <mat-error>\\n                <app-validation [labelName]='eduStartDate.innerText' [validationControl]=\\\"itemrow.controls.startDate\\\"\\n                  [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\"\\n              class=\\\"px-sm-20 icon-center\\\">\\n              <mat-label #eduEndDate translate>End Date</mat-label>\\n              <input matInput (keyup)=\\\"forceValidation('endDate',itemrow)\\\" [matDatepicker]=\\\"endDate\\\" [min]=\\\"itemrow.controls.startDate.value\\\"\\n                [max]=\\\"currentDate\\\" formControlName=\\\"endDate\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"endDate\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #endDate></mat-datepicker>\\n              <mat-error>\\n                <app-validation [labelName]='eduEndDate.innerText' [validationControl]=\\\"itemrow.controls.endDate\\\"\\n                  [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n\\n        </div>\\n        <div class=\\\"pt-12\\\">\\n          <button *ngIf=\\\"itemrow.value.isRemoveVisible\\\" mat-raised-button type=\\\"button\\\"\\n            class=\\\"text-uppercase pr-16 pl-8 mr-12\\\" color=\\\"primary\\\" (click)=\\\"deleteRowEducation(i)\\\">\\n            <mat-icon class=\\\"pt-4 font-size-14\\\">clear</mat-icon>Remove\\n          </button>\\n\\n          <button *ngIf=\\\"itemrow.value.isAddVisible\\\" mat-raised-button color=\\\"accent\\\" class=\\\"text-uppercase pr-16 pl-8\\\"\\n            type=\\\"button\\\" (click)=\\\"addNewRowEducation()\\\" [disabled]=\\\"itemrow.invalid\\\">\\n            <mat-icon class=\\\"pt-4 font-size-14\\\">add</mat-icon><span translate>Add</span>\\n          </button>\\n        </div>\\n\\n\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-16\\\">\\n        <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n          {{'Previous' | translate}}\\n        </button>\\n        <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n          {{'Next' | translate}}\\n        </button>\\n      </div>\\n\\n    </form>\\n  </mat-step>\\n\\n  <mat-step [stepControl]=\\\"trainingDetails\\\" [optional]=\\\"isNestedObjectEmptyy(this.trainingDetails.value)\\\">\\n    <form fxLayout=\\\"column\\\" [formGroup]=\\\"trainingDetails\\\" #trainingDetailsForm=\\\"ngForm\\\">\\n      <ng-template matStepLabel><span translate>trainingDetails</span></ng-template>\\n      <div class=\\\"pt-24 font-size-18\\\"><span translate>trainingDetails</span></div>\\n      <div formArrayName=\\\"trainingListView\\\" fxLayout=\\\"column\\\"\\n        *ngFor=\\\"let itemrow of addNewRowTrainingDetailsform.controls; let i=index\\\" class=\\\"border-bottom pb-20 mb-20\\\">\\n        <div [formGroupName]=\\\"i\\\" fxFlexFill fxLayout=\\\"column\\\">\\n\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\" fxFlex=\\\"100\\\">\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n              <mat-label #name translate>Name</mat-label>\\n              <input (keyup)=\\\"preventSpaceForArray($event, itemrow.controls.name)\\\" required (blur)=\\\"trimSpacess('trainingDetails','trainingListView',i,'name')\\\"\\n                formControlName=\\\"name\\\" matInput>\\n              <mat-error>\\n                <app-validation [labelName]='name.innerText' [validationControl]=\\\"itemrow.controls.name\\\"\\n                  [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\"\\n              class=\\\"px-sm-20 icon-center\\\">\\n              <mat-label #trStartDate translate>Start Date</mat-label>\\n              <input matInput (keyup)=\\\"forceValidation('startDate',itemrow)\\\" [matDatepicker]=\\\"startDate\\\"\\n                [max]=\\\"currentDate\\\" required formControlName=\\\"startDate\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"startDate\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #startDate></mat-datepicker>\\n              <mat-error>\\n                <app-validation [labelName]='trStartDate.innerText' [validationControl]=\\\"itemrow.controls.startDate\\\"\\n                  [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\" class=\\\"icon-center\\\">\\n              <mat-label #trEndDate translate>End Date</mat-label>\\n              <input matInput (keyup)=\\\"forceValidation('endDate',itemrow)\\\" [matDatepicker]=\\\"endDate\\\" [min]=\\\"itemrow.controls.startDate.value\\\"\\n                [max]=\\\"currentDate\\\" formControlName=\\\"endDate\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"endDate\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #endDate></mat-datepicker>\\n              <mat-error>\\n                <app-validation [labelName]='trEndDate.innerText' [validationControl]=\\\"itemrow.controls.endDate\\\"\\n                  [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"pt-sm-12\\\">\\n            <mat-label #description translate>Description</mat-label>\\n            <textarea (keyup)=\\\"preventSpaceForArray($event, itemrow.controls.description)\\\" (blur)=\\\"trimSpacess('trainingDetails','trainingListView',i,'description')\\\" formControlName=\\\"description\\\" matInput></textarea>\\n            <mat-error>\\n              <app-validation [labelName]='description.innerText' [validationControl]=\\\"itemrow.controls.description\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <!-- </div> -->\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n              <mat-label #company translate>Intitution / Company</mat-label>\\n              <input (keyup)=\\\"preventSpaceForArray($event, itemrow.controls.institute)\\\" required (blur)=\\\"trimSpacess('trainingDetails','trainingListView',i,'institute')\\\"\\n                formControlName=\\\"institute\\\" matInput>\\n              <mat-error>\\n                <app-validation [labelName]='company.innerText' [validationControl]=\\\"itemrow.controls.institute\\\"\\n                  [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\"\\n              class=\\\"pl-sm-20\\\">\\n              <mat-label #location translate>location</mat-label>\\n              <input (keyup)=\\\"preventSpaceForArray($event, itemrow.controls.location)\\\" (blur)=\\\"trimSpacess('trainingDetails','trainingListView',i,'location')\\\"\\n                formControlName=\\\"location\\\" matInput>\\n              <mat-error>\\n                <app-validation [labelName]='location.innerText' [validationControl]=\\\"itemrow.controls.location\\\"\\n                  [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n        </div>\\n        <div class=\\\"pt-12\\\">\\n          <button *ngIf=\\\"itemrow.value.isRemoveVisible\\\" mat-raised-button type=\\\"button\\\"\\n            class=\\\"text-uppercase pr-16 pl-8 mr-12\\\" color=\\\"primary\\\" (click)=\\\"deleteRowTraining(i)\\\">\\n            <mat-icon class=\\\"pt-4 font-size-14\\\">clear</mat-icon>Remove\\n          </button>\\n\\n          <button *ngIf=\\\"itemrow.value.isAddVisible\\\" mat-raised-button color=\\\"accent\\\" class=\\\"text-uppercase pr-16 pl-8\\\"\\n            type=\\\"button\\\" (click)=\\\"addNewRowTraining()\\\" [disabled]=\\\"!trainingDetails.valid\\\">\\n            <mat-icon class=\\\"pt-4 font-size-14\\\">add</mat-icon><span translate>Add</span>\\n          </button>\\n        </div>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-16\\\">\\n        <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n          {{'Previous' | translate}}\\n        </button>\\n        <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n          {{'Next' | translate}}\\n        </button>\\n      </div>\\n\\n    </form>\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"uploadImages\\\" [optional]=\\\"isNestedObjectEmpty(uploadImages.value)\\\">\\n    <form fxLayout=\\\"column\\\" [formGroup]=\\\"uploadImages\\\" #attachmentsForm=\\\"ngForm\\\">\\n      <ng-template matStepLabel translate><span translate>Photo Attachment</span></ng-template>\\n      <div class=\\\"py-24 font-size-18\\\"><span translate>Photo</span></div>\\n      <div fxLayout=\\\"row\\\" class=\\\"branding-image\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"my-24\\\">\\n        <div fxLayout=\\\"column\\\" fxFlex=\\\"50\\\" fxLayoutAlign=\\\"center end\\\" class=\\\"pr-36\\\">\\n          <div fxLayout=\\\"row\\\">\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"photoImgInput.value='';photoImgInput.click()\\\">{{'Upload Image' | translate}}\\n            </button>\\n            <button mat-icon-button>\\n              <mat-icon class=\\\"mb-4 grey-600-fg\\\" [style.visibility]=\\\"photoImgProp?.src ? 'visible' : 'hidden'\\\"\\n                (click)=\\\"photoImgInput.value='';clearImages()\\\">highlight_off</mat-icon>\\n            </button>\\n            <input [accept]=\\\"'image/jpeg,image/jpg,image/png,image/*'\\\" id=\\\"photoImgInput\\\"\\n              (change)=\\\"imgChanged(photoImgInput.files)\\\" fxHide type=\\\"file\\\" #photoImgInput>\\n          </div>\\n          <div class=\\\"pt-8 logo-name mr-36 break-word\\\" [style.visibility]=\\\"uploadImages?.value?.photoFileNameWithExtension ? 'visible' : 'hidden'\\\" [style.display]=\\\"photoImgProp?.src ? 'block' : 'none'\\\">\\n            {{uploadImages?.value?.photoFileNameWithExtension}}</div>\\n        </div>\\n        <div fxLayout=\\\"column\\\" fxFlex=\\\"50\\\" fxLayoutAlign=\\\"center start\\\">\\n          <div class=\\\"border symbolImage w-200 h-200\\\">\\n            <img class=\\\"w-200 h-200\\\" [src]=\\\"photoImgProp?.src\\\" *ngIf=\\\"photoImgProp?.src\\\" alt=\\\"Launchship\\\" />\\n          </div>\\n        </div>\\n      </div>\\n      <mat-divider></mat-divider>\\n      <div class=\\\"py-24 font-size-18\\\"><span translate>Resume</span></div>\\n\\n      <div fxLayout=\\\"row\\\" class=\\\"branding-image\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"my-24\\\">\\n        <div fxLayout=\\\"column\\\" fxFlex=\\\"30\\\" fxLayoutAlign=\\\"center start\\\" class=\\\"pr-36\\\">\\n          <div fxLayout=\\\"row\\\">\\n            <button mat-raised-button type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"resumeImgInput.value='';resumeImgInput.click()\\\">\\n              <mat-icon class=\\\"mr-8\\\">attachment</mat-icon>{{'Upload Resume' | translate}}\\n            </button>\\n            <button mat-icon-button type=\\\"button\\\">\\n              <mat-icon class=\\\"mb-4 grey-600-fg\\\" [style.display]=\\\"resumeImgProp?.src ? 'block' : 'none'\\\"\\n                (click)=\\\"resumeImgInput.value='';clearImages(true)\\\">highlight_off</mat-icon>\\n            </button>\\n            <input [accept]=\\\"'.doc,.docx,image/jpeg,image/jpg,image/png,application/pdf,image/*'\\\" id=\\\"resumeImgInput\\\"\\n              (change)=\\\"imgChanged(resumeImgInput.files,true)\\\" fxHide type=\\\"file\\\" #resumeImgInput>\\n          </div>\\n          <div class=\\\"pt-8 logo-name break-word\\\" [style.visibility]=\\\"uploadImages?.value?.FileNameWithExtension ? 'visible' : 'hidden'\\\" [style.display]=\\\"resumeImgProp?.src ? 'block' : 'none'\\\">\\n            {{uploadImages?.value?.FileNameWithExtension}}</div>\\n        </div>\\n\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mr-sm-20 py-24 mt-sm-24\\\">\\n        <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n          {{'Previous' | translate}}\\n        </button>\\n        <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n          {{'Next' | translate}}\\n        </button>\\n      </div>\\n    </form>\\n  </mat-step>\\n\\n  <mat-step [stepControl]=\\\"addressInfo\\\">\\n    <form fxLayout=\\\"column\\\" [formGroup]=\\\"addressInfo\\\" class=\\\"mt-sm-120\\\">\\n      <ng-template matStepLabel><span translate>Complete</span></ng-template>\\n      <div fxFlex=\\\"80\\\" class=\\\"text-center font-size-18 m-auto pb-20 pt-8\\\" translate>Please verify the entered information before your final submit</div>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-16\\\">\\n        <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n          {{'Previous' | translate}}\\n        </button>\\n        <button mat-raised-button matStepperNext type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\"\\n          (click)=\\\"saveJobApplication()\\\">\\n          {{'Submit' | translate}}\\n        </button>\\n      </div>\\n    </form>\\n  </mat-step>\\n\\n\\n\\n</mat-horizontal-stepper>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3RhZmYvc3RhZmYtYWRtaXNzaW9ucy9hZGQtam9iLWFwcGxpY2F0aW9ucy9hZGQtam9iLWFwcGxpY2F0aW9ucy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, Input, Output, EventEmitter, ViewChild, SimpleChanges, ElementRef, ChangeDetectorRef, OnChanges } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { FormGroup, FormBuilder, Validators, FormControl, FormArray } from '@angular/forms';\nimport { Pattern, AppSettings } from 'app/app.constants';\nimport { TypeService } from 'app/service/academic-service/api/type.service';\nimport { StateService } from 'app/service/academic-service/api/state.service';\nimport { CommonService } from 'app/service/common.service';\nimport { CountryService } from 'app/service/academic-service/api/country.service';\nimport { StaffJobApplicationService } from 'app/service/staff/staff-job-application.service';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { JobApplicationViewModel } from '../model/job-application-view-model';\n\n\n@Component({\n  selector: 'app-add-job-applications',\n  templateUrl: './add-job-applications.component.html',\n  styleUrls: ['./add-job-applications.component.scss']\n})\nexport class AddJobApplicationsComponent extends CommonComponent implements OnInit, OnChanges {\n  @Input() resetStepper: boolean;\n  @Output() cancel: EventEmitter<any> = new EventEmitter<any>();\n  @ViewChild('stepper') stepper;\n  @ViewChild('resumeImgInput') resumeImgInput: ElementRef;\n  @ViewChild('photoImgInput') photoImgInput: ElementRef;\n  @ViewChild('applicantDetailsForm') applicantDetailsFormVC;\n  @ViewChild('experienceDetailsForm') experienceDetailsFormVC;\n  @ViewChild('contactDetailsForm') contactDetailsFormVC;\n  @ViewChild('addressInfoForm') addressInfoFormVC;\n  @ViewChild('passportDetailsForm') passportDetailsFormVC;\n  @ViewChild('educationDetailsForm') educationDetailsFormVC;\n  @ViewChild('trainingDetailsForm') trainingDetailsFormVC;\n  @ViewChild('attachmentsForm') attachmentsFormVC;\n  resumeImgProp: any;\n  photoImgProp: any;\n  uploadImages: FormGroup;\n  trainingDetails: FormGroup;\n  applicantDetails: FormGroup;\n  experienceDetails: FormGroup;\n  photonResumeDetails: FormGroup;\n  educationDetails: FormGroup;\n  contactDetails: FormGroup;\n  passportDetails: FormGroup;\n  genders: Array<any> = [];\n  experienceLists: FormGroup;\n  addressInfo: FormGroup;\n  jobApplicantDetails: JobApplicationViewModel;\n  countryOptionsSelect: any;\n  stateOptionsSelect: any[];\n  maritalTypes: any[];\n  casts: any;\n  religions: any;\n  validate = true;\n  HttpStatus: any;\n  currentDate = this.getDefaultDate();\n  telOptions = { initialCountry: 'in', preferredCountries: ['in', 'us', 'gb'], separateDialCode: true, };\n  intialCountryCode = {\n    mobileTel: this.getcontactInfo('+91'),\n    otherTel: this.getcontactInfo('+91'),\n    landTel: this.getcontactInfo('+91')\n  };\n  finalMobileNumbers = {\n    mobileTel: this.getcontactInfo(),\n    otherTel: this.getcontactInfo(),\n    landTel: this.getcontactInfo()\n  };\n\n  interactedStepperIndex: Number = 0;\n  suffixType: any;\n  loaded = false;\n  optionalMenus: Array<any> = [];\n\n  constructor(public dialogRef: MatDialog, private _formBuilder: FormBuilder, private typeService: TypeService,\n    public commonService: CommonService, private countryService: CountryService,\n    private changeDetector: ChangeDetectorRef,\n    private stateService: StateService, private staffJobApplicationService: StaffJobApplicationService, public snackBar: MatSnackBar) {\n    super();\n    this.optionalMenus = [1, 4, 6];\n    this.initilizeForm();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n\n    this.finalMobileNumbers = {\n      mobileTel: this.getcontactInfo(),\n      otherTel: this.getcontactInfo(),\n      landTel: this.getcontactInfo()\n    };\n    this.interactedStepperIndex = 0;\n  }\n\n  intializeModel(): void {\n    this.jobApplicantDetails = {\n      seekingPosition: null,\n      passportFullName: null,\n      passportNumber: null,\n      passportDateOfIssue: null,\n      passportPlaceOfIssue: '',\n      passportExpiryDate: null,\n      passportIssueCountryId: 0,\n      workExperienceYear: 0,\n      workExperienceMonth: 0,\n      specialityQualification: '',\n      reference: '',\n      attachment: {\n        fileName: null,\n        fileValue: null\n      }\n    };\n    this.jobApplicantDetails.applicationPerson = {\n      personTitleTypeId: 0,\n      genderTypeId: 0,\n      middleName: '',\n      firstName: '',\n      lastName: '',\n      aadhaarNumber: 0,\n      panNumber: '',\n      nationalityCountryId: 0,\n      religionTypeId: 0,\n      casteTypeId: 0,\n      email1: '',\n      email2: '',\n      mobileTel: '',\n      landTel: '',\n      otherTel: '',\n      addressLine1: '',\n      addressLine2: '',\n      addressCity: '',\n      addressCountryId: 0,\n      addressStateId: 0,\n      addressPincode: '',\n      dateOfBirth: null,\n      languagesSpoken: '',\n      maritalStatusTypeId: 0,\n      attachment: {\n        fileName: null,\n        fileValue: null\n      }\n    };\n    this.jobApplicantDetails.applicantEducationDetails = [{\n      qualification: '',\n      startDate: null,\n      endDate: null,\n      university: '',\n      institution: '',\n      specialization: '',\n      result: ''\n    }];\n    this.jobApplicantDetails.applicantExperienceDetails = [{\n      companyName: '',\n      startDate: null,\n      endDate: null,\n      designation: '',\n      description: '',\n      salary: 0,\n      reasonForChange: ''\n\n    }];\n    this.jobApplicantDetails.applicantTrainingDetails = [{\n      name: '',\n      startDate: null,\n      endDate: null,\n      location: '',\n      description: '',\n      institute: '',\n      result: ''\n    }];\n  }\n\n\n  ngOnInit(): void {\n    this.intializeModel();\n    this.genderTypeList();\n    this.countriesList();\n    this.maritalStatusTypes();\n    this.getCast();\n    this.getReligion();\n    this.suffixTypeList();\n    this.changeDetector.detectChanges();\n    this.loaded = true;\n    this.changeDetector.detectChanges();\n  }\n\n\n  getcontactInfo(data = null): object {\n    const contactInfo = {\n      contactDetails: data,\n    };\n    return contactInfo;\n  }\n\n  // onCancelClick\n  onCancel(): void {\n    this.interactedStepperIndex = 0;\n    this.stepper.reset();\n    this.applicantDetailsFormVC.resetForm();\n    this.experienceDetailsFormVC.resetForm();\n    this.addressInfoFormVC.resetForm();\n    this.contactDetailsFormVC.resetForm();\n    this.passportDetailsFormVC.resetForm();\n    this.educationDetailsFormVC.resetForm();\n    this.trainingDetailsFormVC.resetForm();\n    this.attachmentsFormVC.resetForm();\n    this.clearImages();\n    this.clearImages(true);\n    this.cancel.emit(true);\n    const control = <FormArray>this.experienceDetails.controls['experienceListView'];\n    for (let i = control.length - 1; i >= 0; i--) {\n      control.removeAt(i);\n    }\n    control.push(this.initItemRows());\n  }\n\n  initilizeForm(): void {\n    this.applicantDetailsForm();\n    this.experienceDetailsForm();\n    this.contactDetailsForm();\n    this.addressInfoForm();\n    this.passportDetailsForm();\n    this.educationalDetailsForm();\n    this.trainingDetailsForm();\n    this.attachmentDetailsForm();\n    this.uploadImages = this._formBuilder.group({\n      FileNameWithExtension: [null],\n      FileValue: [null],\n      photoFileNameWithExtension: [null],\n      photoFileValue: [null]\n    });\n  }\n\n  applicantDetailsForm(): void {\n    this.applicantDetails = this._formBuilder.group({\n      personTitleTypeId: [null],\n      firstName: ['', [Validators.required, Validators.maxLength(45)]],\n      lastName: [null, [Validators.required, Validators.maxLength(45)]],\n      middleName: [null, [Validators.maxLength(45)]],\n      seekingPosition: [null, Validators.maxLength(45)],\n      genderTypeId: [null, Validators.required],\n      maritalStatusTypeId: [null],\n      aadhaarNumber: [null, [Validators.pattern(Pattern.AADHAR_PATTERN)]],\n      dateOfBirth: ['', [Validators.required]],\n      panNumber: [null, [Validators.maxLength(10), Validators.pattern(Pattern.PAN_PATTERN)]],\n      nationalityCountryId: [null, Validators.required],\n      religionTypeId: [null],\n      languagesSpoken: [null, [Validators.maxLength(45)]],\n      casteTypeId: [null],\n    });\n  }\n\n  contactDetailsForm(): void {\n    this.contactDetails = this._formBuilder.group({\n      email2: ['', [Validators.maxLength(90), Validators.pattern(Pattern.EMAIL_PATTERN)]],\n      mobileTel: ['', [Validators.required, Validators.pattern(Pattern.INTL_MOBILE_PATTERN), Validators.maxLength(45)]],\n      landTel: ['', [Validators.pattern(Pattern.INTL_MOBILE_PATTERN), Validators.maxLength(45)]],\n      otherTel: ['', [Validators.pattern(Pattern.INTL_MOBILE_PATTERN), Validators.maxLength(45)]],\n      email1: ['', [Validators.required, Validators.maxLength(90), Validators.pattern(Pattern.EMAIL_PATTERN)]],\n    });\n  }\n  addressInfoForm(): void {\n    this.addressInfo = this._formBuilder.group({\n      addressLine1: ['', [Validators.required, Validators.maxLength(45)]],\n      addressLine2: ['', [Validators.maxLength(45)]],\n      addressCountryId: ['', Validators.required],\n      addressStateId: ['', Validators.required],\n      addressCity: ['', [Validators.maxLength(45)]],\n      addressPincode: ['', [Validators.required, Validators.pattern(Pattern.PINCODE_PATTERN)]]\n    });\n  }\n  passportDetailsForm(): void {\n    this.passportDetails = this._formBuilder.group({\n      passportNumber: [null, [Validators.required, Validators.maxLength(15)]],\n      passportFullName: [null, [Validators.required, Validators.maxLength(45)]],\n      passportPlaceOfIssue: [null, [Validators.required, Validators.maxLength(45)]],\n      passportIssueCountryId: [null, Validators.required],\n      passportDateOfIssue: [null, Validators.required],\n      passportExpiryDate: [null, Validators.required]\n    });\n  }\n\n  attachmentDetailsForm(): void {\n    this.photonResumeDetails = this._formBuilder.group({});\n  }\n\n  experienceDetailsForm(): void {\n    this.experienceDetails = this._formBuilder.group({\n      years: [null, [Validators.max(100), Validators.pattern(Pattern.NUMBER_PATTERN)]],\n      months: [null, [Validators.pattern(Pattern.NUMBER_PATTERN), Validators.max(11)]],\n      specialQualifications: [null],\n      references: [null],\n      experienceListView: this._formBuilder.array([this.initItemRows()]),\n    });\n  }\n\n  // list all your form controls here, which belongs to your form array\n  initItemRows(): FormGroup {\n    return this._formBuilder.group({\n      startDate: new FormControl(null, [Validators.required]),\n      endDate: new FormControl(null),\n      currency: new FormControl(null, Validators.maxLength(4)),\n      salary: new FormControl(null, [Validators.min(1.00), Validators.max(99999999.99), Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS)]),\n      companyName: new FormControl(null, [Validators.required, Validators.maxLength(45)]),\n      designation: new FormControl(null, [Validators.required, Validators.maxLength(45)]),\n      description: new FormControl(null, Validators.maxLength(180)),\n      isAddVisible: Boolean(true),\n      isRemoveVisible: Boolean(false),\n    });\n  }\n\n  // return type for educaion details form  - addNewRowSchoolScheduleform\n  get addNewRowExperienceform(): FormArray {\n    this.updateAddRemoveRow();\n    return <FormArray>this.experienceDetails.get('experienceListView');\n  }\n\n  // Adding assessmentSubCategory details onClick ADD\n  addNewRow(): any {\n    // control refers to your formarray\n    const control = <FormArray>this.experienceDetails.controls['experienceListView'];\n\n    // add new formgroup\n    control.push(this.initItemRows());\n\n    this.updateAddRemoveRow();\n    this.stepper.selected.interacted = false;\n    this.setStepperInfo(this.stepper, 'experienceDetails');\n  }\n\n  // Deleting a row of assessmentSubCategory details onClick ReMove\n  deleteRow(index: number): void {\n    // control refers to your formarray\n    const control = <FormArray>this.experienceDetails.controls['experienceListView'];\n    // remove the chosen row\n    control.removeAt(index);\n  }\n\n  updateAddRemoveRow(): void {\n    const i = this.experienceDetails.controls.experienceListView.value.length;\n    if (this.experienceDetails.controls.experienceListView.value.length > 1) {\n      this.experienceDetails.controls.experienceListView.value.forEach(e => {\n        e.isAddVisible = false;\n        e.isRemoveVisible = true;\n      });\n      this.experienceDetails.controls.experienceListView.value[i - 1].isAddVisible = true;\n      this.experienceDetails.controls.experienceListView.value[i - 1].isRemoveVisible = true;\n    }\n    else if (this.experienceDetails.controls.experienceListView.value.length === 1) {\n      this.experienceDetails.controls.experienceListView.value[i - 1].isAddVisible = true;\n      this.experienceDetails.controls.experienceListView.value[i - 1].isRemoveVisible = false;\n    }\n  }\n\n  //#region  Education Details FormArray\n  educationalDetailsForm(): void {\n    this.educationDetails = this._formBuilder.group({\n      educationalListView: this._formBuilder.array([this.initEducationDetailsItemRows()]),\n    });\n  }\n\n  // list all your form controls here, which belongs to your form array\n  initEducationDetailsItemRows(): FormGroup {\n    return this._formBuilder.group({\n      university: new FormControl(null, [Validators.maxLength(45)]),\n      institution: new FormControl(null, [Validators.maxLength(45)]),\n      qualification: new FormControl(null, [Validators.required, Validators.maxLength(45)]),\n      specialization: new FormControl(null, [Validators.maxLength(180)]),\n      result: new FormControl(null, [Validators.maxLength(45)]),\n      startDate: new FormControl(null, [Validators.required]),\n      endDate: new FormControl(null),\n      isAddVisible: Boolean(true),\n      isRemoveVisible: Boolean(false),\n    });\n  }\n\n  // return type for educaion details form  - addNewRowSchoolScheduleform\n  get addNewRowEducationDetailsform(): FormArray {\n    this.updateAddRemoveRowEducation();\n    return <FormArray>this.educationDetails.get('educationalListView');\n  }\n\n  // Adding assessmentSubCategory details onClick ADD\n  addNewRowEducation(): any {\n    // control refers to your formarray\n    const controlArray = <FormArray>this.educationDetails.controls['educationalListView'];\n    // add new formgroup\n    controlArray.push(this.initEducationDetailsItemRows());\n    // disable stepper interaction \n    this.updateAddRemoveRowEducation();\n    this.stepper._steps._results[this.stepper.selectedIndex].interacted = false;\n  }\n\n  // Deleting a row of assessmentSubCategory details onClick ReMove\n  deleteRowEducation(index: number): void {\n    // control refers to your formarray\n    const control = <FormArray>this.educationDetails.controls['educationalListView'];\n    // remove the chosen row \n    control.removeAt(index);\n  }\n\n  updateAddRemoveRowEducation(): void {\n    const i = this.educationDetails.controls.educationalListView.value.length;\n    if (this.educationDetails.controls.educationalListView.value.length > 1) {\n      this.educationDetails.controls.educationalListView.value.forEach(e => {\n        e.isAddVisible = false;\n        e.isRemoveVisible = true;\n      });\n      this.educationDetails.controls.educationalListView.value[i - 1].isAddVisible = true;\n      this.educationDetails.controls.educationalListView.value[i - 1].isRemoveVisible = true;\n    }\n    else if (this.educationDetails.controls.educationalListView.value.length === 1) {\n      this.educationDetails.controls.educationalListView.value[i - 1].isAddVisible = true;\n      this.educationDetails.controls.educationalListView.value[i - 1].isRemoveVisible = false;\n    }\n  }\n  //#endregion EducationDetails\n\n  //#region  Training Details FormArray\n  trainingDetailsForm(): void {\n    this.trainingDetails = this._formBuilder.group({\n      trainingListView: this._formBuilder.array([this.initTrainingItemRows()]),\n    });\n  }\n  // list all your form controls here, which belongs to your form array\n  initTrainingItemRows(): FormGroup {\n    return this._formBuilder.group({\n      name: new FormControl(null, [Validators.required, Validators.maxLength(45)]),\n      description: new FormControl(null),\n      institute: new FormControl(null, [Validators.required, Validators.maxLength(45)]),\n      location: new FormControl(null),\n      startDate: new FormControl(null, [Validators.required]),\n      endDate: new FormControl(null),\n      isAddVisible: Boolean(true),\n      isRemoveVisible: Boolean(false),\n    });\n  }\n\n  // return type for educaion details form  - addNewRowSchoolScheduleform\n  get addNewRowTrainingDetailsform(): FormArray {\n    this.updateAddRemoveRowTraining();\n    return <FormArray>this.trainingDetails.get('trainingListView');\n  }\n\n  // Adding assessmentSubCategory details onClick ADD\n  addNewRowTraining(): any {\n    // control refers to your formarray\n    const control = <FormArray>this.trainingDetails.controls['trainingListView'];\n    // add new formgroup\n    control.push(this.initTrainingItemRows());\n    this.updateAddRemoveRowEducation();\n  }\n\n  // Deleting a row of assessmentSubCategory details onClick ReMove\n  deleteRowTraining(index: number): void {\n    // control refers to your formarray\n    const control = <FormArray>this.trainingDetails.controls['trainingListView'];\n    // remove the chosen row\n    control.removeAt(index);\n  }\n\n  updateAddRemoveRowTraining(): void {\n    const i = this.trainingDetails.controls.trainingListView.value.length;\n    if (this.trainingDetails.controls.trainingListView.value.length > 1) {\n      this.trainingDetails.controls.trainingListView.value.forEach(e => {\n        e.isAddVisible = false;\n        e.isRemoveVisible = true;\n      });\n      this.trainingDetails.controls.trainingListView.value[i - 1].isAddVisible = true;\n      this.trainingDetails.controls.trainingListView.value[i - 1].isRemoveVisible = true;\n    }\n    else if (this.trainingDetails.controls.trainingListView.value.length === 1) {\n      this.trainingDetails.controls.trainingListView.value[i - 1].isAddVisible = true;\n      this.trainingDetails.controls.trainingListView.value[i - 1].isRemoveVisible = false;\n    }\n  }\n  //#endregion Training Details FormArray\n\n\n\n  // gender List\n  genderTypeList(): void {\n    this.typeService.typeByCodeBasedOnCategory().subscribe(response => {\n      this.genders = response;\n    });\n  }\n\n  saveJobApplication(): void {\n    this.setModelData();\n    this.staffJobApplicationService.createJobApplication(this.jobApplicantDetails).subscribe(res => this.response(res), error => {\n      this.errorResponse(error);\n    });\n    this.scrollIntoView('app-table');\n  }\n\n\n  response(response: any): void {\n    document.getElementById('resetButtonStepper').click();\n    this.openSnackBar(response.messages.ResultMessage);\n  }\n\n  setModelData(): void {\n    if (this.uploadImages !== undefined) {\n      if (this.uploadImages.controls['FileNameWithExtension'].value !== undefined && this.uploadImages.controls['FileNameWithExtension'].value !== null) {\n        this.jobApplicantDetails.attachment.fileName = this.uploadImages.controls['FileNameWithExtension'].value;\n        this.jobApplicantDetails.attachment.fileValue = this.uploadImages.controls['FileValue'].value;\n      }\n\n      if (this.uploadImages.controls['photoFileNameWithExtension'].value !== undefined && this.uploadImages.controls['photoFileNameWithExtension'].value !== null) {\n        this.jobApplicantDetails.applicationPerson.attachment.fileName = this.uploadImages.controls['photoFileNameWithExtension'].value;\n        this.jobApplicantDetails.applicationPerson.attachment.fileValue = this.uploadImages.controls['photoFileValue'].value;\n      }\n\n    }\n\n    Object.assign(this.jobApplicantDetails.applicationPerson, this.contactDetails.value, this.addressInfo.value, this.applicantDetails.value);\n    Object.assign(this.jobApplicantDetails, this.passportDetails.value);\n    // Object.assign(this.jobApplicantDetails.applicationPerson, this.finalMobileNumbers);\n    this.jobApplicantDetails.seekingPosition = this.applicantDetails.controls['seekingPosition'].value;\n    this.jobApplicantDetails.workExperienceYear = this.experienceDetails.controls['years'].value;\n    this.jobApplicantDetails.workExperienceMonth = this.experienceDetails.controls['months'].value;\n    this.jobApplicantDetails.specialityQualification = this.experienceDetails.controls['specialQualifications'].value;\n\n    Object.assign(this.jobApplicantDetails.applicationPerson, this.resetMobileNumbers('contactDetails'));\n\n    this.jobApplicantDetails.reference = this.experienceDetails.controls['references'].value;\n    this.jobApplicantDetails.applicantExperienceDetails = [];\n    this.jobApplicantDetails.applicantTrainingDetails = [];\n    this.jobApplicantDetails.applicantEducationDetails = [];\n\n    if (this.experienceDetails.controls['experienceListView'].value !== undefined) {\n      this.experienceDetails.controls['experienceListView'].value.forEach(s => {\n        delete s.isAddVisible;\n        delete s.isRemoveVisible;\n      });\n\n      if (!this.isNestedObjectEmpty(this.experienceDetails.value)) {\n        this.jobApplicantDetails.applicantExperienceDetails = this.experienceDetails.controls['experienceListView'].value;\n      }\n\n    }\n\n    if (this.trainingDetails.controls['trainingListView'].value !== undefined) {\n      this.trainingDetails.controls['trainingListView'].value.forEach(t => {\n        delete t.isAddVisible;\n        delete t.isRemoveVisible;\n        if (!this.isNestedObjectEmpty(t)) {\n          this.jobApplicantDetails.applicantTrainingDetails.push(t);\n        }\n      });\n    }\n\n\n    if (this.educationDetails.controls['educationalListView'].value !== undefined) {\n      this.educationDetails.controls['educationalListView'].value.forEach(e => {\n        delete e.isAddVisible;\n        delete e.isRemoveVisible;\n      });\n      if (!this.isNestedObjectEmpty(this.educationDetails.value)) {\n        this.jobApplicantDetails.applicantEducationDetails = this.educationDetails.controls['educationalListView'].value;\n      }\n    }\n  }\n\n  isNestedObjectEmpty(obj, checkKey: any = false): boolean {\n    let isEmpty = true;\n    for (const key in obj) {\n      if (key === 'isAddVisible' || (key === 'isRemoveVisible')) {\n        continue;\n      }\n      if (checkKey && key === checkKey) {\n        continue;\n      }\n      if (obj[key] !== null && obj[key] !== '') {\n        if (typeof (obj[key]) === 'object') {\n          if (obj[key] !== 'isAddVisible' || (obj[key] !== 'isRemoveVisible')) {\n            isEmpty = this.isNestedObjectEmpty(obj[key]);\n          }\n        } else {\n          return false;\n        }\n      }\n    }\n    return isEmpty;\n  }\n  imgChanged(event, resume = false): void {\n    if (this.checkFileSize(event[0], AppSettings.TEXT_AND_IMAGE_FILE_EXTENSION, 2097152)) {\n      return;\n    }\n    if (event && event.length > 0) {\n      const reader = new FileReader();\n      const file = event[0];\n      reader.readAsDataURL(file);\n      let image;\n      image = new Image();\n      image.src = reader.result;\n      const that = this;\n      reader.onload = () => {\n        if (resume) {\n          that.uploadImages.controls.FileNameWithExtension.setValue(event[0].name);\n          that.uploadImages.controls.FileValue.setValue((<string>reader.result).split(',')[1]);\n          this.resumeImgProp = {\n            src: <string>reader.result\n          };\n        } else {\n          that.uploadImages.controls['photoFileNameWithExtension'].setValue(event[0].name);\n          that.uploadImages.controls['photoFileValue'].setValue((<string>reader.result).split(',')[1]);\n          this.photoImgProp = {\n            src: <string>reader.result\n          };\n        }\n        that.changeDetector.detectChanges();\n      };\n    }\n  }\n\n  clearImages(resume = false): void {\n    if (resume) {\n      this.resumeImgProp = {};\n      this.uploadImages.controls.FileNameWithExtension.patchValue(null);\n      this.uploadImages.controls.FileValue.patchValue(null);\n    }\n    else {\n      this.photoImgProp = {};\n      this.uploadImages.controls.photoFileNameWithExtension.patchValue('');\n      this.uploadImages.controls.photoFileValue.patchValue('');\n    }\n    this.changeDetector.detectChanges();\n  }\n\n  validateFormArra(event): void {\n    this.isNestedObjectEmpty(event);\n  }\n\n  countriesList(): void {\n    this.stateOptionsSelect = [];\n    this.countryService.countryAllCountriesGet().subscribe(data => {\n      this.countryOptionsSelect = data.commonViewModel;\n    });\n  }\n\n  countryChanged(e): void {\n    this.addressInfo.controls['addressStateId'].patchValue('');\n    if (e) {\n      this.stateOptionsSelect = [];\n      this.stateService.stateAllStatesGet(e.value).subscribe(data => {\n        this.stateOptionsSelect = data.states;\n      });\n    }\n  }\n\n  checkemptyNumber(number, key, form): string {\n    if (number) {\n      return this.finalMobileNumbers[key][form];\n    } else {\n      return '';\n    }\n  }\n\n  resetMobileNumbers(formName): void {\n    const that = this;\n    Object.keys(that[formName].value).forEach((key) => {\n      switch (key) {\n        case 'mobileTel':\n        case 'otherTel':\n        case 'landTel': that[formName].value[key] = that.checkemptyNumber(that[formName].value[key], key, formName); break;\n      }\n    });\n    return this[formName].value;\n  }\n\n  maritalStatusTypes(): void {\n    this.maritalTypes = [];\n    this.staffJobApplicationService.fetchMaritalStatusTypes().subscribe(data => {\n      this.maritalTypes = data.commonViewModel;\n    });\n  }\n\n  getCast(): void {\n    this.typeService.typeByCodeBasedOnCaste().subscribe(response => {\n      this.casts = response;\n    });\n  }\n\n  getReligion(): void {\n    this.typeService.typeByCodeBasedOnReligion().subscribe(response => {\n      this.religions = response;\n    });\n  }\n\n  suffixTypeList(): void {\n    this.typeService.typesByTypeCategoryCode('SFX').subscribe(res => this.suffixType = res.types);\n  }\n\n  onCountryChangeMobile(e, label, form): void {\n    if (this.isEmptyObject(e)) {\n      return;\n    }\n    this.intialCountryCode[label][form] = '+' + e.dialCode;\n    this[form].controls[label].setValue('');\n  }\n\n  isEmptyObject(obj): boolean {\n    return (obj && (Object.keys(obj).length === 0));\n  }\n\n  onError(obj, label, form): void {\n    if (!obj && this[form].value[label]) {\n      this[form].get(label).setErrors({ 'invalid_mobile': true });\n    }\n  }\n\n  getNumber(e, label, form): void {\n    this.finalMobileNumbers[label][form] = e.replace(this.intialCountryCode[label][form], this.intialCountryCode[label][form] + ' ');\n  }\n  OnSelectionChange(event: any): void {\n    if (event.selectedIndex > this.interactedStepperIndex) {\n      this.interactedStepperIndex = event.selectedIndex;\n    } else {\n      this.stepper._steps._results.forEach((x, i) => {\n        x.interacted = i < this.interactedStepperIndex ? true : false;\n      });\n    }\n    if (this.optionalMenus.find(s => s === event.selectedIndex)) {\n      event.selectedStep.interacted = false;\n    }\n    if (event.selectedIndex === 1) {\n      this.setStepperInfo(event, 'experienceDetails');\n    } else if (event.selectedIndex === 4) {\n      this.setStepperInfo(event, 'passportDetails');\n    } else if (event.selectedIndex === 6) {\n      this.setStepperInfo(event, 'trainingDetails');\n    }\n  }\n  setStepperInfo(event, form): void {\n    if (event.selectedStep) {\n      event.selectedStep.interacted = false;\n    }\n    (<any>Object).values(this[form].controls).forEach((control: FormControl) => {\n      control.markAsUntouched();\n    });\n  }\n  isNestedObjectEmptyy(obj, checkKey: any = false): boolean {\n    let isEmpty = true;\n    for (const key in obj) {\n      if (key === 'isAddVisible' || (key === 'isRemoveVisible')) {\n        continue;\n      }\n      if (checkKey && key === checkKey) {\n        continue;\n      }\n      if (obj[key] !== null && obj[key] !== '') {\n        if (typeof (obj[key]) === 'object') {\n          if (obj[key] !== 'isAddVisible' || (obj[key] !== 'isRemoveVisible')) {\n            isEmpty = isEmpty && this.isNestedObjectEmptyy(obj[key]);\n          }\n        } else {\n          return false;\n        }\n      }\n    }\n    return isEmpty;\n  }\n\n  trimSpacess(form: any, innerForm: any, index: any, key: string): void {\n    (<FormArray>this[form].get(innerForm)).controls[index].get(key).setValue(this.commonService.trimSpaces\n      ((<FormArray>(<FormArray>this[form].get(innerForm)).controls[index].get(key).value)));\n  }\n}\n\n\n\n\n","module.exports = \"<div class=\\\"content px-sm-40 pt-sm-40\\\">\\n  <div class=\\\"w-100-p mat-elevation-z2 simple-table-container radius-10\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"p-20\\\">\\n      <div fxlayout=\\\"column\\\" fxFlex=\\\"40\\\">\\n        <div class=\\\"h3 secondary-text\\\" translate>Application Reference Number :<strong>&nbsp;&nbsp;{{applicantInfo?.applicationReferenceNo}}</strong></div>\\n      </div>\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"40\\\" class=\\\"accent-fg\\\" fxLayoutAlign=\\\"center end\\\" translate>Please Verify the Staff Details\\n        for approving the application</div>\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n          <button mat-raised-button color=\\\"primary\\\" translate (click)=\\\"back()\\\">{{'Back' | translate}}</button>\\n          <button mat-button type=\\\"button\\\" (click)=\\\"getHelpText('Job Applications')\\\">\\n            <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n    <mat-divider></mat-divider>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"ml-24\\\">\\n      <div class=\\\"profile-image border m-24 radius-10\\\">\\n        <img *ngIf=\\\"profileImage\\\" [src]=\\\"profileImage ? profileImage : ''\\\" class=\\\"w-200 h-200 radius-10\\\" />\\n        <div *ngIf=\\\"!profileImage\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"w-200 h-200\\\" translate>No Image</div>\\n      </div>            \\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"60\\\">\\n          <div class=\\\"h2 primary-900-fg-custom mb-16\\\">{{staffName}}</div>          \\n          <div *ngFor=\\\"let item of staffApplicantInfo\\\">           \\n              <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n                <div class=\\\"w-68 py-4 primary-300-fg\\\" translate>{{item.Label}}</div> : <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"ml-24\\\" [ngClass]=\\\"{'accent-fg  cursor-pointer': item.Label == 'resumeFile'}\\\" (click)=\\\"item.Label == 'resumeFile';viewAttachment(item.Label)\\\">\\n                  <mat-icon *ngIf=\\\"item.Value && item.Label == 'resumeFile'\\\" (click)=\\\"item.Label == 'resumeFile';viewAttachment()\\\" class=\\\"pt-2 accent-fg\\\">attachment</mat-icon>&nbsp;{{item?.Value? item?.Value : \\\"-\\\"}}</div>               \\n              </div>\\n          </div>\\n        </div>             \\n\\n      <form [formGroup]=\\\"approveForm\\\" fxLayout=\\\"column\\\" fxFlex=\\\"40\\\" class=\\\"pr-36\\\">\\n        <label class=\\\"font-weight-800 pb-12\\\" translate>Admission Comments</label>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\n          <mat-label #comments translate>Comments</mat-label>\\n          <textarea id=\\\"comment-field\\\" formControlName=\\\"processedComments\\\" matInput placeholder=\\\"Leave a comment\\\" (keyup)=\\\"preventSpace($event,'approveForm','processedComments')\\\" (blur)=\\\"trimTextBoxSpaces('approveForm','processedComments')\\\"\\n            [(ngModel)]='approveComments' required></textarea>\\n          <mat-error>\\n            <app-validation [labelName]='comments.innerText'\\n              [validationControl]=\\\"approveForm.controls.processedComments\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <small class=\\\"text-right max-caters\\\" translate>max 180 Characters</small>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<app-add-staff-admission-form [inputJobApplicationDetails]=\\\"applicantInfo\\\" [comments]=\\\"approveComments\\\">\\n</app-add-staff-admission-form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3RhZmYvc3RhZmYtYWRtaXNzaW9ucy9hcHByb3ZlLWpvYi1hcHBsaWNhdGlvbi9hcHByb3ZlLWpvYi1hcHBsaWNhdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { StaffJobApplicationService } from 'app/service/staff/staff-job-application.service';\nimport { RouteConfig } from 'app/url.config';\nimport { AppSettings } from 'app/app.constants';\nimport { HeaderValuesView } from '../model/header-values-view';\nimport { CommonService } from 'app/service/common.service';\n\n@Component({\n  selector: 'app-approve-job-application',\n  templateUrl: './approve-job-application.component.html',\n  styleUrls: ['./approve-job-application.component.scss'],\n  providers: [StaffJobApplicationService]\n})\nexport class ApproveJobApplicationComponent extends CommonComponent implements OnInit {\n  applicantInfo: any;\n  profileImage: any;\n  jobApplicationId: any;\n  approveComments = '';\n  approveForm: any;\n  staffApplicantInfo: Array<any> = [];\n  validate = true;\n  resume: string;\n  headerValues: HeaderValuesView;\n  staffName: string;\n\n  constructor(private route: ActivatedRoute, private storeService: StoreService, private cd: ChangeDetectorRef, public commonService: CommonService,\n    private router: Router, private _formBuilder: FormBuilder, public dialogRef: MatDialog, private staffJobApplicationService: StaffJobApplicationService,\n    public snackBar: MatSnackBar, public location: Location) {\n    super();\n    this.headerValues = {\n      mobileNumber: '',\n      primaryEmail: '',\n      statusCode: '',\n      fileType: ''\n    };\n  }\n\n  ngOnInit(): void {\n    this.approveForm = this._formBuilder.group({\n      processedComments: [null, [Validators.required, Validators.maxLength(180)]]\n    });\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.jobApplicationId = params.id;\n        this.staffJobApplicationService.fetchStaffDetails(params.id)\n          .subscribe(res => {\n            this.getJobApplicationDetails(res);\n          }, error => {\n            this.errorResponse(error);\n          });\n      }\n    });\n  }\n\n  getJobApplicationDetails(data): void {\n    this.applicantInfo = data.staffJobApplicantDetailsView;\n    this.staffName = data.staffJobApplicantDetailsView.staffName;\n\n    if (data.staffJobApplicantDetailsView.person.attachment) {\n      this.profileImage = this.storeService.getFilePath(data.staffJobApplicantDetailsView.person.attachment.fileName);\n    }\n    if (this.applicantInfo.attachment) {\n      const fileExtension = this.applicantInfo.attachment.fileName.replace(/^.*\\./, '');\n      this.resume = AppSettings.RESUME + '.' + fileExtension;\n    }\n\n    this.headerValues = {\n      mobileNumber: data.staffJobApplicantDetailsView.person.mobileTel,\n      primaryEmail: data.staffJobApplicantDetailsView.person.email1,\n      statusCode: data.staffJobApplicantDetailsView.status,\n      resumeFile: this.resume,\n    };\n\n    for (const key1 in this.headerValues) {\n      if (key1 !== 'fileType' && this.headerValues[key1] !== null) {\n        this.staffApplicantInfo.push({ Label: key1, Value: this.headerValues[key1] });\n      }\n    }\n    this.cd.detectChanges();\n  }\n\n  getFormatedName(data): void {\n    if (data) {\n      if (data.middleName) {\n        const fullName: any = data.firstName + ' ' + data.middleName + ' ' + data.lastName;\n        return fullName.replace(/  +/g, ' ').trim();\n      }\n      else {\n        const fullName: any = data.firstName + ' ' + data.lastName;\n        return fullName.replace(/  +/g, ' ').trim();\n      }\n    }\n  }\n\n  getComments(value): void {\n    this.approveComments = value;\n  }\n\n  viewAttachment(data: any): void {\n    if (this.applicantInfo.attachment && data === 'resumeFile') {\n      const nameFileProp = this.storeService.getFilePath(this.applicantInfo.attachment.fileName);\n      window.open(nameFileProp);\n    }\n  }\n}\n","module.exports = \"<div class=\\\"p-40\\\">\\n  <div class=\\\"ml-20 p-8 text-uppercase font-size-18\\\" translate>Job Application Details</div>\\n  <div class=\\\"mat-elevation-z2 simple-table-container radius-t-20 mb-20\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"p-20\\\">\\n      <div fxlayout=\\\"column\\\" fxLayoutAlign=\\\"end center\\\" fxFlex=\\\"40\\\" class=\\\"mx-sm-24\\\">\\n        <div class=\\\"h3 secondary-text\\\" translate>Application Reference\\n          Number :<strong>&nbsp;&nbsp;{{headerValues?.applicationReferenceNo}}</strong></div>\\n      </div>\\n      <button mat-raised-button color=\\\"primary\\\" translate (click)=\\\"back()\\\">{{'Back' | translate}}</button>\\n      <button type=\\\"button\\\" mat-button (click)=\\\"getHelpText('Job Applications')\\\">\\n        <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n      </button>\\n    </div>\\n    <mat-divider></mat-divider>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"ml-24\\\">\\n      <div class=\\\"profile-image border m-24 radius-10\\\">\\n        <img *ngIf=\\\"profileImage\\\" [src]=\\\"profileImage ? profileImage : ''\\\" class=\\\"w-200 h-200 radius-10\\\"\\n          alt=\\\"No Image\\\" />\\n        <div *ngIf=\\\"!profileImage\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"w-200 h-200\\\" translate>No Image</div>\\n      </div>\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"60\\\">\\n        <div class=\\\"h2 primary-900-fg-custom mb-16\\\">{{staffName}}</div>\\n        <div *ngFor=\\\"let item of staffApplicantInfo\\\">           \\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n            <div class=\\\"w-180 py-4 primary-300-fg\\\" translate>{{item.Label}}</div> : <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"ml-24 break-word\\\" [ngClass]=\\\"{'accent-fg cursor-pointer': item.Label == 'resumeFile'}\\\" (click)=\\\"item.Label == 'resumeFile';viewAttachment(item.Label)\\\">\\n              <mat-icon *ngIf=\\\"item.Value && item.Label == 'resumeFile'\\\" (click)=\\\"item.Label == 'resumeFile';viewAttachment()\\\" class=\\\"pt-2 accent-fg\\\">attachment</mat-icon>&nbsp;{{item?.Value? item?.Value : \\\"-\\\"}}</div>          \\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n  <app-job-application-details-view [staffJobApplicantDetailsView]=\\\"applicantInfo\\\"></app-job-application-details-view>\\n\\n  <div *ngIf=\\\"headerValues.statusCode == 'Pending'\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-32\\\">\\n    <button (click)=\\\"submitApplication(false)\\\" mat-raised-button type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">{{'reject' | translate}}</button>\\n    <button (click)=\\\"submitApplication(true)\\\" mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\">\\n      {{'approve' | translate}}\\n    </button>\\n  </div>\\n\\n\\n<ng-template #rejectPopup>\\n  <div fxLayout=\\\"row\\\" class=\\\"pb-24 font-size-16 font-weight-600\\\" translate>Please confirm to reject this Application</div>\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"mb-8\\\" translate>Rejection Comments:</div>\\n  <form [formGroup]=\\\"approveForm\\\">\\n    <div fxLayout=\\\"row\\\">\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"reject-comment\\\">\\n        <mat-label #comments translate>Comments</mat-label>\\n        <textarea required matInput (keypress)=\\\"preventSpace($event,'approveForm','commentText')\\\" (blur)=\\\"trimTextBoxSpaces('approveForm','commentText')\\\"\\n          formControlName=\\\"commentText\\\" placeholder=\\\"Leave a comment\\\"></textarea>\\n        <mat-error class=\\\"pt-8\\\">\\n          <app-validation [labelName]=\\\"comments.innerText\\\" [validationControl]=\\\"approveForm.controls.commentText\\\"\\n            [doValidate]=\\\"true\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n    <small class=\\\"pr-8\\\" fxLayoutAlign=\\\"end\\\" translate>Max 180 characters</small>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-32\\\">     \\n      <button (click)=\\\"onPopUpSelect(false)\\\" mat-raised-button type=\\\"reset\\\" >\\n        {{'No' | translate}}\\n      </button>\\n      <button (click)=\\\"onPopUpSelect()\\\" mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"ml-12\\\">{{'Yes' | translate}}</button>\\n    </div>\\n  </form>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3RhZmYvc3RhZmYtYWRtaXNzaW9ucy9qb2ItYXBwbGljYXRpb24tZGV0YWlscy9qb2ItYXBwbGljYXRpb24tZGV0YWlscy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, TemplateRef, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialogRef, MatDialog, MatSnackBar } from '@angular/material';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { StaffJobApplicationService } from 'app/service/staff/staff-job-application.service';\nimport { JobApplicationCommentsView } from '../model/job-application-comments-view';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { CommonService } from 'app/service/common.service';\nimport { HeaderValuesView } from '../model/header-values-view';\nimport { RouteConfig } from 'app/url.config';\nimport { AppSettings } from 'app/app.constants';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-job-application-details',\n  templateUrl: './job-application-details.component.html',\n  styleUrls: ['./job-application-details.component.scss'],\n  providers: [StaffJobApplicationService]\n})\nexport class JobApplicationDetailsComponent extends CommonComponent implements OnInit {\n  @ViewChild('rejectPopup') rejectPopup: TemplateRef<any>;\n  jobApplicationCommentsView: JobApplicationCommentsView;\n  customDialog: MatDialogRef<any, any>;\n  approveForm: FormGroup;\n  jobApplicationId: any;\n  applicantInfo: any;\n  profileImage: any;\n  statusName: string;\n  staffName: string;\n  resume: any;\n  acord: Array<Acord> = [];\n  staffApplicantInfo: Array<any> = [];\n  fullName: any;\n  headerValues: HeaderValuesView;\n\n  constructor(private router: Router, public dialog: MatDialog, private staffJobApplicationService: StaffJobApplicationService,\n    public dialogRef: MatDialog, private route: ActivatedRoute, private cd: ChangeDetectorRef, public commonService: CommonService,\n    private storeService: StoreService, public snackBar: MatSnackBar, public location: Location) {\n    super();\n    this.headerValues = {\n      mobileNumber: '',\n      primaryEmail: '',\n      statusCode: '',\n      applicationReferenceNo: '',\n      resumeFile: '',\n    };\n  }\n\n  ngOnInit(): void {\n    this.statusName = AppSettings.JOB_APPLICATION_PENDING_APPLICATION_STATUS;\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.jobApplicationId = params.id;\n        this.staffJobApplicationService.jobApplicationData(params.id)\n          .subscribe(res => {\n            this.getJobApplicationDetails(res);\n          }, error => {\n            this.errorResponse(error);\n          });\n      }\n    });\n    this.approveForm = new FormGroup({\n      commentText: new FormControl(null, [Validators.minLength(1), Validators.maxLength(180), Validators.required]),\n    });\n    this.jobApplicationCommentsView = {};\n  }\n\n  getJobApplicationDetails(data): void {\n    this.staffName = data.staffName;\n    this.getFormatedName(data);\n    for (const key in data) { // Iterating over Key\n      if (key !== 'messages' && key !== 'statusCode') {\n        if (typeof (data[key]) !== 'object') {\n          //// Bind detailCard Data\n        }\n        else if (key === 'educationDetails' || key === 'trainingDetails' || key === 'workExperience') {\n          if (data[key] !== null) {\n            for (let index = 0; index < data[key].length; index++) {\n              if (this.acord.find(x => x.AccordianName === key)) {\n                const i = this.acord.findIndex(x => x.AccordianName === key);\n                this.acord[i].Items.push(this.getKeyValuesOfObject(data[key][index]));\n              }\n              else {\n                this.acord.push({ AccordianName: key, Items: [] });\n                const i = this.acord.findIndex(x => x.AccordianName === key);\n                this.acord[i].Items.push(this.getKeyValuesOfObject(data[key][index]));\n              }\n            }\n          }\n        }\n        else if (data[key] !== null) {\n          this.acord.push({ AccordianName: key, Items: this.getKeyValuesOfObject(data[key]) });\n        }\n      }\n    }\n    if (data.photoAttachmentName) {\n      this.profileImage = this.storeService.getFilePath(data.photoAttachmentName);\n    }\n    this.applicantInfo = this.acord;\n    if (data.resumeAttachmentName) {\n      const fileExtension = data.resumeAttachmentName.replace(/^.*\\./, '');\n      this.resume = AppSettings.RESUME + '.' + fileExtension;\n    }\n\n    this.headerValues = {\n      mobileNumber: data.contactInfo.mobileNumber,\n      primaryEmail: data.contactInfo.primaryEmail,\n      statusCode: data.statusName,\n      applicationReferenceNo: data.applicationReferenceNo,\n      seekingPosition: data.seekingPosition,\n      resumeFile: this.resume,\n      processedComments: data.processedComments,\n      fileType: data.resumeAttachmentName\n    };\n\n    for (const key1 in this.headerValues) {\n      if (key1 !== 'applicationReferenceNo' && key1 !== 'fileType' && this.headerValues[key1] !== null) {\n        this.staffApplicantInfo.push({ Label: key1, Value: this.headerValues[key1] });\n      }\n    }\n    this.cd.detectChanges();\n  }\n\n  getFormatedName(data): void {\n    if (data) {\n      if (data.staffDetails.middleName) {\n        const fullName: any = data.staffDetails.firstName + ' ' + data.staffDetails.middleName + ' ' + data.staffDetails.lastName;\n        this.fullName = fullName.replace(/  +/g, ' ').trim();\n      }\n      else {\n        const fullName: any = data.staffDetails.firstName + ' ' + data.staffDetails.lastName;\n        this.fullName = fullName.replace(/  +/g, ' ').trim();\n      }\n    }\n  }\n\n  submitApplication(isApprove: Boolean): void {\n    if (isApprove) {\n      this.router.navigate([RouteConfig.APPROVE_JOB_APPLICATION + '/' + this.jobApplicationId]);\n    } else {\n      this.customDialog = this.dialog.open(this.rejectPopup, { width: '400px', disableClose: true });\n    }\n  }\n\n  onPopUpSelect(reject = true): void {\n    if (reject) {\n      if (!this.approveForm.valid) {\n        return;\n      }\n      this.jobApplicationCommentsView.jobApplicationId = this.jobApplicationId;\n      this.jobApplicationCommentsView.processedComments = this.approveForm.value.commentText;\n      this.staffJobApplicationService.rejectJobApplication(this.jobApplicationCommentsView)\n        .subscribe(res => {\n          this.commentSubmitted(res);\n        }, error => {\n          this.errorResponse(error);\n        });\n    }\n    this.approveForm.reset();\n    this.customDialog.close();\n  }\n\n  commentSubmitted(res): void {\n    this.back();\n    this.openSnackBar(res.messages.ResultMessage);\n  }\n\n  viewAttachment(data: any): void {\n    if (this.headerValues.fileType && data === 'resumeFile') {\n      const nameFileProp = this.storeService.getFilePath(this.headerValues.fileType);\n      window.open(nameFileProp);\n    }\n  }\n}\n\nexport interface Acord {\n  AccordianName: string;\n  Items: Array<any>;\n}\n","module.exports = \"<!-- <app-table [settings]=\\\"tabSettings\\\" (getTableData)='tableData($event)' (rowBasedAction)=\\\"rowWiseActions($event)\\\" [templateRef]=\\\"addJobApplicationForm\\\"></app-table>\\n\\n<ng-template #addJobApplicationForm >\\n    <div fxLayout=\\\"column\\\">\\n        <h4 class=\\\"text-uppercase pl-12\\\" translate>New Staff Job Application</h4>\\n        <app-add-job-applications [resetStepper]=\\\"resetStepper\\\" (cancel)=\\\"onCancel($event)\\\"></app-add-job-applications>\\n    </div>\\n   \\n</ng-template> -->\\n\\n\\n<app-table [settings]=\\\"tabSettings\\\" (getTableData)='tableData($event)' (rowBasedAction)=\\\"rowWiseActions($event)\\\"\\n    (openAddForm)='openForm()' [closeRowForm]=\\\"closeForm\\\" [templateRef]=\\\"addJobApplicationFormRef\\\" [matExpansioncustomClass]=\\\"true\\\"></app-table>\\n\\n<ng-template #addJobApplicationFormRef>\\n    <div fxLayout=\\\"column\\\">\\n        <app-add-job-applications (cancel)=\\\"onCancel($event)\\\"></app-add-job-applications>\\n    </div>\\n\\n</ng-template>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3RhZmYvc3RhZmYtYWRtaXNzaW9ucy9qb2ItYXBwbGljYXRpb25zL2pvYi1hcHBsaWNhdGlvbnMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { StaffJobApplicationService } from 'app/service/staff/staff-job-application.service';\nimport { AppSettings } from 'app/app.constants';\nimport { SearchJobApplicationsView } from '../model/search-job-applications';\nimport { Router } from '@angular/router';\nimport { AddJobApplicationsComponent } from '../add-job-applications/add-job-applications.component';\nimport { RouteConfig } from 'app/url.config';\nimport { MatSnackBar } from '@angular/material';\n@Component({\n  selector: 'app-job-applications',\n  templateUrl: './job-applications.component.html',\n  styleUrls: ['./job-applications.component.scss'],\n  providers: [StaffJobApplicationService]\n})\nexport class JobApplicationsComponent extends CommonComponent implements OnInit {\n  filterViewModel: SearchJobApplicationsView;\n  closeForm: boolean;\n  addComponent: AddJobApplicationsComponent;\n  resetStepper: boolean;\n  // table variables\n  tabSettings: {};\n  rows: Array<any> = [];\n  pageCnt: number;\n  totalRowsCount: number;\n  custRowsPerPageOptions: Array<number> = [];\n  cols: any[];\n  currentComponent = 'JobApplicationsComponent';\n  httpStatus: any;\n\n  constructor(private router: Router, private staffJobApplicationService: StaffJobApplicationService, public snackBar: MatSnackBar) {\n    super();\n    this.initializeFilterView();\n    this.setColumnHeaders();\n    this.initializeTableSettings();\n  }\n\n  ngOnInit(): void {\n    this.httpStatus = require('http-status-codes');\n\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.filterViewModel = modelTableComponent;\n    }\n    this.getAllFilteredJobApplicants(this.filterViewModel);\n  }\n\n  initializeFilterView(): void {\n    this.filterViewModel = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n      applicantName: [],\n      applicantReferenceNo: [],\n      email: [],\n      statusIds: [],\n    };\n  }\n\n  setColumnHeaders(): void {\n    this.cols = [\n      { field: 'applicantName', header: 'Applicant Name', sort: true },\n      { field: 'applicantReferenceNo', header: 'Applicant Reference No', sort: true },\n      { field: 'email', header: 'Email', sort: true },\n      { field: 'status', header: 'Status', sort: true },\n      { field: 'view', header: 'Actions', sort: false },\n    ];\n  }\n\n  initializeTableSettings(): void {\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.filterViewModel,\n      tablename: 'Job Applications',\n      componentName: this.currentComponent,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: AppSettings.NEW\n        }\n      },\n    };\n  }\n\n  tableData(_event: SearchJobApplicationsView): void {\n    this.filterViewModel = _event;\n    this.getAllFilteredJobApplicants(this.filterViewModel);\n  }\n\n  getAllFilteredJobApplicants(data: any): void {\n    this.staffJobApplicationService.fetchJobApplications(data.applicantName, data.applicantReferenceNo, data.email, data.statusIds, data.sortBy, data.sortOrder,\n      data.pageNumber, data.pageSize).\n      subscribe(res => {\n        this.bindJobApplicationResult(res);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  bindJobApplicationResult(data: any): void {\n    if (!data.jobApplicationView) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n    } else {\n      this.rows = data.jobApplicationView.list;\n      this.totalRowsCount = data.jobApplicationView.totalItems;\n      this.pageCnt = data.jobApplicationView.totalPages;\n      // this.rows.forEach(e => {\n      //   e.operations = [\n      //     {\n      //       name: AppSettings.VIEW,\n      //       icon: AppSettings.DETAILS_ICON,\n      //       operationName: AppSettings.VIEW\n      //     }\n      //   ];\n      // });\n    }\n    if (data.jobApplicationView) {\n      this.filterViewModel.pageNumber = data.jobApplicationView.pageNumber;\n    }\n\n    this.tabSettings = {\n      model: this.filterViewModel,\n      rows: this.rows,\n      columns: this.cols,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      tablename: 'Job Applications',\n      componentName: this.currentComponent,\n      isPaginationRequired: true,\n      filtersList: data.filters,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: AppSettings.NEW\n        },\n        infoButton: {\n          required: true,\n          text: 'Job Applications'\n        }\n      }\n    };\n  }\n\n\n  openForm(): void {\n    this.resetStepper = false;\n    this.closeForm = false;\n  }\n\n\n  onCancel(event): void {\n    this.resetStepper = true;\n    this.closeForm = event;\n    this.getAllFilteredJobApplicants(this.filterViewModel);\n    this.scrollIntoView('app-table');\n  }\n\n\n  rowWiseActions(event: any): void {\n    if (event.operation === AppSettings.VIEW.toLowerCase()) {\n      this.router.navigate([RouteConfig.JOB_APPLICATION_DETAILS + '/' + event.clickedRow.id]);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { JobApplicationsComponent } from './job-applications/job-applications.component';\nimport { JobApplicationDetailsComponent } from './job-application-details/job-application-details.component';\nimport { ApproveJobApplicationComponent } from './approve-job-application/approve-job-application.component';\n\nconst routes: Routes = [\n  { path: 'job-applications', component: JobApplicationsComponent, data: {title: 'Job Applications'} },\n  { path: 'job-applications/job-applications-details/:id', component: JobApplicationDetailsComponent, data: {title: 'Job Application Details'} },\n  { path: 'job-applications/approve-job-application/:id', component: ApproveJobApplicationComponent, data: {title: 'Job Application Details'} },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StaffAdmissionsRoutingModule { }\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StaffAdmissionsRoutingModule } from './staff-admissions-routing.module';\nimport { JobApplicationsComponent } from './job-applications/job-applications.component';\nimport { MatcomponentsModule } from 'app/main/matcomponents.module';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedManagementModule } from 'app/shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from 'app/interceptors/token-interceptor';\nimport { JobApplicationDetailsComponent } from './job-application-details/job-application-details.component';\nimport { JobApplicationDetailsViewComponent } from '../../../shared/job-application-details-view/job-application-details-view.component';\nimport { ApproveJobApplicationComponent } from './approve-job-application/approve-job-application.component';\nimport { StaffMemberService } from 'app/service/staff/staff-member.service';\nimport { AddJobApplicationsComponent } from './add-job-applications/add-job-applications.component';\n@NgModule({\n  declarations: [AddJobApplicationsComponent, JobApplicationsComponent, JobApplicationDetailsComponent,\n    ApproveJobApplicationComponent],\n  imports: [\n    CommonModule,\n    StaffAdmissionsRoutingModule,\n    CommonModule,\n    MatcomponentsModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedManagementModule,\n    TranslateModule,\n    FuseSharedModule,\n    Ng2TelInputModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }, StaffMemberService\n  ],\n  exports: [JobApplicationDetailsViewComponent],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class StaffAdmissionsModule { }\n"],"sourceRoot":""}