{"version":3,"sources":["webpack:///./src/app/modules/configuration/communication/communication-routing.module.ts","webpack:///./src/app/modules/configuration/communication/communication-types/communication-types.component.html","webpack:///./src/app/modules/configuration/communication/communication-types/communication-types.component.scss","webpack:///./src/app/modules/configuration/communication/communication-types/communication-types.component.ts","webpack:///./src/app/modules/configuration/communication/communication.component.html","webpack:///./src/app/modules/configuration/communication/communication.component.scss","webpack:///./src/app/modules/configuration/communication/communication.component.ts","webpack:///./src/app/modules/configuration/communication/communication.module.ts"],"names":[],"mappings":"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","file":"default~app-modules-configuration-communication-communication-module~app-shared-wizard-wizard-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CommunicationComponent } from './communication.component';\nimport { CommunicationTypesComponent } from './communication-types/communication-types.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: CommunicationComponent,\n    children: [\n      { path: '', pathMatch: 'full', redirectTo: 'communication-types' },\n      { path: 'communication-types', component: CommunicationTypesComponent,  data: {title: 'Communication Types'} }\n    ]\n  },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CommunicationRoutingModule { }\n","module.exports = \"<app-table [settings]=\\\"tableSettings\\\" (getTableData)='tableData($event)' (rowBasedAction)=\\\"rowWiseActions($event)\\\" (openAddForm)=\\\"onAddFormClick()\\\" [closeRowForm]='closeAddPanel' [closeAddForm]=\\\"closeAddPanel\\\" [templateRef]=\\\"addCommunicationTypeRef\\\"></app-table>\\n\\n     <ng-template #addCommunicationTypeRef>\\n      <form [formGroup]=\\\"communicationTypeForm\\\" (ngSubmit)=\\\"submitCommunicationForm()\\\"\\n      #communicationForm=\\\"ngForm\\\" fxLayout=\\\"column\\\">\\n        \\n              <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\" fxFlex=\\\"100\\\">\\n                <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\"\\n                class=\\\"pr-sm-20\\\">\\n                <mat-label #name translate>name</mat-label>\\n                <input (keyup)=\\\"preventSpace($event,'communicationTypeForm','name')\\\" formControlName=\\\"name\\\" matInput required>\\n                <mat-error>\\n                  <app-validation [labelName]='name.innerText'\\n                    [validationControl]=\\\"communicationTypeForm.controls.name\\\" [doValidate]=\\\"validate\\\">\\n                  </app-validation>\\n                </mat-error>\\n                </mat-form-field>\\n                <af-select [required]=true (selectionChange)=\\\"onSelectChange($event)\\\" appearance=\\\"outline\\\" fxFlex=\\\"100\\\"  fxFlex.gt-sm=\\\"50\\\" [optionGroupRequired]=\\\"false\\\" [options]=\\\"items\\\"\\n                [showChips]=\\\"1\\\" placeholder=\\\"Delivery Options\\\" [multiple]=\\\"true\\\"\\n                formControlName=\\\"communicationTypeDeliveryOptions\\\" [value]=\\\"selectedItems\\\">\\n                </af-select>                           \\n              </div>\\n\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-sm-12\\\">\\n              <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\" (click)=\\\"cancel()\\\">\\n                  {{'Cancel' | translate}}</button>\\n              <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\">{{(isEdit ? 'Update':'Create') | translate}}</button>             \\n          </div>\\n      </form>\\n  </ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9jb21tdW5pY2F0aW9uL2NvbW11bmljYXRpb24tdHlwZXMvY29tbXVuaWNhdGlvbi10eXBlcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { SearchCommunicationTypeView } from '../model/search-communication-type-view';\nimport { AppSettings } from 'app/app.constants';\nimport { CommunicationTypesService } from 'app/service/configuration/communication-types.service';\nimport { TypeService } from 'app/service/academic-service/api/type.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { CommunicationTypeView } from '../model/communication-type-view';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\nimport { CommunicationTypeDataView } from '../model/communication-type-data-view';\n\n@Component({\n  selector: 'app-communication-types',\n  templateUrl: './communication-types.component.html',\n  styleUrls: ['./communication-types.component.scss'],\n  providers: [CommunicationTypesService, TypeService]\n})\nexport class CommunicationTypesComponent extends CommonComponent implements OnInit {\n  @ViewChild('communicationForm') communicationForm;\n  communicationTypeView: CommunicationTypeView;\n  communicationTypeDataView: CommunicationTypeDataView;\n  filterViewModel: SearchCommunicationTypeView;\n  communicationTypeForm: FormGroup;\n\n  filterRowData: any = [];\n  closeAddPanel: boolean;\n  items = [];\n  selectedItems: any;\n  commnucationMessageTypeId: any;\n  validate = true;\n  isEdit: boolean;\n\n  // Table Variables \n  tableSettings: {};\n  columns: any[];\n  totalRowsCount: number;\n  pageCnt: number;\n  rows: Array<any>;\n  currentComponent = 'CommunicationTypesComponent';\n  httpStatus: any;\n  updateId: any;\n\n\n\n  constructor(private communicationTypesService: CommunicationTypesService,\n    private typeService: TypeService, private _fb: FormBuilder, public dialog: MatDialog,\n    public commonService: CommonService, public snackBar: MatSnackBar) {\n    super();\n    this.initializeFilterView();\n    this.initializeTableSettings();\n    this.initializeForm();\n    this.initializeModel();\n  }\n\n  ngOnInit(): void {\n    this.httpStatus = require('http-status-codes');\n    this.setColumnHeaders();\n    this.commnucationMessageTypeId = [];\n    this.getDeliveryoptions();\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.filterViewModel = modelTableComponent;\n    }\n    this.getAllCommunicationTypes();\n  }\n\n  initializeModel(): void {\n    this.communicationTypeView = {\n      name: null,\n      communicationTypeDeliveryOptions: []\n    };\n\n    this.communicationTypeDataView = {\n      id: null,\n      name: null,\n      communicationTypeDeliveryOptions: []\n    };\n  }\n\n  initializeFilterView(): void {\n    this.filterViewModel = {\n      sortBy: 'Name',\n      sortOrder: AppSettings.SORT_ORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n      Name: []\n    };\n  }\n\n  setColumnHeaders(): void {\n    this.columns = [\n      { field: 'communicationTypeName', header: 'Name', sort: false },\n      { field: 'communicationDeliveryName', header: 'Delivery Options', sort: false },\n      { field: 'actions', header: 'Actions', sort: false }\n    ];\n  }\n\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: this.rows,\n      columns: this.columns,\n      tablename: 'Communication Types',\n      componentName: this.currentComponent,\n      model: this.filterViewModel,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      visibleSelectAll: true,\n      isMultiDeleteRequired: false,\n      isPaginationRequired: true\n    };\n  }\n\n  initializeForm(): void {\n    this.communicationTypeForm = this._fb.group({\n      name: new FormControl(null, [Validators.required, Validators.maxLength(45)]),\n      communicationTypeDeliveryOptions: new FormControl(null, [Validators.required]),\n    });\n  }\n\n  tableData(_event: SearchCommunicationTypeView): void {\n    this.filterViewModel = _event;\n    this.getAllCommunicationTypes();\n  }\n\n  getAllCommunicationTypes(): void {\n    this.communicationTypesService.getCommunicationTypes(this.filterViewModel.Name,\n      this.filterViewModel.sortBy, this.filterViewModel.sortOrder, this.filterViewModel.pageNumber, this.filterViewModel.pageSize).\n      subscribe(res => {\n        this.bindCommunicationTypeResult(res);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  bindCommunicationTypeResult(data: any): void {\n    if (!data.communicationListView) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n    } else {\n      this.rows = data.communicationListView.list;\n      this.totalRowsCount = data.communicationListView.totalItems;\n      this.pageCnt = data.communicationListView.totalPages;\n    }\n    this.filterRowData = [];\n    if (data.communicationListView) {\n      this.filterViewModel.pageNumber = data.communicationListView.pageNumber;\n    }\n\n    this.tableSettings = {\n      model: this.filterViewModel,\n      rows: this.rows,\n      columns: this.columns,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      tablename: 'Communication Types',\n      componentName: this.currentComponent,\n      isPaginationRequired: true,\n      filtersList: data.filters,\n      rowGroupingColumns: ['communicationTypeName'],\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: 'New'\n        },\n        infoButton: {\n          required: true,\n          text: 'Communication Types'\n        }\n      }\n    };\n\n    this.filterRowData = this.rows;\n\n    // filtering data \n    const x = [];\n    this.filterRowData.forEach(elnt => {\n      if (x.length === 0) {\n        x.push(elnt);\n      }\n      else {\n        this.filterRowData.forEach((element: any) => {\n          const foundIndex = x.findIndex((value: any) => {\n            return value.communicationTypeName === element.communicationTypeName;\n          });\n          if (foundIndex === -1) {\n            x.push(element);\n          }\n        });\n      }\n    });\n    this.filterRowData = x;\n\n    // apply edit and delete\n    this.filterRowData.forEach(element => {\n      this.rows.forEach(element1 => {\n        if (element.communicationTypeName === element1.communicationTypeName &&\n          element.communicationDeliveryName === element1.communicationDeliveryName &&\n          element.communicationTypeId === element1.communicationTypeId &&\n          element.communicationDeliveryId === element1.communicationDeliveryId) {\n          element1.operations = [\n            {\n              name: AppSettings.EDIT_OPERATION,\n              icon: AppSettings.EDIT_ICON,\n              operationName: AppSettings.EDIT\n            },\n            {\n              name: AppSettings.DELETE_OPERATION,\n              icon: AppSettings.DELETE_ICON,\n              operationName: AppSettings.DELETE\n            },\n          ];\n        }\n      });\n    });\n  }\n\n  getDeliveryoptions(): void {\n    this.typeService.typesByTypeCategoryCode('CMT').subscribe(res => {\n      this.items = res.types;\n      this.items.forEach(element => {\n        element.label = element.name;\n        element.value = element.id;\n      });\n    });\n  }\n\n  onSelectChange(event): void {\n    this.commnucationMessageTypeId = [];\n    if (event) {\n      event.forEach(e => {\n        this.commnucationMessageTypeId.push({ commnucationMessageTypeId: e.id || e.value });\n      });\n    }\n  }\n\n  // edit assessment categories based on id\n  rowWiseActions(event: any): void {\n    if (event.operation === AppSettings.EDIT) {\n      this.isEdit = true;\n      this.closeAddPanel = false;\n      this.communicationTypesService.communicationTypesDetails(event.clickedRow.communicationTypeId).subscribe(res => this.retCommunicationTypeById(res), error => {\n        this.errorResponse(error);\n      });\n    }\n    else if (event.operation === AppSettings.DELETE) {\n      const dialogRef = this.dialog.open(CustomDialogComponent, {\n        disableClose: true,\n        data: { text: this.commonService.getTranslation(AppSettings.DELETE_CONFORMATION, ''), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n      });\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.communicationTypesService.deleteCommunicationTypes(event.clickedRow.communicationTypeId).subscribe(res => this.deleteResponse(res), error => {\n            this.errorResponse(error);\n          });\n        }\n        else if (action === AppSettings.NO) {\n          this.dialog.closeAll();\n        }\n      });\n    }\n  }\n\n  retCommunicationTypeById(res): void {\n    this.selectedItems = [];\n    this.updateId = res.communicationTypeDataView.id;\n    res.communicationTypeDataView.communicationTypeDeliveryOptions.forEach(cmId => {\n      this.items.forEach(eId => {\n        if (cmId.commnucationMessageTypeId === eId.value) {\n          this.selectedItems.push({\n            value: eId.value, label: eId.label, cmDelId: cmId.id\n          });\n        }\n      });\n    });\n    this.communicationTypeForm.controls.name.setValue(res.communicationTypeDataView.name);\n    this.communicationTypeForm.controls.communicationTypeDeliveryOptions.setValue(this.selectedItems);\n    this.isEdit = true;\n  }\n\n  deleteResponse(response: any): void {\n    this.getAllCommunicationTypes();\n    this.openSnackBar(response.messages.ResultMessage);\n  }\n\n  updateComTypeDetails(): void {\n    this.communicationTypeDataView.id = this.updateId;\n    this.communicationTypeDataView.name = this.communicationTypeForm.value.name;\n    this.communicationTypeDataView.communicationTypeDeliveryOptions = [];\n    if (this.commnucationMessageTypeId.length) {\n      this.commnucationMessageTypeId.forEach(res => {\n        const Id = this.selectedItems.find(x => x.value === res.commnucationMessageTypeId)\n          === undefined ? 0 : this.selectedItems.find(x => x.value === res.commnucationMessageTypeId).cmDelId;\n        this.communicationTypeDataView.communicationTypeDeliveryOptions.push({\n          id: Id, commnucationMessageTypeId: res.commnucationMessageTypeId\n        });\n      });\n    }\n    else {\n      this.selectedItems.forEach(selItems => {\n        this.communicationTypeDataView.communicationTypeDeliveryOptions.push({\n          id: selItems.cmDelId, commnucationMessageTypeId: selItems.value\n        });\n      });\n    }\n  }\n\n  submitCommunicationForm(): void {\n    this.communicationTypeForm.controls.name.patchValue(this.communicationTypeForm.value.name.trim());\n    if (this.communicationTypeForm.valid && this.isEdit === true) {\n      this.communicationTypeDataView = {};\n      this.updateComTypeDetails();\n      this.communicationTypesService.updateCommunicationTypes(this.communicationTypeDataView).subscribe(res => this.resResult(res), error => {\n        this.errorResponse(error);\n      });\n    }\n    else if (this.communicationTypeForm.valid) {\n      this.communicationTypeForm.value.communicationTypeDeliveryOptions = this.commnucationMessageTypeId;\n      Object.assign(this.communicationTypeView, this.communicationTypeForm.value);\n      this.communicationTypesService.createCommunicationTypes(this.communicationTypeView).subscribe(res => this.resResult(res), error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n\n  resResult(res: any): void {\n    this.cancel();\n    this.getAllCommunicationTypes();\n    this.openSnackBar(res.messages.ResultMessage);\n  }\n\n  // Cancel Button\n  cancel(): void {\n    this.closeAddPanel = true;\n    this.communicationForm.resetForm();\n  }\n\n  // add new form for assessment categories\n  onAddFormClick(): void {\n    this.closeAddPanel = false;\n    this.isEdit = false;\n    this.selectedItems = [];\n    this.communicationForm.resetForm();\n  }\n}\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9jb21tdW5pY2F0aW9uL2NvbW11bmljYXRpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-communication',\n  templateUrl: './communication.component.html',\n  styleUrls: ['./communication.component.scss']\n})\nexport class CommunicationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from 'app/interceptors/token-interceptor';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CommunicationRoutingModule } from './communication-routing.module';\nimport { SharedManagementModule } from 'app/shared/shared.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { MatcomponentsModule } from 'app/main/matcomponents.module';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { CommunicationTypesComponent } from './communication-types/communication-types.component';\nimport { CommunicationComponent } from './communication.component';\n\n@NgModule({\n  declarations: [CommunicationComponent, CommunicationTypesComponent],\n  entryComponents: [],\n  imports: [\n    CommonModule,\n    FuseSharedModule,\n    MatcomponentsModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedManagementModule,\n    CommunicationRoutingModule,\n    TranslateModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n  ],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class CommunicationModule { }\n"],"sourceRoot":""}