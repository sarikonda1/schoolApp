{"version":3,"sources":["webpack:///./src/app/modules/academics/grading/academic-grading-routing.module.ts","webpack:///./src/app/modules/academics/grading/academic-grading.module.ts","webpack:///./src/app/modules/academics/grading/report-card-details/report-card-details.component.html","webpack:///./src/app/modules/academics/grading/report-card-details/report-card-details.component.scss","webpack:///./src/app/modules/academics/grading/report-card-details/report-card-details.component.ts","webpack:///./src/app/modules/academics/grading/report-cards/report-cards.component.html","webpack:///./src/app/modules/academics/grading/report-cards/report-cards.component.scss","webpack:///./src/app/modules/academics/grading/report-cards/report-cards.component.ts","webpack:///./src/app/modules/academics/grading/search-student-information/search-student-information.component.html","webpack:///./src/app/modules/academics/grading/search-student-information/search-student-information.component.scss","webpack:///./src/app/modules/academics/grading/search-student-information/search-student-information.component.ts"],"names":[],"mappings":"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","file":"app-modules-academics-grading-academic-grading-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TestScheduleComponent } from './test-schedule/test-schedule.component';\nimport { ClassAssessmentGradesComponent } from './class-assessment-grades/class-assessment-grades.component';\nimport { TestGradingComponent } from '../../../shared/test-grading/test-grading.component';\nimport { ReportCardsComponent } from './report-cards/report-cards.component';\nimport { ReportCardDetailsComponent } from './report-card-details/report-card-details.component';\nimport { SearchStudentInformationComponent } from './search-student-information/search-student-information.component';\n\nconst routes: Routes = [\n  { path: 'test-schedule', component: TestScheduleComponent, data: {title: 'Test Schedule'} },\n  { path: 'class-assessment-grades', component: ClassAssessmentGradesComponent, data: {title: 'Class Assessment Grades'} },\n  { path: 'test-grading', component: TestGradingComponent, data: {title: 'Test Grading'} },\n  { path: 'test-schedule/:testScheduleId', component: TestGradingComponent, data: {title: 'Edit Test Schedule'} },\n  { path: 'report-cards/search', component: ReportCardsComponent, data: {title: 'Report Cards Search'} },\n  { path: 'report-cards/search/report-card-details/:studentId/:termId', component: ReportCardDetailsComponent, data: {title: 'Report Card Details'} },\n  { path: 'report-cards/additional-student-information', component: SearchStudentInformationComponent, data: {title: 'Additional Student Information'} },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AcademicGradingRoutingModule { }\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TokenInterceptor } from 'app/interceptors/token-interceptor';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { MatcomponentsModule } from 'app/main/matcomponents.module';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedManagementModule } from 'app/shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { SatDatepickerModule } from 'saturn-datepicker';\nimport { TestScheduleComponent } from './test-schedule/test-schedule.component';\nimport { AcademicsModule } from '../academics.module';\nimport { AcademicGradingRoutingModule } from './academic-grading-routing.module';\nimport { TestScheduleService } from 'app/service/grading-service/api/test-schedule-service';\nimport {ClassAssessmentGradesComponent} from './class-assessment-grades/class-assessment-grades.component';\nimport { TestGradingComponent } from '../../../shared/test-grading/test-grading.component';\nimport {GardeTermConfigurationService} from '../../../service/grading-service/api/garde-term-configuration.service';\nimport {AssessmentParameterService} from '../../../service/assessment-service/api/assessment-parameters.service';\nimport {StudentAssessmentGradeService} from '../../../service/grading-service/api/student-assessment-grade.service';\nimport { ReportCardsComponent } from './report-cards/report-cards.component';\nimport { ReportCardDetailsComponent } from './report-card-details/report-card-details.component';\nimport {SchedulesComponent} from './test-schedule/schedules.component';\nimport { MatProgressSpinnerModule } from '@angular/material';\nimport { StudentInformationDetailsComponent } from '../student-information-system/student-information-details/student-information-details.component';\nimport { SearchStudentInformationComponent } from './search-student-information/search-student-information.component';\n\n@NgModule({\n  declarations: [\n      TestScheduleComponent,\n    ClassAssessmentGradesComponent,\n    ReportCardsComponent,\n    ReportCardDetailsComponent,\n      SchedulesComponent,\n      SearchStudentInformationComponent\n  ],\n  imports: [\n    CommonModule,\n    AcademicGradingRoutingModule,\n    MatcomponentsModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedManagementModule,\n    TranslateModule,\n    FuseSharedModule,\n    Ng2TelInputModule,\n    SatDatepickerModule,\n    MatProgressSpinnerModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n    TestScheduleService,\n    GardeTermConfigurationService,\n    AssessmentParameterService,\n      StudentAssessmentGradeService\n  ],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n  exports: [],\n})\nexport class AcademicGradingModule { }\n","module.exports = \"<app-af-details [keyValues]=\\\"studentDetails\\\" [title]=\\\"'Student Information'\\\" [header]=\\\" 'REPORT CARD DATA' \\\"\\n  [isBackButtonRequired]=true [infoKey]=\\\"'Report Cards Search'\\\">\\n</app-af-details>\\n\\n<div class=\\\"px-sm-40 py-12\\\">\\n  <div class=\\\"mat-elevation-z2 simple-table-container radius-t-20 pt-12\\\" fxLayout=\\\"column\\\">\\n    <div fxLayoutAlign=\\\"end center\\\" class=\\\"icon-position\\\">\\n      <button mat-mini-fab color=\\\"accent\\\" aria-label=\\\"More\\\" [matMenuTriggerFor]=\\\"menu\\\">\\n        <mat-icon>more_vert</mat-icon>\\n      </button>\\n    </div>\\n    <mat-tab-group>\\n      <mat-tab label=\\\"{{'GRADING TERM INFORMATION' | translate}}\\\">\\n        <app-af-details [keyValues]=\\\"gradingTermInfo\\\" [isElevation]=\\\"true\\\" [isBackButtonRequired]=false>\\n        </app-af-details>\\n      </mat-tab>\\n      <mat-tab label=\\\"{{'TESTS AND CONTRIBUTION' | translate }}\\\">\\n        <app-table [settings]=\\\"testContributionsSettings\\\"></app-table>\\n      </mat-tab>\\n    </mat-tab-group>\\n  </div>\\n</div>\\n<div class=\\\"px-sm-40 py-12\\\" *ngIf=\\\"reportCradDetails\\\">\\n  <div class=\\\"mat-elevation-z2 simple-table-container radius-t-20 pt-12 position-relative\\\" fxLayout=\\\"column\\\">\\n    <div fxLayout=\\\"row\\\" class=\\\"position-absolute\\\" *ngIf=\\\"showButton\\\"\\n      [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-40px'}}\\\">\\n      <button mat-raised-button class=\\\"mr-20\\\" color=\\\"accent\\\" *ngIf=\\\"isRouteToAssessments === true\\\"\\n        (click)=\\\"closeAssessmentForm()\\\"><span translate>Done</span></button>\\n      <button mat-raised-button color=\\\"primary\\\"\\n        *ngIf=\\\"isRouteToAssessments === false && studentAssessmentDeatils?.rows?.length\\\"\\n        (click)=\\\"navAssessmentGrades()\\\"> <span translate>Edit Assessment Grades</span></button>\\n    </div>\\n    <mat-tab-group (selectedTabChange)=\\\"onTabChange($event)\\\">\\n      <mat-tab label=\\\"{{'COURSE SCORES & GRADES' | translate}}\\\">\\n        <table *ngIf=\\\"rowGroupingColumns?.length > 0;else no_data\\\" class=\\\"w-100-p tableBar groupTable\\\" mat-table\\n          [dataSource]=\\\"tableData\\\" matSort matSortDisable>\\n          <ng-container *ngFor=\\\"let column of cols; let i = index\\\" matColumnDef=\\\"{{column.field}}\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n              <div class=\\\"headerTitle\\\" disableClear>\\n                <strong class=\\\"mb-0 title mat-subheading-1 pl-4\\\" translate>{{column.header}}</strong>\\n              </div>\\n            </th>\\n            <div *ngFor=\\\"let rowGroupingColumn of rowGroupingColumns; let k = index\\\">\\n              <div *ngIf=\\\"column.field == rowGroupingColumn\\\">\\n                <td mat-cell *matCellDef=\\\"let row; let j=index\\\" [attr.rowspan]=\\\"getRowSpan(rowGroupingColumn, j)\\\"\\n                  [style.display]=\\\"getRowSpan(rowGroupingColumn, j) ? '' : 'none'\\\"\\n                  [ngClass]=\\\"tdGroupingClass[rowGroupingColumn]\\\">\\n\\n                  <mdt-table-cell [row]=\\\"row\\\" [column]=\\\"column\\\">\\n                    <p matTooltipClass=\\\"matTool-tip\\\" matTooltipPosition=\\\"above\\\" [matTooltip]=\\\"row[column.field]\\\"\\n                      class=\\\"text-truncate pl-4\\\">\\n                      {{row[column.field]}}\\n                    </p>\\n                  </mdt-table-cell>\\n                </td>\\n              </div>\\n            </div>\\n            <td mat-cell *matCellDef=\\\"let row;let l = index\\\">\\n              <mdt-table-cell [row]=\\\"row\\\" [column]=\\\"column\\\">\\n                <p matTooltipClass=\\\"matTool-tip\\\" matTooltipPosition=\\\"above\\\" [matTooltip]=\\\"row[column.field]\\\"\\n                  class=\\\"text-truncate pl-4 \\\">\\n                  {{row[column.field]}}\\n                </p>\\n              </mdt-table-cell>\\n            </td>\\n          </ng-container>\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns; sticky: true\\\"></tr>\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns; let even = even;\\\"\\n            [ngClass]=\\\"{'even-blue-bg': row.isCheck, 'even-grey-bg': (even && !row.isCheck), 'custom-total': row.testType == 'Total'}\\\">\\n          </tr>\\n        </table>\\n      </mat-tab>\\n      <mat-tab label=\\\"{{'ASSESSEMENT GRADES'| translate}}\\\">\\n        <app-class-assessment-grades *ngIf=\\\"isRouteToAssessments; else student_assessments\\\"\\n          [studentData]=\\\"studentAssessmentData\\\" [@animate]=\\\"{value:'*',params:{delay:'100ms',x:'-40px'}}\\\">\\n        </app-class-assessment-grades>\\n\\n        <ng-template #student_assessments>\\n          <app-table *ngIf=\\\"studentAssessmentDeatils?.rows?.length && isRouteToAssessments === false;else no_data \\\"\\n            [settings]=\\\"studentAssessmentDeatils\\\">\\n          </app-table>\\n        </ng-template>\\n      </mat-tab>\\n      <!-- <mat-tab label=\\\" Go To ASSESSEMENT GRADES\\\">\\n        <button (click)=\\\"navAssessmentGrades()\\\"> Go To Assessment Grades</button>\\n        <button (click)=\\\"closeAssessmentForm()\\\"> Close</button>\\n      </mat-tab> -->\\n    </mat-tab-group>\\n  </div>\\n</div>\\n\\n<ng-template #no_data>\\n  <div class=\\\"errorMsg\\\">\\n    <p class=\\\"red-text text-center mb-0 font-weight-bold p-24\\\" translate>No Data Found</p>\\n  </div>\\n</ng-template>\\n\\n<mat-menu #menu=\\\"matMenu\\\">\\n  <ng-container *ngFor=\\\"let item of operations\\\">\\n    <button mat-menu-item (click)=\\\"onSelectAction(item)\\\">\\n      <mat-icon>{{item.icon}}</mat-icon>{{item.name | translate}}\\n    </button>\\n  </ng-container>\\n</mat-menu>\"","module.exports = \".icon-position {\\n  position: relative; }\\n  .icon-position button {\\n    position: absolute;\\n    top: 0;\\n    right: 20px;\\n    z-index: 999; }\\n  .custom-total td p {\\n  color: #03a9f4 !important;\\n  font-weight: 800; }\\n  .position-relative {\\n  position: relative; }\\n  .position-relative .position-absolute {\\n    position: absolute;\\n    top: 10px;\\n    right: 30px;\\n    z-index: 999; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL2dyYWRpbmcvcmVwb3J0LWNhcmQtZGV0YWlscy9yZXBvcnQtY2FyZC1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQWtCLEVBQUE7RUFEdEI7SUFHUSxrQkFBa0I7SUFDbEIsTUFBTTtJQUNOLFdBQVc7SUFDWCxZQUFZLEVBQUE7RUFHcEI7RUFDSSx5QkFBd0I7RUFDeEIsZ0JBQWUsRUFBQTtFQUVuQjtFQUNJLGtCQUFrQixFQUFBO0VBRHRCO0lBR1Esa0JBQWtCO0lBQ2xCLFNBQVE7SUFDUixXQUFXO0lBQ1gsWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hY2FkZW1pY3MvZ3JhZGluZy9yZXBvcnQtY2FyZC1kZXRhaWxzL3JlcG9ydC1jYXJkLWRldGFpbHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaWNvbi1wb3NpdGlvbntcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgYnV0dG9ue1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMDtcbiAgICAgICAgcmlnaHQ6IDIwcHg7XG4gICAgICAgIHotaW5kZXg6IDk5OTtcbiAgICB9XG59XG4uY3VzdG9tLXRvdGFsIHRkIHB7XG4gICAgY29sb3I6IzAzYTlmNCAhaW1wb3J0YW50O1xuICAgIGZvbnQtd2VpZ2h0OjgwMDtcbn1cbi5wb3NpdGlvbi1yZWxhdGl2ZXtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgLnBvc2l0aW9uLWFic29sdXRle1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDoxMHB4O1xuICAgICAgICByaWdodDogMzBweDtcbiAgICAgICAgei1pbmRleDogOTk5O1xuXG4gICAgfVxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { CommonService } from 'app/service/common.service';\nimport { GradeReportService } from 'app/service/report-card-service/grade-report.service';\nimport { max } from 'date-fns';\nimport { MatSnackBar } from '@angular/material';\nimport { AppSettings } from 'app/app.constants';\nimport { PaymentService } from 'app/service/payments/payment.service';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { fuseAnimations } from '@fuse/animations';\nimport * as HttpStatus from 'http-status-codes';\n\n@Component({\n  selector: 'app-report-card-details',\n  templateUrl: './report-card-details.component.html',\n  styleUrls: ['./report-card-details.component.scss'],\n  providers: [GradeReportService, StoreService, PaymentService],\n  animations: fuseAnimations\n})\nexport class ReportCardDetailsComponent extends CommonComponent implements OnInit {\n  currentComponent = 'ReportCardDetailsComponent';\n  studentId: any;\n  studentDetails: any;\n  particurlarsCols: any;\n  testContributionsSettings: any;\n  reportCradDetails: any;\n  gradingTermInfo: any[] = [];\n  courseScoreDeatils: any;\n  tableData: any = {};\n  rowGroupingColumns: any;\n  parentColumn: any;\n  spans: Array<any> = [];\n  cols: any[];\n  displayedColumns: any[] = [];\n  studentAssessmentDeatils: any;\n  graingTermId: any;\n  operations: any[] = [];\n  studentAssessmentData: any;\n  isRouteToAssessments = false;\n  showButton: boolean;\n  tdGroupingClass: any;\n  constructor(private route: ActivatedRoute, public commonService: CommonService,\n    public gradeReportService: GradeReportService, public paymentService: PaymentService, public storeService: StoreService, public snackBar: MatSnackBar) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      if (params.studentId) {\n        this.studentId = params.studentId;\n      }\n      if (params.termId) {\n        this.graingTermId = params.termId;\n      }\n    });\n    this.operations = [\n      {\n        name: (AppSettings.GENERATE_REPORT_CARD_OPERATION),\n        icon: AppSettings.GENERATE,\n        operationName: AppSettings.GENERATE_REPORT_CARD\n      },\n\n    ];\n    this.getReportCardDetails();\n  }\n  onTabChange(event: any): void {\n    this.showButton = event.index === 1 ? true : false;\n  }\n  getReportCardDetails(): void {\n    this.gradeReportService.studentReportsReportsGetGet(this.studentId, this.graingTermId)\n      .subscribe(res => this.setReportCardDetails(res), err => this.errorResponse(err));\n  }\n  setReportCardDetails(response): void {\n    this.reportCradDetails = response.gradeTermStudentDataView;\n    if (this.reportCradDetails) {\n      if (this.reportCradDetails.gradingTermDataSummaryId && this.reportCradDetails.statusCode !== AppSettings.REPORT_INCOMPLETE) {\n        this.operations = [];\n        this.operations.push(\n          {\n            name: (AppSettings.GENERATE_REPORT_CARD_OPERATION),\n            icon: AppSettings.GENERATE,\n            operationName: AppSettings.GENERATE_REPORT_CARD\n          },\n          {\n            name: AppSettings.VIEW_REPORT_CARD_OPERATION,\n            icon: AppSettings.DOWNLOAD,\n            operationName: AppSettings.VIEW_REPORT_CARD\n          },\n          {\n            name: AppSettings.CLEAR_REPORT_CARD_DATA_OPERATION,\n            icon: AppSettings.CLEAR_ICON,\n            operationName: AppSettings.CLEAR_REPORT_CARD_DATA,\n          },\n          {\n            name: (AppSettings.APPROVE_PENDING_REPORT_CARD_OPERATION),\n            icon: AppSettings.DONE,\n            operationName: AppSettings.APPROVE_PENDING_REPORT_CARD\n          },\n        );\n      } else {\n        this.setOperations();\n      }\n      this.gradingTermInfo = this.getKeyValuesOfObject(this.getRequiredTermDeatils(this.reportCradDetails));\n      this.studentDetails = this.getKeyValuesOfObject(this.getRequiredStudentDeatils(this.reportCradDetails));\n      this.prepareTestContributionsTable();\n    }\n  }\n\n  setOperations(): void {\n    this.operations = [\n      {\n        name: (AppSettings.GENERATE_REPORT_CARD_OPERATION),\n        icon: AppSettings.GENERATE,\n        operationName: AppSettings.GENERATE_REPORT_CARD\n      },\n    ];\n  }\n  prepareTestContributionsTable(): void {\n    this.particurlarsCols = [\n      { field: 'testTypeName', header: 'Name', sort: false },\n      { field: 'isDisplayOnreportCard', header: 'Displayed On Report Card', sort: false },\n      { field: 'marksGroupCriteria', header: 'Marks Group Criteria', sort: false },\n      { field: 'marksGroupCriteriaCount', header: 'Marks Group Criteria Count', sort: false },\n      { field: 'displayOption', header: 'Display Option', sort: false }\n    ];\n    if (this.reportCradDetails.gradingTermTestDataViewModel && this.reportCradDetails.gradingTermTestDataViewModel.length) {\n      this.reportCradDetails.gradingTermTestDataViewModel.map(e => {\n        e.isDisplayOnreportCard = e.isDisplayOnreportCard ? 'Yes' : 'NO';\n      });\n      if (this.reportCradDetails.gradingTermTestDataViewModel[0].consideration) {\n        this.particurlarsCols.splice(1, 0, { field: 'consideration', header: 'Considerations %', sort: false });\n      } else {\n        this.particurlarsCols.splice(1, 0, { field: 'contribution', header: 'Contribution %', sort: false });\n      }\n    }\n    this.testContributionsSettings = {\n      rows: this.reportCradDetails.gradingTermTestDataViewModel,\n      columns: this.particurlarsCols,\n      componentName: this.currentComponent,\n      visibleSelectAll: false,\n      isPaginationRequired: false,\n      padding: true,\n      hideHeader: true,\n      headerOperations: {\n        addingForm: {\n          required: false\n        }\n      },\n    };\n    this.setCourseData();\n    this.setAssessmentData();\n  }\n  setAssessmentData(): void {\n    const particurlarsCols = [\n      { field: 'assessmentGroup', header: 'Assessment Group', sort: false },\n      { field: 'assessmentCategory', header: 'Assessment Category', sort: false },\n      { field: 'assessmentParameter', header: 'Assessment Parameter', sort: false },\n      { field: 'assessmentSubCategory', header: 'Assessment Subcategory', sort: false },\n      { field: 'studentGrade', header: 'Student Grade', sort: false }\n    ];\n    this.studentAssessmentDeatils = {\n      rows: this.reportCradDetails.studentAssessment,\n      columns: particurlarsCols,\n      componentName: this.currentComponent,\n      visibleSelectAll: false,\n      isPaginationRequired: false,\n      padding: true,\n      hideHeader: true,\n      headerOperations: {\n        addingForm: {\n          required: false\n        }\n      },\n      rowGroupingColumns: ['assessmentGroup', 'assessmentCategory', 'assessmentParameter', 'assessmentSubCategory', 'studentGrade']\n    };\n  }\n  setCourseData(): void {\n    const courseScoreDeatilsCols = [\n      { field: 'courseName', header: 'Course', sort: false },\n      { field: 'testType', header: 'Test Type', sort: false },\n      { field: 'consideration', header: 'Consideration', sort: false },\n      { field: 'gradeIndicator', header: 'Grade', sort: false }\n    ];\n    let maxRows = 0;\n    const additionalColumns = [];\n    if (this.reportCradDetails.gradingTermStudentCourseDataView && this.reportCradDetails.gradingTermStudentCourseDataView.length) {\n      this.reportCradDetails.gradingTermStudentCourseDataView.map(e => {\n        if (maxRows < e.gradingTermStudentCourseDataDetails.length) {\n          maxRows = e.gradingTermStudentCourseDataDetails.length;\n        }\n      });\n      let i = 0;\n      if (this.reportCradDetails.gradingTermStudentCourseDataView[0].gradingTermAdditionalColumnDataDetailsView) {\n        this.reportCradDetails.gradingTermStudentCourseDataView[0].gradingTermAdditionalColumnDataDetailsView.map(ele => {\n          additionalColumns.push({ field: 'additionalCol' + i, header: ele.terms, sort: false });\n          i++;\n        });\n      }\n    }\n    for (let i = 0; i < maxRows; i++) {\n      courseScoreDeatilsCols.splice(2 + i, 0, { field: 'test' + i, header: 'Test', sort: false });\n    }\n    if (additionalColumns && additionalColumns.length) {\n      additionalColumns.map(e => {\n        courseScoreDeatilsCols.push(e);\n      });\n    }\n    const courseRows = [];\n    if (this.reportCradDetails.gradingTermStudentCourseDataView && this.reportCradDetails.gradingTermStudentCourseDataView.length) {\n      this.reportCradDetails.gradingTermStudentCourseDataView.map(e => {\n        const defaultData = {\n          courseName: e.courseName,\n          testType: e.testType,\n          consideration: e.consideration,\n          gradeIndicator: e.gradeIndicator\n        };\n        if (e.testTypeId) {\n          e.gradingTermStudentCourseDataDetails.map((scores, i) => {\n            defaultData['test' + i] = scores.testScore;\n          });\n          for (let j = e.gradingTermStudentCourseDataDetails.length; j < maxRows; j++) {\n            defaultData['test' + j] = '---';\n          }\n          courseRows.push(defaultData);\n        } else {\n          defaultData['testType'] = 'Total';\n          if (e.gradingTermAdditionalColumnDataDetailsView) {\n            e.gradingTermAdditionalColumnDataDetailsView.map(ele => {\n              const matchedData = courseScoreDeatilsCols.find(el => el.header === ele.terms);\n              if (matchedData) {\n                defaultData[matchedData.field] = ele.isGrandTotalColumn ? ele.gradeIndicator : ele.consideration;\n              }\n            });\n          }\n          courseRows.push(defaultData);\n        }\n      });\n    }\n    if (courseRows.length) {\n      courseRows.push({\n        testType: this.reportCradDetails.overallGradeDisplayName ? this.reportCradDetails.overallGradeDisplayName : 'OVERALL GRADE',\n        consideration: this.reportCradDetails.studentMarks + ' / ' + this.reportCradDetails.totalMarks,\n        gradeIndicator: this.reportCradDetails.gradeIndicator\n      });\n    }\n    this.courseScoreDeatils = {\n      rows: courseRows,\n      columns: courseScoreDeatilsCols,\n      componentName: this.currentComponent,\n      visibleSelectAll: false,\n      isPaginationRequired: true,\n      padding: true,\n      hideHeader: true,\n      headerOperations: {\n        addingForm: {\n          required: false\n        }\n      },\n      rowGroupingColumns: ['courseName']\n    };\n    this.tableData = this.courseScoreDeatils.rows;\n    this.cols = [];\n    if (this.courseScoreDeatils.columns && !this.cols.length) {\n      this.courseScoreDeatils.columns.forEach((i: any) => this.cols.push(i));\n    }\n    if (this.tableData.length && this.courseScoreDeatils.rowGroupingColumns) {\n      this.rowGroupingColumns = this.courseScoreDeatils.rowGroupingColumns;\n      this.parentColumn = this.courseScoreDeatils.rowGroupingColumns[0];\n      this.tableData.sort((t1, t2) => {\n        const name1 = t1[this.parentColumn];\n        const name2 = t2[this.parentColumn];\n        if (name1 > name2) { return 1; }\n        if (name1 < name2) { return -1; }\n        return 0;\n      });\n      this.rowGroupingColumns.forEach(columns => {\n        this.cacheSpan(columns);\n      });\n      this.rowGroupingClasses();\n    }\n\n\n\n    this.displayedColumns = this.cols.map(column => column.field);\n  }\n  getRowSpan(col, index): void {\n    return this.spans[index] && this.spans[index][col];\n  }\n  checkPrevoiusColumn(j: any): boolean {\n    let isPriviousNotColumnGrouped = true;\n    if (j > 0 && j < this.rowGroupingColumns.length - 1) {\n      this.rowGroupingColumns.forEach(element => {\n        if (element === this.rowGroupingColumns[j - 1]) {\n          isPriviousNotColumnGrouped = false;\n        }\n      });\n\n    }\n    return isPriviousNotColumnGrouped;\n  }\n  cacheSpan(key): void {\n    for (let i = 0; i < this.tableData.length;) {\n      const currentValue = this.tableData[i][key];\n      const parentValue = this.tableData[i][this.parentColumn];\n      let count = 1;\n      for (let j = i + 1; j < this.tableData.length; j++) {\n        if (parentValue === this.tableData[j][this.parentColumn]) {\n          if (currentValue !== this.tableData[j][key]) {\n            break;\n          }\n          count++;\n        }\n      }\n\n      if (!this.spans[i]) {\n        this.spans[i] = {};\n      }\n      this.spans[i][key] = count;\n      i += count;\n    }\n  }\n  getRequiredTermDeatils(term): any {\n    return {\n      'Term Name': term.gradingTermName,\n      'Evaluation Type': term.evaluationType,\n      'Term Code': term.termCode,\n      'Generate Report Card': term.generateReportCard ? 'Yes' : 'No',\n      'Start Date': this.getFormattedDateBySchoolDateFormat(term.startDate),\n      'Generate Overall Grade': term.generateOverallGrade ? 'Yes' : 'No',\n      'End Date': this.getFormattedDateBySchoolDateFormat(term.endDate),\n      'Overall Grade Display Name': term.overallGradeDisplayName,\n      'Report Card Status': term.reportCardStatus,\n      'Last Generated Error Message': term.lastGeneratedErrorMessage\n    };\n  }\n  getRequiredStudentDeatils(student): any {\n    return {\n      'Student Name': student.studentName,\n      'Roll Number': student.rollNumber,\n      'Admission Number': student.admissionNumber,\n      'Board': student.schoolBoardName,\n      'Class': student.class,\n      'Section': student.section,\n      'Date Of Birth': this.getFormattedDateBySchoolDateFormat(student.dateOfBirth),\n      'Father Name': student.fatherName,\n      'Email': student.email,\n      'Phone Number': student.phoneNumber,\n    };\n  }\n  onSelectAction(action): any {\n    const params = {\n      gradeTermId: this.reportCradDetails.gradingTermId,\n      studentIds: [this.reportCradDetails.schoolAcademicSessionStudentId],\n      classId: this.reportCradDetails.classId,\n      sectionId: this.reportCradDetails.sectionId,\n    };\n    if (action.operationName === AppSettings.GENERATE_REPORT_CARD.toLowerCase()) {\n      this.generateReportCard(params);\n    } else if (action.operationName === AppSettings.CLEAR_REPORT_CARD_DATA.toLowerCase()) {\n      const dialogValue = this.commonService.dialog(AppSettings.WARNING_ON_CLEAR_REPORT_CARD, true, AppSettings.NO, AppSettings.YES);\n      dialogValue.afterClosed().subscribe(actionDailog => {\n        if (actionDailog === AppSettings.YES) {\n          // tslint:disable-next-line: max-line-length\n          this.gradeReportService.reportsClearStudentReportsDelete(params.studentIds, this.reportCradDetails.gradingTermId, this.reportCradDetails.classId, this.reportCradDetails.sectionId)\n            .subscribe(res => this.onClearReportCard(res), err => this.errorResponse(err));\n        }\n      });\n    } else if (action.operationName === AppSettings.APPROVE_PENDING_REPORT_CARD.toLowerCase()) {\n      this.gradeReportService.reportsApprovePendingapprovalReportsPut(params.studentIds,\n        params.gradeTermId, params.classId,\n        params.sectionId)\n        .subscribe(res => this.onApproveReportCard(res), err => this.errorResponse(err));\n    } else if (action.operationName === AppSettings.VIEW_REPORT_CARD.toLowerCase()\n      && (this.reportCradDetails.gradingTermDataSummaryId || this.reportCradDetails.statusCode === 'RPTG_PA')) {\n      this.paymentService.reportPrint(this.reportCradDetails.gradingTermDataSummaryId)\n        .subscribe(res => this.viewReportCard(res), err => this.errorResponse(err));\n    }\n  }\n  generateReportCard(data): void {\n    this.gradeReportService.reportsGenerateStudentReportGet(data.gradeTermId, data.studentIds, data.classId, data.sectionId)\n      .subscribe(res => this.onClearReportCard(res, false), err => this.errorResponse(err));\n  }\n  onClearReportCard(res, onClear = true): void {\n    if (onClear) {\n      this.rowGroupingColumns = [];\n    }\n    this.openSnackBar(res.messages.ResultMessage);\n    this.getReportCardDetails();\n  }\n\n  onApproveReportCard(res): void {\n    if (res.statusCode === HttpStatus.OK) {\n      this.openSnackBar(AppSettings.RPORT_APPROVED_SUCCESSFULLY);\n    } else {\n      this.openSnackBar(res.messages.ResultMessage);\n\n    }\n    this.getReportCardDetails();\n  }\n  viewReportCard(res): void {\n    if (res.fileName) {\n      window.open(this.storeService.getFilePath(res.fileName));\n    }\n  }\n\n  navAssessmentGrades(): void {\n    this.isRouteToAssessments = true;\n    this.studentAssessmentData = {\n      student: {\n        label: this.reportCradDetails.studentName,\n        value: this.reportCradDetails.schoolAcademicSessionStudentId\n      },\n      schoolBoardId: this.reportCradDetails.schoolBoardId,\n      classId: this.reportCradDetails.classId,\n      sectionId: this.reportCradDetails.sectionId,\n      gradingTermId: this.reportCradDetails.gradingTermId\n    };\n\n  }\n\n  closeAssessmentForm(): void {\n    this.isRouteToAssessments = false;\n    this.getReportCardDetails();\n  }\n\n  rowGroupingClasses(): any {\n    this.tdGroupingClass = [];\n    this.cols.forEach((column, index) => {\n      const findGroupingIndex = this.rowGroupingColumns.findIndex((rowGroupingColumn) => {\n        return column.field === rowGroupingColumn;\n      });\n      if (findGroupingIndex >= 0) {\n        if (index > 0) {\n          const previousColumnClass = this.tdGroupingClass[this.cols[index - 1].field];\n          if (previousColumnClass.includes('border-right')) {\n            this.tdGroupingClass[column.field] = 'border-right';\n          }\n          else {\n            this.tdGroupingClass[column.field] = 'border-right border-left';\n          }\n\n        }\n        else {\n          this.tdGroupingClass[column.field] = 'border-right';\n        }\n      }\n      else {\n        this.tdGroupingClass[column.field] = '';\n      }\n\n    });\n  }\n}\n","module.exports = \"<div class=\\\"px-40 pt-40\\\">\\n  <div class=\\\"py-8 px-20 font-size-18 text-uppercase\\\">{{'Report Cards Search' | translate }}</div>\\n  <div class=\\\"mat-elevation-z3 simple-table-container radius-t-20\\\">\\n    <div fxLayoutAlign=\\\"end center\\\" class=\\\"p-16 border-bottom\\\">\\n      <button (click)=\\\"getHelpText('Report Cards Search')\\\" mat-button>\\n        <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n      </button>\\n    </div>\\n    <form [formGroup]=\\\"reportCardsSearchForm\\\" (ngSubmit)=\\\"searchReportCards()\\\" #paymentSearch=\\\"ngForm\\\" class=\\\"p-24\\\">\\n      <div fxFlexFill fxLayout=\\\"column\\\" class=\\\"pt-12\\\" fxLayout.gt-sm=\\\"row\\\">\\n\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\"\\n          class=\\\"pr-sm-20\\\">\\n          <mat-label translate #board>Board</mat-label>\\n          <mat-select placeholder=\\\"Board\\\" formControlName=\\\"boardId\\\"\\n            (selectionChange)=\\\"onSelectSchoolBoard($event.value)\\\" required>\\n            <mat-option *ngFor=\\\"let board of schoolBoardsList\\\" [value]=\\\"board.value\\\">\\n              {{ board.label }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='board.innerText' [validationControl]=\\\"reportCardsSearchForm.controls.boardId\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\"\\n          class=\\\"pr-sm-20\\\">\\n          <mat-label translate #class>Class</mat-label>\\n          <mat-select placeholder=\\\"Class\\\" formControlName=\\\"classId\\\" (selectionChange)=\\\"onClassChange($event.value)\\\"\\n            required>\\n            <mat-option *ngFor=\\\"let class of classesList\\\" [value]=\\\"class.value\\\">\\n              {{ class.label }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='class.innerText' [validationControl]=\\\"reportCardsSearchForm.controls.classId\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\"\\n          class=\\\"pr-sm-20\\\">\\n          <mat-label translate #section>Section</mat-label>\\n          <mat-select (selectionChange)=\\\"getGradingTerms()\\\" placeholder=\\\"Section\\\" formControlName=\\\"sectionId\\\" required>\\n            <mat-option *ngFor=\\\"let section of availableSections\\\" [value]=\\\"section.value\\\">\\n              {{ section.label }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='section.innerText'\\n              [validationControl]=\\\"reportCardsSearchForm.controls.sectionId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\">\\n          <mat-label translate #gradingTerm>Grading Term</mat-label>\\n          <mat-select placeholder=\\\"Grading Term\\\" formControlName=\\\"gradingTermId\\\" required>\\n            <mat-option *ngFor=\\\"let term of gradingTermsList\\\" [value]=\\\"term.id\\\">\\n              {{ term.name }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='gradingTerm.innerText'\\n              [validationControl]=\\\"reportCardsSearchForm.controls.gradingTermId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div id=\\\"report-card-table\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mb-20\\\">\\n        <button mat-raised-button type=\\\"reset\\\" color=\\\"primary\\\" class=\\\"text-uppercase mr-12\\\" (click)=\\\"onClear()\\\">\\n          <span translate>Reset</span>\\n        </button>\\n        <button mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n          <span translate>Search</span>\\n        </button>\\n      </div>\\n\\n    </form>\\n  </div>\\n\\n  <div *ngIf=\\\"reportCardDetails?.gradeTermStudenSummaryView?.list?.length\\\"\\n    class=\\\"mat-elevation-z3 simple-table-container mt-20 radius-5\\\" fxLayout=\\\"column\\\">\\n    <div fxLayoutAlign=\\\"space-between center\\\" class=\\\"px-24 py-20\\\">\\n      <div class=\\\"py-8 px-20 font-size-18 text-uppercase\\\">Report Card Summary</div>\\n      <button mat-mini-fab color=\\\"accent\\\" aria-label=\\\"More\\\" [matMenuTriggerFor]=\\\"menu\\\">\\n        <mat-icon>more_vert</mat-icon>\\n      </button>\\n    </div>\\n    <div>\\n      <mat-list class=\\\"pt-0 confirm-table border mb-28 mx-sm-auto\\\" fxLayout=\\\"row wrap\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"69\\\"\\n        fxLayoutAlign=\\\"center center\\\">\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"75\\\" fxFlex=\\\"100\\\">\\n          {{ 'Number of Students' | translate }}\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\">\\n          {{ reportCardDetails?.gradingDetails?.noofStudents }}\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"75\\\" fxFlex=\\\"100\\\">\\n          {{ 'Number of completed Report Cards'  | translate }}\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\">\\n          {{ reportCardDetails?.gradingDetails?.noofCompletedReportcards }}\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"75\\\" fxFlex=\\\"100\\\">\\n          {{ 'Number of pending approval Report Cards' | translate }}\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\">\\n          {{ reportCardDetails?.gradingDetails?.noofpendingApprovalReportcards }}\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"75\\\" fxFlex=\\\"100\\\">\\n          {{ 'Number of Pending Incomplete Report Cards' | translate }}\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\">\\n          {{ reportCardDetails?.gradingDetails?.noofpendingReportcards }}\\n        </mat-list-item>\\n      </mat-list>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-table [settings]=\\\"tableSettings\\\" (getTableData)='getTableData($event)' (rowBasedAction)='onRowActions($event)'\\n  (openAddForm)=\\\"onAddFormClick()\\\">\\n</app-table>\\n\\n<mat-menu #menu=\\\"matMenu\\\">\\n  <ng-container *ngFor=\\\"let item of operationsForSummary\\\">\\n    <button mat-menu-item (click)=\\\"onSelectAction(item)\\\">\\n      <mat-icon>{{item.icon}}</mat-icon>{{item.name |translate}}\\n    </button>\\n  </ng-container>\\n</mat-menu>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL2dyYWRpbmcvcmVwb3J0LWNhcmRzL3JlcG9ydC1jYXJkcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ChangeDetectorRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { GradeSetupService } from 'app/service/grading-service/api/grade-setup.service';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { ClassesConfigService } from 'app/service/general/api/classes-config.service';\nimport { CommonService } from 'app/service/common.service';\nimport { GardeTermConfigurationService } from 'app/service/grading-service/api/garde-term-configuration.service';\nimport { AppSettings } from 'app/app.constants';\nimport { Router } from '@angular/router';\nimport { GradeReportService } from 'app/service/report-card-service/grade-report.service';\nimport { MatAutocompleteTrigger, MatSnackBar, MatDialog } from '@angular/material';\nimport { StudentDBService } from 'app/service/student-information-system/student-db.service';\nimport { RouteConfig } from 'app/url.config';\nimport { PaymentService } from 'app/service/payments/payment.service';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { ZipViewModel } from 'app/service/file-management/model/zip-view-model';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport * as HttpStatus from 'http-status-codes';\n\n@Component({\n  selector: 'app-report-cards',\n  templateUrl: './report-cards.component.html',\n  styleUrls: ['./report-cards.component.scss'],\n  providers: [GradeSetupService, ClassesConfigService, GardeTermConfigurationService, GradeReportService, StudentDBService, PaymentService, StoreService]\n})\nexport class ReportCardsComponent extends CommonComponent implements OnInit {\n  zipViewModel: ZipViewModel;\n  currentComponent = 'ReportCardsComponent';\n  reportCardsSearchForm: FormGroup;\n  isSchoolhasBoards = true;\n  schoolBoardsList: any[] = [];\n  classesList: any[] = [];\n  gradingTermsList: any[] = [];\n  tableSettings = {};\n  columns: any[];\n  operations: any[];\n  reportCardSearchViewModel: any;\n  schoolBoards: any[] = [];\n  availableSections: any[] = [];\n  reportCardDetails: any;\n  validate = true;\n  operationsForSummary: any[] = [];\n  ReturnFileName: any;\n  constructor(private gradeSetupService: GradeSetupService, private classService: ClassesConfigService, public commonService: CommonService,\n    private gradeTermConfigurationService: GardeTermConfigurationService, private cd: ChangeDetectorRef,\n    private router: Router, public gradeReportService: GradeReportService, private studentDbService: StudentDBService, public snackBar: MatSnackBar,\n    public paymentService: PaymentService, public storeService: StoreService, public dialog: MatDialog,\n    private sanitizer: DomSanitizer) {\n    super();\n    this.zipViewModel = {\n      fileNames: [],\n      returnFileName: ''\n    };\n  }\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.setColumnHeaders();\n    this.initializeSearchViewModel();\n    this.initializeTableSettings();\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.reportCardSearchViewModel = modelTableComponent;\n      this.reportCardsSearchForm.patchValue(modelTableComponent);\n      this.onSelectSchoolBoard(this.reportCardsSearchForm.value.boardId, true);\n      this.getAvailableSections(this.reportCardsSearchForm.value.boardId, this.reportCardsSearchForm.value.classId);\n      this.getGradingTerms(true);\n      this.searchReportCards();\n    }\n    this.getSchoolBoardsList();\n  }\n  initializeForm(): void {\n    this.reportCardsSearchForm = new FormGroup({\n      boardId: new FormControl(null, Validators.required),\n      classId: new FormControl(null, Validators.required),\n      sectionId: new FormControl(null, Validators.required),\n      gradingTermId: new FormControl(null, Validators.required)\n    });\n  }\n  setColumnHeaders(): void {\n    this.columns = [\n      { field: 'studentName', header: 'Student Name', sort: true },\n      { field: 'class', header: 'Class', sort: true },\n      { field: 'section', header: 'Section', sort: true },\n      { field: 'rollNumber', header: 'Roll Number', sort: true },\n      { field: 'admissionNumber', header: 'Admission Number', sort: true },\n      { field: 'gradingTermName', header: 'Grading Term', sort: true },\n      { field: 'reportCardStatus', header: 'Report Card Status', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n\n  }\n  initializeSearchViewModel(): void {\n    this.reportCardSearchViewModel = {\n      schoolAcademicSessionStudentId: null,\n      board: [],\n      studentName: [],\n      gradingTermId: [],\n      gradingterm: null,\n      reportcardstatus: [],\n      admissionNumber: null,\n      rollNumber: [],\n      classIds: [],\n      sectionIds: [],\n      studentIds: [],\n      statusIds: [],\n      sortOrder: 0,\n      sortBy: null,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE\n    };\n  }\n  searchReportCards(): void {\n    if (this.reportCardsSearchForm.valid) {\n      Object.assign(this.reportCardSearchViewModel, this.reportCardsSearchForm.value);\n      this.setModelDataTableComponent(this.currentComponent, this.reportCardSearchViewModel);\n      this.gradeReportService.studentReportsFetchReportsDetailsGet(\n        this.reportCardSearchViewModel.schoolAcademicSessionStudentId,\n        this.reportCardSearchViewModel.boardId,\n        this.reportCardSearchViewModel.studentName,\n        this.reportCardSearchViewModel.gradingTermId,\n        this.reportCardSearchViewModel.gradingterm,\n        this.reportCardSearchViewModel.reportcardstatus,\n        this.reportCardSearchViewModel.admissionNumber,\n        this.reportCardSearchViewModel.rollNumber,\n        this.reportCardSearchViewModel.classId,\n        this.reportCardSearchViewModel.sectionId,\n        this.reportCardSearchViewModel.studentIds,\n        this.reportCardSearchViewModel.statusIds,\n        this.reportCardSearchViewModel.sortOrder,\n        this.reportCardSearchViewModel.sortBy,\n        this.reportCardSearchViewModel.pageNumber,\n        this.reportCardSearchViewModel.pageSize)\n        .subscribe(res => this.setReportCardDetails(res), err => this.errorResponse(err));\n    }\n  }\n  setFormValuesToViewModel(): void {\n    if (this.reportCardsSearchForm.value.boardId) {\n      this.reportCardSearchViewModel.boardId = [this.reportCardsSearchForm.value.boardId];\n    } else {\n      this.reportCardSearchViewModel.boardId = [];\n    }\n    if (this.reportCardsSearchForm.value.classId) {\n      this.reportCardSearchViewModel.classId = [this.reportCardsSearchForm.value.classId];\n    } else {\n      this.reportCardSearchViewModel.classId = [];\n    }\n\n    if (this.reportCardsSearchForm.value.sectionId) {\n      this.reportCardSearchViewModel.sectionId = [this.reportCardsSearchForm.value.sectionId];\n    } else {\n      this.reportCardSearchViewModel.sectionId = [];\n    }\n    if (this.reportCardsSearchForm.value.gradingTermId) {\n      this.reportCardSearchViewModel.gradingTermId = [this.reportCardsSearchForm.value.gradingTermId];\n    } else {\n      this.reportCardSearchViewModel.gradingTermId = [];\n    }\n  }\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.columns,\n      componentName: this.currentComponent,\n      model: this.reportCardSearchViewModel,\n      filtersList: [],\n      sideHeader: {\n        heading: 'Students'\n      }\n    };\n  }\n  getSchoolBoardsList(): void {\n    this.gradeSetupService.schoolAcademicBoards().subscribe(res => {\n      if (res.listViews && res.listViews.length) {\n        this.isSchoolhasBoards = true;\n        res.listViews.forEach(element => {\n          this.schoolBoardsList.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n        if (!this.reportCardsSearchForm.value.boardId) {\n          this.reportCardsSearchForm.controls.boardId.setValue(this.schoolBoardsList[0].value);\n          this.onSelectSchoolBoard(this.schoolBoardsList[0].value);\n        }\n      } else {\n        this.isSchoolhasBoards = false;\n        this.schoolBoardsList = [];\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  onSelectSchoolBoard(schoolBoard: any, onManualChange = false): void {\n    if (!onManualChange) {\n      this.onClear(true);\n    }\n    if (!schoolBoard) {\n      return;\n    }\n    this.gradeSetupService.schoolAcademicClasses(schoolBoard).subscribe(response => {\n      if (response.listViews && response.listViews.length) {\n        response.listViews.forEach(element => {\n          this.classesList.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  onClassChange(classId): void {\n    this.availableSections = [];\n    this.gradingTermsList = [];\n    this.reportCardsSearchForm.controls.sectionId.setValue(null);\n    this.reportCardsSearchForm.controls.gradingTermId.setValue(null);\n    if (classId) {\n      this.getAvailableSections(this.reportCardsSearchForm.value.boardId, classId);\n    }\n    else {\n      this.availableSections = [];\n    }\n  }\n  getGradingTerms(onManualChange = false): void {\n    if (!onManualChange) {\n      this.gradingTermsList = [];\n      this.reportCardsSearchForm.controls.gradingTermId.setValue(null);\n    }\n    if (this.reportCardsSearchForm.value.sectionId) {\n      // tslint:disable-next-line: max-line-length\n      this.gradeTermConfigurationService.gradingTermConfigurationGradingTermsByClassidAndSectionidAndBoardidGet(this.reportCardsSearchForm.value.classId, [this.reportCardsSearchForm.value.sectionId], this.reportCardsSearchForm.value.boardId)\n        .subscribe(res => this.gradingTermsList = res.listViews);\n    }\n  }\n  displayFn(data: any): void {\n    return data ? data.studentNames : undefined;\n  }\n  onSelectAction(item): void {\n    if (item.operationName === AppSettings.GENERATE_INCOMPLETE_REPORT_CARDS.toLowerCase()) {\n      this.gradeReportService.reportsGeneratePendingIncompleteReportsPost(null, this.reportCardSearchViewModel.boardId,\n        this.reportCardSearchViewModel.gradingTermId, this.reportCardSearchViewModel.classId,\n        this.reportCardSearchViewModel.sectionId)\n        .subscribe(res => this.onClearReportCard(res), err => this.errorResponse(err));\n    } else if (item.operationName === AppSettings.CLEAR_ALL_REPORT_CARDS.toLowerCase()) {\n      const dialogValue = this.commonService.dialog(AppSettings.WARNING_ON_CLEAR_REPORT_CARDS, true, AppSettings.NO, AppSettings.YES);\n      dialogValue.afterClosed().subscribe(actionDailog => {\n        if (actionDailog === AppSettings.YES) {\n          // tslint:disable-next-line: max-line-length\n          this.gradeReportService.reportsClearStudentReportsDelete(null, this.reportCardSearchViewModel.gradingTermId, this.reportCardSearchViewModel.classId,\n            this.reportCardSearchViewModel.sectionId)\n            .subscribe(res => this.onClearReportCard(res), err => this.errorResponse(err));\n        }\n      });\n    } else if (item.operationName === AppSettings.APPROVE_ALL_PENDING_REPORT_CARDS.toLowerCase()) {\n      this.gradeReportService.reportsApprovePendingapprovalReportsPut(null,\n        this.reportCardSearchViewModel.gradingTermId, this.reportCardSearchViewModel.classId,\n        this.reportCardSearchViewModel.sectionId)\n        .subscribe(res => this.onClearReportCard(res), err => this.errorResponse(err));\n    } else if (item.operationName === AppSettings.DOWNLOAD_APPROVED_REPORT_CARD.toLowerCase()) {\n      this.gradeReportService.reportsApprovedReportFilesGet(null,\n        this.reportCardSearchViewModel.gradingTermId, this.reportCardSearchViewModel.classId,\n        this.reportCardSearchViewModel.sectionId)\n        .subscribe(res => this.onDownloadCard(res), err => this.errorResponse(err));\n    }\n  }\n  setReportCardDetails(response): void {\n    this.reportCardDetails = response;\n    this.operationsForSummary = [\n      {\n        name: AppSettings.GENERATE_INCOMPLETE_REPORT_CARDS_OPERATION,\n        icon: AppSettings.GENERATE,\n        operationName: AppSettings.GENERATE_INCOMPLETE_REPORT_CARDS\n      },\n      {\n        name: AppSettings.CLEAR_ALL_REPORT_CARDS_OPERATION,\n        icon: AppSettings.CLEAR_ALL,\n        operationName: AppSettings.CLEAR_ALL_REPORT_CARDS\n      },\n      {\n        name: AppSettings.APPROVE_ALL_PENDING_REPORT_CARDS_OPERATION,\n        icon: AppSettings.DONE,\n        operationName: AppSettings.APPROVE_ALL_PENDING_REPORT_CARDS\n      }\n    ];\n\n    this.operations = [\n      {\n        name: (AppSettings.GENERATE_REPORT_CARD_OPERATION),\n        icon: AppSettings.GENERATE,\n        operationName: AppSettings.GENERATE_REPORT_CARD\n      },\n      {\n        name: (AppSettings.APPROVE_PENDING_REPORT_CARD_OPERATION),\n        icon: AppSettings.DONE,\n        operationName: AppSettings.APPROVE_PENDING_REPORT_CARD\n      },\n      {\n        name: AppSettings.VIEW_REPORT_CARD_DATA_OPERATION,\n        icon: AppSettings.DETAILS_ICON,\n        operationName: AppSettings.VIEW_REPORT_CARD_DATA\n      },\n      {\n        name: AppSettings.CLEAR_REPORT_CARD_DATA_OPERATION,\n        icon: AppSettings.CLEAR_ICON,\n        operationName: AppSettings.CLEAR_REPORT_CARD_DATA,\n      },\n      {\n        name: AppSettings.VIEW_REPORT_CARD_OPERATION,\n        icon: AppSettings.DOWNLOAD,\n        operationName: AppSettings.VIEW_REPORT_CARD\n      }\n    ];\n    const data = this.reportCardDetails.gradeTermStudenSummaryView.list;\n    let attachments = 0;\n    this.reportCardDetails.gradeTermStudenSummaryView.list.forEach(element => {\n      if (element.gradingTermDataSummaryId || element.statusCode === 'RPTG_PA') {\n        element.operations = this.operations;\n      } else {\n        element.operations = this.operations.filter(e => e.operationName !==\n          (AppSettings.VIEW_REPORT_CARD) && e.operationName !== (AppSettings.CLEAR_REPORT_CARD_DATA) && e.operationName !== (AppSettings.APPROVE_PENDING_REPORT_CARD));\n      }\n      attachments += element.attachmentId;\n    });\n    if (attachments) {\n      this.operationsForSummary.push({\n        name: AppSettings.DOWNLOAD_APPROVED_REPORT_CARD_OPERATION,\n        icon: AppSettings.DOWNLOAD,\n        operationName: AppSettings.DOWNLOAD_APPROVED_REPORT_CARD\n      });\n    }\n    this.tableSettings = {\n      rows: data,\n      columns: this.columns,\n      tablename: 'Students',\n      componentName: this.currentComponent,\n      model: this.reportCardSearchViewModel,\n      filtersList: response.filters,\n      sideHeader: {\n        heading: 'Students'\n      }\n    };\n    this.scrollIntoViewById('report-card-table');\n  }\n  onClear(onManualChange = false): void {\n    this.classesList = [];\n    this.availableSections = [];\n    this.gradingTermsList = [];\n    this.reportCardsSearchForm.controls.classId.setValue(null);\n    this.reportCardsSearchForm.controls.sectionId.setValue(null);\n    this.reportCardsSearchForm.controls.gradingTermId.setValue(null);\n    if (!onManualChange) {\n      this.initializeTableSettings();\n      this.initializeSearchViewModel();\n      this.reportCardDetails.gradeTermStudenSummaryView.list = [];\n      this.setModelDataTableComponent(this.currentComponent, null);\n    }\n  }\n  getTableData(_event): void {\n    this.reportCardSearchViewModel = _event;\n    this.searchReportCards();\n  }\n  onRowActions(action): void {\n    if (action.operation ===\n      (AppSettings.VIEW_REPORT_CARD_DATA.toLowerCase())) {\n      this.router.navigate([RouteConfig._ReportCard_Based_On_Student + action.clickedRow.id + '/' + action.clickedRow.gradingTermId]);\n    } else if (action.operation === (AppSettings.GENERATE_REPORT_CARD.toLowerCase())) {\n      const params = {\n        gradeTermId: action.clickedRow.gradingTermId,\n        studentIds: [action.clickedRow.schoolAcademicSessionStudentId],\n        classId: action.clickedRow.classId,\n        sectionId: action.clickedRow.sectionId,\n      };\n      this.generateReportCard(params);\n    } else if (action.operation === AppSettings.CLEAR_REPORT_CARD_DATA.toLowerCase()) {\n      const dialogValue = this.commonService.dialog(AppSettings.WARNING_ON_CLEAR_REPORT_CARD, true, AppSettings.NO, AppSettings.YES);\n      dialogValue.afterClosed().subscribe(actionDailog => {\n        if (actionDailog === AppSettings.YES) {\n          // tslint:disable-next-line: max-line-length\n          this.gradeReportService.reportsClearStudentReportsDelete([action.clickedRow.schoolAcademicSessionStudentId], action.clickedRow.gradingTermId, action.clickedRow.classId, action.clickedRow.sectionId)\n            .subscribe(res => this.onClearReportCard(res), err => this.errorResponse(err));\n        }\n      });\n    } else if (action.operation === AppSettings.APPROVE_PENDING_REPORT_CARD.toLowerCase()) {\n      this.gradeReportService.reportsApprovePendingapprovalReportsPut([action.clickedRow.schoolAcademicSessionStudentId],\n        action.clickedRow.gradingTermId, action.clickedRow.classId,\n        action.clickedRow.sectionId)\n        .subscribe(res => this.onApproveReportCard(res), err => this.errorResponse(err));\n    } else if (action.operation === AppSettings.VIEW_REPORT_CARD.toLowerCase() && (action.clickedRow.gradingTermDataSummaryId || action.clickedRow.statusCode === 'RPTG_PA')) {\n      this.paymentService.reportPrint(action.clickedRow.gradingTermDataSummaryId)\n        .subscribe(res => this.viewReportCard(res), err => this.errorResponse(err));\n    }\n  }\n  onDownloadCard(res): void {\n    if (res.attachments && res.attachments.length) {\n      this.zipViewModel.fileNames = [];\n      res.attachments.forEach(element => {\n        this.zipViewModel.returnFileName = 'Report';\n        this.zipViewModel.fileNames.push(element.fileValue);\n      });\n      this.zipFilesDownload();\n    }\n    this.searchReportCards();\n  }\n\n  onClearReportCard(res): void {\n    this.openSnackBar(res.messages.ResultMessage);\n    this.searchReportCards();\n  }\n  onApproveReportCard(res): void {\n    if (res.statusCode === HttpStatus.OK) {\n      this.openSnackBar(AppSettings.RPORT_APPROVED_SUCCESSFULLY);\n    } else {\n      this.openSnackBar(res.messages.ResultMessage);\n\n    }\n    this.searchReportCards();\n  }\n  zipFilesDownload(): void {\n    if (this.zipViewModel.fileNames.length > 0) {\n      this.storeService.storeZipPut(this.zipViewModel).subscribe(res => this.resFiles(res));\n    }\n    else {\n      this.openSnackBar(AppSettings.NO_ATTACHMENTS_FOUND, true);\n    }\n  }\n  resFiles(data: any): void {\n    this.ReturnFileName = data.extension;\n    this.DownloadDoc(data.extension);\n  }\n  async DownloadDoc(data): Promise<void> {\n    if (data !== null) {\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.storeService.getFilePath(data));\n      const a = document.createElement('a');\n      const response = await fetch(this.storeService.getFilePath(data));\n      const responseData = await response.blob();\n      const file = new Blob([responseData], { type: 'application/octet-stream' });\n      a.href = URL.createObjectURL(file);\n      a.download = this.ReturnFileName.replace(' ', '_');\n      a.click();\n    }\n  }\n  viewReportCard(res): void {\n    if (res.fileName) {\n      window.open(this.storeService.getFilePath(res.fileName));\n    }\n    this.searchReportCards();\n  }\n  onAddFormClick(): void {\n\n  }\n  generateReportCard(data): void {\n    this.gradeReportService.reportsGenerateStudentReportGet(data.gradeTermId, data.studentIds, data.classId, data.sectionId)\n      .subscribe(res => this.onClearReportCard(res), err => { this.errorResponse(err); this.searchReportCards(); });\n  }\n}\n","module.exports = \"<div class=\\\"px-40 pt-40\\\">\\n  <div class=\\\"py-8 px-20 font-size-18 text-uppercase\\\" translate>Additional Student Information</div>\\n  <div class=\\\"mat-elevation-z3 simple-table-container radius-t-20\\\">\\n    <div fxLayoutAlign=\\\"end center\\\" class=\\\"p-16 border-bottom\\\">\\n      <button mat-button (click)=\\\"getHelpText('Additional Student Info')\\\">\\n        <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n      </button>\\n    </div>\\n    <form [formGroup]=\\\"studentInformationSearchForm\\\" (ngSubmit)=\\\"searchReportCards()\\\" #paymentSearch=\\\"ngForm\\\"\\n      class=\\\"p-24\\\">\\n      <div fxFlexFill fxLayout=\\\"column\\\" class=\\\"pt-12\\\" fxLayout.gt-sm=\\\"row\\\">\\n\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\"\\n          class=\\\"pr-sm-20\\\">\\n          <mat-label translate #board>Board</mat-label>\\n          <mat-select placeholder=\\\"Board\\\" formControlName=\\\"boardId\\\"\\n            (selectionChange)=\\\"onSelectSchoolBoard($event.value)\\\" required>\\n            <mat-option *ngFor=\\\"let board of schoolBoardsList\\\" [value]=\\\"board.value\\\">\\n              {{ board.label }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='board.innerText'\\n              [validationControl]=\\\"studentInformationSearchForm.controls.boardId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\"\\n          class=\\\"pr-sm-20\\\">\\n          <mat-label translate #class>Class</mat-label>\\n          <mat-select placeholder=\\\"Class\\\" formControlName=\\\"classId\\\" (selectionChange)=\\\"onClassChange($event.value)\\\"\\n            required>\\n            <mat-option *ngFor=\\\"let class of classesList\\\" [value]=\\\"class.value\\\">\\n              {{ class.label }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='class.innerText'\\n              [validationControl]=\\\"studentInformationSearchForm.controls.classId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\"\\n          class=\\\"pr-sm-20\\\">\\n          <mat-label translate #section>Section</mat-label>\\n          <mat-select (selectionChange)=\\\"getGradingTerms()\\\" placeholder=\\\"Section\\\" formControlName=\\\"sectionId\\\" required>\\n            <mat-option *ngFor=\\\"let section of availableSections\\\" [value]=\\\"section.value\\\">\\n              {{ section.label }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='section.innerText'\\n              [validationControl]=\\\"studentInformationSearchForm.controls.sectionId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\">\\n          <mat-label translate #gradingTerm>Grading Term</mat-label>\\n          <mat-select placeholder=\\\"Grading Term\\\" formControlName=\\\"gradingTermId\\\" required>\\n            <mat-option *ngFor=\\\"let term of gradingTermsList\\\" [value]=\\\"term.id\\\">\\n              {{ term.name }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='gradingTerm.innerText'\\n              [validationControl]=\\\"studentInformationSearchForm.controls.gradingTermId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mb-20\\\">\\n        <button mat-raised-button type=\\\"reset\\\" color=\\\"primary\\\" class=\\\"text-uppercase mr-12\\\" (click)=\\\"onClear()\\\">\\n          <span translate>Reset</span>\\n        </button>\\n        <button mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n          <span translate>Search</span>\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n<app-table *ngIf=\\\"!showCustomCard && rows?.length\\\" [settings]=\\\"tableSettings\\\" [closeRowForm]='closeAddPanel' (getTableData)='getTableData($event)' (additionalButtonClick)=\\\"onShowAll($event)\\\"\\n  (rowBasedAction)=\\\"rowWiseActions($event)\\\" [templateRef]=\\\"updateStudent ? isUpdate : studentScore\\\"\\n  [rowTemplateRef]=\\\"studentScore\\\">\\n</app-table>\\n<app-custom-card *ngIf=\\\"showCustomCard\\\" [title]=customCardDetails.title [inputMessage]=customCardDetails.message>\\n</app-custom-card>\\n\\n<ng-template #studentScore let-name=\\\"name\\\" let-row=\\\"row\\\" let-value=\\\"value\\\" let-columnIndex=\\\"columnIndex\\\">\\n  <form [formGroup]=\\\"studentValuesForm\\\">\\n    <ng-container formArrayName=\\\"reportValues\\\"\\n      *ngFor=\\\"let c of studentValuesForm.get('reportValues')?.controls; let i = index\\\">\\n      <div [formGroupName]=\\\"i\\\" *ngIf=\\\"i==name\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"coustom-mat-error\\\">\\n        <div *ngIf=\\\"studentValuesForm.controls.reportValues?.controls[i].controls.inputType.value === 'text' \\\">\\n          <mat-form-field fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"32\\\">\\n            <input (keyup)=\\\"preventSpace($event,'studentValuesForm','reportCardItemValue')\\\" matInput\\n              formControlName=\\\"reportCardItemValue\\\"\\n              (blur)=\\\"updateStudentData(row, studentValuesForm.controls.reportValues.controls[i], name, columnIndex)\\\">\\n\\n            <mat-icon class=\\\"tick-position green-fg\\\" *ngIf=\\\"inputChangeIndex['check' + name + '_' + columnIndex]\\\">\\n              check</mat-icon>\\n            <mat-icon class=\\\"tick-position red-fg\\\" *ngIf=\\\"inputChangeIndex['error' + name + '_' + columnIndex]\\\">error\\n            </mat-icon>\\n            <mat-spinner class=\\\"spinner-position\\\" [diameter]=\\\"20\\\" color=\\\"accent\\\"\\n              *ngIf=\\\"inputChangeIndex['spinner_' + name + '_' + columnIndex]\\\"></mat-spinner>\\n          </mat-form-field>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"'reportValues'\\\"\\n              [validationControl]=\\\"studentValuesForm.controls.reportValues?.controls[i].controls.reportCardItemValue\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </div>\\n\\n        <div *ngIf=\\\"studentValuesForm.controls.reportValues?.controls[i].controls.inputType.value === 'textarea' \\\">\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\">\\n            <textarea id=\\\"comment-field\\\" formControlName=\\\"reportCardItemValue\\\" matInput\\n              (blur)=\\\"updateStudentData(row, studentValuesForm.controls.reportValues.controls[i], name, columnIndex)\\\"></textarea>\\n\\n            <mat-icon class=\\\"textarea-loader-position green-fg\\\"\\n              *ngIf=\\\"inputChangeIndex['check' + name + '_' + columnIndex]\\\">check</mat-icon>\\n            <mat-icon class=\\\"textarea-loader-position red-fg\\\"\\n              *ngIf=\\\"inputChangeIndex['error' + name + '_' + columnIndex]\\\">error</mat-icon>\\n            <mat-spinner class=\\\"textarea-loader-position\\\" [diameter]=\\\"20\\\" color=\\\"accent\\\"\\n              *ngIf=\\\"inputChangeIndex['spinner_' + name + '_' + columnIndex]\\\"></mat-spinner>\\n\\n            <mat-error>\\n              <app-validation [labelName]=\\\"'reportValues'\\\"\\n                [validationControl]=\\\"studentValuesForm.controls.reportValues?.controls[i].controls.reportCardItemValue\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n\\n        <mat-icon class=\\\"tick-position green-fg\\\" *ngIf=\\\"check(i)\\\">check</mat-icon>\\n      </div>\\n    </ng-container>\\n  </form>\\n</ng-template>\\n\\n<ng-template #isUpdate let-name=\\\"sname\\\">\\n  <div class=\\\"py-16 font-size-18 text-uppercase\\\" translate>Update Student Additional Information</div>\\n  <form [formGroup]=\\\"updateForm\\\" (ngSubmit)=\\\"updateValues(updateForm.value)\\\" #appForm=\\\"ngForm\\\">\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" *ngIf=\\\"dataSet\\\">\\n\\n      <div fxLayout=\\\"column\\\" class=\\\"pr-sm-20\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Student Name</mat-label>\\n\\n          <input readonly matInput [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"dataSet.studentName\\\" disabled>\\n        </mat-form-field>\\n      </div>\\n      <input type=\\\"hidden\\\" formControlName=\\\"schoolAcademicSessionStudentId\\\"\\n        [ngModel]=\\\" dataSet?.schoolAcademicSessionStudentId\\\">\\n      <input type=\\\"hidden\\\" formControlName=\\\"gradingTermId\\\" [ngModel]=\\\" dataSet?.gradingTermId\\\">\\n\\n\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Roll Number</mat-label>\\n          <input readonly matInput [ngModelOptions]=\\\"{standalone: true}\\\" [(ngModel)]=\\\"dataSet.rollNumber\\\" disabled>\\n        </mat-form-field>\\n      </div>\\n\\n\\n\\n    </div>\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row wrap\\\" *ngIf=\\\"dataSet?.reportPrintTemplateName\\\">\\n\\n      <div fxLayout=\\\"column\\\" class=\\\"pr-sm-20\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\"\\n        *ngFor=\\\"let item of dataSet?.reportPrintTemplateName; let i = index\\\">\\n        <!-- <input type=\\\"hidden\\\" formControlName=\\\"printTemplateFieldId{{i}}\\\" [ngModel]=\\\"item.printTemplateFieldId\\\"> -->\\n\\n        <!-- <input type=\\\"hidden\\\" formControlName=\\\"studentAdditionalInfoId{{i}}\\\" [ngModel]=\\\"item.studentAdditionalInfoId\\\"> -->\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>{{item.reportCardItemName}}</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'updateForm',item.code)\\\" matInput autocomplete=\\\"off\\\" matInput\\n            [formControlName]=\\\"item.code\\\">\\n\\n          <mat-error>\\n            <app-validation [labelName]=\\\"item.reportCardItemName\\\" [validationControl]=\\\"updateForm.controls[item.code]\\\"\\n              [doValidate]=\\\"validateFeilds\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n\\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n      <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\"\\n        (click)=\\\"closeForm()\\\">{{'Cancel' | translate}}</button>\\n      <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button color=\\\"accent\\\">{{'Update' | translate}}</button>\\n    </div>\\n  </form>\\n</ng-template>\\n\\n<div *ngIf=\\\"!showCustomCard && rows?.length === 0\\\" class=\\\"errorMsg\\\">\\n  <p class=\\\"red-text text-center mb-0 font-weight-bold p-24\\\" translate>No Custom Feilds For the Selected Grading Term</p>\\n</div>\"","module.exports = \".tick-position {\\n  position: absolute;\\n  right: 0px; }\\n\\n.spinner-position {\\n  position: absolute;\\n  right: 0px;\\n  top: 10px; }\\n\\n.textarea-loader-position {\\n  position: absolute;\\n  right: -38px;\\n  top: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL2dyYWRpbmcvc2VhcmNoLXN0dWRlbnQtaW5mb3JtYXRpb24vc2VhcmNoLXN0dWRlbnQtaW5mb3JtYXRpb24uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxrQkFBa0I7RUFDbEIsVUFBVSxFQUFBOztBQUdkO0VBQ0ksa0JBQWtCO0VBQ2xCLFVBQVU7RUFDVixTQUFRLEVBQUE7O0FBR1o7RUFDSSxrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFNBQVMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL2dyYWRpbmcvc2VhcmNoLXN0dWRlbnQtaW5mb3JtYXRpb24vc2VhcmNoLXN0dWRlbnQtaW5mb3JtYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGljay1wb3NpdGlvbntcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDBweDtcbn07XG5cbi5zcGlubmVyLXBvc2l0aW9ue1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMHB4O1xuICAgIHRvcDoxMHB4O1xufVxuXG4udGV4dGFyZWEtbG9hZGVyLXBvc2l0aW9ue1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogLTM4cHg7XG4gICAgdG9wOiAyMHB4O1xufSJdfQ== */\"","import { Component, OnInit, ChangeDetectorRef, ViewChild, TemplateRef } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { FormGroup, FormControl, Validators, FormBuilder, FormArray } from '@angular/forms';\nimport { GradeSetupService } from 'app/service/grading-service/api/grade-setup.service';\nimport { ClassesConfigService } from 'app/service/general/api/classes-config.service';\nimport { CommonService } from 'app/service/common.service';\nimport { GardeTermConfigurationService } from 'app/service/grading-service/api/garde-term-configuration.service';\nimport { Router } from '@angular/router';\nimport { GradeReportService } from 'app/service/report-card-service/grade-report.service';\nimport { StudentDBService } from 'app/service/student-information-system/student-db.service';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { AppSettings, Pattern } from 'app/app.constants';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { StudentCustomFieldsView } from 'app/models/grading/student-custom-fields-view';\nimport { PrintTemplateCustomFieldView } from 'app/models/grading/print-template-custom-field-view';\n\n@Component({\n  selector: 'app-search-student-information',\n  templateUrl: './search-student-information.component.html',\n  styleUrls: ['./search-student-information.component.scss'],\n  providers: [GradeSetupService, ClassesConfigService, GardeTermConfigurationService, GradeReportService, StudentDBService, StoreService]\n\n})\nexport class SearchStudentInformationComponent extends CommonComponent implements OnInit {\n  @ViewChild('isUpdate') customTemplates: TemplateRef<any>;\n  @ViewChild('appForm') aForm;\n  currentComponent = 'SearchStudentInformationComponent';\n  studentInformationSearchForm: FormGroup;\n  isSchoolhasBoards = true;\n  schoolBoardsList: any[] = [];\n  classesList: any[] = [];\n  gradingTermsList: any[] = [];\n  tableSettings = {};\n  columns: any[];\n  operations: any[];\n  reportCardSearchViewModel: any;\n  schoolBoards: any[] = [];\n  availableSections: any[] = [];\n  reportCardDetails: any;\n  validate = true;\n  validateFeilds = true;\n  operationsForSummary: any[] = [];\n  isEditMode: boolean;\n  valuesIndex: any[] = [];\n  updateStudent = false;\n  rows: any[] = [];\n  totalItems: any;\n  editButton = {};\n  additionalButton: any;\n  additionalButton1: any;\n  studentValuesForm: FormGroup;\n  showAllData: any;\n  details: any;\n  studentCustomFieldsView: StudentCustomFieldsView;\n  printTemplateCustomFieldView: PrintTemplateCustomFieldView;\n  studentIndex: any;\n  filterRowData: any = [];\n  printTemplate: Array<string> = [];\n  pageCnt: any;\n  schoolAcademicSessionStudentId: any;\n  dataSet: any;\n  updateForm: FormGroup;\n  isValid: boolean;\n  validateForm: boolean;\n  closeAddPanel: boolean;\n  filterdata: any[] = [];\n  HttpStatus: any;\n  showCustomCard = true;\n  customCardDetails: { title: string, message: string } = { title: 'Student Additional Information', message: 'Search Student Additional Information' };\n  customeReportFeildsList: any[] = [];\n  inputChangeIndex: any;\n  customForm: FormGroup;\n\n\n  constructor(\n    private router: Router,\n    private _fb: FormBuilder,\n    private gradeSetupService: GradeSetupService,\n    private gradeTermConfigurationService: GardeTermConfigurationService,\n    private studentDbService: StudentDBService,\n    private cd: ChangeDetectorRef,\n    private classService: ClassesConfigService,\n    public dialogRef: MatDialog,\n    public commonService: CommonService,\n    public gradeReportService: GradeReportService,\n    public snackBar: MatSnackBar,\n    public storeService: StoreService,\n    public dialog: MatDialog\n    ) {\n    super();\n  }\n\n  // tslint:disable-next-line: typedef\n  ngOnInit() {\n    this.inputChangeIndex = [];\n\n    this.HttpStatus = require('http-status-codes');\n    this.studentCustomFieldsView = {\n      schoolAcademicSessionStudentId: 0,\n      gradingTermId: 0,\n\n      printTemplateCustomFieldView: [{\n        printTemplateCustomFieldId: '',\n        value: '',\n        id: '',\n      }]\n    };\n\n    this.columns = [\n      { field: 'studentName', header: 'Student Name', sort: true },\n      { field: 'rollNumber', header: 'Roll Number', sort: true },\n      { field: 'gradingTermName', header: 'Grading Term', sort: true },\n      { field: 'reportCardItemName', header: 'Report Card Item Name', sort: true },\n      { field: 'reportCardItemValue', header: 'Report Card Item Value', sort: false },\n      { field: 'actions', header: 'Actions ', sort: true }\n    ];\n    // this.updateForm = new FormGroup({\n    //   reportCardItemValue0: new FormControl('', [Validators.pattern(Pattern.NUMBER_WITHOPTIONAL_DECIMAL_PATTERN)]),\n    //   reportCardItemValue1: new FormControl('', [Validators.pattern(Pattern.NUMBER_WITHOPTIONAL_DECIMAL_PATTERN)]),\n    //   reportCardItemValue2: new FormControl('', [Validators.pattern(Pattern.ALPHABETS_WITHOUT_STARTING_SPACES), Validators.max(360)]),\n    //   printTemplateFieldId0: new FormControl(''),\n    //   printTemplateFieldId1: new FormControl(''),\n    //   printTemplateFieldId2: new FormControl(''),\n    //   schoolAcademicSessionStudentId: new FormControl(''),\n    //   studentAdditionalInfoId0: new FormControl(''),\n    //   studentAdditionalInfoId1: new FormControl(''),\n    //   studentAdditionalInfoId2: new FormControl(''),\n    //   gradingTermId: new FormControl(''),\n\n    // });\n    this.studentValuesForm = new FormGroup({\n      values: new FormControl('', [Validators.pattern(Pattern.ALPHANUMERIC), Validators.max(22)])\n    });\n    this.initializeTableDataSettings();\n    this.initializeForm();\n    this.initializeSearchViewModel();\n    this.initializeTableSettings();\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      // tslint:disable-next-line: no-shadowed-variable\n      const modelTableComponent = this.getModelComponent(this.currentComponent);\n      this.reportCardSearchViewModel = modelTableComponent;\n      this.studentInformationSearchForm.patchValue(modelTableComponent);\n      this.onSelectSchoolBoard(this.studentInformationSearchForm.value.boardId, true);\n      this.getAvailableSections(this.studentInformationSearchForm.value.boardId, this.studentInformationSearchForm.value.classId);\n      this.getGradingTerms(true);\n      this.searchReportCards();\n    }\n    this.getSchoolBoardsList();\n  }\n  initializeTableSettings(): void {\n    if (this.isEditMode) {\n      this.columns = [\n        { field: 'studentName', header: 'Student Name', sort: false },\n        { field: 'rollNumber', header: 'Roll Number', sort: false },\n        { field: 'reportCardItemName', header: 'Report Card Item Name', sort: false },\n        { field: 'reportCardItemValue', header: 'Report Card Item Value', sort: false, rowTempalteRequired: true },\n      ];\n      this.tableSettings = {\n        model: this.reportCardSearchViewModel,\n        rows: this.rows,\n        columns: this.columns,\n        // padding: true,\n        componentName: this.currentComponent,\n        tablename: 'Student Additional Information',\n        isMultiDeleteRequired: false,\n        pageCnt: this.pageCnt,\n        filtersList: [],\n        headerOperations: {\n          additionalButtons: [\n            this.editButton,\n          ]\n        },\n        rowGroupingColumns: ['studentName', 'rollNumber'],\n      };\n    }\n    else {\n      this.columns = [\n        { field: 'studentName', header: 'Student Name', sort: false },\n        { field: 'rollNumber', header: 'Roll Number', sort: true },\n        { field: 'reportCardItemName', header: 'Report Card Item Name', sort: true },\n        { field: 'reportCardItemValue', header: 'Report Card Item Value', sort: false },\n        { field: 'actions', header: 'Actions ', sort: false }\n      ];\n      this.settingsData();\n    }\n\n\n\n  }\n  settingsData(): void {\n    this.tableSettings = {\n      model: this.reportCardSearchViewModel,\n      rows: this.rows,\n      columns: this.columns,\n      // padding: true,\n      componentName: this.currentComponent,\n      tablename: 'Student Additional Information',\n      isMultiDeleteRequired: false,\n      pageCnt: this.pageCnt,\n      filtersList: this.filterdata,\n      headerOperations: {\n        additionalButtons: [\n          this.editButton,\n        ]\n      },\n      rowGroupingColumns: ['studentName', 'rollNumber'],\n    };\n  }\n  initializeForm(): void {\n    this.studentInformationSearchForm = new FormGroup({\n      boardId: new FormControl(null, Validators.required),\n      classId: new FormControl(null, Validators.required),\n      sectionId: new FormControl(null, Validators.required),\n      gradingTermId: new FormControl(null, Validators.required)\n    });\n  }\n\n\n  initializeSearchViewModel(): void {\n    this.reportCardSearchViewModel = {\n      schoolAcademicSessionStudentId: null,\n      board: [],\n      studentName: [],\n      gradingTermId: [],\n      gradingterm: null,\n      reportcardstatus: [],\n      admissionNumbers: null,\n      rollNumbers: [],\n      classIds: [],\n      sectionIds: [],\n      studentIds: [],\n      reportCardItemName: [],\n      reportCardItemValue: [],\n      sortOrder: 0,\n      sortBy: null,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE\n    };\n  }\n  initializeTableDataSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.columns,\n      tablename: 'Student Additional Information',\n      isPaginationRequired: true,\n      componentName: this.currentComponent,\n      model: this.reportCardSearchViewModel\n    };\n  }\n\n  updateStudentData(row: any, data: any, rowIndex: any, columnIndex: any): void {\n    this.inputChangeIndex['spinner_' + rowIndex + '_' + columnIndex] = true;\n    this.inputChangeIndex['check' + rowIndex + '_' + columnIndex] = false;\n    this.updateStudentCustomFeilds(row, data, rowIndex, columnIndex);\n  }\n\n  updateStudentCustomFeilds(row: any, data: FormGroup, rowIndex: any, columnIndex: any): void {\n    if (data.invalid) {\n      return;\n    } else {\n      const formValue = data.value;\n      this.studentCustomFieldsView.printTemplateCustomFieldView = [];\n      Object.keys(formValue).forEach((key, index) => {\n        const customFeilds = row.reportPrintTemplateName.find(e => e.code === formValue[key]);\n        if (customFeilds) {\n          this.printTemplateCustomFieldView = {\n            printTemplateCustomFieldId: customFeilds.printTemplateFieldId,\n            value: formValue['reportCardItemValue'],\n            id: customFeilds.studentAdditionalInfoId,\n          };\n          this.studentCustomFieldsView.printTemplateCustomFieldView.push(this.printTemplateCustomFieldView);\n        }\n      });\n\n      this.studentCustomFieldsView.gradingTermId = this.studentInformationSearchForm.controls['gradingTermId'].value;\n      this.studentCustomFieldsView.schoolAcademicSessionStudentId = formValue['schoolAcademicSessionStudentId'];\n      this.studentIndex = rowIndex;\n      this.gradeReportService.studentReportsStudentCustomDetailsPut(this.studentCustomFieldsView).subscribe(\n        response => {\n          if (this.rows[rowIndex].reportCardItemValue !== 0 && this.rows[rowIndex].reportCardItemValue !== '') {\n            this.inputChangeIndex['check' + rowIndex + '_' + columnIndex] = true;\n            this.inputChangeIndex['spinner_' + rowIndex + '_' + columnIndex] = false;\n            this.inputChangeIndex['error' + rowIndex + '_' + columnIndex] = false;\n          } else {\n            this.inputChangeIndex['check' + rowIndex + '_' + columnIndex] = false;\n            this.inputChangeIndex['spinner_' + rowIndex + '_' + columnIndex] = false;\n            this.inputChangeIndex['error' + rowIndex + '_' + columnIndex] = false;\n          }\n          this.cd.detectChanges();\n        },\n        error => {\n          this.inputChangeIndex['error' + rowIndex + '_' + columnIndex] = true;\n          this.inputChangeIndex['check' + rowIndex + '_' + columnIndex] = false;\n          this.inputChangeIndex['spinner_' + rowIndex + '_' + columnIndex] = false;\n          this.cd.detectChanges();\n        }\n      );\n    }\n    // }\n  }\n\n  check(index: any): any {\n    const t = this.valuesIndex.find(x => x === index);\n    return t != null ? true : false;\n  }\n  studentvalues(data: any): any {\n    this.studentIndex = -1;\n    if (this.rows[data].reportCardItemValue !== 0 && this.rows[data].reportCardItemValue !== '') {\n      this.valuesIndex.push(data);\n      this.spinnerLoad(-1);\n    }\n  }\n  spinnerLoad(index: any): any {\n    return index === this.studentIndex;\n  }\n\n  studentReportValues(schoolAcademicSessionStudentId: any, reportCardItemName: any, values = 0, validators: any, rowElement: any): FormGroup {\n    return this._fb.group({\n      reportCardItemValue: new FormControl('', Validators.maxLength(validators.maxlength)),\n      schoolAcademicSessionStudentId: [schoolAcademicSessionStudentId],\n      reportItem: [reportCardItemName],\n      iseditable: false,\n      inputType: validators.inputtype,\n      code: rowElement.code\n    });\n  }\n  getSchoolBoardsList(): void {\n    this.gradeSetupService.schoolAcademicBoards().subscribe(res => {\n      if (res.listViews && res.listViews.length) {\n        this.isSchoolhasBoards = true;\n        res.listViews.forEach(element => {\n          this.schoolBoardsList.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n        if (!this.studentInformationSearchForm.value.boardId) {\n          this.studentInformationSearchForm.controls.boardId.setValue(this.schoolBoardsList[0].value);\n          this.onSelectSchoolBoard(this.schoolBoardsList[0].value);\n        }\n      } else {\n        this.isSchoolhasBoards = false;\n        this.schoolBoardsList = [];\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  onSelectSchoolBoard(schoolBoard: any, onManualChange = false): void {\n    if (!onManualChange) {\n      this.onClear(true);\n    }\n    if (!schoolBoard) {\n      return;\n    }\n    this.gradeSetupService.schoolAcademicClasses(schoolBoard).subscribe(response => {\n      if (response.listViews && response.listViews.length) {\n        response.listViews.forEach(element => {\n          this.classesList.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  onClear(onManualChange = false): void {\n    this.classesList = [];\n    this.availableSections = [];\n    this.gradingTermsList = [];\n    this.studentInformationSearchForm.controls.classId.setValue(null);\n    this.studentInformationSearchForm.controls.sectionId.setValue(null);\n    this.studentInformationSearchForm.controls.gradingTermId.setValue(null);\n    if (!onManualChange) {\n      this.showCustomCard = true;\n      this.setModelDataTableComponent(this.currentComponent, null);\n    }\n  }\n  onClassChange(classId): void {\n    this.availableSections = [];\n    this.gradingTermsList = [];\n    this.studentInformationSearchForm.controls.sectionId.setValue(null);\n    this.studentInformationSearchForm.controls.gradingTermId.setValue(null);\n    if (classId) {\n      this.getAvailableSections(this.studentInformationSearchForm.value.boardId, classId);\n    }\n    else {\n      this.availableSections = [];\n    }\n  }\n  getGradingTerms(onManualChange = false): void {\n    if (!onManualChange) {\n      this.gradingTermsList = [];\n      this.studentInformationSearchForm.controls.gradingTermId.setValue(null);\n    }\n    if (this.studentInformationSearchForm.value.sectionId) {\n      // tslint:disable-next-line: max-line-length\n      this.gradeTermConfigurationService.gradingTermConfigurationGradingTermsByClassidAndSectionidAndBoardidGet(this.studentInformationSearchForm.value.classId, [this.studentInformationSearchForm.value.sectionId], this.studentInformationSearchForm.value.boardId)\n        .subscribe(res => this.gradingTermsList = res.listViews);\n    }\n  }\n  getTableData(_event): void {\n    this.reportCardSearchViewModel = _event;\n    this.searchReportCards();\n  }\n\n\n  searchReportCards(): void {\n    if (this.studentInformationSearchForm.valid) {\n      Object.assign(this.reportCardSearchViewModel, this.studentInformationSearchForm.value);\n      this.setModelDataTableComponent(this.currentComponent, this.reportCardSearchViewModel);\n      this.gradeReportService.studentReportsStudentAdditionalInformationGet(\n        this.reportCardSearchViewModel.schoolAcademicSessionStudentId,\n        this.reportCardSearchViewModel.boardId,\n        this.reportCardSearchViewModel.studentName,\n        this.reportCardSearchViewModel.gradingTermId,\n        this.reportCardSearchViewModel.gradingterm,\n        this.reportCardSearchViewModel.reportcardstatus,\n        this.reportCardSearchViewModel.admissionNumbers,\n        this.reportCardSearchViewModel.rollNumbers,\n        this.reportCardSearchViewModel.classId,\n        this.reportCardSearchViewModel.sectionId,\n        this.reportCardSearchViewModel.studentIds,\n        this.reportCardSearchViewModel.reportCardItemName,\n        this.reportCardSearchViewModel.reportCardItemValue,\n        this.reportCardSearchViewModel.sortOrder,\n        this.reportCardSearchViewModel.sortBy,\n        this.reportCardSearchViewModel.pageNumber,\n        this.reportCardSearchViewModel.pageSize)\n        .subscribe(res => this.setReportCardDetails(res), err => this.errorResponse(err));\n    }\n  }\n\n  setReportCardDetails(data): void {\n    this.showCustomCard = false;\n    if (data.studentDataView.list && data.studentDataView.list.length === 0) {\n      this.rows = [];\n      this.initializeTableDataSettings();\n    }\n    else if (data.studentDataView) {\n      this.reportCardSearchViewModel.pageNumber = data.studentDataView.pageNumber;\n      this.rows = data.studentDataView.list;\n      this.filterdata = data.filters;\n      this.filterRowData = this.rows;\n      const x = [];\n      this.filterRowData.forEach(elnt => {\n        if (x.length === 0) {\n          x.push(elnt);\n        }\n        else {\n          this.filterRowData.forEach((element: any) => {\n            const foundIndex = x.findIndex((value: any) => {\n              return value.studentName === element.studentName;\n            });\n            if (foundIndex === -1) {\n              x.push(element);\n            }\n          });\n        }\n      });\n      this.filterRowData = x;\n\n      // apply edit \n      this.filterRowData.forEach(element => {\n        this.rows.forEach(element1 => {\n          if (element.studentName === element1.studentName &&\n            element.rollNumber === element1.rollNumber) {\n            element.operations = [\n              {\n                name: AppSettings.EDIT_OPERATION,\n                icon: AppSettings.EDIT_ICON,\n                operationName: AppSettings.EDIT\n              },\n            ];\n          }\n        });\n      });\n      if (this.isEditMode) {\n        this.editButton = {\n          name: 'Done',\n          class: 'primary',\n          clickAction: 'back'\n        };\n      }\n      else {\n        this.editButton = {\n          name: 'Edit',\n          class: 'primary',\n          clickAction: 'edit'\n        };\n      }\n      this.studentValuesForm = this._fb.group({\n        reportValues: this._fb.array([]),\n      });\n      const control = <FormArray>this.studentValuesForm.controls['reportValues'];\n\n      this.rows.map(e => {\n        const list = JSON.parse(e.validationInfo);\n        control.push(this.studentReportValues(e.schoolAcademicSessionStudentId, e.reportCardItemName, e.reportCardItemValue, list, e));\n      });\n\n      this.rows = this.sortByColumns(['studentName', 'rollNumber'], this.rows);\n\n      (<FormArray>this.studentValuesForm.controls['reportValues']).patchValue(this.rows);\n\n      this.initializeTableSettings();\n    }\n\n  }\n\n  getValidators(element: any): any {\n    const validators: Array<any> = [];\n    const list = JSON.parse(element.validationInfo);\n    // tslint:disable-next-line:forin\n    for (const key in list) {\n      if (!list[key]) {\n        continue;\n      }\n      switch (key.toLowerCase()) {\n        case AppSettings.REQUIRED:\n          (validators.push(Validators.required));\n          break;\n        case AppSettings.Email:\n          (validators.push(Validators.email));\n          break;\n        case AppSettings.MINLENGTH:\n          validators.push(Validators.minLength(list[key]));\n          break;\n        case AppSettings.MAXLENGTH:\n          validators.push(Validators.maxLength(list[key]));\n          break;\n        case AppSettings.PATTERN:\n          validators.push(Validators.pattern(list[key]));\n          break;\n      }\n    }\n\n    return validators;\n  }\n\n\n  // actions to perform edit or delete\n  rowWiseActions(event: any): void {\n    if (event.operation === 'edit') {\n      this.inputChangeIndex = [];\n      this.closeAddPanel = false;\n      this.updateStudent = true;\n      this.dataSet = event.clickedRow;\n\n      this.studentCustomFeildsForm(this.dataSet.reportPrintTemplateName);\n      this.dataSet.reportPrintTemplateName.forEach(element => {\n        this.updateForm.controls[element.code].patchValue(element.reportCardItemValue);\n      });\n\n      this.schoolAcademicSessionStudentId = event.clickedRow.schoolAcademicSessionStudentId;\n    }\n  }\n\n  studentCustomFeildsForm(feildsList: any): void {\n    this.updateForm = new FormGroup({\n      schoolAcademicSessionStudentId: new FormControl(''),\n      gradingTermId: new FormControl(''),\n    });\n    feildsList.forEach(element => {\n      this.updateForm.addControl(element.code, new FormControl(null,\n        this.getValidators(element)));\n    });\n  }\n\n  onShowAll(data: any): void {\n    if ('edit' === data) {\n      this.isEditMode = true;\n      this.inputChangeIndex = [];\n    }\n    else if ('back' === data) {\n      this.isEditMode = false;\n      this.valuesIndex = [];\n    }\n    this.searchReportCards();\n  }\n\n  // method for when click cancel panel it will open\n  closeForm(): void {\n    this.dialogRef.closeAll();\n    this.validateForm = false;\n    this.closeAddPanel = true;\n    this.updateStudent = false;\n  }\n\n  updateValues(updateForm: any): void {\n    this.validateForm = true;\n    if (this.updateForm.invalid) {\n      return;\n    }\n    else {\n      this.studentCustomFieldsView.printTemplateCustomFieldView = [];\n      Object.keys(updateForm).forEach((key, index) => {\n        const customFeilds = this.dataSet.reportPrintTemplateName.find(e => e.code === key);\n        if (customFeilds) {\n          this.printTemplateCustomFieldView = {\n            printTemplateCustomFieldId: customFeilds.printTemplateFieldId,\n            value: updateForm[key],\n\n            id: customFeilds.studentAdditionalInfoId,\n          };\n          this.studentCustomFieldsView.printTemplateCustomFieldView.push(this.printTemplateCustomFieldView);\n        }\n      });\n\n      this.studentCustomFieldsView.gradingTermId = this.studentInformationSearchForm.controls['gradingTermId'].value;\n      this.studentCustomFieldsView.schoolAcademicSessionStudentId = this.schoolAcademicSessionStudentId;\n      this.gradeReportService.studentReportsStudentCustomDetailsPut(this.studentCustomFieldsView).subscribe(res => this.response(res), error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n  response(data: any): void {\n    this.validateForm = false;\n    if (data.statusCode === this.HttpStatus.OK) {\n      this.closeAddPanel = true;\n      this.searchReportCards();\n    }\n    else {\n      this.closeAddPanel = false;\n    }\n    this.openSnackBar(data.messages.ResultMessage);\n  }\n\n}\n"],"sourceRoot":""}