{"version":3,"sources":["webpack:///./src/app/modules/staff/assignments/homeworks-assignments/homeworks-assignments.component.html","webpack:///./src/app/modules/staff/assignments/homeworks-assignments/homeworks-assignments.component.scss","webpack:///./src/app/modules/staff/assignments/homeworks-assignments/homeworks-assignments.component.ts"],"names":[],"mappings":"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","file":"default~app-modules-staff-assignments-assignments-module~app-modules-staff-staff-module.js","sourcesContent":["module.exports = \"<app-table [settings]=\\\"tableSettings\\\" [closeRowForm]='closeForm' [templateRef]=\\\"newHomework\\\"\\n  (getTableData)='tableData($event)' (rowBasedAction)='actions($event)' (openAddForm)='openForm()' [matExpansioncustomClass]=\\\"true\\\"\\n  (selectedRows)='selectedRows($event)' [rowTemplateRef]=\\\"testInfoTemplate\\\">\\n</app-table>\\n<ng-template #newHomework>\\n  <mat-vertical-stepper *ngIf=\\\"!onView\\\" [linear]=\\\"true\\\" #stepper\\n    (selectionChange)=\\\"onSelectionChange($event)\\\">\\n    <mat-step [stepControl]=\\\"classSectionForm\\\">\\n        <form fxLayout=\\\"column\\\" [formGroup]=\\\"classSectionForm\\\" class=\\\"pr-16\\\">\\n          <ng-template matStepLabel><span translate>Class & Section</span></ng-template>\\n          <div class=\\\"pt-24 font-size-18 pb-8\\\" translate>Please Select The Class and section That This Homework is Being Assigned To</div>\\n          <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxFlex=\\\"100\\\">\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n              fxFlex.gt-sm=\\\"50\\\">\\n              <mat-label #board translate>Board</mat-label>\\n              <mat-select formControlName=\\\"boardId\\\" (selectionChange)=\\\"onSelectSchoolBoard($event.value)\\\" required>\\n                <mat-option *ngFor=\\\"let board of schoolBoardsList\\\" [value]=\\\"board.value\\\">\\n                  {{board.label}}</mat-option>\\n              </mat-select>\\n              <mat-error>\\n                <app-validation [labelName]='board.innerText' [validationControl]=\\\"classSectionForm.controls.boardId\\\"\\n                  [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\"\\n              class=\\\"pl-sm-24\\\">\\n              <mat-label #classes translate>Class</mat-label>\\n              <mat-select formControlName=\\\"classId\\\" (selectionChange)=\\\"onSelectClass()\\\" required>\\n                <mat-option *ngFor=\\\"let class of classesList\\\" [value]=\\\"class.value\\\">\\n                  {{class.label}}</mat-option>\\n              </mat-select>\\n              <mat-error>\\n                <app-validation [labelName]='classes.innerText' [validationControl]=\\\"classSectionForm.controls.classId\\\"\\n                  [doValidate]=\\\"validate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div fxLayout.lt-sm=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxFlex=\\\"100\\\" class=\\\"pt-sm-12\\\">\\n              <af-select [required]=\\\"afterLoadItems\\\" (selectionChange)=\\\"onSelectChange($event)\\\" appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" [optionGroupRequired]=\\\"false\\\" [options]=\\\"items\\\"\\n                       [showChips]=\\\"3\\\" placeholder=\\\"Sections\\\" [multiple]=\\\"true\\\"\\n                        formControlName=\\\"sectionId\\\"  [value]=\\\"selectedItems\\\"\\n            ></af-select>\\n          </div>\\n\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-16\\\">\\n            <button #resetButtonStepper mat-raised-button id=\\\"resetButtonStepper\\\" (click)=\\\"onCancel()\\\" type=\\\"reset\\\"\\n              class=\\\"text-uppercase mr-12\\\">\\n              {{'Cancel' | translate}}\\n            </button>\\n            <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n              {{'Next' | translate}}\\n            </button>\\n          </div>\\n        </form>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"typeCourseForm\\\" [completed]=\\\"typeCourseForm.valid\\\">\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign=\\\"center start\\\" fxFlexFill>\\n      <form fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"70\\\" [formGroup]=\\\"typeCourseForm\\\"  class=\\\"pr-16\\\">\\n        <ng-template matStepLabel><span translate>Type & Course</span></ng-template>\\n        <div class=\\\"pt-20 pb-8 font-size-18\\\"><span translate>Please Select The Type Of Homework And The Course</span></div>\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxFlex=\\\"100\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n            <mat-label #type translate>Type</mat-label>\\n            <mat-select formControlName=\\\"typeId\\\" required>\\n              <mat-option *ngFor=\\\"let type of typesList\\\" [value]=\\\"type.id\\\">\\n                {{type.name}}</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]='type.innerText' [validationControl]=\\\"typeCourseForm.controls.typeId\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\"\\n            class=\\\"pl-sm-24\\\">\\n            <mat-label #course translate>Course</mat-label>\\n            <mat-select formControlName=\\\"courseId\\\" required>\\n              <mat-option *ngFor=\\\"let course of coursesList\\\" [value]=\\\"course.value\\\">\\n                {{course.label}}</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]='course.innerText' [validationControl]=\\\"typeCourseForm.controls.courseId\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-16\\\">\\n          <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n            {{'Previous' | translate}}\\n          </button>\\n          <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n            {{'Next' | translate}}\\n          </button>\\n        </div>\\n      </form>\\n      <ng-template *ngTemplateOutlet=\\\"sideBarData;context:{stepperIndex: 1}\\\"></ng-template>\\n      </div>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"detailsForm\\\">\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign=\\\"center start\\\" fxFlexFill>\\n      <form fxLayout=\\\"column\\\" [formGroup]=\\\"detailsForm\\\" fxFlex.gt-sm=\\\"70\\\" class=\\\"pr-16\\\">\\n        <ng-template matStepLabel><span translate>Details</span></ng-template>\\n        <div class=\\\"pt-24 font-size-18\\\"><span translate>Please Enter Name and Description Of The Homework if\\n            Any</span></div>\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\" fxFlex=\\\"100\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n            <mat-label translate #homeworkName>Name</mat-label>\\n            <input (keyup)=\\\"preventSpace($event,'detailsForm','homeworkName')\\\" (blur)=\\\"trimTextBoxSpaces('detailsForm','homeworkName')\\\" formControlName=\\\"homeworkName\\\"\\n              matInput required>\\n            <mat-error>\\n              <app-validation [labelName]='homeworkName.innerText' [validationControl]=\\\"detailsForm.controls.homeworkName\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"pl-sm-24 pt-8\\\">\\n            <div fxLayout=\\\"row\\\">\\n              <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"attachment.value=''; attachment.click()\\\">\\n                <mat-icon class=\\\"mr-8\\\">attachment</mat-icon>{{'Upload Attachment' | translate}}\\n              </button>\\n              <button *ngIf=\\\"detailsForm.value.file?.fileNameWithExtension\\\" (click)=\\\"attachment.value='';attachmentUrl=null;clearImages()\\\" mat-icon-button type=\\\"button\\\">\\n                <mat-icon class=\\\"mb-4 grey-600-fg\\\">highlight_off</mat-icon>\\n              </button>\\n              <input  (change)=\\\"imgChanged(attachment.files)\\\" [accept]=\\\"AcceptImagesApplicationType\\\" fxHide type=\\\"file\\\"\\n                #attachment>\\n            </div>\\n            <a *ngIf=\\\"updateId && attachmentUrl;else image_name\\\" [href]=\\\"attachmentUrl\\\" target=\\\"_blank\\\" >View Attachment</a>\\n            <ng-template #image_name>\\n              <div fxLayout=\\\"row\\\" class=\\\"break-word\\\">{{detailsForm.value?.file?.fileNameWithExtension}}</div>\\n            </ng-template>\\n          </div>\\n        </div>\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n            <mat-label translate #homeworkDescriptionn>Description</mat-label>\\n            <textarea (keypress)=\\\"preventSpace($event,'detailsForm','homeworkDescription')\\\" (blur)=\\\"trimTextBoxSpaces('detailsForm','homeworkDescription')\\\"\\n              formControlName=\\\"homeworkDescription\\\" matInput></textarea>\\n            <mat-error>\\n              <app-validation [labelName]='homeworkDescriptionn.innerText' [validationControl]=\\\"detailsForm.controls.homeworkDescription\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxFlexFill fxLayout=\\\"column\\\" class=\\\"pt-sm-12\\\">\\n          <div class=\\\"mb-12 pl-4\\\" #isPostToCalendarText translate>Do You Want To Post This Home work Information To The\\n            Student Calendar ?</div>\\n          <mat-radio-group fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" required formControlName=\\\"isPostToCalendar\\\">\\n            <mat-radio-button class=\\\"ml-24\\\" [value]=\\\"true\\\">Yes</mat-radio-button>\\n            <mat-radio-button class=\\\"ml-24\\\" [value]=\\\"false\\\">No</mat-radio-button>\\n          </mat-radio-group>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-16\\\">\\n            <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n              {{'Previous' | translate}}\\n            </button>\\n            <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n              {{'Next' | translate}}\\n            </button>\\n        </div>\\n      </form>\\n      <ng-template *ngTemplateOutlet=\\\"sideBarData;context:{stepperIndex: 2}\\\"></ng-template>\\n    </div>\\n    </mat-step>\\n\\n    <mat-step [stepControl]=\\\"dateForm\\\">\\n     <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign=\\\"center start\\\" fxFlexFill>\\n      <form fxFlex.gt-sm=\\\"70\\\" class=\\\"pr-16\\\" fxLayout=\\\"column\\\" [formGroup]=\\\"dateForm\\\">\\n        <ng-template matStepLabel><span translate>Dates</span></ng-template>\\n        <div class=\\\"pt-20 pb-8 font-size-18\\\"><span translate>Please Select The Dates Pertaining This Homework</span></div>\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"icon-center\\\">\\n            <mat-label #issueDatee translate>Issue Date</mat-label>\\n            <input matInput (keyup)=\\\"forceValidation('issueDate',dateForm)\\\" [matDatepicker]=\\\"issueDate\\\"\\n            [min]=\\\"academicSession?.startDate\\\"\\n            [max]=\\\"academicSession?.endDate\\\"\\n              formControlName=\\\"issueDate\\\"  required>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"issueDate\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #issueDate></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]='issueDatee.innerText' [validationControl]=\\\"dateForm.controls.issueDate\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\"\\n            class=\\\"pl-sm-24 icon-center\\\">\\n            <mat-label #endDatee translate>Due Date</mat-label>\\n            <input  [min]=\\\"dateForm?.controls?.issueDate?.value\\\" matInput (keyup)=\\\"forceValidation('dueDate',dateForm)\\\" [matDatepicker]=\\\"endDate\\\" \\n            [min]=\\\"academicSession?.startDate\\\"\\n            [max]=\\\"academicSession?.endDate\\\"\\n              formControlName=\\\"dueDate\\\" >\\n            <mat-datepicker-toggle matSuffix [for]=\\\"endDate\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #endDate [startAt]=\\\"dateForm.value.issueDate\\\"></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]='endDatee.innerText' [validationControl]=\\\"dateForm.controls.dueDate\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-16\\\">\\n          <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n            {{'Previous' | translate}}\\n          </button>\\n          <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n            {{'Next' | translate}}\\n          </button>\\n        </div>\\n      </form>\\n      <ng-template *ngTemplateOutlet=\\\"sideBarData;context:{stepperIndex: 3}\\\"></ng-template>\\n      </div>\\n    </mat-step>\\n\\n\\n    <mat-step [stepControl]=\\\"testInformation\\\">\\n     <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign=\\\"center start\\\" fxFlexFill>\\n      <form fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"70\\\" class=\\\"pr-16\\\" [formGroup]=\\\"testInformation\\\" #testInfoForm=\\\"ngForm\\\">\\n        <ng-template matStepLabel><span translate>Test information</span></ng-template>\\n        <div fxLayout=\\\"column\\\" class=\\\"pt-24 pb-12\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\">\\n          <div class=\\\"mb-12 font-size-16\\\" translate>Will this Homework be Graded as a part of a Test ?</div>\\n          <mat-radio-group (change)=\\\"onChnageGraded($event)\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" formControlName=\\\"isGraded\\\">\\n            <mat-radio-button class=\\\"ml-24\\\" [value]=\\\"true\\\">Yes</mat-radio-button>\\n            <mat-radio-button class=\\\"ml-24\\\" [value]=\\\"false\\\">No</mat-radio-button>\\n          </mat-radio-group> \\n        </div>\\n\\n        <div *ngIf=\\\"testInformation.value.isGraded\\\" class=\\\"my-20\\\" translate>If Yes, Please select the Test Details to be associated with this homework</div>\\n\\n        <div *ngIf=\\\"testInformation.value.isGraded\\\" fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxFlex=\\\"100\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" >\\n            <mat-label #board translate>Test Type</mat-label>\\n            <mat-select  formControlName=\\\"testTypeId\\\"  [required]=\\\"testInformation.value.isGraded\\\">\\n              <mat-option *ngFor=\\\"let testType of testTypesList\\\" [value]=\\\"testType.id\\\">\\n                {{testType.name}}</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]='board.innerText' [validationControl]=\\\"testInformation.controls.testTypeId\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\"\\n            class=\\\"pl-sm-24\\\">\\n            <mat-label #class translate>Grading Term</mat-label>\\n            <mat-select formControlName=\\\"gradeTermId\\\"  [required]=\\\"testInformation.value.isGraded\\\">\\n              <mat-option *ngFor=\\\"let gradeTerm of gradingTermsList\\\" [value]=\\\"gradeTerm.id\\\">\\n                {{gradeTerm.name}}</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]='class.innerText' [validationControl]=\\\"testInformation.controls.gradeTermId\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n\\n        <div *ngIf=\\\"testInformation.value.isGraded\\\" fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n            <mat-label translate #marks>Marks</mat-label>\\n            <input (keyup)=\\\"preventSpace($event,'testInformation','maxMarks')\\\" (blur)=\\\"trimTextBoxSpaces('testInformation','maxMarks')\\\"\\n              formControlName=\\\"maxMarks\\\" matInput [required]=\\\"testInformation.value.isGraded\\\">\\n            <mat-error>\\n              <app-validation [labelName]='marks.innerText' [validationControl]=\\\"testInformation.controls.maxMarks\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-16\\\">\\n          <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">\\n            {{'Previous' | translate}}\\n          </button>\\n          <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n            {{'Next' | translate}}\\n          </button>\\n        </div>\\n      </form>\\n      <ng-template *ngTemplateOutlet=\\\"sideBarData;context:{stepperIndex: 4}\\\"></ng-template>\\n      </div>\\n    </mat-step>\\n\\n    <mat-step>\\n      <ng-template matStepLabel><span translate>Complete</span></ng-template>\\n      <div fxFlex=\\\"100\\\" class=\\\"font-size-20 py-16\\\" translate>Confirm Information</div>\\n      <mat-list fxLayout=\\\"row wrap\\\" class=\\\"pt-0 confirm-table border\\\">\\n          <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Board</strong>: {{getNameBasedOnValue('board',classSectionForm.value.boardId)}}</mat-list-item>\\n          <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Class</strong>:  {{getNameBasedOnValue('class',classSectionForm.value.classId)}} </mat-list-item>\\n          <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Sections</strong>:  <span *ngFor=\\\"let section of classSectionForm?.value?.sectionId;let l = last;\\\">{{section.label}}{{l?'':', '}} </span></mat-list-item>\\n          <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Type</strong> : \\n            {{getNameBasedOnValue('type',typeCourseForm.value.typeId)}}</mat-list-item>\\n          <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Course</strong>:  {{getNameBasedOnValue('course',typeCourseForm.value.courseId)}}</mat-list-item>\\n  \\n          <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Name</strong>: {{detailsForm.value.homeworkName}}</mat-list-item>\\n          <mat-list-item *ngIf=\\\"detailsForm.value.file?.fileNameWithExtension\\\" fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Attachment</strong>: {{detailsForm.value.file?.fileNameWithExtension}}</mat-list-item>\\n          <mat-list-item *ngIf=\\\"dateForm.value.homeworkDescription\\\" fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Description</strong>: {{detailsForm.value.homeworkDescription}}</mat-list-item>\\n          <mat-list-item  fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Post to Student calendar</strong>: {{detailsForm.value.isPostToCalendar ? \\\"Yes\\\" : \\\"No\\\"}}</mat-list-item>\\n  \\n          <mat-list-item *ngIf=\\\"dateForm.value.issueDate\\\" fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Issue Date</strong>: {{getSchoolDate(dateForm.value.issueDate) }}</mat-list-item>\\n          <mat-list-item *ngIf=\\\"dateForm.value.dueDate\\\" fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Due Date</strong> : {{getSchoolDate(dateForm.value.dueDate) }}</mat-list-item>\\n  \\n          <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Graded As Test</strong>: {{testInformation.value.isGraded ? \\\"Yes\\\" : \\\"No\\\"}}</mat-list-item>\\n          <mat-list-item *ngIf=\\\"testInformation.value.testTypeId\\\" fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Test Type</strong> \\n            : {{getNameBasedOnValue('testType',testInformation.value.testTypeId)}}</mat-list-item>\\n          <mat-list-item *ngIf=\\\"testInformation.value?.gradeTermId\\\" fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Grading Term</strong>:  {{getNameBasedOnValue('gradingTerm',testInformation.value.gradeTermId)}}</mat-list-item>\\n          <mat-list-item *ngIf=\\\"testInformation.value?.maxMarks\\\" fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Marks</strong> : {{testInformation.value.maxMarks}}</mat-list-item>\\n        </mat-list>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-32 pt-24\\\">\\n        <button mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">{{'Previous' | translate}}</button>\\n        <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\" (click)=\\\"submitHomeWork()\\\">{{(updateId ? 'Update' : 'Submit') | translate}}\\n        </button>\\n      </div>\\n    </mat-step>\\n  </mat-vertical-stepper>\\n  <div *ngIf=\\\"onView\\\">\\n          <div  class=\\\"font-size-20 py-24 mx-24\\\" translate>Homework Information</div>\\n          <mat-list fxLayout=\\\"row wrap\\\" class=\\\"pt-0 confirm-table border mx-24\\\">\\n              <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Board</strong>: {{homeWorkData?.boardName}}</mat-list-item>\\n              <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Class</strong>: {{homeWorkData?.classSections[0]?.className}}</mat-list-item>\\n              <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Sections</strong> :<span *ngFor=\\\"let section of homeWorkData?.classSections;let l = last;\\\">{{section.sectionName}} {{l ? '' :', '}}</span></mat-list-item>\\n              <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Type</strong> : \\n                {{homeWorkData?.typeName}}</mat-list-item>\\n              <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Course</strong>:   {{homeWorkData?.courseName}}</mat-list-item>\\n      \\n              <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Name</strong>: {{homeWorkData?.homeworkName}}</mat-list-item>\\n              <mat-list-item *ngIf=\\\"homeWorkData?.attachment?.fileName\\\" fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Attachment</strong> : \\n                <a *ngIf=\\\"homeWorkData?.attachment?.attachmentUrl\\\" [href]=\\\"homeWorkData?.attachment?.attachmentUrl\\\" target=\\\"_blank\\\" >   {{'view attachment'}}</a></mat-list-item>\\n      \\n              <mat-list-item *ngIf=\\\"homeWorkData?.homeworkDescription\\\" fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Description</strong> :{{homeWorkData?.homeworkDescription}}</mat-list-item>\\n              <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Post to Student calendar</strong> :  {{homeWorkData?.isPostToCalendar ? \\\"Yes\\\" : \\\"No\\\"}}</mat-list-item>\\n      \\n              <mat-list-item *ngIf=\\\"homeWorkData?.issueDate\\\" fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Issue Date</strong> :  {{getSchoolDate(homeWorkData?.issueDate)}}</mat-list-item>\\n              <mat-list-item *ngIf=\\\"homeWorkData?.dueDate\\\" fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Due Date</strong> : {{getSchoolDate(homeWorkData?.dueDate)}}</mat-list-item>\\n      \\n              <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Graded As Test  </strong> : {{homeWorkData?.isGraded ? \\\"Yes\\\" : \\\"No\\\"}}</mat-list-item>\\n              <mat-list-item *ngIf=\\\"homeWorkData?.testTypeName\\\"  fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Test Type</strong> \\n               : {{homeWorkData?.testTypeName}}</mat-list-item>\\n              <mat-list-item *ngIf=\\\"homeWorkData?.gradeTermName\\\"  fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Grading Term</strong> : {{homeWorkData?.gradeTermName}}</mat-list-item>\\n              <mat-list-item *ngIf=\\\"homeWorkData?.maxMarks\\\"  fxLayout=\\\"column\\\" fxFlex=\\\"50\\\"><strong translate>Marks</strong> :{{homeWorkData?.maxMarks}}</mat-list-item>\\n            </mat-list>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"py-24\\\">\\n                <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\" (click)=\\\"closeView()\\\">\\n                  {{'Close' | translate}}\\n                </button>\\n            </div> \\n  </div>\\n</ng-template>\\n\\n<ng-template #sideBarData let-stepperIndex=\\\"stepperIndex\\\">\\n  <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\" class=\\\"my-28 px-20 border-left\\\">\\n    <div  fxLayout=\\\"row\\\" class=\\\"py-4\\\">\\n      <div class=\\\"w-144\\\" translate>Board</div> :<div class=\\\"pl-12\\\"><div class=\\\"break-word\\\">{{getNameBasedOnValue('board',classSectionForm.value.boardId)}}</div></div>\\n    </div>\\n    <div  fxLayout=\\\"row\\\" class=\\\"py-4\\\">\\n      <div class=\\\"w-144\\\" translate>Class</div> :<div class=\\\"pl-12\\\"><div class=\\\"break-word\\\">{{getNameBasedOnValue('class',classSectionForm.value.classId)}}</div> </div>\\n    </div>\\n    <div fxLayout=\\\"row\\\" class=\\\"py-4\\\">\\n      <div class=\\\"w-144\\\" translate>Sections</div> :<div class=\\\"pl-12\\\"><span *ngFor=\\\"let section of classSectionForm?.value?.sectionId;let l = last;\\\">{{section.label}} {{l ? '' : ','}} </span></div>\\n    </div>\\n\\n    <ng-container *ngIf=\\\"stepperIndex > 1\\\">\\n      <div fxLayout=\\\"row\\\" class=\\\"py-4\\\">\\n        <div class=\\\"w-144\\\" translate>Type</div> :<div class=\\\"pl-12\\\"><div class=\\\"break-word\\\">{{getNameBasedOnValue('type',typeCourseForm.value.typeId)}}</div></div>\\n      </div>\\n      <div fxLayout=\\\"row\\\" class=\\\"py-4\\\">\\n        <div class=\\\"w-144\\\" translate>Course</div> :<div class=\\\"pl-12\\\"><div class=\\\"break-word\\\">{{getNameBasedOnValue('course',typeCourseForm.value.courseId)}}</div></div>\\n      </div>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"stepperIndex > 2\\\">\\n      <div fxLayout=\\\"row\\\" class=\\\"py-4\\\">\\n        <div class=\\\"w-144\\\" translate>Name</div> :<div class=\\\"pl-12\\\"><div class=\\\"break-word\\\">{{detailsForm.value.homeworkName}}</div></div>\\n      </div>\\n      <div *ngIf=\\\"classSectionForm?.value?.homeworkDescription\\\" fxLayout=\\\"row\\\" class=\\\"py-4\\\">\\n        <div class=\\\"w-144\\\" translate>Description</div> :<div class=\\\"pl-12\\\"><div class=\\\"break-word\\\">{{detailsForm.value.homeworkDescription}}</div></div>\\n      </div>\\n      <div fxLayout=\\\"row\\\" class=\\\"py-4\\\">\\n        <div class=\\\"w-144\\\" translate>Post to Student calendar</div> :<div class=\\\"pl-12\\\">{{detailsForm.value.isPostToCalendar ? \\\"Yes\\\" : \\\"No\\\"}}</div>\\n      </div>\\n      <div *ngIf=\\\"classSectionForm?.value?.file?.fileNameWithExtension\\\" fxLayout=\\\"row\\\" class=\\\"py-4\\\">\\n        <div class=\\\"w-144\\\" translate>Attachment</div> :<div class=\\\"pl-12\\\"><div class=\\\"break-word\\\">{{detailsForm.value?.file?.fileNameWithExtension}}</div></div>\\n      </div>\\n    </ng-container>\\n    <ng-container *ngIf=\\\"stepperIndex > 3\\\">\\n      <div *ngIf=\\\"dateForm.value?.issueDate\\\" fxLayout=\\\"row\\\" class=\\\"py-4\\\">\\n        <div class=\\\"w-144\\\" translate>Issue Date</div> :<div class=\\\"pl-12\\\">{{getSchoolDate(dateForm.value.issueDate) }}</div>\\n      </div>\\n      <div *ngIf=\\\"dateForm.value?.dueDate\\\" fxLayout=\\\"row\\\" class=\\\"py-4\\\">\\n        <div class=\\\"w-144\\\" translate>Due Date</div> :<div class=\\\"pl-12\\\">{{getSchoolDate(dateForm.value.dueDate) }}</div>\\n      </div>\\n    </ng-container>\\n  </div>\\n</ng-template>\\n\\n\\n<ng-template #testInfoTemplate let-name=\\\"name\\\">\\n  <ng-container *ngFor=\\\"let test of rows;let i = index;\\\">\\n      <div *ngIf=\\\"i==name\\\" matTooltipClass=\\\"matTool-tip\\\"\\n      matTooltipPosition=\\\"above\\\" [matTooltip]=\\\"test?.termName + ', ' + test?.testTypeName + ', ' + test?.marks\\\">\\n        <div class=\\\"pt-8\\\">{{test?.termName}}</div>\\n      <div class=\\\"pt-8\\\"> {{test?.testTypeName}}</div>\\n      <div class=\\\"py-8\\\" *ngIf=\\\"test.marks\\\">Marks: {{test?.marks}}</div>\\n      </div>\\n  </ng-container>\\n</ng-template>\\n\"","module.exports = \".confirm-table ::ng-deep .mat-list-item-content {\\n  display: block; }\\n\\n::ng-deep .mat-tooltip {\\n  white-space: pre-line    !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvc3RhZmYvYXNzaWdubWVudHMvaG9tZXdvcmtzLWFzc2lnbm1lbnRzL2hvbWV3b3Jrcy1hc3NpZ25tZW50cy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUdNLGNBQWMsRUFBQTs7QUFJcEI7RUFDRSxtQ0FBbUMsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3RhZmYvYXNzaWdubWVudHMvaG9tZXdvcmtzLWFzc2lnbm1lbnRzL2hvbWV3b3Jrcy1hc3NpZ25tZW50cy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLmNvbmZpcm0tdGFibGV7XG4gIDo6bmctZGVlcHtcbiAgICAubWF0LWxpc3QtaXRlbS1jb250ZW50e1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICB9XG59XG46Om5nLWRlZXAgLm1hdC10b29sdGlwICB7XG4gIHdoaXRlLXNwYWNlOiBwcmUtbGluZSAgICAhaW1wb3J0YW50O1xufSJdfQ== */\"","import { Component, OnInit, ChangeDetectorRef, ViewChild, TemplateRef } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { AppSettings, Pattern } from 'app/app.constants';\nimport { ClassesConfigService } from 'app/service/general/api/classes-config.service';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { GradeSetupService } from 'app/service/grading-service/api/grade-setup.service';\nimport { ClassTimetableService } from 'app/service/class-schedules/class-time-table.service';\nimport { TypeService } from 'app/service/academic-service/api/type.service';\nimport { ClassHomeWorkService } from 'app/service/assignments/class-home-work.service';\nimport { HomeWorkFilterViewModel } from '../model/home-work-filter-view-model';\nimport { GardeTermConfigurationService } from 'app/service/grading-service/api/garde-term-configuration.service';\nimport { ClassHomeWorkModel } from '../model/class-home-work-model';\nimport { FileBase64Model } from '../model/file-base64-model';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { CommonService } from 'app/service/common.service';\nimport { ClassHomeworkIdModel } from '../model/class-homework-id-model';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { RouteConfig } from 'app/url.config';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-homeworks-assignments',\n  templateUrl: './homeworks-assignments.component.html',\n  styleUrls: ['./homeworks-assignments.component.scss'],\n  providers: [ClassesConfigService, GradeSetupService, ClassesConfigService, ClassTimetableService, ClassHomeWorkService, GardeTermConfigurationService, StoreService]\n})\nexport class HomeworksAssignmentsComponent extends CommonComponent implements OnInit {\n  @ViewChild('stepper') stepper;\n  @ViewChild('viewData') viewTemplate: TemplateRef<any>;\n  tableSettings: {};\n  filterViewModel: HomeWorkFilterViewModel;\n  columns: any[];\n  rows: Array<any>;\n  totalRowsCount: number;\n  pageCnt: number;\n  preSelectIds: Array<string> = [];\n  classSectionForm: FormGroup;\n  typeCourseForm: FormGroup;\n  detailsForm: FormGroup;\n  dateForm: FormGroup;\n  testInformation: FormGroup;\n  currentComponent = 'HomeworksAssignmentsComponent';\n  isSchoolhasBoards = true;\n  schoolBoardsList: any[] = [];\n  classesList: any[] = [];\n  sectionsList: any[] = [];\n  coursesList: any[] = [];\n  typesList: any[] = [];\n  testTypesList: any[] = [];\n  gradingTermsList: any[] = [];\n  filterRowData: any[] = [];\n  validate = true;\n  closeForm = false;\n  totalEstimate = 10;\n  ctx = { estimate: this.totalEstimate };\n  currentDate = this.getDefaultDate();\n  classHomeWork: ClassHomeWorkModel;\n  fileBaseModel: FileBase64Model;\n  items = [];\n  classSectionIds = [];\n  homeWorkData: any;\n  viewDialog: any;\n  selectedItems: any;\n  updateId: any;\n  attachmentUrl: any;\n  interactedStepperIndex: Number = 0;\n  testScheduleId: any;\n  onView = false;\n  classSectionsFromApi: any[] = [];\n  academicSession: any;\n  afterLoadItems = true;\n  isSingleClick = true;\n  constructor(\n    private classesConfigService: ClassesConfigService,\n    private _formBuilder: FormBuilder,\n    private gradeSetupService: GradeSetupService,\n    private classHomeWorkService: ClassHomeWorkService,\n    private gradeTermConfigurationService: GardeTermConfigurationService,\n    private router: Router,\n    public classTimetableService: ClassTimetableService,\n    public typeService: TypeService,\n    public changeDetector: ChangeDetectorRef,\n    public dialogRef: MatDialog,\n    public commonService: CommonService,\n    public storeService: StoreService,\n    public snackBar: MatSnackBar\n  ) {\n    super();\n    this.initializeFilterView();\n    this.setColumnHeaders();\n    this.initializeTableSettings();\n    this.getSchoolBoardsList();\n    this.getTypes();\n    this.getTestTypes();\n  }\n  onSelectChange(event): void {\n    this.classSectionIds = [];\n    if (event) {\n      event.forEach(element => {\n        this.classSectionIds.push(element.schoolAcademicClassSectionId);\n      });\n      if (this.classSectionIds.toString() !== this.classSectionsFromApi.toString()) {\n        this.testInformation.controls.gradeTermId.setValue(null);\n      } else {\n        this.classSectionsFromApi = [];\n      }\n      this.getGradingTerms();\n    }\n  }\n  initializeModel(): void {\n    this.fileBaseModel = {\n      fileNameWithExtension: null,\n      value: null\n    };\n    this.classHomeWork = {\n      boardId: null,\n      schoolAcademicSessionClassSectionIds: [null],\n      typeId: 0,\n      courseId: 0,\n      homeworkName: null,\n      homeworkDescription: null,\n      file: this.fileBaseModel,\n      isPostToCalendar: false,\n      issueDate: new Date(),\n      dueDate: new Date(),\n      isGraded: false,\n      testTypeId: 0,\n      gradeTermId: 0,\n      maxMarks: 0\n    };\n  }\n  initializeFilterView(): void {\n    this.filterViewModel = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n  }\n  setColumnHeaders(): void {\n    this.columns = [\n      { field: 'boardName', header: 'Board', sort: false },\n      { field: 'className', header: 'Class', sort: false },\n      { field: 'sectionname', header: 'Section', sort: false },\n      { field: 'courseName', header: 'Course', sort: false },\n      { field: 'typeName', header: 'Type', sort: false },\n      { field: 'homeWorkName', header: 'Name', sort: false },\n      { field: 'issueDate', header: 'Issue Date', sort: false },\n      { field: 'dueDate', header: 'Due Date', sort: false },\n      { field: 'testInformation', header: 'Test Information', sort: false, rowTempalteRequired: true },\n      { field: 'actions', header: 'Action', sort: false }\n\n    ];\n  }\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.columns,\n      tablename: 'Homework/Assignments',\n      componentName: this.currentComponent,\n      model: this.filterViewModel,\n    };\n  }\n  getSchoolBoardsList(): void {\n    this.gradeSetupService.schoolAcademicBoards().subscribe(res => {\n      if (res.listViews && res.listViews.length) {\n        this.isSchoolhasBoards = true;\n        res.listViews.forEach(element => {\n          this.schoolBoardsList.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n      } else {\n        this.isSchoolhasBoards = false;\n        this.classSectionForm.get('boardId').clearValidators();\n        this.classSectionForm.get('boardId').updateValueAndValidity();\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  onCancel(): void {\n    this.stepper.reset();\n    this.updateId = null;\n    this.closeForm = true;\n    this.onView = false;\n    this.interactedStepperIndex = 0;\n  }\n\n  onSelectSchoolBoard(schoolBoard: any, update = false): void {\n    this.classesList = [];\n    this.sectionsList = [];\n    this.items = [];\n    if (!update) {\n      this.classSectionForm.controls.classId.setValue(null);\n      this.classSectionForm.controls.sectionId.setValue(null);\n      this.testInformation.controls.gradeTermId.setValue(null);\n    }\n    this.gradeSetupService.schoolAcademicClasses(schoolBoard).subscribe(response => {\n      if (response.listViews && response.listViews.length) {\n        response.listViews.forEach(element => {\n          this.classesList.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  // on selection of class\n  onSelectClass(update = false): void {\n    this.getCourseList();\n    this.sectionsList = [];\n    this.items = [];\n    this.classSectionForm.controls.sectionId.setValue(null);\n    if (!update) {\n      this.typeCourseForm.controls.courseId.setValue(null);\n      this.testInformation.controls.gradeTermId.setValue(null);\n    }\n    this.classHomeWorkService.getAllDetails(this.classSectionForm.value.boardId, this.classSectionForm.value.classId)\n      .subscribe(res => {\n        this.items = res.academicSectionsLists;\n        this.items.forEach(element => {\n          element.label = element.sectionName;\n          element.value = element.schoolAcademicClassSectionId;\n        });\n        if (this.classSectionIds.length && update) {\n          this.selectedItems = this.items.filter(e => this.classSectionIds.indexOf(e.schoolAcademicClassSectionId) !== -1);\n          this.classSectionForm.controls.sectionId.setValue(this.selectedItems);\n          this.getGradingTerms();\n          this.afterLoadItems = true;\n        }\n      });\n  }\n  ngOnInit(): void {\n    this.academicSession = JSON.parse(localStorage.getItem('_as'));\n    this.setFormData();\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.filterViewModel = modelTableComponent;\n      this.getAllFilteredClasses();\n    } else {\n      this.getAllFilteredClasses();\n    }\n  }\n  tableData(_event: any): void {\n    this.filterViewModel = _event;\n    this.getAllFilteredClasses();\n  }\n  setFormData(): void {\n    this.classSectionForm = this._formBuilder.group({\n      boardId: [null, [Validators.required, Validators.maxLength(45)]],\n      classId: [null, [Validators.required, Validators.maxLength(45)]],\n      sectionId: [null, [Validators.required, Validators.maxLength(45)]],\n    });\n\n    this.typeCourseForm = this._formBuilder.group({\n      typeId: [null, [Validators.required, Validators.maxLength(45)]],\n      courseId: [null, [Validators.required, Validators.maxLength(45)]]\n    });\n\n    this.detailsForm = this._formBuilder.group({\n      homeworkName: [null, [Validators.required, Validators.maxLength(45)]],\n      file: [null],\n      homeworkDescription: [null, [Validators.maxLength(135)]],\n      isPostToCalendar: [false, [Validators.required]]\n    });\n\n    this.dateForm = this._formBuilder.group({\n      issueDate: [this.getDefaultDate(), [Validators.required, Validators.maxLength(45)]],\n      dueDate: [null],\n    });\n    this.testInformation = this._formBuilder.group({\n      isGraded: [false, [Validators.required, Validators.maxLength(45)]],\n      testTypeId: [null],\n      gradeTermId: [null],\n      maxMarks: [null, [Validators.pattern(Pattern.NATURAL_NUMBER_PATTERN), Validators.max(9999)]]\n    });\n    this.testInformation.controls.isGraded.valueChanges.pipe(distinctUntilChanged()).subscribe(val => {\n      if (val) {\n        this.testInformation.controls.testTypeId.setValidators([Validators.required]);\n        this.testInformation.controls.gradeTermId.setValidators([Validators.required]);\n        this.testInformation.controls.maxMarks.setValidators([Validators.required, Validators.pattern(Pattern.NUMBER_PATTERN), Validators.max(9999)]);\n        this.stepper._steps._results[this.stepper.selectedIndex].interacted = false;\n      } else {\n        this.testInformation.controls.isGraded.patchValue(false);\n        this.testInformation.controls.testTypeId.clearValidators();\n        this.testInformation.controls.gradeTermId.clearValidators();\n        this.testInformation.controls.maxMarks.clearValidators();\n        this.testInformation.patchValue({\n          testTypeId: null,\n          gradeTermId: null,\n          maxMarks: null\n        });\n      }\n      this.testInformation.updateValueAndValidity();\n    });\n  }\n  public formControlIsValid(formGroup, formCtrl): boolean {\n    if (formGroup.controls.hasOwnProperty(formCtrl)) {\n      if (!formGroup.controls[formCtrl].touched) {\n        return true;\n      }\n      return formGroup.controls[formCtrl].valid;\n    }\n    return false;\n  }\n  openForm(): void {\n    this.setFormData();\n    this.classesList = [];\n    this.sectionsList = [];\n    this.items = [];\n    this.onView = false;\n    this.closeForm = false;\n  }\n  getTypes(): void {\n    this.typeService.typesByTypeCategoryCode('HW').subscribe(res => this.typesList = res.types);\n  }\n  getTestTypes(): void {\n    this.gradeTermConfigurationService.fetchTestTypes()\n      .subscribe(res => this.testTypesList = res.listViews);\n  }\n  getGradingTerms(): void {\n    const sectionsIds = [];\n    this.items.forEach(e => {\n      if (this.classSectionIds.indexOf(e.schoolAcademicClassSectionId) > -1) {\n        sectionsIds.push(e.sectionId);\n      }\n    });\n    if (this.classSectionForm.value.classId && sectionsIds.length) {\n      // tslint:disable-next-line: max-line-length\n      this.gradeTermConfigurationService.gradingTermConfigurationGradingTermsByClassidAndSectionidAndBoardidGet(this.classSectionForm.value.classId, sectionsIds, this.classSectionForm.value.boardId)\n        .subscribe(res => this.gradingTermsList = res.listViews);\n    }\n\n  }\n  getCourseList(): void {\n    this.coursesList = [];\n    this.classTimetableService.classTimetableCoursesGet(this.classSectionForm.value.boardId, this.classSectionForm.value.classId).subscribe(res => {\n      if (res.commonViewModel != null) {\n        this.coursesList = [];\n        res.commonViewModel.map(x => {\n          this.coursesList.push({ value: x.id, label: x.name });\n        });\n      }\n    });\n  }\n  getAllFilteredClasses(): void {\n    this.classHomeWorkService.getAllHomeworks(this.filterViewModel.boardIds, this.filterViewModel.classIds,\n      this.filterViewModel.sectionIds, this.filterViewModel.typeIds,\n      this.filterViewModel.courseIds, this.filterViewModel.homeWorkNames,\n      this.filterViewModel.issueDateBegin, this.filterViewModel.issueDateEnd,\n      this.filterViewModel.dueDateBegin, this.filterViewModel.dueDateEnd,\n      this.filterViewModel.termIds, this.filterViewModel.testTypeIds,\n      this.filterViewModel.sortOrder, this.filterViewModel.sortBy, this.filterViewModel.pageNumber, this.filterViewModel.pageSize)\n      .subscribe(res => {\n        this.setClassResult(res);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n  setClassResult(data): any {\n    if (!data.getClassHomeWorksModel) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n    } else {\n      this.rows = data.getClassHomeWorksModel.list;\n      this.totalRowsCount = data.getClassHomeWorksModel.totalItems;\n      this.pageCnt = data.getClassHomeWorksModel.totalPages;\n      this.preSelectIds = [];\n    }\n    if (data.getClassHomeWorksModel) {\n      this.filterViewModel.pageNumber = data.getClassHomeWorksModel.pageNumber;\n    }\n    this.rows.forEach(e => {\n      e.issueDate = e.issueDate ? this.commonService.customDateFormat(e.issueDate.toString(), this.getSchoolDateFormat()).date : null;\n      e.dueDate = e.dueDate ? this.commonService.customDateFormat(e.dueDate.toString(), this.getSchoolDateFormat()).date : null;\n\n    });\n    this.tableSettings = {\n      model: this.filterViewModel,\n      rows: this.rows,\n      columns: this.columns,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      tablename: 'Homework/Assignments',\n      componentName: this.currentComponent,\n      visibleSelectAll: false,\n      isSelectRowRequired: false,\n      isPaginationRequired: true,\n      filtersList: data.filters,\n      headerOperations: {\n        infoButton: {\n          required: true,\n          text: 'Homeworks/Assignments'\n        },\n        addingForm: {\n          required: true,\n          btnName: 'Add'\n        }\n      },\n      rowGroupingColumns: ['className', 'boardName', 'typeName', 'sectionname', 'courseName']\n    };\n\n    this.filterRowData = [];\n    this.filterRowData = this.rows;\n    const x = [];\n    this.filterRowData.forEach(elnt => {\n      if (x.length === 0) {\n        x.push(elnt);\n      }\n      else {\n        this.filterRowData.forEach((element: any) => {\n          const foundIndex = x.findIndex((value: any) => {\n            return value.className === element.className && value.homeWorkName === element.homeWorkName;\n          });\n          if (foundIndex === -1) {\n            x.push(element);\n          }\n        });\n      }\n    });\n    this.filterRowData = x;\n    // apply edit and delete\n    this.updateActions();\n  }\n\n  updateActions(): void {\n    this.filterRowData.forEach(element => {\n      element.operations = [\n        // {\n        //   name: AppSettings.EDIT_OPERATION,\n        //   icon: AppSettings.EDIT,\n        //   operationName: AppSettings.EDIT\n        // }, \n        {\n          name: AppSettings.DETAILS_DISPLAY,\n          icon: AppSettings.DETAILS_ICON,\n          operationName: AppSettings.DETAILS\n        },\n        {\n          name: AppSettings.DELETE_OPERATION,\n          icon: AppSettings.DELETE,\n          operationName: AppSettings.DELETE\n        },\n      ];\n      if (element.testScheduleId !== null) {\n        element.operations.push(\n          {\n            name: AppSettings.MARKS,\n            icon: AppSettings.MARKS_ICON,\n            operationName: AppSettings.MARKS\n          });\n      }\n    });\n  }\n  onSelectionChange(event: any): void {\n    if (event.selectedIndex > this.interactedStepperIndex) {\n      this.interactedStepperIndex = event.selectedIndex;\n    } else {\n      this.stepper._steps._results.forEach((x, i) => {\n        x.interacted = i < this.interactedStepperIndex ? true : false;\n      });\n    }\n  }\n  selectedRows(event: any): void {\n\n  }\n  getSchoolDate(date): any {\n    return date ? this.commonService.customDateFormat(date.toString(), this.getSchoolDateFormat()).date : null;\n  }\n  imgChanged(files, logo = false): void {\n    if (this.checkFileSize(files[0], AppSettings.TEXT_AND_IMAGE_FILE_EXTENSION, 2097152)) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(files[0]);\n    const that = this;\n    reader.onload = (_event) => {\n      that.attachmentUrl = null;\n      that.detailsForm.controls.file.setValue({ fileNameWithExtension: files[0].name, value: (<string>reader.result).split(',')[1] });\n      that.changeDetector.detectChanges();\n    };\n  }\n  clearImages(): void {\n    this.detailsForm.controls.file.setValue(null);\n  }\n  submitHomeWork(): void {\n    this.classHomeWork = {};\n    this.classHomeWork.boardId = this.classSectionForm.value.boardId;\n    this.classHomeWork.schoolAcademicSessionClassSectionIds = this.classSectionIds;\n    Object.assign(this.classHomeWork, this.typeCourseForm.value, this.detailsForm.value, this.dateForm.value, this.testInformation.value);\n    if (this.updateId) {\n      this.classHomeWork.id = this.updateId;\n      this.classHomeWorkService.updateHomework(this.classHomeWork)\n        .subscribe((res: any) => this.setHomeWorkdata(res), error => {\n          this.errorResponse(error);\n        });\n    } else {\n      if (this.isSingleClick){\n        this.isSingleClick = false;\n        this.classHomeWorkService.postHomework(this.classHomeWork)\n          .subscribe((res: any) => this.setHomeWorkdata(res), error => {\n            this.errorResponse(error);\n          });\n          setTimeout(() => {\n            this.isSingleClick = true;\n          }, 1000);\n      }\n    }\n  }\n  // Actions Performing on the row\n  actions(operationData: any): void {\n    this.classSectionsFromApi = [];\n    if (operationData.operation === AppSettings.DETAILS.toLowerCase()) {\n      this.onView = true;\n      this.classHomeWorkService.getByHomeworks(operationData.clickedRow.id)\n        .subscribe(res => this.viewHomeWorkDetails(res));\n    } else if (operationData.operation === AppSettings.EDIT.toLowerCase()) {\n      this.afterLoadItems = false;\n      this.updateId = operationData.clickedRow.id;\n      this.classHomeWorkService.getByHomeworks(operationData.clickedRow.id)\n        .subscribe(res => this.getHomeWorkDetails(res));\n    } else if (operationData.operation === AppSettings.DELETE.toLowerCase()) {\n      const dialogRef = this.dialogRef.open(CustomDialogComponent, {\n        disableClose: true,\n        data: { text: this.commonService.getTranslation(AppSettings.DELETE_CONFORMATION, ''), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n      });\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.classHomeWorkService.deleteHomework(operationData.clickedRow.id)\n            .subscribe(res => this.setHomeWorkdata(res), error => this.errorResponse(error));\n        }\n        if (action === AppSettings.NO) {\n          this.dialogRef.closeAll();\n        }\n      });\n    }\n    else if (operationData.operation === AppSettings.MARKS.toLowerCase()) {\n      this.router.navigate([RouteConfig.Home_Work_Test_Schedule + '/' + operationData.clickedRow.testScheduleId, { operation: AppSettings.HOMEWORK }]);\n    }\n  }\n  viewHomeWorkDetails(res): void {\n    this.homeWorkData = res.getClassHomeworkModel;\n    if (this.homeWorkData.attachment && this.homeWorkData.attachment.fileName) {\n      this.homeWorkData.attachment.attachmentUrl = this.storeService.getFilePath(this.homeWorkData.attachment.fileName);\n    }\n    this.scrollIntoView('app-table');\n    this.closeForm = false;\n  }\n  getHomeWorkDetails(res): void {\n    const data = res.getClassHomeworkModel;\n    this.onSelectSchoolBoard(data.boardId, true);\n    const formNames = ['classSectionForm', 'typeCourseForm', 'detailsForm', 'dateForm', 'testInformation'];\n    for (let i = 0; i < formNames.length; i++) {\n      Object.keys(this[formNames[i]]['controls']).forEach((key) => {\n        if (typeof (data[key]) === 'boolean') {\n          this[formNames[i]]['controls'][key].setValue(data[key]);\n        } else {\n          this[formNames[i]]['controls'][key].setValue(data[key] ? data[key] : null);\n        }\n      });\n    }\n    if (data.classSections && data.classSections[0].classId) {\n      this.classSectionForm.controls.classId.setValue(data.classSections[0].classId);\n    }\n    this.classSectionIds = data.schoolAcademicSessionClassSectionId;\n    this.classSectionsFromApi = this.classSectionIds;\n    this.onSelectClass(true);\n    this.onView = false;\n    this.closeForm = false;\n    if (data.attachment && data.attachment.fileName) {\n      this.attachmentUrl = this.storeService.getFilePath(data.attachment.fileName);\n      this.storeService.storeFileEncryptByFileNameGet(data.attachment.fileName)\n        .subscribe(result => {\n          if (result) {\n            this.detailsForm.controls.file.setValue({ fileNameWithExtension: result.fileNameWithExtension, value: result.value });\n            this.changeDetector.detectChanges();\n          }\n        });\n    }\n    this.stepper._steps._results.forEach((x) => {\n      x.interacted = true;\n    });\n    this.interactedStepperIndex = this.stepper._steps._results.length;\n    this.customSteperLabelChange();\n    this.changeDetector.markForCheck();\n    this.changeDetector.detectChanges();\n  }\n  openFile(base64): void {\n    window.open(base64, '_blank');\n  }\n  closeView(): void {\n    this.closeForm = true;\n    this.onView = false;\n    this.scrollIntoView('app-table');\n  }\n  setHomeWorkdata(res): void {\n    this.updateId = null;\n    this.onCancel();\n\n    this.getAllFilteredClasses();\n    this.openSnackBar(res.messages.ResultMessage);\n  }\n  getNameBasedOnValue(name, value): string {\n    if (value === '' || value === 0) {\n      return '';\n    }\n    let x;\n    switch (name) {\n      case 'board':\n        return (x = this.schoolBoardsList.filter(element => element.value === value)).length ? x[0].label : '';\n      case 'class':\n        return (x = this.classesList.filter(element => element.value === value)).length ? x[0].label : '';\n      case 'sections':\n        return (x = this.sectionsList.filter(element => element.id === value)).length ? x[0].name : '';\n      case 'type':\n        return (x = this.typesList.filter(element => element.id === value)).length > 0 ? x[0].name : '';\n      case 'testType':\n        return (x = this.testTypesList.filter(element => element.id === value)).length ? x[0].name : '';\n      case 'gradingTerm':\n        return (x = this.gradingTermsList.filter(element => element.id === value)).length ? x[0].name : '';\n      case 'course':\n        return (x = this.coursesList.filter(element => element.value === value)).length ? x[0].label : '';\n      default: break;\n    }\n  }\n  onChnageGraded(e): void {\n    if (!e.value) {\n      return;\n    }\n    Object.values(this.testInformation.controls).forEach(control => {\n      control.markAsUntouched();\n    });\n  }\n}\n"],"sourceRoot":""}