{"version":3,"sources":["webpack:///./src/app/modules/configuration/class-schedules/class-schedules-routing.module.ts","webpack:///./src/app/modules/configuration/class-schedules/class-schedules.component.html","webpack:///./src/app/modules/configuration/class-schedules/class-schedules.component.scss","webpack:///./src/app/modules/configuration/class-schedules/class-schedules.component.ts","webpack:///./src/app/modules/configuration/class-schedules/class-schedules.module.ts","webpack:///./src/app/modules/configuration/class-schedules/class-timetable/class-timetable.component.html","webpack:///./src/app/modules/configuration/class-schedules/class-timetable/class-timetable.component.scss","webpack:///./src/app/modules/configuration/class-schedules/class-timetable/class-timetable.component.ts","webpack:///./src/app/modules/configuration/class-schedules/class-timetables/class-timetables.component.html","webpack:///./src/app/modules/configuration/class-schedules/class-timetables/class-timetables.component.scss","webpack:///./src/app/modules/configuration/class-schedules/class-timetables/class-timetables.component.ts","webpack:///./src/app/modules/configuration/class-schedules/holidays/holidays.component.html","webpack:///./src/app/modules/configuration/class-schedules/holidays/holidays.component.scss","webpack:///./src/app/modules/configuration/class-schedules/holidays/holidays.component.ts","webpack:///./src/app/modules/configuration/class-schedules/school-schedule-template-details/school-schedule-template-details.component.html","webpack:///./src/app/modules/configuration/class-schedules/school-schedule-template-details/school-schedule-template-details.component.scss","webpack:///./src/app/modules/configuration/class-schedules/school-schedule-template-details/school-schedule-template-details.component.ts","webpack:///./src/app/modules/configuration/class-schedules/school-schedule-templates/school-schedule-templates.component.html","webpack:///./src/app/modules/configuration/class-schedules/school-schedule-templates/school-schedule-templates.component.scss","webpack:///./src/app/modules/configuration/class-schedules/school-schedule-templates/school-schedule-templates.component.ts","webpack:///./src/app/service/class-schedules/school-schedule-template.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACQ;AAEW;AACE;AAC+C;AACoB;AAE9C;AAGzF,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kFAAuB;QAC5C,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE;YACvD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAG,IAAI,EAAE,EAAC,KAAK,EAAE,UAAU,EAAC,EAAE;YAC9E,EAAE,IAAI,EAAE,2BAA2B,EAAE,SAAS,EAAE,+HAAgC,EAAG,IAAI,EAAE,EAAC,KAAK,EAAE,2BAA2B,EAAC,EAAE;YAC/H,EAAE,IAAI,EAAE,uCAAuC,EAAE,SAAS,EAAE,mJAAsC,EAAG,IAAI,EAAE,EAAC,KAAK,EAAE,mCAAmC,EAAC,EAAE;YACzJ,wGAAwG;YACxG,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,qGAAwB,EAAG,IAAI,EAAE,EAAC,KAAK,EAAE,kBAAkB,EAAC,EAAE;SACtG;KACF;CACF,CAAC;AAWF;IAAA;IAA2C,CAAC;IAA/B,2BAA2B;QAVvC,8DAAQ,CAAC;YACR,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE;gBACP,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,4DAAY;aACb;YACD,OAAO,EAAE;gBACP,4DAAY;aACb;SACF,CAAC;OACW,2BAA2B,CAAI;IAAD,kCAAC;CAAA;AAAJ;;;;;;;;;;;;ACnCxC,oD;;;;;;;;;;;ACAA,+DAA+D,mM;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,0CAAQ,GAAR;IACA,CAAC;IALU,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,uJAA+C;;SAEhD,CAAC;;OACW,uBAAuB,CAOnC;IAAD,8BAAC;CAAA;AAPmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPuB;AACZ;AACuB;AACJ;AACnB;AAC+B;AACV;AACb;AACD;AACY;AACA;AACsC;AAC/C;AACa;AAE6C;AACoB;AACjD;AACG;AA+BzF;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QA3BhC,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,kFAAuB;gBACnC,8EAAiB,EAAE,gIAAgC;gBACnD,oJAAsC;gBACtC,mGAAuB,EAAE,sGAAwB,CAAC;YACrD,OAAO,EAAE;gBACP,2FAA2B;gBAC3B,4DAAY;gBACZ,4DAAY;gBACZ,2DAAW;gBACX,mEAAmB;gBACnB,gFAAsB;gBACtB,oEAAgB;gBAChB,iFAAmB;gBACnB,mEAAe;aAChB;YACD,SAAS,EAAE;gBACT,sHAA2B;gBAC3B;oBACE,OAAO,EAAE,uEAAiB;oBAC1B,QAAQ,EAAE,oFAAgB;oBAC1B,KAAK,EAAE,IAAI;iBACZ;aACF;YACD,OAAO,EAAE,CAAC,8DAAgB,CAAC;SAE5B,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;ACjDjC,0HAA0H,oCAAoC,swBAAswB,aAAa,2xBAA2xB,eAAe,2DAA2D,mBAAmB,44DAA44D,iBAAiB,suBAAsuB,wQAAwQ,8BAA8B,0JAA0J,yOAAyO,kBAAkB,mGAAmG,6BAA6B,qBAAqB,2BAA2B,0DAA0D,sBAAsB,+FAA+F,uMAAuM,mBAAmB,KAAK,kBAAkB,yfAAyf,oBAAoB,0vBAA0vB,aAAa,6eAA6e,eAAe,2DAA2D,mBAAmB,ujBAAujB,oBAAoB,y4EAAy4E,sBAAsB,sWAAsW,6OAA6O,WAAW,sJAAsJ,kDAAkD,kBAAkB,iGAAiG,6BAA6B,mBAAmB,2BAA2B,ieAAie,kBAAkB,wPAAwP,0CAA0C,wBAAwB,sCAAsC,uBAAuB,mLAAmL,2gBAA2gB,cAAc,mhBAAmhB,aAAa,wYAAwY,iQAAiQ,8BAA8B,mKAAmK,wPAAwP,kBAAkB,iGAAiG,6BAA6B,mBAAmB,2BAA2B,6dAA6d,kBAAkB,wYAAwY,eAAe,MAAM,SAAS,cAAc,4MAA4M,0oBAA0oB,cAAc,qiBAAqiB,aAAa,yhCAAyhC,kBAAkB,UAAU,0vBAA0vB,cAAc,inBAAinB,aAAa,khBAAkhB,sBAAsB,8nBAA8nB,yEAAyE,mBAAmB,2FAA2F,kBAAkB,mdAAmd,qBAAqB,0MAA0M,oBAAoB,8IAA8I,qBAAqB,0E;;;;;;;;;;;ACArwrB,kCAAkC,qBAAqB,sBAAsB,EAAE,8BAA8B,sBAAsB,EAAE,6BAA6B,+BAA+B,uBAAuB,gBAAgB,iBAAiB,EAAE,sBAAsB,sBAAsB,mBAAmB,EAAE,uDAAuD,0CAA0C,gCAAgC,kCAAkC,EAAE,+CAA+C,2tC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtc;AACO;AACtB;AAE6B;AACnB;AACwB;AAClC;AACX;AAGyC;AAE9C;AAQ3C;IAA6C,iFAAe;IAkD1D,iCAAoB,GAAgB,EAAU,iBAAoC,EAAU,qBAA4C,EAC/H,aAA4B,EAAS,MAAiB,EAAS,QAAqB;QAD7F,YAEE,iBAAO,SACR;QAHmB,SAAG,GAAH,GAAG,CAAa;QAAU,uBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,2BAAqB,GAArB,qBAAqB,CAAuB;QAC/H,mBAAa,GAAb,aAAa,CAAe;QAAS,YAAM,GAAN,MAAM,CAAW;QAAS,cAAQ,GAAR,QAAQ,CAAa;QA1C7F,gBAAU,GAAe,EAAE,CAAC;QAC5B,mBAAa,GAAe,EAAE,CAAC;QAC/B,sBAAgB,GAAe,EAAE,CAAC;QAClC,sBAAgB,GAAe,EAAE,CAAC;QAClC,0BAAoB,GAAe,EAAE,CAAC;QACtC,6BAAuB,GAAe,EAAE,CAAC;QACzC,iCAA2B,GAAe,EAAE,CAAC;QAC7C,kBAAY,GAAe,EAAE,CAAC;QAE9B,4BAAsB,GAAe,EAAE,CAAC;QACxC,oBAAc,GAAe,EAAE,CAAC;QAChC,gBAAU,GAAe,EAAE,CAAC;QAC5B,eAAS,GAAe,EAAE,CAAC;QAE3B,kCAA4B,GAAe,EAAE,CAAC;QAY9C,iBAAW,GAAG,KAAK,CAAC;QACpB,6BAAuB,GAAG,KAAK,CAAC;QAChC,+BAAyB,GAAG,KAAK,CAAC;QAClC,yBAAmB,GAAG,IAAI,CAAC;QAC3B,qBAAe,GAAG,KAAK,CAAC;QACxB,eAAS,GAAG,KAAK,CAAC;QAClB,eAAS,GAAG,IAAI,CAAC;QACjB,oBAAc,GAAG,KAAK,CAAC;QACvB,oBAAc,GAAG,KAAK,CAAC;QACvB,mBAAa,GAAG,KAAK,CAAC;;IAStB,CAAC;IAED,0CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,mBAAO,CAAC,oEAAmB,CAAC,CAAC;QAC/C,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,oBAAoB,GAAG;YAC1B,qBAAqB,EAAE,IAAI,CAAC,qBAAqB,GAAG,EAAE;SACvD,CAAC;QACF,IAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC;QACnC,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;IACrB,CAAC;IAED,+CAAa,GAAb;QACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACvC,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnD,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrD,kBAAkB,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACzC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAChC,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SAC/B,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAC7C,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACpD,CAAC,CAAC;IACL,CAAC;IAED,mCAAmC;IACnC,gDAAc,GAAd;QAAA,iBAiBC;QAhBC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,kBAAQ;YAC/D,IAAI,QAAQ,CAAC,SAAS,IAAI,IAAI,EAAE;gBAC9B,IAAI,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE;oBAC7B,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAO;wBAChC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC;4BACtB,KAAK,EAAE,OAAO,CAAC,IAAI;4BACnB,KAAK,EAAE,OAAO,CAAC,EAAE;yBAClB,CAAC,CAAC;wBACH,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,aAAa,CAAC;oBACvC,CAAC,CAAC,CAAC;iBACJ;aACF;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,MAAM;IAEN,+CAAa,GAAb,UAAc,IAAS;QAAvB,iBAaC;QAZC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,qBAAqB,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;YAC5E,IAAI,GAAG,CAAC,0BAA0B,IAAI,IAAI,EAAE;gBAC1C,GAAG,CAAC,0BAA0B,CAAC,GAAG,CAAC,WAAC;oBAClC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,WAAW,EAAE,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;gBACvH,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAC7B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;gBAC/B,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,CAAC;aACvD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAQ,GAAR;QAAA,iBA0DC;QAzDC,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,KAAK,6DAAW,CAAC,KAAK,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,KAAK,6DAAW,CAAC,KAAK,EAAE;YACpJ,IAAM,KAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC;YACpD,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;YACjC,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAU,GAAG;gBACxD,OAAO,GAAG,CAAC,KAAK,KAAK,KAAG,CAAC;YAC3B,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,qBAAqB,CAAC,wCAAwC,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EACzG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;gBACtE,IAAI,GAAG,CAAC,+BAA+B,IAAI,IAAI,EAAE;oBAC/C,GAAG,CAAC,+BAA+B,CAAC,GAAG,CAAC,WAAC;wBACvC,IAAI,CAAC,CAAC,SAAS,IAAI,IAAI,IAAI,CAAC,CAAC,OAAO,IAAI,IAAI,EAAE;4BAC5C,IAAM,SAAS,GAAG,CAAC,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,EAAE,KAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,IAAI,CAAC;4BACnI,IAAM,OAAO,GAAG,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,OAAO,EAAE,KAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,IAAI,CAAC;4BAC7H,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;gCAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,OAAO;gCACzE,kBAAkB,EAAE,CAAC,CAAC,UAAU;gCAChC,GAAG,EAAE,CAAC,CAAC,SAAS;gCAChB,GAAG,EAAE,CAAC,CAAC,OAAO;gCACd,WAAW,EAAE,CAAC,CAAC,gBAAgB;6BAChC,CAAC,CAAC;yBACJ;6BACI;4BACH,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;gCAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,kBAAkB,EAAE,CAAC,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,SAAS;gCAC9E,GAAG,EAAE,CAAC,CAAC,OAAO;gCACd,WAAW,EAAE,CAAC,CAAC,gBAAgB;6BAChC,CAAC,CAAC;yBACJ;oBACH,CAAC,CAAC,CAAC;oBAEH,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE,CAAC;oBAC/D,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;oBAC5B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;oBACvB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;oBAE5B,IAAI,KAAI,CAAC,sBAAsB,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC5C,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;wBACtG,wJAAwJ;wBACxJ,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;qBAC7D;yBACI;wBACH,KAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;qBAChC;iBACF;qBACI;oBACH,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtB,KAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;oBACjC,KAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;iBAChC;YACH,CAAC,CAAC,CAAC;SACN;aACI;YACH,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SACjC;IACH,CAAC;IAED,kDAAgB,GAAhB,UAAiB,IAAS;QAA1B,iBAmBC;QAlBC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAM,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,IAAI,IAAI,EAA9B,CAA8B,CAAC,CAAC;QACrG,IAAI,CAAC,kBAAkB,GAAG,sBAAsB,CAAC,kBAAkB,CAAC;QACpE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;QAC3C,0CAA0C;QAC1C,6HAA6H;QAE7H,IAAM,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC;QACpD,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAU,GAAG;YACxD,OAAO,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,CAAC,+BAA+B,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EACvI,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,aAAG;YACtD,IAAI,GAAG,CAAC,gBAAgB,IAAI,IAAI,EAAE;gBAChC,KAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,gBAAgB,CAAC;aAClD;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oDAAkB,GAAlB,UAAmB,OAAY;QAC7B,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACtB,IAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC;oCAE5B,GAAG;gBACZ,IAAM,KAAK,GAAG,OAAK,4BAA4B,CAAC,SAAS,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,KAAK,GAAG,CAAC,WAAW,EAA5B,CAA4B,CAAC,CAAC;gBAC/F,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;oBAChB,IAAM,GAAG,GAAG,EAAE,CAAC;oBACf,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACd,IAAM,IAAI,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;oBACnD,OAAK,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC9C;qBAAM;oBACL,IAAM,CAAC,GAAG,OAAK,4BAA4B,CAAC,SAAS,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,KAAK,GAAG,CAAC,WAAW,EAA5B,CAA4B,CAAC,CAAC;oBAC3F,OAAK,4BAA4B,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACtD;;;YAVH,KAAkB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;gBAApB,IAAM,GAAG;wBAAH,GAAG;aAWb;YACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;SACvD;IACH,CAAC;IAED,+CAAa,GAAb,UAAc,IAAI;QAChB,IAAM,MAAM,GAAG;YACb,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,CAAC;YACZ,WAAW,EAAE,CAAC;YACd,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,CAAC;SACZ,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC;YAC/B,IAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAClC,IAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAClC,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;YAChC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;SACrC;aACI;YACH,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;SAClC;IACH,CAAC;IAED,mDAAiB,GAAjB;QACE,IAAI,IAAI,CAAC,SAAS,KAAK,CAAC,EAAE;YACxB,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC3B,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;YAC/B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACtE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,eAAe,EAAE,CAAC;YAChE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;YAC9D,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC7D,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC3D,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACnE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC;YACnC,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;YACvC,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;IACH,CAAC;IAED,iDAAe,GAAf;QAAA,iBAgBC;QAfC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,qBAAqB,CAAC,0BAA0B,EAAE,CAAC,SAAS,CAAC,aAAG;YACnE,IAAI,GAAG,CAAC,eAAe,IAAI,IAAI,EAAE;gBAC/B,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAC;oBACvB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC7D,CAAC,CAAC,CAAC;gBACH,IAAI,KAAI,CAAC,SAAS,KAAK,CAAC,EAAE;oBACxB,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBACnE,KAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;iBACxC;qBACI;oBACH,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,kBAAkB,CAAC,CAAC;iBAC1F;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0DAAwB,GAAxB;QACE,iEAAiE;QACjE,0JAA0J;QAC1J,IAAI;QAHN,iBAgBC;QAXC,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,qBAAqB,CAAC,gCAAgC,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,aAAG;YACzH,IAAI,GAAG,CAAC,oBAAoB,IAAI,IAAI,EAAE;gBACpC,KAAI,CAAC,uBAAuB,GAAG,GAAG,CAAC,oBAAoB,CAAC;gBACxD,KAAI,CAAC,kBAAkB,CAAC,KAAI,CAAC,uBAAuB,CAAC,CAAC;gBACtD,KAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,IAAI,KAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;oBACjC,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC5B;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mDAAiB,GAAjB;QAAA,iBAaC;QAZC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,qBAAqB,CAAC,iCAAiC,EAAE,CAAC,SAAS,CAAC,aAAG;YAC1E,IAAI,GAAG,CAAC,4BAA4B,IAAI,IAAI,EAAE;gBAC5C,GAAG,CAAC,4BAA4B,CAAC,GAAG,CAAC,WAAC;oBACpC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC;wBACvB,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ;wBAChD,eAAe,EAAE,CAAC,CAAC,eAAe,EAAE,wBAAwB,EAAE,CAAC,CAAC,wBAAwB;qBACzF,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,aAAa,EAAE,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAa,GAAb;QAAA,iBAoBC;QAnBC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC;QAC1D,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAU,GAAG;YACxD,OAAO,GAAG,CAAC,KAAK,KAAK,SAAS,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YAC1H,IAAI,GAAG,CAAC,eAAe,IAAI,IAAI,EAAE;gBAC/B,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAC;oBACvB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;gBACvD,CAAC,CAAC,CAAC;aACJ;iBACI;gBACH,KAAI,CAAC,YAAY,CAAC,6DAAW,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAC;aAC/D;YACD,KAAI,CAAC,YAAY,EAAE,CAAC;YACpB,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAY,GAAZ;QAAA,iBAUC;QATC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,aAAG;YACzE,IAAI,GAAG,CAAC,eAAe,IAAI,IAAI,EAAE;gBAC/B,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;gBACpB,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAC;oBACvB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;gBACtD,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oDAAkB,GAAlB,UAAmB,IAAS,EAAE,KAAU,EAAE,WAAgB;QACxD,IAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC;QAChC,IAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,UAAU,GAAG;YACzD,OAAO,GAAG,CAAC,KAAK,KAAK,YAAY,CAAC;QACpC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC;QACxC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAE/B,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;YACzB,QAAQ,IAAI,EAAE;gBACZ,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC;oBAC/B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;oBACxC,IAAI,CAAC,sBAAsB,EAAE,CAAC;oBAC9B,MAAM;gBAER,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,eAAe,KAAK,CAAC;oBACtC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;oBAC3C,MAAM;gBAER,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,wBAAwB,KAAK,CAAC;oBAC/C,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;oBACxC,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,CAAC;oBACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;wBACzD,YAAY,EAAE,IAAI;wBAClB,KAAK,EAAE,OAAO;qBACf,CAAC,CAAC;oBACH,MAAM;gBAER,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,eAAe,KAAK,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,wBAAwB,KAAK,CAAC;oBACvF,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC;oBAC7B,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;oBACxC,IAAI,CAAC,sBAAsB,EAAE,CAAC;oBAC9B,MAAM;gBAER;oBACE,MAAM;aACT;SACF;IACH,CAAC;IAED,gDAAc,GAAd,UAAe,IAAS,EAAE,WAAgB;QACxC,IAAI,IAAI,CAAC,2BAA2B,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/C,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,WAAC;gBACxC,IAAI,CAAC,CAAC,WAAW,KAAK,WAAW,EAAE;oBACjC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,WAAC;wBACrB,IAAI,CAAC,CAAC,sBAAsB,KAAK,IAAI,CAAC,sBAAsB,EAAE;4BAC5D,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC;4BACrB,CAAC,CAAC,sBAAsB,GAAG,CAAC,CAAC;4BAC7B,CAAC,CAAC,uBAAuB,GAAG,EAAE,CAAC;yBAChC;oBACH,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACJ;aACI;YACH,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,WAAC;gBACpC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,EAAE;oBAC/B,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,YAAE;wBAChB,IAAI,EAAE,CAAC,sBAAsB,KAAK,IAAI,CAAC,sBAAsB,EAAE;4BAC7D,EAAE,CAAC,cAAc,GAAG,KAAK,CAAC;yBAC3B;oBACH,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,mDAAiB,GAAjB,UAAkB,IAAS,EAAE,WAAgB;QAA7C,iBAmDC;QAlDC,IAAI,IAAI,CAAC,2BAA2B,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/C,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,WAAC;gBACxC,IAAI,CAAC,CAAC,WAAW,KAAK,WAAW,EAAE;oBACjC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,WAAC;wBACrB,IAAI,CAAC,CAAC,sBAAsB,KAAK,IAAI,CAAC,sBAAsB,EAAE;4BAC5D,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC;4BACrB,CAAC,CAAC,sBAAsB,GAAG,CAAC,CAAC;4BAC7B,CAAC,CAAC,uBAAuB,GAAG,EAAE,CAAC;4BAC/B,CAAC,CAAC,uBAAuB,CAAC,IAAI,CAAC;gCAC7B,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI;6BAC9B,CAAC,CAAC;yBACJ;oBACH,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACJ;aACI;YACH,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,WAAC;gBACpC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,WAAW,EAAE;oBAC/B,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,YAAE;wBAChB,IAAI,EAAE,CAAC,sBAAsB,KAAK,IAAI,CAAC,sBAAsB,EAAE;4BAC7D,EAAE,CAAC,cAAc,GAAG,IAAI,CAAC;yBAC1B;oBACH,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,GAAG,EAAE,CAAC;QACrD,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,IAAI,CAAC;YACnD,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;QACH,IAAI,CAAC,qBAAqB,CAAC,2CAA2C,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,aAAG;YAC7G,IAAI,GAAG,CAAC,UAAU,KAAK,KAAI,CAAC,UAAU,CAAC,EAAE,EAAE;gBACzC,IAAI,GAAG,CAAC,gBAAgB,IAAI,IAAI,EAAE;oBAChC,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,gBAAgB,CAAC;oBAC7C,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAClB,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC5B;gBACD,KAAI,CAAC,wBAAwB,EAAE,CAAC;gBAChC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;aAC/C;iBACI;gBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;aACrD;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAO,GAAP,UAAQ,IAAS;QACf,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACvE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;IACtC,CAAC;IAED,6CAAW,GAAX;QAAA,iBAgCC;QA/BC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAC;YAC5B,IAAI,CAAC,UAAU,EAAE,CAAC;SACnB;QACD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,6DAAW,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE;YAC3C,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;YACrC,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,iBAAO;gBAC9C,IAAI,OAAO,CAAC,WAAW,KAAK,KAAI,CAAC,WAAW,EAAE;oBAC5C,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,kBAAQ;wBAClC,IAAI,QAAQ,CAAC,sBAAsB,KAAK,KAAI,CAAC,aAAa,CAAC,sBAAsB,IAAI,KAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,MAAM,KAAK,CAAC,EAAE;4BAC5I,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC;yBAC3B;oBACH,CAAC,CAAC,CAAC;oBACH,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;iBACzB;YACH,CAAC,CAAC,CAAC;YACJ,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;SAC/B;aACI,IAAI,IAAI,CAAC,uBAAuB,CAAC,MAAM,EAAE;YAC5C,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,iBAAO;gBAC1C,IAAI,OAAO,CAAC,IAAI,KAAK,KAAI,CAAC,aAAa,CAAC,WAAW,EAAE;oBACnD,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAQ;wBAC5B,IAAI,QAAQ,CAAC,sBAAsB,KAAK,KAAI,CAAC,aAAa,CAAC,sBAAsB,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,KAAI,CAAC,aAAa,CAAC,MAAM,KAAK,KAAK,CAAC,EAAE;4BACpK,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;yBAC9B;oBACH,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IACzB,CAAC;IAED,4DAA0B,GAA1B;QAAA,iBA8BC;QA7BC,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,IAAI,CAAC,wBAAwB,CAAC,MAAM,KAAK,6DAAW,CAAC,KAAK,EAAE;YAC9D,IAAM,SAAS,GAAG,EAAE,CAAC;YACrB,IAAM,OAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,KAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,QAAQ,EAAxD,CAAwD,CAAC,CAAC;YAClG,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,KAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,OAAO,EAAvD,CAAuD,CAAC,CAAC;YAEhG,SAAS,CAAC,IAAI,CAAC;gBACb,QAAQ,EAAE,OAAK,CAAC,KAAK,EAAE,UAAU,EAAE,OAAK,CAAC,KAAK;gBAC9C,OAAO,EAAE,KAAK,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,KAAK;aAC7C,CAAC,CAAC;YACH,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE;gBAChC,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,KAAK,OAAK,CAAC,KAAK,EAA1B,CAA0B,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;oBACxE,IAAI,CAAC,YAAY,CAAC,6DAAW,CAAC,0BAA0B,EAAE,IAAI,CAAC,CAAC;oBAChE,SAAS,GAAG,CAAC,CAAC;oBACd,OAAO,KAAK,CAAC;iBACd;aACF;YAED,IAAI,SAAS,KAAK,CAAC,EAAE;gBACnB,SAAS,CAAC,OAAO,CAAC,iBAAO;oBACvB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,2BAA2B,CAAC,SAAS,EAAE,CAAC;aAC9C;SACF;aACI;YACH,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;YACpC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,4CAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,iEAA+B,GAA/B;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,2BAA2B,EAAE,CAAC;IACrC,CAAC;IAED,4DAA0B,GAA1B,UAA2B,KAAU,EAAE,KAAU,EAAE,KAAU,EAAE,EAAO;QAAtE,iBA0CC;QAzCC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,KAAK,CAAC,WAAW,KAAK,QAAQ,EAAE;YAClC,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC;SACrC;aAEI;YACH,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,KAAK,CAAC;SACpC;QAED,IAAI,IAAI,CAAC,2BAA2B,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/C,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,KAAK,SAAS,EAAE;gBAC5C,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC;aACzC;YAED,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,KAAK,SAAS,EAAE;gBAC7C,IAAI,CAAC,aAAa,CAAC,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;aAC3C;SACF;QAED,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,GAAG,EAAE,CAAC;QACrD,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,IAAI,CAAC;YACnD,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ;YACrC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,OAAO;SACpC,CAAC,CAAC;QACH,IAAI,CAAC,qBAAqB,CAAC,2CAA2C,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,aAAG;YAC7G,IAAI,GAAG,CAAC,UAAU,KAAK,KAAI,CAAC,UAAU,CAAC,EAAE,EAAE;gBACzC,IAAI,GAAG,CAAC,gBAAgB,IAAI,IAAI,EAAE;oBAChC,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,gBAAgB,CAAC;oBAC7C,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAClB,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC5B;gBACD,KAAI,CAAC,wBAAwB,EAAE,CAAC;gBAChC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;aAC/C;iBACI;gBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;aACrD;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wDAAsB,GAAtB;QAAA,iBAwBC;QAvBC,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,GAAG,EAAE,CAAC;QACrD,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,IAAI,CAAC;YACnD,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,CAAC,2CAA2C,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,aAAG;YAC7G,IAAI,GAAG,CAAC,UAAU,KAAK,KAAI,CAAC,UAAU,CAAC,EAAE,EAAE;gBACzC,IAAI,GAAG,CAAC,gBAAgB,IAAI,IAAI,EAAE;oBAChC,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,gBAAgB,CAAC;oBAC7C,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAClB,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC5B;gBACD,KAAI,CAAC,wBAAwB,EAAE,CAAC;gBAChC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;aAC/C;iBACI;gBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;aACrD;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wDAAsB,GAAtB;QACE,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;YACjC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;SACpE;QAED,IAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC;QAC1D,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAU,GAAG;YACxD,OAAO,GAAG,CAAC,KAAK,KAAK,SAAS,CAAC;QACjC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC;QAC1E,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC;QAC9E,IAAI,CAAC,oBAAoB,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;QACvD,IAAI,CAAC,oBAAoB,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,CAAC;QACxF,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC;QAC9E,IAAI,CAAC,oBAAoB,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC;QAC1E,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,GAAG,IAAI,CAAC,aAAa,CAAC,sBAAsB,CAAC;QAC7F,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,GAAG,IAAI,CAAC,mBAAmB,IAAI,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC;IAC5G,CAAC;IAED,8DAA4B,GAA5B;QAAA,iBAyDC;QAxDC,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,GAAG,EAAE,CAAC;QACrD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,WAAC;YACzB,KAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,IAAI,CAAC;gBACnD,QAAQ,EAAE,CAAC,CAAC,QAAQ;gBACpB,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,2BAA2B,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/C,IAAI,CAAC,2BAA2B,CAAC,OAAO,CAAC,WAAC;gBACxC,IAAI,CAAC,CAAC,WAAW,KAAK,KAAI,CAAC,WAAW,EAAE;oBACtC,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,WAAC;wBACrB,IAAI,CAAC,CAAC,sBAAsB,KAAK,KAAI,CAAC,aAAa,CAAC,sBAAsB,EAAE;4BAC1E,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC;4BACrB,CAAC,CAAC,uBAAuB,GAAG,KAAI,CAAC,YAAY,CAAC;4BAC9C,IAAI,KAAI,CAAC,YAAY,CAAC,MAAM,EAAC;gCAC3B,CAAC,CAAC,sBAAsB,GAAG,CAAC,CAAC;6BAC9B;iCAAK;gCACJ,CAAC,CAAC,sBAAsB,GAAG,CAAC,CAAC;gCAC7B,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC;6BACpB;yBACF;oBACH,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACJ;aACI;YACH,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,WAAC;gBACpC,IAAI,CAAC,CAAC,IAAI,KAAK,KAAI,CAAC,aAAa,CAAC,WAAW,EAAE;oBAC7C,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,WAAC;wBACf,IAAI,CAAC,CAAC,sBAAsB,KAAK,KAAI,CAAC,aAAa,CAAC,sBAAsB,EAAE;4BAC1E,IAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,aAAG,IAAI,UAAG,CAAC,sBAAsB,KAAK,KAAI,CAAC,aAAa,CAAC,sBAAsB,EAAxE,CAAwE,CAAC,CAAC;4BAEjH,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC;4BACrB,CAAC,CAAC,uBAAuB,GAAG,KAAI,CAAC,YAAY,CAAC;4BAC9C,IAAI,KAAI,CAAC,YAAY,CAAC,MAAM,EAAC;gCAC3B,CAAC,CAAC,sBAAsB,GAAG,CAAC,CAAC;6BAC9B;iCAAK;gCACJ,CAAC,CAAC,sBAAsB,GAAG,CAAC,CAAC;gCAC7B,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC;6BACpB;4BAED,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,KAAK,CAAC;4BAC9B,KAAkB,UAAiB,EAAjB,UAAI,CAAC,YAAY,EAAjB,cAAiB,EAAjB,IAAiB,EAAE;gCAAhC,IAAM,GAAG;gCACZ,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,KAAK,EAAE;oCACnC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC;oCAC3B,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iCACjC;qCACI;oCACH,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iCACjC;6BACF;yBACF;oBACH,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,6DAA2B,GAA3B;QAAA,iBAqBC;QApBC,IAAI,CAAC,qBAAqB,CAAC,2CAA2C,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,aAAG;YAC7G,IAAI,GAAG,CAAC,UAAU,KAAK,KAAI,CAAC,UAAU,CAAC,EAAE,EAAE;gBACzC,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACvB,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAE3B,IAAI,GAAG,CAAC,gBAAgB,IAAI,IAAI,EAAE;oBAChC,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,gBAAgB,CAAC;oBAC7C,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;oBAClB,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC5B;gBACD,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;gBAC9C,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;aACxB;iBACI;gBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;aACrD;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0DAAwB,GAAxB;QAAA,iBAWC;QAVC,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,WAAC;YACpC,IAAI,CAAC,CAAC,IAAI,KAAK,KAAI,CAAC,aAAa,CAAC,WAAW,EAAE;gBAC7C,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,WAAC;oBACf,IAAI,CAAC,CAAC,sBAAsB,KAAK,KAAI,CAAC,aAAa,CAAC,sBAAsB,EAAE;wBAC1E,IAAM,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,aAAG,IAAI,UAAG,CAAC,sBAAsB,KAAK,KAAI,CAAC,aAAa,CAAC,sBAAsB,EAAxE,CAAwE,CAAC,CAAC;wBACjH,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,EAAE,CAAC;qBAC5B;gBACH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sDAAoB,GAApB,UAAqB,IAAS,EAAE,YAAiB;QAC/C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC;QACxC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,uBAAuB,CAAC;QAChE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YACzD,YAAY,EAAE,IAAI;YAClB,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QACH,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,CAAC;IACxC,CAAC;IAED,sDAAoB,GAApB;QAAA,iBAgBC;QAfC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sGAAqB,EAAE;YACxD,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,6DAAW,CAAC,mBAAmB,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,6DAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,6DAAW,CAAC,GAAG,EAAE;SAC1J,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,IAAI,MAAM,KAAK,6DAAW,CAAC,GAAG,EAAE;gBAC9B,KAAI,CAAC,qBAAqB,CAAC,gCAAgC,CAAC,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,EAAE,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EACxI,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAxB,CAAwB,EAAE,eAAK;oBAChG,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAC5B,CAAC,CAAC,CAAC;aACN;YACD,IAAI,MAAM,KAAK,6DAAW,CAAC,EAAE,EAAE;gBAC7B,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAc,GAAd,UAAe,QAAa;QAC1B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACtE,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;IACrD,CAAC;IAED,sDAAoB,GAApB;QAAA,iBAuCC;QAtCC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,EAA5D,CAA4D,CAAC,CAAC,WAAW,CAAC,CAAC;QAC9I,IAAM,QAAQ,GAAG,IAAI,yDAAQ,CAAC,OAAO,CAAC,CAAC;QAEvC,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,WAAC;YACnC,IAAI,CAAC,CAAC,KAAK,KAAK,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,EAAE;gBAChE,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,kBAAkB,CAAC;gBAC/C,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,6DAAW,CAAC,WAAW,CAAC,CAAC;gBACpE,KAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,6DAAW,CAAC,WAAW,CAAC,CAAC;aACnE;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,CAAC,mCAAmC,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EAC3I,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YAC3F,IAAI,GAAG,CAAC,gBAAgB,IAAI,IAAI,EAAE;gBAChC,KAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;gBAC/B,KAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;gBAClC,KAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;gBACtC,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAC7B,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gBACnB,KAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,KAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;gBACvE,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;gBACnE,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,eAAe,EAAE,CAAC;gBAChE,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;gBAC9D,KAAI,CAAC,2BAA2B,GAAG,GAAG,CAAC,gBAAgB,CAAC;gBACxD,KAAI,CAAC,KAAK,GAAG,sBAAsB,CAAC;gBACpC,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC;gBAC3B,KAAI,CAAC,YAAY,EAAE,CAAC;aACrB;iBACI;gBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;gBAC9C,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,sDAAoB,GAApB;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;QAClC,IAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC;QACnC,IAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,CAAC;IACvC,CAAC;IAED,8CAAY,GAAZ;QACE,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI;eAC/C,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,KAAK,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,KAAK,SAAS,CAAC,EAAE;YACrK,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;SACxC;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB;IACH,CAAC;IAED,qDAAmB,GAAnB;QACE,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,IAAI,IAAI;eAC/C,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,KAAK,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,KAAK,SAAS,CAAC,EAAE;YACrK,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE;gBAChH,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,eAAe,EAAE,CAAC;gBAChE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,sBAAsB,EAAE,CAAC;gBACvE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,eAAe,EAAE,CAAC;gBAC9D,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,sBAAsB,EAAE,CAAC;aACtE;SACF;IACH,CAAC;IAED,wDAAsB,GAAtB;QAAA,iBAiCC;QAhCC,IAAI,CAAC,YAAY,EAAE,CAAC;QACrB,8BAA8B;QAE7B,IAAI,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,kBAAkB,CAAC,KAAK,KAAK,CAAC,EAAE;YACnE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACvE;QACD,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,KAAK,6DAAW,CAAC,KAAK,EAAE;YACxD,IAAI,CAAC,wBAAwB,CAAC,EAAE,GAAG,IAAI,CAAC,gBAAgB,CAAC;YACzD,IAAI,CAAC,wBAAwB,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC;YAClF,IAAI,CAAC,wBAAwB,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC;YAC9E,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;gBACjC,IAAI,CAAC,qBAAqB,CAAC,qCAAqC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,SAAS,CAAC,aAAG;oBAC3G,IAAI,GAAG,CAAC,UAAU,KAAK,KAAI,CAAC,UAAU,CAAC,EAAE,EAAE;wBACzC,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;wBACzB,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;wBAC9C,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;qBACrC;yBACI;wBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;qBACrD;gBACH,CAAC,EAAE,eAAK;oBACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAC5B,CAAC,CAAC,CAAC;aACJ;iBACI;gBACH,IAAI,CAAC,YAAY,CAAC,6DAAW,CAAC,0BAA0B,EAAE,IAAI,CAAC,CAAC;aACjE;SACF;aACI;YACH,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;YACtC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,+CAAa,GAAb,UAAc,IAAS;QAAvB,iBAoDC;QAnDC,IAAM,GAAG,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC;QACpD,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,UAAU,GAAG;YACxD,OAAO,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,qBAAqB,CAAC,wCAAwC,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,EAChJ,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YAC/B,IAAI,GAAG,CAAC,+BAA+B,IAAI,IAAI,EAAE;gBAC/C,GAAG,CAAC,+BAA+B,CAAC,GAAG,CAAC,WAAC;oBACvC,IAAI,CAAC,CAAC,SAAS,IAAI,IAAI,IAAI,CAAC,CAAC,OAAO,IAAI,IAAI,EAAE;wBAC5C,IAAM,SAAS,GAAG,CAAC,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,EAAE,KAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,IAAI,CAAC;wBACnI,IAAM,OAAO,GAAG,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,OAAO,EAAE,KAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,IAAI,CAAC;wBAC7H,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;4BAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,OAAO;4BACzE,kBAAkB,EAAE,CAAC,CAAC,UAAU;4BAChC,GAAG,EAAE,CAAC,CAAC,SAAS;4BAChB,GAAG,EAAE,CAAC,CAAC,OAAO;4BACd,WAAW,EAAE,CAAC,CAAC,gBAAgB;yBAChC,CAAC,CAAC;qBACJ;yBACI;wBACH,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;4BAC/B,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,kBAAkB,EAAE,CAAC,CAAC,UAAU,EAAE,GAAG,EAAE,CAAC,CAAC,SAAS;4BAC9E,GAAG,EAAE,CAAC,CAAC,OAAO;4BACd,WAAW,EAAE,CAAC,CAAC,gBAAgB;yBAChC,CAAC,CAAC;qBACJ;gBACH,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;gBAClC,KAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;gBACtC,KAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,WAAC;oBACnC,IAAI,CAAC,CAAC,WAAW,KAAK,IAAI,EAAE;wBAC1B,KAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC,KAAK,CAAC;qBACjC;gBACH,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC;gBACvF,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC7C,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;gBAC5B,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBACvB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;gBACtB,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;aAC7B;iBACI;gBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;aACrD;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAS,GAAT;QACE,IAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;QACvC,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI,EAAE;YACpD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SAC9D;QACD,uEAAuE;QACvE,yEAAyE;QACzE,KAAK;aAEA,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;YACtC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACtC;aAAM;YACL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;YACtB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,uBAAuB,GAAG,EAAE,CAAC;YAClC,IAAI,CAAC,2BAA2B,GAAG,EAAE,CAAC;YACtC,IAAI,CAAC,QAAQ,EAAE,CAAC;SACjB;QACD,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,4CAAU,GAAV;QACE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,+BAA+B,EAAE,CAAC;IACzC,CAAC;IAx8BwB;QAAxB,+DAAS,CAAC,YAAY,CAAC;wEAAiB,yDAAW;mEAAM;IACzB;QAAhC,+DAAS,CAAC,oBAAoB,CAAC;;wEAAqB;IACZ;QAAxC,+DAAS,CAAC,4BAA4B,CAAC;;gFAA6B;IAH1D,uBAAuB;QANnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,uKAA+C;YAE/C,SAAS,EAAE,CAAC,qGAAiB,EAAE,0GAAqB,CAAC;;SACtD,CAAC;+EAmDyB,0DAAW,EAA6B,qGAAiB,EAAiC,0GAAqB;YAChH,wEAAa,EAAiB,2DAAS,EAAmB,6DAAW;OAnDlF,uBAAuB,CA08BnC;IAAD,8BAAC;CAAA,CA18B4C,kFAAe,GA08B3D;AA18BmC;;;;;;;;;;;;ACrBpC,gHAAgH,mBAAmB,4xBAA4xB,aAAa,kyBAAkyB,eAAe,2DAA2D,mBAAmB,uhEAAuhE,iBAAiB,2yBAA2yB,8QAA8Q,8BAA8B,8JAA8J,kQAAkQ,kBAAkB,qGAAqG,6BAA6B,uBAAuB,2BAA2B,8DAA8D,sBAAsB,iGAAiG,8NAA8N,mBAAmB,qFAAqF,kBAAkB,8gBAA8gB,oBAAoB,0sBAA0sB,aAAa,qfAAqf,eAAe,2DAA2D,mBAAmB,qmBAAqmB,oBAAoB,i7EAAi7E,sBAAsB,oVAAoV,oOAAoO,WAAW,sJAAsJ,mDAAmD,kBAAkB,iGAAiG,6BAA6B,mBAAmB,2BAA2B,ieAAie,kBAAkB,yTAAyT,0CAA0C,wBAAwB,qCAAqC,uBAAuB,+LAA+L,2dAA2d,cAAc,yeAAye,aAAa,kTAAkT,qIAAqI,wBAAwB,qCAAqC,uBAAuB,iMAAiM,6hBAA6hB,cAAc,6kBAA6kB,aAAa,0oBAA0oB,cAAc,kfAAkf,aAAa,qoCAAqoC,kBAAkB,UAAU,ivBAAivB,cAAc,okBAAokB,aAAa,yeAAye,sBAAsB,upBAAupB,2EAA2E,mBAAmB,+FAA+F,kBAAkB,+gBAA+gB,qBAAqB,8MAA8M,oBAAoB,oE;;;;;;;;;;;ACA9/qB,kCAAkC,qBAAqB,sBAAsB,EAAE,8BAA8B,sBAAsB,EAAE,6BAA6B,+BAA+B,uBAAuB,gBAAgB,iBAAiB,EAAE,sBAAsB,sBAAsB,mBAAmB,EAAE,uDAAuD,0CAA0C,gCAAgC,kCAAkC,EAAE,+CAA+C,+tC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnb;AACA;AACL;AACnB;AACC;AACX;AAC8B;AACzC;AACW;AAIV;AAQjD;IAA8C,kFAAe;IA2B3D,kCAAoB,qBAA4C,EAAU,iBAAoC,EAAU,GAAgB,EAAS,aAA4B,EACpK,MAAiB,EAAS,QAAqB,EAAU,EAAqB,EAAU,aAA2B;QAD5H,YAEE,iBAAO,SACR;QAHmB,2BAAqB,GAArB,qBAAqB,CAAuB;QAAU,uBAAiB,GAAjB,iBAAiB,CAAmB;QAAU,SAAG,GAAH,GAAG,CAAa;QAAS,mBAAa,GAAb,aAAa,CAAe;QACpK,YAAM,GAAN,MAAM,CAAW;QAAS,cAAQ,GAAR,QAAQ,CAAa;QAAU,QAAE,GAAF,EAAE,CAAmB;QAAU,mBAAa,GAAb,aAAa,CAAc;QAhB5H,kBAAY,GAAG,KAAK,CAAC;QAMrB,2BAAqB,GAAG,EAAE,CAAC;QAG3B,oBAAc,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACxC,WAAK,GAAG,qBAAqB,CAAC;;IAQ9B,CAAC;IAED,2CAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,mCAAmC;IACnC,iDAAc,GAAd;QAAA,iBAgBC;QAfC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,kBAAQ;YAC/D,IAAI,QAAQ,CAAC,SAAS,IAAI,IAAI,EAAE;gBAC9B,IAAI,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE;oBAC7B,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAO;wBAChC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC;4BACtB,KAAK,EAAE,OAAO,CAAC,IAAI;4BACnB,KAAK,EAAE,OAAO,CAAC,EAAE;yBAClB,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;iBACJ;aACF;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,MAAM;IAEN,gDAAa,GAAb,UAAc,IAAS;QAAvB,iBAYC;QAXC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,CAAC;QACtD,IAAI,CAAC,qBAAqB,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,aAAG;YAC5E,IAAI,GAAG,CAAC,0BAA0B,IAAI,IAAI,EAAE;gBAC1C,GAAG,CAAC,0BAA0B,CAAC,GAAG,CAAC,WAAC;oBAClC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,WAAW,EAAE,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;gBACvH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAa,GAAb;QACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACvC,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACnD,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrD,kBAAkB,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YACzC,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAChC,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC9B,iBAAiB,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SACzC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAC7C,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACpD,CAAC,CAAC;IACL,CAAC;IAED,kDAAe,GAAf;QAAA,iBAOC;QANC,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE;YACjC,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAC7C,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EAAnD,CAAmD,CAAC,CAAC,OAAO,CAAC;YAC7G,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;SAClC;IACH,CAAC;IAED,qDAAkB,GAAlB,UAAmB,OAAe;QAAlC,iBAoCC;QAnCC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,KAAK,EAAE,CAAC;QAC9D,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,qBAAqB,CAAC,wCAAwC,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EACzG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YAC3D,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC5C,IAAI,GAAG,CAAC,+BAA+B,IAAI,IAAI,EAAE;gBAC/C,GAAG,CAAC,+BAA+B,CAAC,GAAG,CAAC,WAAC;oBACvC,IAAM,SAAS,GAAG,CAAC,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,SAAS,EAAE,KAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,IAAI,CAAC;oBACnI,IAAM,OAAO,GAAG,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,OAAO,EAAE,KAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,IAAI,CAAC;oBAC7H,IAAM,IAAI,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,EAAD,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC9D,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC;wBACtB,KAAK,EAAE,CAAC,CAAC,EAAE;wBACX,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,EAAD,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;wBAC9C,kBAAkB,EAAE,CAAC,CAAC,UAAU;wBAChC,GAAG,EAAE,CAAC,CAAC,SAAS;wBAChB,GAAG,EAAE,CAAC,CAAC,OAAO;wBACd,WAAW,EAAE,CAAC,CAAC,gBAAgB;qBAChC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,IAAI,KAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,mBAAmB,KAAK,SAAS,IAAI,KAAI,CAAC,mBAAmB,KAAK,IAAI,CAAC,EAAE;oBACpH,KAAI,CAAC,oBAAoB,GAAG;wBAC1B,gBAAgB,EAAE,IAAI;qBACvB,CAAC;oBACF,KAAI,CAAC,mBAAmB,GAAG,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;iBAC9D;gBAED,IAAI,KAAI,CAAC,mBAAmB,KAAK,SAAS,IAAI,KAAI,CAAC,mBAAmB,KAAK,IAAI,EAAE;oBAC/E,IAAM,cAAc,GAAG,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,WAAW,KAAK,KAAI,CAAC,mBAAmB,EAA3C,CAA2C,CAAC,CAAC;oBAClG,KAAI,CAAC,oBAAoB,CAAC,gBAAgB,GAAG,cAAc,KAAK,SAAS,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;oBACxG,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,UAAU,CAAC,KAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;oBAC7G,KAAI,CAAC,iBAAiB,CAAC,KAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;iBACpE;aACF;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,oDAAiB,GAAjB,UAAkB,IAAS;QAA3B,iBAcC;QAbC,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;QACnC,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EAAnD,CAAmD,CAAC,CAAC,OAAO,CAAC;QAC7G,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,KAAK,KAAK,IAAI,EAAjB,CAAiB,CAAC,CAAC,WAAW,CAAC;QAExF,IAAI,CAAC,qBAAqB,CAAC,+BAA+B,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EACvI,OAAO,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG;YAE1B,IAAI,GAAG,CAAC,gBAAgB,IAAI,IAAI,EAAE;gBAChC,KAAI,CAAC,wBAAwB,GAAG,GAAG,CAAC,gBAAgB,CAAC;aACtD;iBAAM;gBACL,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wDAAqB,GAArB;QACE,IAAI,IAAI,CAAC,oBAAoB,KAAK,SAAS,EAAE;YAC3C,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,GAAG,IAAI,CAAC;SACnD;QACD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACrE,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;IAClC,CAAC;IAED,uDAAoB,GAApB;QAAA,iBAaC;QAZC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sGAAqB,EAAE;YACxD,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,6DAAW,CAAC,mBAAmB,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,6DAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,6DAAW,CAAC,GAAG,EAAE;SAC1J,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,IAAI,MAAM,KAAK,6DAAW,CAAC,GAAG,EAAE;gBAC9B,KAAI,CAAC,eAAe,EAAE,CAAC;aACxB;YACD,IAAI,MAAM,KAAK,6DAAW,CAAC,EAAE,EAAE;gBAC7B,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;aACxB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAe,GAAf,UAAgB,YAAmB;QAAnC,iBAWC;QAXe,kDAAmB;QACjC,IAAI,CAAC,qBAAqB,CAAC,gCAAgC,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EACxI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,aAAG;YAC5D,KAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,YAAY,EAAE;gBAChB,KAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;aAC/C;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,oDAAiB,GAAjB;QACE,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC;QACnC,IAAI,CAAC,oBAAoB,GAAG;YAC1B,qBAAqB,EAAE,IAAI,CAAC,qBAAqB,GAAG,EAAE;SACvD,CAAC;QACF,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,CAAC;QAC9F,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAE3B,CAAC;IAED,kDAAe,GAAf,UAAgB,aAAmB;QAAnC,iBAaC;QAZC,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,qBAAqB,CAAC,0BAA0B,EAAE,CAAC,SAAS,CAAC,aAAG;YACnE,IAAI,GAAG,CAAC,eAAe,IAAI,IAAI,EAAE;gBAC/B,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAC;oBACvB,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;gBAC7D,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,KAAK,EAAE,CAAC;gBAC/D,IAAI,aAAa,EAAE;oBACjB,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;iBAChF;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAS,GAAT;QAAA,iBAaC;QAZC,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC;QACnC,IAAI,CAAC,gCAAgC,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,CAAC;QAClF,IAAI,CAAC,gCAAgC,CAAC,oBAAoB,EAAE,WAAW,CAAC,CAAC;QACzE,IAAI,CAAC,gCAAgC,CAAC,oBAAoB,EAAE,SAAS,CAAC,CAAC;QACvE,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAChC,kCAAkC;QAChC,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,KAAK,KAAK,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EAApD,CAAoD,CAAC,CAAC,OAAO,CAAC;QAC/G,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI;IACN,CAAC;IAED,mEAAgC,GAAhC,UAAiC,IAAS,EAAE,OAAY,EAAE,cAAqB;QAArB,sDAAqB;QAC7E,IAAI,cAAc,EAAE;YAClB,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,eAAe,EAAE,CAAC;SAChD;QACD,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;QACrC,IAAI,CAAC,IAAI,CAAC,CAAC,sBAAsB,EAAE,CAAC;IACtC,CAAC;IAED,2DAAwB,GAAxB;QAAA,iBASC;QARC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,qBAAqB,CAAC,gCAAgC,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,aAAG;YACzH,IAAI,GAAG,CAAC,oBAAoB,IAAI,IAAI,EAAE;gBACpC,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC,oBAAoB,CAAC;gBAChD,KAAI,CAAC,kBAAkB,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC;gBAC9C,KAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oDAAiB,GAAjB;QAAA,iBAaC;QAZC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,qBAAqB,CAAC,iCAAiC,EAAE,CAAC,SAAS,CAAC,aAAG;YAC1E,IAAI,GAAG,CAAC,4BAA4B,IAAI,IAAI,EAAE;gBAC5C,GAAG,CAAC,4BAA4B,CAAC,GAAG,CAAC,WAAC;oBACpC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC;wBACvB,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,QAAQ;wBAChD,eAAe,EAAE,CAAC,CAAC,eAAe,EAAE,wBAAwB,EAAE,CAAC,CAAC,wBAAwB;qBACzF,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,aAAa,EAAE,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAa,GAAb;QAAA,iBAeC;QAdC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,KAAK,KAAK,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EAApD,CAAoD,CAAC,CAAC,OAAO,CAAC;QAE/G,IAAI,CAAC,qBAAqB,CAAC,wBAAwB,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,aAAG;YAC/G,IAAI,GAAG,CAAC,eAAe,IAAI,IAAI,EAAE;gBAC/B,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAC;oBACvB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;gBACvD,CAAC,CAAC,CAAC;aACJ;iBACI;gBACH,KAAI,CAAC,YAAY,CAAC,6DAAW,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAC;aAC/D;YACD,KAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAY,GAAZ;QAAA,iBASC;QARC,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,qBAAqB,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,aAAG;YACzE,IAAI,GAAG,CAAC,eAAe,IAAI,IAAI,EAAE;gBAC/B,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,WAAC;oBACvB,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;gBACtD,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qDAAkB,GAAlB,UAAmB,OAAY,EAAE,QAAgB;QAAhB,2CAAgB;QAC/C,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;YACtB,IAAM,4BAA4B,GAAG,EAAE,CAAC;oCAE7B,GAAG;gBACZ,IAAM,KAAK,GAAG,4BAA4B,CAAC,SAAS,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,KAAK,GAAG,CAAC,WAAW,EAA5B,CAA4B,CAAC,CAAC;gBAC1F,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;oBAChB,IAAM,GAAG,GAAG,EAAE,CAAC;oBACf,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBAChE,IAAM,IAAI,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;oBACnD,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACzC;qBAAM;oBACL,IAAM,CAAC,GAAG,4BAA4B,CAAC,SAAS,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,KAAK,GAAG,CAAC,WAAW,EAA5B,CAA4B,CAAC,CAAC;oBACtF,4BAA4B,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACjD;;YAVH,KAAkB,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAO;gBAApB,IAAM,GAAG;wBAAH,GAAG;aAWb;YACD,IAAI,CAAC,aAAa,CAAC,4BAA4B,CAAC,CAAC;SAClD;IACH,CAAC;IAED,gDAAa,GAAb,UAAc,IAAI;QAChB,IAAM,MAAM,GAAG;YACb,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,CAAC;YACZ,WAAW,EAAE,CAAC;YACd,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,CAAC;SACZ,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC;YAC/B,IAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAClC,IAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAClC,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;IAC9B,CAAC;IAED,qDAAkB,GAAlB,UAAmB,IAAS,EAAE,KAAU,EAAE,KAAU,EAAE,UAAe;QACnE,IAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAG,IAAI,UAAG,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,EAAxB,CAAwB,CAAC,CAAC;QAC7E,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,GAAG,EAAE,CAAC;QACrD,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,IAAI,CAAC;YACnD,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,SAAS;YAChD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,sBAAsB,KAAK,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,EAAE;YAChI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,cAAc,GAAG,KAAK,CAAC;YAC1E,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,uBAAuB,GAAG,EAAE,CAAC;SACjF;QAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,UAAU,EAAE;YACd,QAAQ,IAAI,EAAE;gBACZ,KAAK,UAAU,CAAC,QAAQ,KAAK,CAAC;oBAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,MAAM;gBAER,KAAK,UAAU,CAAC,eAAe,KAAK,CAAC;oBACnC,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;wBACnC,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,sBAAsB,KAAK,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,EAAE;4BAClI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,cAAc,GAAG,IAAI,CAAC;yBAC1E;wBACD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;qBAC1B;oBACD,MAAM;gBAER,KAAK,UAAU,CAAC,wBAAwB,KAAK,CAAC;oBAC5C,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,GAAG,EAAE,CAAC;oBACrD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;wBACpC,YAAY,EAAE,IAAI;wBAClB,KAAK,EAAE,OAAO;qBACf,CAAC,CAAC;oBACH,MAAM;gBAER,KAAK,CAAC,UAAU,CAAC,eAAe,KAAK,CAAC,IAAI,UAAU,CAAC,wBAAwB,KAAK,CAAC;oBACjF,UAAU,CAAC,QAAQ,KAAK,CAAC,CAAC;oBAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,MAAM;gBAER;oBACE,MAAM;aACT;SACF;IACH,CAAC;IAED,+CAAY,GAAZ,UAAa,YAAmB,EAAE,aAAqB,EAAE,UAAkB;QAA3E,iBAiCC;QAjCY,kDAAmB;QAAE,qDAAqB;QAAE,+CAAkB;QACzE,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,qBAAqB,CAAC,2CAA2C,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,aAAG;YAC7G,IAAI,GAAG,CAAC,gBAAgB,IAAI,IAAI,EAAE;gBAChC,KAAI,CAAC,oBAAoB,CAAC,gBAAgB,GAAG,GAAG,CAAC,gBAAgB,CAAC;gBAClE,KAAI,CAAC,mBAAmB,GAAG,GAAG,CAAC,WAAW,CAAC;aAC5C;YACD,IAAI,YAAY,EAAE;gBAChB,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;aAC/C;YACD,IAAI,aAAa,EAAE;gBACjB,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACvB,KAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,KAAI,CAAC,cAAc,EAAE,CAAC;gBACxB,oCAAoC;aACnC;YACD,OAAO,GAAG,IAAI,CAAC;YACf,KAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;QAClC,CAAC,EAAE,eAAK;YACN,IAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa,CAAC;YACvD,IAAI,WAAW,KAAK,cAAc,EAAE;gBAClC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,aAAa;oBAChC,kHAAkH,CAAC;aACtH;YACD,IAAI,WAAW,KAAK,cAAc,IAAI,UAAU,EAAE;gBAChD,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACvB,KAAI,CAAC,cAAc,EAAE,CAAC;aACvB;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;aAC3B;YACD,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,wDAAqB,GAArB;QAAA,iBAYC;QAXC,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EAAnD,CAAmD,CAAC,CAAC,OAAO,CAAC;QAC7G,IAAI,CAAC,qBAAqB,CAAC,+BAA+B,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EACvI,OAAO,EAAE,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,gBAAM;YACnE,IAAI,MAAM,CAAC,gBAAgB,IAAI,IAAI,EAAE;gBACnC,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,UAAU,CAAC,KAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;gBAC7G,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBAC5B,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,KAAK,EAAE,CAAC;gBAC9D,KAAI,CAAC,oBAAoB,CAAC,gBAAgB,GAAG,IAAI,CAAC;aACnD;YACD,KAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,yDAAsB,GAAtB,UAAuB,IAAS;QAAhC,iBAWC;QAVC,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,KAAK,KAAK,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EAApD,CAAoD,CAAC,CAAC,OAAO,CAAC;QAE/G,IAAI,CAAC,oBAAoB,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC;QAC1E,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC;QAC9E,IAAI,CAAC,oBAAoB,CAAC,OAAO,GAAG,OAAO,CAAC;QAC5C,IAAI,CAAC,oBAAoB,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,kBAAkB,CAAC;QACxF,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC;QAC9E,IAAI,CAAC,oBAAoB,CAAC,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC;QAC1E,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC;QAC/E,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC;IAClE,CAAC;IAED,6DAA0B,GAA1B;QAAA,iBAwBC;QAvBC,IAAI,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE;YACvC,IAAM,SAAS,GAAG,EAAE,CAAC;YACrB,IAAM,OAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,KAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,QAAQ,EAAxD,CAAwD,CAAC,CAAC;YAClG,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,KAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,OAAO,EAAvD,CAAuD,CAAC,CAAC;YAChG,IAAI,OAAK,IAAI,KAAK,EAAE;gBAClB,SAAS,CAAC,IAAI,CAAC;oBACb,QAAQ,EAAE,OAAK,CAAC,KAAK,EAAE,UAAU,EAAE,OAAK,CAAC,KAAK;oBAC9C,OAAO,EAAE,KAAK,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC,KAAK;iBAC7C,CAAC,CAAC;aACJ;YACD,IAAI,IAAI,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,KAAK,OAAK,CAAC,KAAK,EAA1B,CAA0B,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC1H,OAAO,IAAI,CAAC,YAAY,CAAC,6DAAW,CAAC,0BAA0B,EAAE,IAAI,CAAC,CAAC;aACxE;iBACI;gBACH,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,qBAAqB,EAAE,SAAS,CAAC,CAAC;aAC9E;YAED,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC;gBACvC,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,IAAI;aACd,CAAC,CAAC;YACH,IAAI,CAAC,2BAA2B,CAAC,SAAS,EAAE,CAAC;SAC9C;IACH,CAAC;IAGD,gEAA6B,GAA7B,UAA8B,KAAU;QACtC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,6CAAU,GAAV;QACE,IAAI,CAAC,8BAA8B,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;QACjD,eAAe;QACf,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,KAAK,SAAS,EAAE;YAC3F,wDAAwD;YACxD,2KAA2K;YAC3K,0BAA0B;YAC1B,gCAAgC;YAChC,MAAM;YACN,MAAM;YACN,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,CAAC;YAEtC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YACvB,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;SACtC;QACD,MAAM;IACR,CAAC;IACD,iEAA8B,GAA9B,UAA+B,YAAmB,EAAE,UAAkB;QAAtE,iBAQC;QAR8B,kDAAmB;QAAE,+CAAkB;QACpE,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC3B,OAAO,IAAI,OAAO,CAAC,iBAAO;YACxB,KAAI,CAAC,oBAAoB,CAAC,qBAAqB,GAAG,EAAE,CAAC;YACrD,KAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAI,CAAC,oBAAoB,CAAC,qBAAqB,EAAE,KAAI,CAAC,qBAAqB,CAAC,CAAC;YACxI,KAAI,CAAC,YAAY,CAAC,YAAY,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;YAClD,KAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iDAAc,GAAd;QAAA,iBAgBC;QAfC,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,SAAS,EAAE;YACrF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,WAAC;gBAC9C,IAAI,CAAC,CAAC,sBAAsB,KAAK,KAAI,CAAC,oBAAoB,CAAC,sBAAsB,EAAE;oBACjF,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC;oBACrB,CAAC,CAAC,uBAAuB,GAAG,KAAI,CAAC,qBAAqB,CAAC;oBACvD,IAAI,KAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE;wBACrC,CAAC,CAAC,sBAAsB,GAAG,CAAC,CAAC;qBAC9B;yBAAM;wBACL,CAAC,CAAC,sBAAsB,GAAG,CAAC,CAAC;wBAC7B,CAAC,CAAC,YAAY,GAAG,CAAC,CAAC;qBACpB;iBACF;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;SACzB;IACH,CAAC;IAED,6DAA0B,GAA1B,UAA2B,EAAO,EAAE,iBAA0B,EAAE,KAAU;QAExE,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,CAAC,uBAAuB,KAAK,SAAS,IAAI,KAAK,CAAC,uBAAuB,CAAC,MAAM,EAAE;YAC9G,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC;YACnC,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,GAAG,EAAE,CAAC;YACrD,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,IAAI,CAAC;gBACnD,QAAQ,EAAE,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,QAAQ;gBACnD,OAAO,EAAE,KAAK,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,OAAO;aAClD,CAAC,CAAC;SACJ;QACD,IAAI,iBAAiB,IAAI,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,MAAM,EAAE;YAC/E,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,EAAE,CAAC;YACjE,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC;gBAChI,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;SACrE;aAAM;YACL,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC;gBAClI,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;YACrE,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC;SACjE;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,yDAAsB,GAAtB;QACE,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE;YACnC,OAAO;SACR;QACD,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,EAAE;YAChF,OAAO,IAAI,CAAC,YAAY,CAAC,6DAAW,CAAC,0BAA0B,EAAE,IAAI,CAAC,CAAC;SACxE;QACD,IAAI,CAAC,6BAA6B,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;IACjF,CAAC;IAED,gDAAa,GAAb,UAAc,gBAAqB;QACjC,IAAI,CAAC,mBAAmB,GAAG,gBAAgB,CAAC;QAC5C,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QAC9D,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,uDAAoB,GAApB,UAAqB,IAAS,EAAE,KAAU;QACxC,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;QACtC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,UAAC,EAA4C;oBAA1C,sBAAQ,EAAE,oBAAO,EAAE,0BAAU,EAAE,wBAAS;gBAAO,QAAC,EAAE,QAAQ,YAAE,OAAO,WAAE,UAAU,cAAE,SAAS,aAAE,CAAC;YAA9C,CAA8C,CAAC,CAAC;YAChK,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;gBACpC,YAAY,EAAE,IAAI;gBAClB,KAAK,EAAE,OAAO;aACf,CAAC,CAAC;YACH,IAAI,CAAC,wBAAwB,CAAC,KAAK,EAAE,CAAC;SACvC;IACH,CAAC;IAED,uDAAoB,GAApB;QAAA,iBA0BC;QAzBC,IAAI,CAAC,oBAAoB,GAAG;YAC1B,qBAAqB,EAAE,IAAI,CAAC,qBAAqB,GAAG,EAAE;SACvD,CAAC;QACF,IAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;QACnC,IAAI,CAAC,KAAK,GAAG,sBAAsB,CAAC;QACpC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,YAAE,IAAI,SAAE,CAAC,KAAK,KAAK,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,iBAAiB,EAA5D,CAA4D,CAAC,CAAC;QAE9G,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,qBAAqB,CAAC,mCAAmC,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EAC3I,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,iBAAiB,EAAE,SAAS,CAAC,GAAG,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,aAAG;YAC1F,IAAI,GAAG,CAAC,gBAAgB,IAAI,IAAI,EAAE;gBAChC,KAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,KAAI,CAAC,eAAe,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;gBACnD,KAAI,CAAC,oBAAoB,CAAC,gBAAgB,GAAG,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,iBAAiB,CAAC;gBAC7F,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBACtE,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;gBACpE,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC,gBAAgB,CAAC;gBAC5C,KAAI,CAAC,kBAAkB,CAAC,KAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;aACrD;iBACI;gBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;gBAC9C,OAAO,KAAK,CAAC;aACd;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,wDAAqB,GAArB;QACE,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;IAClC,CAAC;IAED,0DAAuB,GAAvB,UAAwB,QAAa;QAArC,iBAIC;QAHC,UAAU,CAAC;YACT,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gEAA6B,GAA7B,UAA8B,gBAAqB;QAAnD,iBA2BC;QA1BC,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,KAAK,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EAAnD,CAAmD,CAAC,CAAC,OAAO,CAAC;QAC7G,IAAI,CAAC,qBAAqB,CAAC,+BAA+B,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,EACvI,OAAO,EAAE,gBAAgB,CAAC,CAAC,SAAS,CAAC,gBAAM;YACzC,IAAI,MAAM,CAAC,gBAAgB,IAAI,IAAI,EAAE;gBACnC,IAAI,KAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE;oBACjC,KAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;oBACnC,KAAI,CAAC,wBAAwB,CAAC,EAAE,GAAG,KAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC;oBAC9E,KAAI,CAAC,wBAAwB,CAAC,SAAS,GAAG,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC;oBAClF,KAAI,CAAC,wBAAwB,CAAC,OAAO,GAAG,KAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,CAAC;oBAC9E,IAAI,KAAI,CAAC,wBAAwB,CAAC,EAAE,IAAI,IAAI,EAAE;wBAC5C,KAAI,CAAC,qBAAqB,CAAC,qCAAqC,CAAC,KAAI,CAAC,wBAAwB,CAAC,CAAC,SAAS,CAAC,aAAG;4BAC3G,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;4BAC9C,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;wBACtC,CAAC,EAAE,eAAK;4BACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;wBAC5B,CAAC,CAAC,CAAC;qBACJ;iBACF;aACF;iBAAM;gBACL,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,UAAU,CAAC,KAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;gBAC7G,KAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;gBAC5B,KAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC,KAAK,EAAE,CAAC;gBAC9D,KAAI,CAAC,oBAAoB,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAClD,OAAO,KAAI,CAAC,YAAY,CAAC,6DAAW,CAAC,0BAA0B,EAAE,IAAI,CAAC,CAAC;aACxE;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IA9nBwB;QAAxB,+DAAS,CAAC,YAAY,CAAC;wEAAiB,yDAAW;oEAAM;IACjB;QAAxC,+DAAS,CAAC,4BAA4B,CAAC;;iFAA6B;IAF1D,wBAAwB;QANpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,0KAAgD;YAEhD,SAAS,EAAE,CAAC,0GAAqB,EAAE,qGAAiB,CAAC;;SACtD,CAAC;+EA4B2C,0GAAqB,EAA6B,qGAAiB,EAAe,0DAAW,EAAwB,wEAAa;YAC5J,2DAAS,EAAmB,6DAAW,EAAc,+DAAiB,EAAyB,+DAAY;OA5BjH,wBAAwB,CAgoBpC;IAAD,+BAAC;CAAA,CAhoB6C,kFAAe,GAgoB5D;AAhoBoC;;;;;;;;;;;;ACpBrC,siHAAsiH,sCAAsC,meAAme,sCAAsC,wjBAAwjB,aAAa,okBAAokB,eAAe,yDAAyD,mBAAmB,uRAAuR,sBAAsB,gJAAgJ,gDAAgD,qD;;;;;;;;;;;ACAtyL,mFAAmF,uBAAuB,EAAE,+CAA+C,+kB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9F;AAC2C;AAEtD;AAEA;AAC+B;AACQ;AAC9B;AACA;AACX;AAC6C;AAE7C;AACqB;AACd;AACsC;AACxB;AASrE;IAAuC,2EAAe;IA0CpD,2BAAoB,WAAwB,EAAS,aAA4B,EACxE,MAAiB,EAAU,oBAAyC,EACnE,4BAAyD,EACzD,IAAgB,EAAS,QAAqB,EAAU,qBAA4C,EAAU,eAAgC;QAHxJ,YAIE,iBAAO,SAYR;QAhBmB,iBAAW,GAAX,WAAW,CAAa;QAAS,mBAAa,GAAb,aAAa,CAAe;QACxE,YAAM,GAAN,MAAM,CAAW;QAAU,0BAAoB,GAApB,oBAAoB,CAAqB;QACnE,kCAA4B,GAA5B,4BAA4B,CAA6B;QACzD,UAAI,GAAJ,IAAI,CAAY;QAAS,cAAQ,GAAR,QAAQ,CAAa;QAAU,2BAAqB,GAArB,qBAAqB,CAAuB;QAAU,qBAAe,GAAf,eAAe,CAAiB;QA5BxJ,4BAAsB,GAAkB,EAAE,CAAC;QAE3C,sCAAsC;QACtC,mBAAa,GAAQ,EAAE,CAAC;QAExB,wBAAwB;QACxB,mBAAa,GAAe,EAAE,CAAC;QAC/B,oBAAc,GAAe,EAAE,CAAC;QAChC,gBAAU,GAAe,EAAE,CAAC;QAC5B,kBAAY,GAAe,EAAE,CAAC;QAC9B,gCAA0B,GAAG,KAAK,CAAC;QACnC,yBAAmB,GAAG,KAAK,CAAC;QAC5B,mBAAa,GAAG,KAAK,CAAC;QACtB,kBAAY,GAAG,KAAK,CAAC;QACrB,mBAAa,GAAG,KAAK,CAAC;QACtB,gBAAU,GAAG,IAAI,CAAC;QAClB,gBAAU,GAAkB,EAAE,CAAC;QAG/B,0BAAoB,GAAG,mBAAmB,CAAC;QAC3C,aAAO,GAAe,0DAAK,CAAC,MAAM,CAAC;QACnC,qBAAe,GAAG,KAAK,CAAC;QAStB,KAAI,CAAC,iBAAiB,GAAG;YACvB,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,CAAC;YACZ,UAAU,EAAE,6DAAW,CAAC,UAAU,EAAE,QAAQ,EAAE,6DAAW,CAAC,QAAQ;SACnE,CAAC;QACF,IAAM,qBAAqB,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC3G,IAAI,qBAAqB,EAAE;YACzB,KAAI,CAAC,sBAAsB,GAAG,qBAAqB,CAAC,SAAS,CAAC;YAC9D,KAAI,CAAC,sBAAsB,GAAG,IAAI,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC;YACtE,KAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,KAAI,CAAC,sBAAsB,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;SAClF;;IACH,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAkDC;QAjDC,IAAI,CAAC,IAAI,GAAG;YACV,EAAE,KAAK,EAAE,eAAe,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,IAAI,EAAE;YAC7D,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE;YAC/C,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE;YACnD,EAAE,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAE,eAAe,EAAE,IAAI,EAAE,IAAI,EAAE;YAChE,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE;YACtD,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE;YAClD,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE;SACxC,CAAC;QAEF,wCAAwC;QACxC,IAAI,CAAC,eAAe,GAAG,IAAI,wDAAS,CAAC;YACnC,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvB,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACnF,cAAc,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACnC,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC5B,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC9B,gBAAgB,EAAE,IAAI,0DAAW,CAAC,6DAAW,CAAC,EAAE,CAAC;SAClD,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG;YACjB,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,IAAI,CAAC,IAAI;YAClB,KAAK,EAAE,IAAI,CAAC,iBAAiB;YAC7B,SAAS,EAAE,UAAU;YACrB,aAAa,EAAE,IAAI,CAAC,oBAAoB;YACxC,mCAAmC,EAAE,IAAI;YACzC,oBAAoB,EAAE,IAAI;YAC1B,cAAc,EAAE,IAAI,CAAC,UAAU;YAC/B,sBAAsB,EAAE,IAAI,CAAC,sBAAsB;YACnD,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC;QACF,IAAM,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC9E,IAAI,mBAAmB,EAAE;YACvB,IAAI,CAAC,iBAAiB,GAAG,mBAAmB,CAAC;SAC9C;QACD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;YAC9B,UAAU,CAAC;gBACT,KAAI,CAAC,YAAY,CAAC,6DAAW,CAAC,+BAA+B,EAAE,IAAI,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,kCAAkC;YAElC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC9C,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;QACD,IAAI,CAAC,yBAAyB,EAAE,CAAC;IACnC,CAAC;IACC,oEAAoE;IACpE,qDAAyB,GAAzB;QAAA,iBAKC;QAJC,IAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,aAAG;YACvD,KAAI,CAAC,SAAS,GAAG,GAAG,CAAC,iBAAiB,CAAC,SAAS,CAAC;YACjD,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC;IAEH,oCAAQ,GAAR,UAAS,IAAI;QAAb,iBA0DC;QAzDC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,IAAI,CAAC,UAAU,KAAK,qDAAa,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC/D,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,WAAC;gBACnC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,QAAQ,EAAE,KAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,IAAI,CAAC;gBAC5H,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC,CAAC,MAAM,EAAE,KAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC,IAAI,CAAC;YACxH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;YACxC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;SACrD;QAED,IAAM,iBAAiB,GAAG;YACxB;gBACE,IAAI,EAAE,6DAAW,CAAC,cAAc;gBAChC,IAAI,EAAE,6DAAW,CAAC,IAAI;aACvB;YACD;gBACE,IAAI,EAAE,6DAAW,CAAC,gBAAgB;gBAClC,IAAI,EAAE,6DAAW,CAAC,MAAM;aACzB;SACF,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAC;YACjB,CAAC,CAAC,UAAU,GAAG,iBAAiB,CAAC;YACjC,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,cAAc,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC3C,6DAAW,CAAC,GAAG,CAAC,CAAC,CAAC,6DAAW,CAAC,EAAE,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,IAAI,CAAC,iBAAiB,CAAC,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC;SACvE;QAED,IAAI,CAAC,WAAW,GAAG;YACjB,OAAO,EAAE,IAAI,CAAC,IAAI;YAClB,KAAK,EAAE,IAAI,CAAC,iBAAiB;YAC7B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,SAAS,EAAE,UAAU;YACrB,aAAa,EAAE,IAAI,CAAC,oBAAoB;YACxC,mCAAmC,EAAE,IAAI;YACzC,mBAAmB,EAAE,IAAI;YACzB,gBAAgB,EAAE,IAAI;YACtB,oBAAoB,EAAE,IAAI;YAC1B,cAAc,EAAE,IAAI,CAAC,UAAU;YAC/B,sBAAsB,EAAE,IAAI,CAAC,sBAAsB;YACnD,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,WAAW,EAAE,IAAI,CAAC,OAAO;YAEzB,gBAAgB,EAAE;gBAChB,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,IAAI,EAAE,UAAU;iBACjB;gBACD,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,OAAO,EAAE,6DAAW,CAAC,WAAW;iBACjC;aACF;SACF,CAAC;IACJ,CAAC;IAED,qBAAqB;IACrB,4CAAgB,GAAhB,UAAiB,IAAS;QAA1B,iBAWC;QAVC,IAAM,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QAC9E,IAAI,mBAAmB,EAAE;YACvB,IAAI,CAAC,iBAAiB,GAAG,mBAAmB,CAAC;SAC9C;QACD,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,4BAA4B,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAC1F,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,EACvG,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,WAAC,IAAI,YAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAhB,CAAgB,EAAE,eAAK;YAC1I,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,mCAAmC;IACnC,0CAAc,GAAd;QAAA,iBAkBC;QAjBC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,oBAAoB,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,kBAAQ;YAClE,IAAI,QAAQ,CAAC,SAAS,IAAI,IAAI,EAAE;gBAC9B,IAAI,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE;oBAC7B,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAO;wBAChC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC;4BACtB,KAAK,EAAE,OAAO,CAAC,IAAI;4BACnB,KAAK,EAAE,OAAO,CAAC,EAAE;yBAClB,CAAC,CAAC;wBACH,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,aAAa,CAAC;oBACvC,CAAC,CAAC,CAAC;iBACJ;aACF;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,EAAE,CAAC;IACzB,CAAC;IAED,oCAAoC;IACpC,2CAAe,GAAf;QAAA,iBAgBC;QAfC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,oBAAoB,CAAC,2BAA2B,EAAE,CAAC,SAAS,CAAC,kBAAQ;YACxE,IAAI,QAAQ,CAAC,SAAS,IAAI,IAAI,EAAE;gBAC9B,IAAI,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE;oBAC7B,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAO;wBAChC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC;4BACvB,KAAK,EAAE,OAAO,CAAC,IAAI;4BACnB,KAAK,EAAE,OAAO,CAAC,EAAE;yBAClB,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;iBACJ;aACF;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,MAAM;IAEN,wBAAwB;IACxB,yCAAa,GAAb,UAAc,IAAS;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/B;IACH,CAAC;IACD,MAAM;IAEN,wCAAY,GAAZ,UAAa,IAAI;QAAjB,iBAqBC;QApBC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,4FAA4F;QAC5F,qCAAqC;QACrC,8CAA8C;QAC9C,iCAAiC;QACjC,+BAA+B;QAC/B,4BAA4B;QAC5B,YAAY;QACZ,UAAU;QACV,MAAM;QAEN,IAAI,CAAC,qBAAqB,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG;YACtE,IAAI,GAAG,CAAC,0BAA0B,IAAI,IAAI,EAAE;gBAC1C,GAAG,CAAC,0BAA0B,CAAC,GAAG,CAAC,WAAC;oBAClC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC,WAAW,EAAE,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;gBACnH,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,gBAAgB;IAChB,yCAAa,GAAb;QACE,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC;QACxC,IAAI,CAAC,yBAAyB,CAAC,SAAS,EAAE,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IACD,MAAM;IAGN,4CAA4C;IAC5C,oDAAwB,GAAxB,UAAyB,eAAoB;QAA7C,iBAqBC;QApBC,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;QACvC,IAAI,eAAe,CAAC,MAAM,KAAK,6DAAW,CAAC,KAAK,EAAE;YAChD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;gBAC9B,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC,KAAK,CAAC;gBAC9C,IAAI,CAAC,gBAAgB,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;gBAClD,IAAI,CAAC,4BAA4B,CAAC,aAAa,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,aAAG;oBAClF,YAAI,CAAC,cAAc,CAAC,GAAG,CAAC;gBAAxB,CAAwB,EAAE,eAAK;oBAC7B,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAC5B,CAAC,CAAC,CAAC;aACN;iBAAM;gBACL,eAAe,CAAC,KAAK,CAAC,cAAc,GAAG,eAAe,CAAC,KAAK,CAAC,cAAc,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,cAAc,CAAC;gBAC/H,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC,KAAK,CAAC;gBAC1C,IAAI,CAAC,4BAA4B,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAArB,CAAqB,EAAE,eAAK;oBAC/G,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;oBAC7B,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;gBAC5B,CAAC,CAAC,CAAC;aACJ;SACF;IACH,CAAC;IACD,MAAM;IAEN,uDAAuD;IACvD,0CAAc,GAAd,UAAe,QAAQ;QACrB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,QAAQ,CAAC,UAAU,KAAK,qDAAa,IAAI,QAAQ,CAAC,UAAU,KAAK,8DAAsB,IAAI,QAAQ,CAAC,UAAU,KAAK,2DAAmB,EAAE;YAC1I,IAAI,QAAQ,CAAC,UAAU,KAAK,8DAAsB,IAAI,QAAQ,CAAC,UAAU,KAAK,2DAAmB,EAAE;gBACjG,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC5B;iBAAM;gBACL,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gBAC1B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBAC9C,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;gBAC7B,IAAI,CAAC,yBAAyB,CAAC,SAAS,EAAE,CAAC;gBAC3C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC1B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;aAC5B;SACF;QACD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;IACrD,CAAC;IACD,MAAM;IAEN,uCAAuC;IACvC,uCAAW,GAAX,UAAY,QAAQ;QAClB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,QAAQ,CAAC,UAAU,KAAK,qDAAa,IAAI,QAAQ,CAAC,UAAU,KAAK,8DAAsB,IAAI,QAAQ,CAAC,UAAU,KAAK,2DAAmB,EAAE;YAC1I,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC9C,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;YAC7B,IAAI,CAAC,yBAAyB,CAAC,SAAS,EAAE,CAAC;YAC3C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;aACI;YACH,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;QACD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;IACrD,CAAC;IACD,MAAM;IAEN,6CAA6C;IAC7C,sCAAU,GAAV,UAAW,QAAQ;QAAnB,iBA4BC;QA3BC,IAAI,QAAQ,CAAC,SAAS,KAAK,6DAAW,CAAC,IAAI,EAAE;YAC3C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,UAAU,CAAC;YAC1C,IAAI,CAAC,4BAA4B,CAAC,gBAAgB,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;iBACvE,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,EAArC,CAAqC,EAAE,eAAK;gBAC5D,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;SACN;QAED,IAAI,QAAQ,CAAC,SAAS,KAAK,6DAAW,CAAC,MAAM,EAAE;YAC7C,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sGAAqB,EAAE;gBACxD,YAAY,EAAE,IAAI;gBAClB,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,6DAAW,CAAC,mBAAmB,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,6DAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,6DAAW,CAAC,GAAG,EAAE;aAC1J,CAAC,CAAC;YAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;gBACtC,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;gBACrB,IAAI,MAAM,KAAK,6DAAW,CAAC,GAAG,EAAE;oBAC9B,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;oBAC7C,KAAI,CAAC,4BAA4B,CAAC,cAAc,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAxB,CAAwB,EAAE,eAAK;wBAChH,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oBAC5B,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IACD,MAAM;IAEN,kCAAkC;IAClC,0CAAc,GAAd,UAAe,cAAmB;QAChC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC9C,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;IAC3D,CAAC;IACD,MAAM;IAEN,gDAAgD;IAChD,uDAA2B,GAA3B,UAA4B,WAAgB;QAC1C,IAAI,WAAW,CAAC,kBAAkB,IAAI,IAAI,EAAE;YAC1C,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,WAAW,CAAC,kBAAkB,CAAC,CAAC;YAEhE,IAAI,WAAW,CAAC,kBAAkB,CAAC,OAAO,KAAK,IAAI,IAAI,WAAW,CAAC,kBAAkB,CAAC,OAAO,KAAK,SAAS,EAAE;gBAC3G,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;aAC3D;YAED,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;YAC9F,IAAM,cAAc,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,cAAc,KAAK,6DAAW,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC/E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACR,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;YACzE,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,kBAAkB,CAAC;SACtD;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;SACvD;IACH,CAAC;IACD,MAAM;IAEN,qCAAqC;IACrC,mCAAO,GAAP;QACE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QAC7B,IAAI,CAAC,yBAAyB,CAAC,SAAS,EAAE,CAAC;QAC3C,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IACD,MAAM;IAEN,gBAAgB;IAChB,qCAAS,GAAT;QAAA,iBAiBC;QAhBC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sGAAqB,EAAE;YACxD,YAAY,EAAE,IAAI;YAClB,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,6DAAW,CAAC,mBAAmB,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,6DAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,6DAAW,CAAC,GAAG,EAAE;SAC1J,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,IAAI,MAAM,KAAK,6DAAW,CAAC,GAAG,EAAE;gBAC9B,KAAI,CAAC,4BAA4B,CAAC,cAAc,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,EAA7B,CAA6B,EAAE,eAAK;oBACrH,IAAI,KAAK,CAAC,KAAK,CAAC,aAAa,KAAK,SAAS,IAAI,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;wBACnF,KAAI,CAAC,aAAa,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;qBAClD;oBACD,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oBAC1B,KAAI,CAAC,gBAAgB,CAAC,KAAI,CAAC,iBAAiB,CAAC,CAAC;gBAChD,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,MAAM;IAEN,wCAAwC;IACxC,yCAAa,GAAb,UAAc,QAAa;QAA3B,iBAWC;QAVC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;YAChC,QAAQ,CAAC,OAAO,CAAC,iBAAO;gBACtB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;SACJ;aACI;YACH,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;SAClC;IACH,CAAC;IACD,MAAM;IAGN,8BAA8B;IAC9B,+CAAmB,GAAnB,UAAoB,QAAa;QAC/B,IAAI,QAAQ,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;YACrC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;SAC7C;QACD,IAAI,QAAQ,CAAC,UAAU,KAAK,qDAAa,EAAE;YACzC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC;YAChC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;SAC/C;QACD,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;IACrD,CAAC;IACD,0DAA0D;IAC1D,8DAAkC,GAAlC,UAAmC,CAAC;IAEpC,CAAC;IACD,MAAM;IAEN,gDAAgD;IAChD,4CAAgB,GAAhB,UAAiB,IAAS;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC;IAED,kDAAkD;IAClD,8CAAkB,GAAlB,UAAmB,KAAU;QAC3B,IAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,CAAM;YAC7C,OAAO,KAAK,KAAK,CAAC,CAAC,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACnC,CAAC;IACD,yCAAa,GAAb,UAAc,IAAS;QACrB,IAAI,IAAI,KAAK,6DAAW,CAAC,UAAU,EAAE;YACnC,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YACrD,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;SACxD;IAEH,CAAC;IAregC;QAAhC,+DAAS,CAAC,oBAAoB,CAAC;;iEAAoB;IACZ;QAAvC,+DAAS,CAAC,2BAA2B,CAAC;;wEAA2B;IAHvD,iBAAiB;QAP7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,kJAAwC;YAExC,UAAU,EAAE,+DAAc;YAC1B,SAAS,EAAE,CAAC,2GAAqB,EAAE,mFAAe,CAAC;;SACpD,CAAC;+EA2CiC,0DAAW,EAAwB,wEAAa;YAChE,2DAAS,EAAgC,2GAAmB;YACrC,qHAA2B;YACnD,+DAAU,EAAmB,6DAAW,EAAiC,2GAAqB,EAA2B,mFAAe;OA7C7I,iBAAiB,CAwe7B;IAAD,wBAAC;CAAA,CAxesC,mFAAe,GAwerD;AAxe6B;;;;;;;;;;;;AC1B9B,sWAAsW,UAAU,iVAAiV,oBAAoB,0WAA0W,4PAA4P,WAAW,oLAAoL,6UAA6U,mBAAmB,qBAAqB,KAAK,2EAA2E,kBAAkB,8GAA8G,6BAA6B,qBAAqB,2BAA2B,mG;;;;;;;;;;;ACA5oE,kCAAkC,qBAAqB,sBAAsB,EAAE,6BAA6B,+BAA+B,uBAAuB,gBAAgB,iBAAiB,EAAE,+CAA+C,27B;;;;;;;;;;;;;;;;;;;;;;ACAlM;AACP;AACc;AACoD;AAElD;AACU;AAQrE;IAA4D,gGAAe;IAQzE,gDAAoB,MAAsB,EAChC,6BAA4D,EAC7D,aAA4B,EAAS,QAAkB;QAFhE,YAGE,iBAAO,SAOR;QAVmB,YAAM,GAAN,MAAM,CAAgB;QAChC,mCAA6B,GAA7B,6BAA6B,CAA+B;QAC7D,mBAAa,GAAb,aAAa,CAAe;QAAS,cAAQ,GAAR,QAAQ,CAAU;QAPhE,4BAAsB,GAAe,EAAE,CAAC;QACxC,kCAA4B,GAAe,EAAE,CAAC;QAQ5C,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,aAAG;YACjE,WAAW;YACX,mDAAmD;YACnD,2BAA2B;YAC3B,IAAI;QACN,CAAC,CAAC,CAAC;;IACL,CAAC;IAED,yDAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,MAAM,CAAC,MAAM;aACf,SAAS,CAAC,UAAC,MAAc;YACxB,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC/B,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QAClC,wBAAwB;IACzB,CAAC;IACD,yDAAQ,GAAR;QACA,wBAAwB;IACxB,CAAC;IACD,qCAAqC;IACrC,+BAA+B;IAC/B,yDAAyD;IACzD,MAAM;IACN,WAAW;IACX,iDAAiD;IACjD,MAAM;IAEN,IAAI;IAGJ,mEAAkB,GAAlB;QAAA,iBAMC;QALC,IAAI,CAAC,6BAA6B,CAAC,wCAAwC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,aAAG;YACxG,KAAI,CAAC,sBAAsB,GAAG,GAAG,CAAC,mBAAmB,CAAC,oBAAoB,CAAC;YAC3E,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,mBAAmB,CAAC,YAAY,CAAC;YACrD,KAAI,CAAC,kBAAkB,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mEAAkB,GAAlB;QACE,IAAI,IAAI,CAAC,sBAAsB,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1C,IAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC;YACvC,IAAI,CAAC,4BAA4B,GAAG,CAAC;oBACnC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE;iBACvB,CAAC,CAAC;oCACQ,GAAG;gBACZ,IAAM,KAAK,GAAG,OAAK,4BAA4B,CAAC,SAAS,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,KAAK,GAAG,CAAC,WAAW,EAA5B,CAA4B,CAAC,CAAC;gBAC/F,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;oBAChB,IAAM,GAAG,GAAG,EAAE,CAAC;oBACf,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACd,IAAM,IAAI,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;oBACnD,OAAK,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC9C;qBAAM;oBACL,IAAM,CAAC,GAAG,OAAK,4BAA4B,CAAC,SAAS,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,KAAK,GAAG,CAAC,WAAW,EAA5B,CAA4B,CAAC,CAAC;oBAC3F,OAAK,4BAA4B,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACtD;;;YAVH,KAAkB,UAA2B,EAA3B,SAAI,CAAC,sBAAsB,EAA3B,cAA2B,EAA3B,IAA2B;gBAAxC,IAAM,GAAG;wBAAH,GAAG;aAWb;YACD,IAAI,KAAG,GAAG,CAAC,QAAQ,CAAC;YACpB,IAAI,GAAC,GAAG,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC;gBACtD,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,KAAG,EAAE;oBACxB,KAAG,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;oBACrB,GAAC,GAAG,CAAC,CAAC;iBACP;YACH,CAAC,CAAC,CAAC;YAEH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAG,EAAE,CAAC,EAAE,EAAE;gBAC5B,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;oBAC9C,WAAW,EAAE,QAAQ;iBACtB,CAAC,CAAC;aACJ;YACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;SACvD;IAEH,CAAC;IAED,8DAAa,GAAb,UAAc,IAAI;QAChB,IAAM,MAAM,GAAG;YACb,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,CAAC;YACZ,WAAW,EAAE,CAAC;YACd,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,CAAC;SACZ,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC;YAC/B,IAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAClC,IAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YAClC,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACL,CAAC;IAxGU,sCAAsC;QANlD,+DAAS,CAAC;YACT,QAAQ,EAAE,sCAAsC;YAChD,0NAAgE;YAEhE,SAAS,EAAE,CAAC,0HAA6B,CAAC;;SAC3C,CAAC;+EAS4B,8DAAc;YACD,0HAA6B;YAC9C,wEAAa,EAAmB,wDAAQ;OAVrD,sCAAsC,CAyGlD;IAAD,6CAAC;CAAA,CAzG2D,kFAAe,GAyG1E;AAzGkD;;;;;;;;;;;;ACdnD,80DAA80D,sBAAsB,yMAAyM,2BAA2B,8TAA8T,0bAA0b,sDAAsD,i2DAAi2D,wBAAwB,uFAAuF,UAAU,gNAAgN,sBAAsB,8IAA8I,sBAAsB,kUAAkU,sTAAsT,WAAW,6WAA6W,sBAAsB,gJAAgJ,sBAAsB,4YAA4Y,kJAAkJ,mBAAmB,qBAAqB,KAAK,6DAA6D,kBAAkB,0GAA0G,6BAA6B,iBAAiB,2BAA2B,yRAAyR,sBAAsB,gLAAgL,gDAAgD,sC;;;;;;;;;;;ACAluP,kCAAkC,qBAAqB,qBAAqB,sBAAsB,EAAE,8BAA8B,sBAAsB,EAAE,6BAA6B,+BAA+B,uBAAuB,gBAAgB,iBAAiB,EAAE,+CAA+C,u7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1M;AACzB;AACrB;AACkB;AACiB;AACjE;AAEkB;AACkD;AACxC;AAK1B;AACV;AACmB;AASpD;IAAsD,0FAAe;IA+CnE,0CAAoB,GAAgB,EAAS,MAAiB,EAAS,aAA4B,EAAU,EAAqB,EACxH,MAAc,EAAU,6BAA4D,EAAS,QAAqB;QAD5H,YAEE,iBAAO,SAQR;QAVmB,SAAG,GAAH,GAAG,CAAa;QAAS,YAAM,GAAN,MAAM,CAAW;QAAS,mBAAa,GAAb,aAAa,CAAe;QAAU,QAAE,GAAF,EAAE,CAAmB;QACxH,YAAM,GAAN,MAAM,CAAQ;QAAU,mCAA6B,GAA7B,6BAA6B,CAA+B;QAAS,cAAQ,GAAR,QAAQ,CAAa;QAvC5H,+BAAyB,GAAG,KAAK,CAAC;QAGlC,mBAAa,GAAG,KAAK,CAAC;QACtB,kBAAY,GAAG,KAAK,CAAC;QACrB,cAAQ,GAAG,IAAI,CAAC;QAChB,gBAAU,GAAG,KAAK,CAAC;QACnB,oBAAc,GAAe,EAAE,CAAC;QAChC,4BAAsB,GAAe,EAAE,CAAC;QACxC,kCAA4B,GAAe,EAAE,CAAC;QAC9C,kCAA4B,GAAe,EAAE,CAAC;QAC9C,mBAAa,GAAQ,EAAE,CAAC;QAExB,yBAAmB,GAAG,EAAE,CAAC;QACzB,wBAAkB,GAAI,KAAK,CAAC;QAW5B,4BAA4B;QAE5B,gCAAgC;QAChC,eAAS,GAAe,EAAE,CAAC;QAK3B,4BAAsB,GAAkB,EAAE,CAAC;QAE3C,sBAAgB,GAAG,kCAAkC,CAAC;QACtD,yBAAmB,GAAQ,EAAE,CAAC;QAK5B,KAAI,CAAC,4BAA4B,GAAG;YAClC,YAAY,EAAE,EAAE;YAChB,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,6DAAW,CAAC,UAAU;YACjC,UAAU,EAAE,6DAAW,CAAC,UAAU;YAClC,QAAQ,EAAE,6DAAW,CAAC,QAAQ;SAC/B,CAAC;;IACJ,CAAC;IAED,mDAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,mBAAO,CAAC,oEAAmB,CAAC,CAAC;QAE/C,IAAM,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC1E,IAAI,mBAAmB,EAAE;YACvB,IAAI,CAAC,4BAA4B,GAAG,mBAAmB,CAAC;SACzD;QAED,IAAI,CAAC,IAAI,GAAG;YACV,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,eAAe,EAAE,IAAI,EAAE,IAAI,EAAE;YACtD,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE;SACrD,CAAC;QAEF,gCAAgC;QAChC,IAAI,CAAC,WAAW,GAAG;YACjB,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,IAAI,CAAC,IAAI;YAClB,SAAS,EAAE,2BAA2B;YACtC,aAAa,EAAE,IAAI,CAAC,gBAAgB;SACrC,CAAC;QAEF,IAAI,CAAC,yBAAyB,GAAG;YAC/B,YAAY,EAAE,EAAE;YAChB,eAAe,EAAE,EAAE;SACpB,CAAC;QAEF,IAAI,CAAC,+BAA+B,GAAG;YACrC,YAAY,EAAE,EAAE;YAChB,eAAe,EAAE,EAAE;SACpB,CAAC;QACF,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAClC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;IAG3E,CAAC;IAED,oDAAS,GAAT;QAAA,iBAqBC;QApBC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,4EAAoB,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YAC/F,KAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;YAChC,GAAG,CAAC,OAAO,CAAC,gBAAM;gBAChB,IAAI,MAAM,CAAC,UAAU,KAAK,IAAI,IAAI,MAAM,CAAC,UAAU,KAAK,SAAS,EAAE;oBACjE,IAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBAC7C,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;oBACrC,MAAM,CAAC,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;iBAC/F;gBACD,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;YAEH,IAAI,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,KAAK,6DAAW,CAAC,KAAK;mBACnE,KAAI,CAAC,kBAAkB,CAAC,MAAM,KAAK,6DAAW,CAAC,KAAK,EAAE;gBAC3D,KAAI,CAAC,kBAAkB,EAAE,CAAC;aAC3B;iBACI;gBACH,KAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;aAC/B;QAEH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,qEAA0B,GAA1B;QACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACvC,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAClF,SAAS,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACtD,CAAC,CAAC;IACL,CAAC;IAED,sDAAW,GAAX;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YAChC,eAAe,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;SACvD,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,mDAAQ,GAAR;QAAA,iBAiBC;QAhBC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,6BAA6B,CAAC,iCAAiC,EAAE,CAAC,SAAS,CAAC,kBAAQ;YACvF,IAAI,QAAQ,CAAC,eAAe,IAAI,IAAI,EAAE;gBACpC,IAAI,QAAQ,CAAC,eAAe,CAAC,MAAM,EAAE;oBACnC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,iBAAO;wBACtC,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC;4BACvB,KAAK,EAAE,OAAO,CAAC,IAAI;4BACnB,KAAK,EAAE,OAAO,CAAC,EAAE;yBAClB,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;oBACH,KAAI,CAAC,gBAAgB,GAAG,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,IAAI,EAAE,KAAI,CAAC,cAAc,EAAE,iBAAiB,EAAE,eAAe,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;iBACzJ;aACF;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2EAAgC,GAAhC,UAAiC,IAAS;QAA1C,iBAQC;QAPC,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC;QACzC,IAAI,CAAC,6BAA6B,CAAC,qCAAqC,CAAC,IAAI,CAAC,4BAA4B,CAAC,YAAY,EACrH,IAAI,CAAC,4BAA4B,CAAC,MAAM,EAAE,IAAI,CAAC,4BAA4B,CAAC,SAAS,EACrF,IAAI,CAAC,4BAA4B,CAAC,UAAU,EAAE,IAAI,CAAC,4BAA4B,CAAC,QAAQ,CAAC;aACtF,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,EAAlC,CAAkC,EAAE,eAAK;YAC3D,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mEAAwB,GAAxB,UAAyB,IAAS;QAChC,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE;YAClC,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;YACpB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;SAClB;aACI;YACH,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC;YAC/C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC;YAC3D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC;YAExD,IAAM,eAAa,GAAG;gBACpB;oBACE,IAAI,EAAE,6DAAW,CAAC,IAAI;oBACtB,IAAI,EAAE,6DAAW,CAAC,YAAY;iBAC/B;gBACD;oBACE,IAAI,EAAE,6DAAW,CAAC,cAAc;oBAChC,IAAI,EAAE,6DAAW,CAAC,SAAS;oBAC3B,aAAa,EAAE,6DAAW,CAAC,IAAI;iBAChC;gBACD;oBACE,IAAI,EAAE,6DAAW,CAAC,gBAAgB;oBAClC,IAAI,EAAE,6DAAW,CAAC,WAAW;oBAC7B,aAAa,EAAE,6DAAW,CAAC,MAAM;iBAClC;aACF,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAC;gBACjB,CAAC,CAAC,UAAU,GAAG,eAAa,CAAC;YAC/B,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,IAAI,CAAC,wBAAwB,EAAE;YACjC,IAAI,CAAC,4BAA4B,CAAC,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC;SACzF;QACD,IAAI,CAAC,WAAW,GAAG;YACjB,OAAO,EAAE,IAAI,CAAC,IAAI;YAClB,KAAK,EAAE,IAAI,CAAC,4BAA4B;YACxC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,SAAS,EAAE,2BAA2B;YACtC,aAAa,EAAE,IAAI,CAAC,gBAAgB;YACpC,mCAAmC,EAAE,IAAI;YACzC,oBAAoB,EAAE,IAAI;YAC1B,cAAc,EAAE,IAAI,CAAC,UAAU;YAC/B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,sBAAsB,EAAE,IAAI,CAAC,sBAAsB;YACnD,WAAW,EAAE,IAAI,CAAC,OAAO;YACzB,gBAAgB,EAAE;gBAChB,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,OAAO,EAAE,6DAAW,CAAC,GAAG;iBACzB;gBACD,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,IAAI,EAAE,2BAA2B;iBAClC;aACF;SACF,CAAC;IACJ,CAAC;IAED,yDAAc,GAAd;QACE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,+BAA+B,GAAG,EAAE,CAAC;QAC1C,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,iDAAM,GAAN;QACE,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE,CAAC;QACxC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,+BAA+B,GAAG,EAAE,CAAC;QAC1C,IAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QACzE,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,0BAA0B;QAC1B,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE;YACxF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;IAEH,CAAC;IAED,wDAAa,GAAb;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC7D,IAAI,IAAI,CAAC,sBAAsB,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,4BAA4B,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9F,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;aACI;YACH,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;SAC5B;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAGD,sBAAI,yEAA2B;QAD/B,wCAAwC;aACxC;YACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,OAAkB,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAC5D,CAAC;;;OAAA;IAED,mDAAmD;IACnD,oDAAS,GAAT,UAAU,OAAc;QAAd,wCAAc;QAChB,MAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,iBAAO;YACpD,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,OAAO,CAAC,sBAAsB,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,IAAI,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE;YACpF,mCAAmC;YACnC,IAAM,OAAO,GAAc,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;YAExE,oBAAoB;YACpB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;YAElC,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;SACzC;QACF,SAAS;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACzB,IAAI;IACN,CAAC;IAED,oDAAS,GAAT,UAAU,KAAa;QAAvB,iBAyBC;QAxBC,mCAAmC;QACnC,IAAM,OAAO,GAAc,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QACxE,wBAAwB;QACxB,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAExB,IAAI,aAAa,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,WAAC;YAC/C,aAAa,CAAC,IAAI,CAAC,KAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,UAAC,IAAI,IAAK,WAAI,CAAC,SAAS,KAAK,CAAC,CAAC,KAAK,EAA1B,CAA0B,CAAC,CAAC,CAAC;YAC7F,KAAI,CAAC,sBAAsB,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;YAC/C,aAAa,GAAG,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAE1B,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,KAAK,6DAAW,CAAC,KAAK;eACnE,IAAI,CAAC,kBAAkB,CAAC,MAAM,KAAK,6DAAW,CAAC,KAAK,EAAE;YAC3D,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;aACI;YACH,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;QACD,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAC1C,CAAC;IAED,6DAAkB,GAAlB;QAAA,iBAgCC;QA/BC,IAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC;QACjE,IAAM,SAAS,GAAG,oCAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACpG,IAAM,OAAO,GAAG,oCAAM,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAEhG,2BAA2B;QAC3B,IAAM,QAAQ,GAAG,gDAAe,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAE1D,oBAAoB;QACpB,iCAAiC;QACjC,IAAM,KAAK,GAAG,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;QAEtD,sBAAsB;QACtB,iCAAiC;QACjC,IAAM,OAAO,GAAG,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC;QAE/D,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC;QAClI,IAAM,cAAc,GAAG,2CAAU,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC9I,IAAM,YAAY,GAAG,2CAAU,CAAC,cAAc,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACjG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,GAAG,YAAY,CAAC;QAC9E,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAC,SAAS,EAAE,UAAU;YAClF,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,YAAY,EAAE,CAAC;gBACtE,IAAI,UAAU,KAAK,CAAC,EAAE;oBACpB,IAAI,YAAY,CAAC,sBAAsB,KAAK,SAAS,EAAE;wBACrD,SAAS,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;qBAC5F;oBACD,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;oBACjE,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;oBAC1G,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,GAAG,GAAG,GAAG,CAAC,YAAY,CAAC,OAAO,KAAK,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;iBAC/I;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yDAAc,GAAd,UAAe,KAAU;QAAzB,iBA2BC;QA1BC,IAAI,KAAK,CAAC,SAAS,KAAK,6DAAW,CAAC,MAAM,EAAE;YAC1C,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sGAAqB,EAAE;gBACxD,YAAY,EAAE,IAAI;gBAClB,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,6DAAW,CAAC,mBAAmB,EAAE,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,6DAAW,CAAC,EAAE,EAAE,QAAQ,EAAE,6DAAW,CAAC,GAAG,EAAE;aAC1J,CAAC,CAAC;YACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;gBACtC,IAAI,MAAM,KAAK,6DAAW,CAAC,GAAG,EAAE;oBAC9B,KAAI,CAAC,6BAA6B,CAAC,0CAA0C,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,cAAc,CAAC,GAAG,CAAC,EAAxB,CAAwB,EAAE,eAAK;wBACjJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oBAC5B,CAAC,CAAC,CAAC;iBACJ;gBACD,IAAI,MAAM,KAAK,6DAAW,CAAC,EAAE,EAAE;oBAC7B,KAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;SACJ;aACI,IAAI,KAAK,CAAC,SAAS,KAAK,6DAAW,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YAC3D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAClB,CAAC,8DAAY,CAAC,gCAAgC,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;SAC1E;aACI,IAAI,KAAK,CAAC,SAAS,KAAK,6DAAW,CAAC,IAAI,EAAE;YAC7C,IAAI,CAAC,+BAA+B,CAAC,EAAE,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC;YAC9D,IAAI,CAAC,6BAA6B,CAAC,wCAAwC,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG,IAAI,YAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAjB,CAAiB,EAAE,eAAK;gBACxI,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,kDAAO,GAAP,UAAQ,IAAS;QACf,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE;YAC1C,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,OAAO,CAAC,WAAC;gBACrD,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACtC,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC;YACrF,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC;YAC9E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;YACjG,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;aACI;YACH,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;SACtD;IACH,CAAC;IAED,qCAAqC;IACrC,yDAAc,GAAd,UAAe,QAAa;QAC1B,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QACzE,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;IACrD,CAAC;IAED,6DAAkB,GAAlB;QACE,IAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,CAAC;QACjE,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9D,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,WAAC;gBACvD,CAAC,CAAC,YAAY,GAAG,KAAK,CAAC;gBACvB,CAAC,CAAC,eAAe,GAAG,IAAI,CAAC;YAC3B,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;YAC3E,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,GAAG,IAAI,CAAC;SAC/E;aACI,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACrE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;YAC3E,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,GAAG,KAAK,CAAC;SAChF;IACH,CAAC;IAED,qEAAqE;IACrE,uDAAY,GAAZ;QACE,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,IAAI,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC5E,UAAU,EAAE,IAAI,0DAAW,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACxD,SAAS,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAChC,OAAO,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;YAC9B,YAAY,EAAE,OAAO,CAAC,IAAI,CAAC;YAC3B,eAAe,EAAE,OAAO,CAAC,KAAK,CAAC;YAC/B,SAAS,EAAE,IAAI,0DAAW,EAAE;YAC5B,WAAW,EAAE,IAAI,0DAAW,EAAE;YAC9B,sBAAsB,EAAE,IAAI,0DAAW,EAAE;SAC1C,CAAC,CAAC;IACL,CAAC;IAED,0DAAe,GAAf;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;IAEvB,CAAC;IACD,wDAAa,GAAb;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,KAAK,6DAAW,CAAC,KAAK,EAAE;YACxD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;aACI;YACH,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;SACvC;QACD,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IAC1B,CAAC;IAED,6DAAkB,GAAlB;QACE,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1D,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;SACxB;QACD,IAAI,IAAI,CAAC,qBAAqB,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YAC9D,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAC/B,IAAI,CAAC,wBAAwB,EAAE,CAAC;SACjC;QACD,IAAM,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,KAAK,EAAE,EAAR,CAAQ,CAAC,CAAC;QACrE,IAAI,aAAa,IAAI,aAAa,CAAC,MAAM,EAAE;YACzC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;IAEH,CAAC;IAED,yDAAc,GAAd,UAAe,WAAW;QACxB,IAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC;QAC9D,QAAQ,IAAI,EAAE;YACZ,KAAK,aAAa,CAAC,IAAI,KAAK,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE;gBAChE,IAAI,CAAC,QAAQ,GAAG,4CAA4C,CAAC;gBAC7D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACtD,MAAM;YACR,KAAK,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,IAAI,IAAI,aAAa,CAAC,IAAI,KAAK,IAAI;mBACpF,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,KAAK,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,EADjC,CACiC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;gBACzF,IAAI,CAAC,QAAQ,GAAG,6DAAW,CAAC,4BAA4B,CAAC;gBACzD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACtD,MAAM;YACR,KAAK,CAAC,aAAa,CAAC,SAAS,KAAK,IAAI,IAAI,aAAa,CAAC,OAAO,KAAK,IAAI,CAAC;mBAChE,CAAC,aAAa,CAAC,SAAS,KAAK,IAAI,IAAI,aAAa,CAAC,OAAO,KAAK,IAAI,CAAC;gBAC3E,IAAI,CAAC,QAAQ,GAAG,gCAAgC,GAAG,aAAa,CAAC,IAAI,CAAC;gBACtE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;gBAClD,MAAM;YACZ,KAAK,aAAa,CAAC,SAAS,KAAK,IAAI,IAAI,aAAa,CAAC,OAAO,KAAK,IAAI;gBACrE,IAAM,QAAQ,GAAG,IAAI,yDAAQ,CAAC,OAAO,CAAC,CAAC;gBACvC,IAAM,eAAe,GAAG,IAAI,IAAI,EAAE,CAAC;gBACnC,IAAM,cAAc,GAAG,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC1D,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,cAAc,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE;oBAC3D,eAAe,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;oBAC5D,eAAe,CAAC,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBAC7D;gBAED,IAAM,aAAa,GAAG,IAAI,IAAI,EAAE,CAAC;gBACjC,IAAM,YAAY,GAAG,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACtD,IAAI,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE;oBACvD,aAAa,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;oBACxD,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;iBACzD;gBAED,IAAI,QAAQ,CAAC,SAAS,CAAC,eAAe,EAAE,OAAO,CAAC,KAAK,QAAQ,CAAC,SAAS,CAAC,aAAa,EAAE,OAAO,CAAC,EAAE;oBAC/F,IAAI,CAAC,QAAQ,GAAG,6DAAW,CAAC,yBAAyB,CAAC;oBACtD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;iBACvD;qBACI,IAAI,aAAa,GAAG,eAAe,EAAE;oBACxC,IAAI,CAAC,QAAQ,GAAG,6DAAW,CAAC,sCAAsC,CAAC;oBACnE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;oBACvB,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;iBACvD;qBACI;oBACH,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;iBACzB;gBAED,MAAM;YAER;gBACE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;gBACxB,MAAM;SACT;IACH,CAAC;IAED,kEAAuB,GAAvB;QACE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1D,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC9D,IAAI,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;uBAC3E,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;;wBAEzF,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,SAAS,IAAI,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,SAAS;+BAC5E,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAC1F;oBACE,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,GAAG,6DAAW,CAAC,iCAAiC,CAAC;oBAC5E,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,GAAG,6DAAW,CAAC,iCAAiC,CAAC;oBAC5E,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;iBACxB;aACF;SACF;IACH,CAAC;IAED,mEAAwB,GAAxB;QAAA,iBA0BC;QAzBG,IAAI,IAAI,CAAC,+BAA+B,KAAK,SAAS,IAAK,IAAI,CAAC,kBAAkB,EAAE;YAChF,OAAO;SACV;QACD,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAE,iBAAO;YACpD,KAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,UAAC,oBAAoB,EAAG,KAAK;gBAC5D,IAAM,eAAe,GAAG,KAAI,CAAC,+BAA+B,CAAC,MAAM,CAC/D,WAAC,IAAI,cAAO,CAAC,KAAK,KAAK,CAAC,CAAC,SAAS,EAA7B,CAA6B,CAAC,IAAI,EAAE,CAAC;gBAC9C,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC5B,eAAe,CAAC,OAAO,CAAC,wBAAc;wBAClC,IAAK,cAAc,CAAC,sBAAsB,KAAK,oBAAoB,CAAC,sBAAsB;+BACnF,cAAc,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,oBAAoB,CAAC,IAAI,CAAC,WAAW,EAAE;+BACnF,CAAC,CAAC,cAAc,CAAC,SAAS,GAAG,oBAAoB,CAAC,OAAO;mCACzD,oBAAoB,CAAC,SAAS,GAAG,cAAc,CAAC,OAAO,CAAC;;oCAE3D,CAAC,cAAc,CAAC,SAAS,IAAI,oBAAoB,CAAC,SAAS;2CACpD,oBAAoB,CAAC,OAAO,IAAI,cAAc,CAAC,OAAO,CAAC,CAAC,EACjE;4BACE,KAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,GAAG,6DAAW,CAAC,iCAAiC,CAAC;4BAChF,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;yBAC1B;oBACL,CAAC,CAAC,CAAC;iBACN;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,gFAAqC,GAArC;QAAA,iBAkDC;QAjDC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,MAAM,KAAK,6DAAW,CAAC,KAAK;eACnE,IAAI,CAAC,kBAAkB,CAAC,MAAM,KAAK,6DAAW,CAAC,KAAK,EAAE;YAC3D,IAAI,IAAI,CAAC,+BAA+B,KAAK,SAAS,EAAE;gBACtD,IAAI,CAAC,+BAA+B,GAAG,EAAE,CAAC;aAC3C;YAED,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAO;gBACnD,IAAI,KAAI,CAAC,kBAAkB,EAAE;oBAC3B,KAAI,CAAC,+BAA+B,GAAG,KAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,SAAS,KAAK,OAAO,CAAC,KAAK,EAA7B,CAA6B,CAAC,CAAC;iBACxH;gBACH,KAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,8BAAoB;oBACrD,IAAM,mBAAmB,GAAG,KAAI,CAAC,+BAA+B,CAAC,SAAS,CAAC,aAAG;wBAC1E,UAAG,CAAC,SAAS,KAAK,OAAO,CAAC,KAAK,IAAI,GAAG,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,oBAAoB,CAAC,IAAI,CAAC,WAAW,EAAE;oBAA3G,CAA2G,CAAC,CAAC;oBACjH,IAAI,mBAAmB,KAAK,CAAC,CAAC,EAAE;wBAC9B,IAAM,kBAAkB,GAAG,KAAI,CAAC,+BAA+B,CAAC,mBAAmB,CAAC,CAAC;wBACrF,IAAM,iBAAiB,GAAG;4BACxB,SAAS,EAAE,OAAO,CAAC,KAAK;4BACxB,WAAW,EAAE,OAAO,CAAC,KAAK;4BAC1B,UAAU,EAAE,oBAAoB,CAAC,IAAI;4BACrC,SAAS,EAAE,oBAAoB,CAAC,SAAS;4BACzC,OAAO,EAAE,oBAAoB,CAAC,OAAO;4BACrC,sBAAsB,EAClB,CAAC,kBAAkB,CAAC,sBAAsB,KAAK,IAAI,IAAI,kBAAkB,CAAC,sBAAsB,KAAK,SAAS,CAAC;gCAC3G,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,sBAAsB;yBACxD,CAAC;wBACA,KAAI,CAAC,+BAA+B,CAAC,mBAAmB,CAAC,GAAG,iBAAiB,CAAC;qBACjF;yBACI;wBACD,KAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC;4BACxC,SAAS,EAAE,OAAO,CAAC,KAAK;4BACxB,WAAW,EAAE,OAAO,CAAC,KAAK;4BAC1B,UAAU,EAAE,oBAAoB,CAAC,IAAI;4BACrC,SAAS,EAAE,oBAAoB,CAAC,SAAS;4BACzC,OAAO,EAAE,oBAAoB,CAAC,OAAO;4BACrC,sBAAsB,EAClB,CAAC,oBAAoB,CAAC,sBAAsB,KAAK,IAAI,IAAI,oBAAoB,CAAC,sBAAsB,KAAK,SAAS,CAAC;gCAC/G,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,sBAAsB;yBAC1D,CAAC,CAAC;qBACN;gBAEH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACD,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,EAAE,CAAC;YACtD,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;YAChC,IAAI,CAAC,YAAY,EAAE,CAAC;SACvB;IACH,CAAC;IAID,uDAAY,GAAZ;QACE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,aAAa,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;QACjF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,sBAAsB,EAAE,CAAC;QACvE,IAAI,CAAC,gBAAgB,GAAG,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC,cAAc,EAAE,iBAAiB,EAAE,eAAe,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC;IAC1J,CAAC;IAID,6DAAkB,GAAlB;QACE,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,+BAA+B,CAAC,CAAC;QAC9E,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;YACvC,IAAI,CAAC,4BAA4B,GAAG,CAAC;oBACnC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE;iBACvB,CAAC,CAAC;oCACQ,GAAG;gBACZ,IAAM,KAAK,GAAG,OAAK,4BAA4B,CAAC,SAAS,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,KAAK,GAAG,CAAC,WAAW,EAA5B,CAA4B,CAAC,CAAC;gBAC/F,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;oBAChB,IAAM,GAAG,GAAG,EAAE,CAAC;oBACf,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACd,IAAM,IAAI,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC;oBACnD,OAAK,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC9C;qBAAM;oBACL,IAAM,CAAC,GAAG,OAAK,4BAA4B,CAAC,SAAS,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,KAAK,GAAG,CAAC,WAAW,EAA5B,CAA4B,CAAC,CAAC;oBAC3F,OAAK,4BAA4B,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACtD;;;YAVH,KAAkB,UAAwB,EAAxB,SAAI,CAAC,mBAAmB,EAAxB,cAAwB,EAAxB,IAAwB;gBAArC,IAAM,GAAG;wBAAH,GAAG;aAWb;YAED,IAAI,KAAG,GAAG,CAAC,QAAQ,CAAC;YACpB,IAAI,GAAC,GAAG,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,UAAU,SAAS,EAAE,CAAC;gBAC9D,IAAI,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,KAAG,EAAE;oBAChC,KAAG,GAAG,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC;oBAC7B,GAAC,GAAG,CAAC,CAAC;iBACP;YACH,CAAC,CAAC,CAAC;YAEH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAG,EAAE,CAAC,EAAE,EAAE;gBAC5B,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;oBAC9C,WAAW,EAAE,QAAQ;oBACrB,SAAS,EAAE,OAAO;oBAClB,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC;aACJ;YAED,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;YACnD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;SACvD;aACI;YACH,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,+BAA+B,GAAG,EAAE,CAAC;YAC1C,IAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC;YACvC,IAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC;YACvC,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;SAC3B;IACH,CAAC;IAED,qDAAU,GAAV,UAAW,IAAS;QAClB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,SAAS,EAAE;YAC/B,IAAM,KAAK,GAAG,EAAE,CAAC;YACjB,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC;YACtC,IAAI,GAAG,KAAK,CAAC;SACd;QACD,IAAI,CAAC,OAAO,CAAC,WAAC,IAAI,QAAC,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAO;YACvC,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,UAAC,SAAS,EAAE,OAAO;gBACrC,IAAM,MAAM,GAAG,eAAe,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;gBACpD,IAAM,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAEhD,4BAA4B;gBAC5B,OAAO,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;YAEH,SAAS,eAAe,CAAC,IAAI;gBAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,EAAF,CAAE,CAAC,CAAC;YACpD,CAAC;QACH,CAAC,CAAC,EAZgB,CAYhB,CAAC,CAAC;IACN,CAAC;IAED,wDAAa,GAAb,UAAc,IAAI;QAChB,IAAM,MAAM,GAAG;YACb,QAAQ,EAAE,CAAC;YACX,SAAS,EAAE,CAAC;YACZ,WAAW,EAAE,CAAC;YACd,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,CAAC;SACZ,CAAC;QAEF,IAAI,CAAC,IAAI,CAAC,SAAS,SAAS,CAAC,QAAQ,EAAE,QAAQ;YAC7C,IAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;YACpF,IAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAE,QAAQ,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC;YACrF,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,WAAC;YAClD,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;YACnB,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;IAC7B,CAAC;IAED,sDAAW,GAAX,UAAY,IAAI;QAAhB,iBAqDC;QApDC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,IAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,IAAM,aAAa,GAAG,EAAE,CAAC;QACzB,IAAM,UAAU,GAAG,EAAE,CAAC;QACtB,aAAa,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;QAEzF,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAC;YAClB,QAAQ,CAAC,IAAI,CAAC;gBACZ,SAAS,EAAE,CAAC,CAAC,SAAS;gBACtB,WAAW,EAAE,CAAC,CAAC,WAAW;gBAC1B,sBAAsB,EAAE,CAAC,CAAC,sBAAsB;gBAChD,IAAI,EAAE,CAAC,CAAC,UAAU;gBAClB,SAAS,EAAE,CAAC,CAAC,SAAS;gBACtB,OAAO,EAAE,CAAC,CAAC,OAAO;gBAClB,YAAY,EAAE,IAAI;gBAClB,eAAe,EAAE,IAAI;gBACrB,UAAU,EAAE,CAAC,CAAC,SAAS,GAAG,GAAG,GAAG,CAAC,CAAC,OAAO;aAC1C,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,IAAM,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC1B,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,QAAQ,CAAC,OAAO,CAAC,WAAC;gBAChB,CAAC,CAAC,YAAY,GAAG,KAAK,CAAC;gBACvB,CAAC,CAAC,eAAe,GAAG,IAAI,CAAC;YAC3B,CAAC,CAAC,CAAC;YACH,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;YACpC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,GAAG,IAAI,CAAC;SACxC;aACI,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9B,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;YACpC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,GAAG,KAAK,CAAC;SACzC;QACD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAG,IAAI,YAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,EAAnB,CAAmB,CAAC,CAAC,CAAC;QACxG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE1B,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC,CAAC;QACpH,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAKxB,UAAU,CAAC,IAAI,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,OAAO,EAAE,CAAC;YACjE,4CAA4C;YAChC,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,iBAAiB,CAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YAC3F,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,iBAAiB,CAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,sBAAsB,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;QAC5H,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAGD,uDAAY,GAAZ;QAAA,iBAIC;QAHC,UAAU,CAAC;YACT,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;IACN,CAAC;IAGD,wDAAa,GAAb,UAAc,IAAS;QACrB,2FAA2F;QAC3F,IAAM,WAAW,GAAG,IAAI,CAAC,+BAA+B,CAAC,MAAM,CAAC,aAAG,IAAI,UAAG,CAAC,WAAW,KAAK,IAAI,EAAxB,CAAwB,CAAC,CAAC;QACjG,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QAC7D,IAAI,CAAC,+BAA+B,GAAG,WAAW,CAAC;QACnD,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,sEAA2B,GAA3B;QAEE,QAAQ,IAAI,EAAE;YACZ,KAAK,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,KAAK,6DAAW,CAAC,OAAO;gBAC/E,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC;gBACtC,MAAM;YACR,iDAAiD;YACjD,KAAK,IAAI,CAAC,+BAA+B,CAAC,MAAM,KAAK,CAAC;gBACpD,IAAI,CAAC,YAAY,CAAC,6DAAW,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;gBAClE,MAAM;YACR;gBACE,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,+BAA+B,CAAC;gBACnE,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,MAAM;SACT;IACH,CAAC;IAED,sDAAW,GAAX;QAAA,iBA0EC;QAzEC,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,EAAE;YAC9B,IAAI,CAAC,+BAA+B,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1D,IAAI,CAAC,+BAA+B,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,YAAY,CAAC;YAC/F,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC,iBAAO;gBAC/C,IAAI,OAAO,CAAC,IAAI,KAAK,KAAK,EAAE;oBAC1B,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,sBAAY;wBAChC,IAAI,sBAAsB,GAAG,CAAC,CAAC;wBAC/B,IAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE;4BACxC,IAAM,uBAAuB,GAAG,KAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,WAAC;gCACrE,QAAC,CAAC,UAAU,CAAC,WAAW,EAAE,KAAK,YAAY,CAAC,UAAU,CAAC,WAAW,EAAE;uCACjE,CAAC,CAAC,SAAS,KAAK,YAAY,CAAC,SAAS;4BADzC,CACyC,CAAC,CAAC;4BAC/C,IAAI,uBAAuB,IAAI,CAAC,EAAE;gCAChC,sBAAsB,GAAG,KAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,CAAC,sBAAsB,CAAC;gCACvG,IAAM,oBAAoB,GAAG,KAAI,CAAC,+BAA+B,CAAC,eAAe,CAAC,SAAS,CACvF,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,sBAAsB,EAA/B,CAA+B,CACvC,CAAC;gCACF,IAAI,oBAAoB,IAAI,CAAC,EAAE;oCAC7B,KAAI,CAAC,+BAA+B,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;iCACnF;6BACF;yBACF;6BACI;4BACH,sBAAsB,GAAG,YAAY,CAAC,sBAAsB,CAAC;yBAC9D;wBACD,KAAI,CAAC,+BAA+B,CAAC,eAAe,CAAC,IAAI,CAAC;4BACxD,EAAE,EAAE,sBAAsB;4BAC1B,SAAS,EAAE,YAAY,CAAC,SAAS;4BACjC,IAAI,EAAE,YAAY,CAAC,UAAU;4BAC7B,SAAS,EAAE,YAAY,CAAC,SAAS;4BACjC,OAAO,EAAE,YAAY,CAAC,OAAO;yBAC9B,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,6BAA6B,CAAC,uCAAuC,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC5H,IAAI,GAAG,CAAC,UAAU,KAAK,KAAI,CAAC,UAAU,CAAC,EAAE,EAAE;oBACzC,KAAI,CAAC,MAAM,EAAE,CAAC;oBACd,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;oBAC9C,UAAU,CAAC;wBACT,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;oBACnC,CAAC,CAAC,CAAC;iBACJ;qBACI;oBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;iBACrD;YACH,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;SACJ;aACI;YACH,IAAI,CAAC,yBAAyB,CAAC,eAAe,GAAG,EAAE,CAAC;YACpD,IAAI,CAAC,yBAAyB,CAAC,YAAY,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,YAAY,CAAC;YACzF,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,WAAC;gBACnC,KAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,IAAI,CAAC;oBAClD,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC,OAAO;iBACvF,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,6BAA6B,CAAC,kCAAkC,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC,SAAS,CAAC,aAAG;gBACjH,IAAI,GAAG,CAAC,UAAU,KAAK,KAAI,CAAC,UAAU,CAAC,EAAE,EAAE;oBACzC,KAAI,CAAC,MAAM,EAAE,CAAC;oBACd,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;oBAC9C,UAAU,CAAC;wBACT,KAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;oBACnC,CAAC,CAAC,CAAC;iBACJ;qBACI;oBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;iBACrD;YACH,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,mDAAQ,GAAR,UAAS,MAAM;QACd,oIAAoI;QACjI,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC;QACjD,IAAI,IAAI,CAAC,qBAAqB,KAAK,SAAS,IAAI,IAAI,CAAC,qBAAqB,CAAC,MAAM,GAAG,CAAC,EAAE;YACrF,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;QAEJ,IAAI;IACL,CAAC;IAr5BwB;QAAxB,kEAAY,CAAC,SAAS,CAAC;wEAAU,uDAAS;qEAAa;IACnB;QAApC,+DAAS,CAAC,wBAAwB,CAAC;;oFAAwB;IAFjD,gCAAgC;QAP5C,+DAAS,CAAC;YACT,QAAQ,EAAE,+BAA+B;YACzC,qMAAyD;YAEzD,6CAA6C;YAC7C,SAAS,EAAE,CAAE,0HAA6B,EAAG,EAAE,OAAO,EAAE,mEAAiB,EAAE,QAAQ,EAAE,8EAA4B,EAAE,CAAC;;SACrH,CAAC;+EAgDyB,0DAAW,EAAiB,2DAAS,EAAwB,wEAAa,EAAc,+DAAiB;YAChH,sDAAM,EAAyC,0HAA6B,EAAmB,6DAAW;OAhDjH,gCAAgC,CAu5B5C;IAAD,uCAAC;CAAA,CAv5BqD,kFAAe,GAu5BpE;AAv5B4C;;;;;;;;;;;;;ACzB7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AACH,uDAAuD;;AAEM;AAI/B;AAIgC;AACmB;AACpB;AAGQ;AAGrE;IAMI,uCAAsB,UAAsB,EACb,QAAgB,EAAc,aAA4B,EAAY,eAAgC;QAD/G,eAAU,GAAV,UAAU,CAAY;QACyD,oBAAe,GAAf,eAAe,CAAiB;QAL3H,aAAQ,GAAG,4DAAa,CAAC,QAAQ,GAAG,2DAAY,CAAC,MAAM,CAAC;QAC3D,mBAAc,GAAG,IAAI,gEAAW,EAAE,CAAC;QACnC,kBAAa,GAAG,IAAI,8DAAa,EAAE,CAAC;QAIvC,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;QACD,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,aAAa,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;SACvE;IACL,CAAC;IAED;;;OAGG;IACK,sDAAc,GAAtB,UAAuB,QAAkB;QACrC,IAAM,IAAI,GAAG,qBAAqB,CAAC;QACnC,KAAsB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE;YAA3B,IAAM,OAAO;YACd,IAAI,IAAI,KAAK,OAAO,EAAE;gBAClB,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAoBM,6EAAqC,GAA5C,UAA6C,IAAoB,EAAE,MAAe,EAAE,SAAkB,EAClG,UAAmB,EAAE,QAAiB,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAE9F,IAAI,eAAe,GAAG,IAAI,+DAAU,CAAC,EAAE,OAAO,EAAE,IAAI,wEAA0B,EAAE,EAAE,CAAC,CAAC;QAEpF,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE,eAAe,CAAC,CAAC;QAErF,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,MAAM,EAAE,QAAQ,EAAE,eAAe,CAAC,CAAC;QACzF,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,SAAS,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;QAC/F,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,UAAU,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;QACjG,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,EAAE,eAAe,CAAC,CAAC;QAE7F,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAClC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa,EAC1B,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,KAAG,IAAI,CAAC,QAAU,GAAG,iEAAkB,CAAC,mCAAmC,EAAE,2DAA2D;QACpK;YACI,MAAM,EAAE,eAAe;YACvB,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAYM,kFAA0C,GAAjD,UAAkD,EAAU,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAEhH,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,KAAK,SAAS,EAAE;YACjC,MAAM,IAAI,KAAK,CAAC,sGAAsG,CAAC,CAAC;SAC3H;QAED,IAAI,eAAe,GAAG,IAAI,+DAAU,CAAC,EAAE,OAAO,EAAE,IAAI,wEAA0B,EAAE,EAAE,CAAC,CAAC;QACpF,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,IAAI,EAAE;YACjC,eAAe,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,EAAO,EAAE,CAAC,CAAC;SACxD;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa,EAC1B,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAM,KAAG,IAAI,CAAC,QAAU,GAAG,iEAAkB,CAAC,qCAAqC,EAC5G;YACI,MAAM,EAAE,eAAe;YACvB,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAYM,gFAAwC,GAA/C,UAAgD,EAAU,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAE9G,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,KAAK,SAAS,EAAE;YACjC,MAAM,IAAI,KAAK,CAAC,oGAAoG,CAAC,CAAC;SACzH;QAED,IAAI,eAAe,GAAG,IAAI,+DAAU,CAAC,EAAE,OAAO,EAAE,IAAI,wEAA0B,EAAE,EAAE,CAAC,CAAC;QACpF,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,IAAI,EAAE;YACjC,eAAe,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,EAAO,EAAE,CAAC,CAAC;SACxD;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa,EAC1B,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,KAAG,IAAI,CAAC,QAAU,GAAG,iEAAkB,CAAC,sCAAsC,EAC1G;YACI,MAAM,EAAE,eAAe;YACvB,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAYM,0EAAkC,GAAzC,UAA0C,yBAAqD,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAEnJ,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa;YACvB,6BAA6B;YAC7B,kBAAkB;YAClB,WAAW;YACX,qBAAqB;SACxB,CAAC;QACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,KAAG,IAAI,CAAC,QAAU,GAAG,iEAAkB,CAAC,8BAA8B,EACnG,yBAAyB,EACzB;YACI,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAcM,+EAAuC,GAA9C,UAA+C,+BAAiE,EAC5G,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAEtD,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa;YACvB,6BAA6B;YAC7B,kBAAkB;YAClB,WAAW;YACX,qBAAqB;SACxB,CAAC;QACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,KAAG,IAAI,CAAC,QAAU,GAAG,iEAAkB,CAAC,qCAAqC,EACzG,+BAA+B,EAC/B;YACI,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAWM,yEAAiC,GAAxC,UAAyC,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAE3F,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa,EAC1B,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,KAAG,IAAI,CAAC,QAAU,GAAG,iEAAkB,CAAC,8BAA8B,EAClG;YACI,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IA/SQ,6BAA6B;QADzC,gEAAU,EAAE;QAQR,+GAAQ,EAAE,GAAE,6GAAM,CAAC,0DAAS,CAAC,GAAoB,+GAAQ,EAAE;+EAD1B,+DAAU,UACgC,8DAAa,EAA6B,kFAAe;OAP5H,6BAA6B,CAgTzC;IAAD,oCAAC;CAAA;AAhTyC","file":"default~app-modules-configuration-class-schedules-class-schedules-module~app-shared-wizard-wizard-mo~f7641765.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClassSchedulesModule } from './class-schedules.module';\nimport { HolidaysComponent } from './holidays/holidays.component';\nimport {ClassSchedulesComponent} from './class-schedules.component';\nimport { SchoolScheduleTemplatesComponent } from './school-schedule-templates/school-schedule-templates.component';\nimport { SchoolScheduleTemplateDetailsComponent } from './school-schedule-template-details/school-schedule-template-details.component';\nimport { ClassTimetableComponent } from './class-timetable/class-timetable.component';\nimport { ClassTimetablesComponent } from './class-timetables/class-timetables.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: ClassSchedulesComponent,\n    children: [\n      { path: '', pathMatch: 'full', redirectTo: 'holidays' },\n      { path: 'holidays', component: HolidaysComponent,  data: {title: 'Holidays'} }, \n      { path: 'school-schedule-templates', component: SchoolScheduleTemplatesComponent,  data: {title: 'School Schedule Templates'} },\n      { path: 'school-schedule-templates-details/:id', component: SchoolScheduleTemplateDetailsComponent,  data: {title: 'School Schedule Templates Details'} }, \n      // { path: 'class-timetables', component: ClassTimetableComponent,  data: {title: 'Class Timetables'} },\n      { path: 'class-timetables', component: ClassTimetablesComponent,  data: {title: 'Class Timetables'} },\n    ]\n  },\n];\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class ClassSchedulesRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9jbGFzcy1zY2hlZHVsZXMvY2xhc3Mtc2NoZWR1bGVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-class-schedules',\n  templateUrl: './class-schedules.component.html',\n  styleUrls: ['./class-schedules.component.scss']\n})\nexport class ClassSchedulesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule , NO_ERRORS_SCHEMA} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ClassSchedulesComponent } from './class-schedules.component';\nimport { HolidaysComponent } from './holidays/holidays.component';\nimport { RouterModule } from '@angular/router';\nimport { ClassSchedulesRoutingModule} from './class-schedules-routing.module';\nimport { MatcomponentsModule } from 'app/main/matcomponents.module';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedManagementModule } from 'app/shared/shared.module';\nimport { HolidayConfigurationService } from 'app/service/class-schedules/holiday-configuration.service';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from 'app/interceptors/token-interceptor';\nimport { ClassSectionService } from 'app/service/academic-service/api/class-section.service';\nimport { SchoolScheduleTemplatesComponent } from './school-schedule-templates/school-schedule-templates.component';\nimport { SchoolScheduleTemplateDetailsComponent } from './school-schedule-template-details/school-schedule-template-details.component';\nimport { ClassTimetableComponent } from './class-timetable/class-timetable.component';\nimport { ClassTimetablesComponent } from './class-timetables/class-timetables.component';\n\n\n\n@NgModule({\n  declarations: [ClassSchedulesComponent,\n     HolidaysComponent, SchoolScheduleTemplatesComponent, \n     SchoolScheduleTemplateDetailsComponent, \n     ClassTimetableComponent, ClassTimetablesComponent],\n  imports: [\n    ClassSchedulesRoutingModule,\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedManagementModule,\n    FuseSharedModule,\n    MatcomponentsModule,\n    TranslateModule\n  ],\n  providers: [\n    HolidayConfigurationService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n  ],\n  schemas: [NO_ERRORS_SCHEMA],\n\n})\nexport class ClassSchedulesModule { }\n","module.exports = \"<div class=\\\"content p-40\\\">\\n  <div class=\\\"pl-24 text-uppercase font-size-18 pb-4\\\"><span translate>{{isAddData ?'Class Timetable':title}}</span></div>\\n  <!-- Get details of class section dropdowns-->\\n  <div class=\\\"w-100-p mat-elevation-z8 simple-table-container radius-20\\\" fxLayout=\\\"column\\\">\\n    <form [formGroup]=\\\"classTimetableForm\\\" (ngSubmit)=\\\"onSelectClassTimetable()\\\" #ClassTimeTableForm=\\\"ngForm\\\"\\n      fxLayout=\\\"column\\\">\\n      <div *ngIf=\\\"isAddData\\\" fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\" class=\\\"pt-20 px-20\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"35\\\">\\n          <mat-label #classId translate>Class</mat-label>\\n          <mat-select (selectionChange)=\\\"onClassSelect($event)\\\" formControlName=\\\"classId\\\" required>\\n            <mat-option *ngFor=\\\"let class of classNames\\\" [value]=\\\"class.value\\\">\\n              {{class.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"classId.innerText\\\" [validationControl]=\\\"classTimetableForm.controls.classId\\\"\\n              [doValidate]=\\\"isClassSectionValid\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"px-sm-24\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"35\\\">\\n          <mat-label #sectionId translate>Section</mat-label>\\n          <mat-select formControlName=\\\"sectionId\\\" (selectionChange)=\\\"onSelect()\\\" required>\\n            <mat-option [style.display]=\\\"classTimetableForm.value.classId ? '' : 'none'\\\" *ngFor=\\\"let section of sectionNamesList\\\" [value]=\\\"section.value\\\">\\n              {{section.label}}\\n              <span *ngIf=\\\"section.boardName!=null\\\">({{section.boardName}})</span>\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"sectionId.innerText\\\"\\n              [validationControl]=\\\"classTimetableForm.controls.sectionId\\\" [doValidate]=\\\"isClassSectionValid\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <!--  End -->\\n\\n        <!-- Edit,Delete actions if class section has template details -->\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\" fxLayout=\\\"column\\\" class=\\\"pt-12 pr-12\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n            <button *ngIf=\\\"classSectionTempList.length >0\\\" type=\\\"button\\\" mat-icon-button class=\\\"red-400-fg\\\" (click)=\\\"deleteClassTimetable()\\\">\\n              <mat-icon>delete</mat-icon>\\n            </button>\\n            <button *ngIf=\\\"isTemplateValid\\\" mat-raised-button type=\\\"button\\\" class=\\\"text-uppercase mx-20\\\" color=\\\"accent\\\"\\n              (click)=\\\"addClassTimetable()\\\"><span translate>Add</span></button>\\n            <button mat-button type=\\\"button\\\" (click)=\\\"getHelpText('Class Timetables')\\\">\\n              <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n        <!-- End -->\\n      </div>\\n\\n      <!-- Get Template details with respect to class section and board Id's-->\\n      <mat-divider *ngIf=\\\"isTemplateValid\\\"></mat-divider>\\n      <div *ngIf=\\\"isTemplateValid\\\" fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\" class=\\\"pt-24 px-20\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #classTempId translate>Timetables</mat-label>\\n          <mat-select (selectionChange)=\\\"onTemplateSelect($event)\\\" formControlName=\\\"scheduleTemplateId\\\">\\n            <mat-option *ngFor=\\\"let classTemp of classTimetableTempList\\\" [value]=\\\"classTemp.value\\\">\\n              {{classTemp.label}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <div class=\\\"pt-16\\\"><button *ngIf=\\\"classSectionTempList.length >0\\\" mat-raised-button type=\\\"button\\\"\\n            class=\\\"text-uppercase mx-20 mb-20\\\" color=\\\"primary\\\" (click)=\\\"updateClassTimetable()\\\" translate><span translate>Edit</span></button> </div>\\n      </div>\\n      <!-- End -->\\n\\n      <!-- Get Details of schedule template based on class section and board after save-->\\n      <mat-divider *ngIf=\\\"classSectionTempList.length >0\\\" class=\\\"mt-20\\\"></mat-divider>\\n      <div *ngIf=\\\"classSectionTempList.length >0\\\" class=\\\"m-20 border school-period\\\">\\n        <div fxLayout=\\\"row inline\\\" *ngFor=\\\"let item of classSectionTempList; let in = index\\\" class=\\\"mw-100-p\\\">\\n          <div class=\\\"border-bottom\\\">\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\"\\n            class=\\\"border-right p-20 w-120 weekDay custom-white accent-fg font-weight-600 text-uppercase\\\" translate>\\n            {{item.weekDayName | translate}}</div>\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\" class=\\\"border-right w-200 p-12 break-word\\\"\\n            *ngFor=\\\"let child of item.periodsView;let i=index\\\" [ngClass]=\\\"item.periodsView?.length > classSectionTempList[in-1]?.periodsView?.length ? (i > ( classSectionTempList[in-1]?.periodsView?.length-1) && in  ? 'border-top' : ''): ''\\\">\\n            <div fxLayout=\\\"row\\\">{{child.periodName}}</div>\\n            <div fxLayout=\\\"row\\\" class=\\\"grey-500-fg\\\" *ngIf=\\\"child.startTime!= null\\\">{{child.startTime | slice:0:5}} to\\n              {{child.endTime | slice:0:5}}\\n            </div>\\n            <div fxLayout=\\\"row\\\">{{child.periodTypeName}}</div>\\n            <div fxLayout=\\\"row\\\" *ngFor=\\\"let childs of child.courseAndStaffViewModel;\\\" ><span\\n                *ngIf=\\\"childs.courseName!=null\\\" class=\\\"text-truncate\\\" matTooltipClass=\\\"matTool-tip\\\"\\n                matTooltipPosition=\\\"above\\\" [matTooltip]=\\\"childs.staffName\\\">{{childs.courseName}} - {{childs.staffName}}</span></div>\\n          </div>\\n        </div>\\n        </div>\\n      </div>\\n      <!-- End -->\\n    </form>\\n\\n    <!-- Add Class Timetable -->\\n    <form [formGroup]=\\\"classTimetableForm\\\" (ngSubmit)=\\\"onSelectClassTimetable()\\\" #ClassTimeTableForm=\\\"ngForm\\\">\\n      <div *ngIf=\\\"isAddTimetable\\\" fxlayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"p-16\\\">\\n        <button mat-raised-button translate type=\\\"button\\\" color=\\\"primary\\\" class=\\\"text-uppercase\\\"\\n          (click)=\\\"clearBack()\\\">{{'Back' | translate}}</button>\\n        <button mat-button type=\\\"button\\\" (click)=\\\"getHelpText('Class Timetables')\\\">\\n          <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n        </button>\\n      </div>\\n      <mat-divider *ngIf=\\\"isAddTimetable\\\"></mat-divider>\\n      <div *ngIf=\\\"isAddTimetable\\\" fxLayoutAlign=\\\"center center\\\" fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\"\\n        class=\\\"pt-24 px-20\\\">\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n          <mat-label #classId translate>Class</mat-label>\\n          <mat-select formControlName=\\\"classId\\\" [disabled]=\\\"isAddTimetable\\\" required>\\n            <mat-option *ngFor=\\\"let class of classNames\\\" [value]=\\\"class.value\\\">\\n              {{class.label}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" class=\\\"px-sm-24\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n          fxFlex.gt-sm=\\\"35\\\">\\n          <mat-label #sectionId translate>Section</mat-label>\\n          <mat-select formControlName=\\\"sectionId\\\" [disabled]=\\\"isAddTimetable\\\" required>\\n            <mat-option *ngFor=\\\"let section of sectionNamesList\\\" [value]=\\\"section.value\\\">\\n              {{section.label}}\\n              <span *ngIf=\\\"section.boardName!=null\\\">({{section.boardName}})</span>\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n          <mat-label #scheduleTempId translate>Schedule Template</mat-label>\\n          <mat-select formControlName=\\\"scheduleTemplateId\\\" (selectionChange)=\\\"onScheduleTemplateSelect()\\\"\\n            [disabled]=\\\"isScheduleTemp\\\" required>\\n            <mat-option *ngFor=\\\"let scheduleTemp of scheduleTempList\\\" [value]=\\\"scheduleTemp.value\\\">\\n              {{scheduleTemp.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='scheduleTempId.innerText'\\n              [validationControl]=\\\"classTimetableForm.controls.scheduleTemplateId\\\"\\n              [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div *ngIf=\\\"isAddTimetable\\\" fxLayoutAlign=\\\"start center\\\" fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\"\\n        class=\\\"py-16 px-20\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxFlex.gt-xs=\\\"32\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" class=\\\"icon-center\\\">\\n          <mat-label #startDate translate>Start Date</mat-label>\\n          <input matInput (keyup)=\\\"forceValidation('startDate',classTimetableForm)\\\" [matDatepicker]=\\\"startDatePicker\\\"\\n          (dateChange)=\\\"validateData()\\\" formControlName=\\\"startDate\\\" [required]=\\\"isValidDate\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #startDatePicker></mat-datepicker>\\n          <mat-error>\\n            <app-validation [labelName]='startDate.innerText'\\n              [validationControl]=\\\"classTimetableForm.controls.startDate\\\" [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"px-sm-24 icon-center\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n          fxFlex.gt-sm=\\\"36\\\">\\n          <mat-label #endDate translate>End Date</mat-label>\\n          <input matInput (keyup)=\\\"forceValidation('endDate',classTimetableForm)\\\" [matDatepicker]=\\\"endDatePicker\\\"\\n          (dateChange)=\\\"validateData()\\\" [min]=\\\"classTimetableForm.controls.startDate.value\\\" \\n            formControlName=\\\"endDate\\\" [required]=\\\"isValidDate\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #endDatePicker [startAt]=\\\"classTimetableForm.value.startDate\\\"></mat-datepicker>\\n          <mat-error>\\n            <app-validation [labelName]='endDate.innerText'\\n              [validationControl]=\\\"classTimetableForm.controls.endDate\\\"\\n              [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase mr-12 mb-20\\\" color=\\\"accent\\\">{{'submit' | translate}}</button>\\n      </div>\\n    </form>\\n    <mat-divider *ngIf=\\\"classTimetableForm.valid && addClassSectionTempList?.length>0\\\" class=\\\"mt-20\\\"></mat-divider>\\n    <div *ngIf=\\\"classTimetableForm.valid && addClassSectionTempList?.length>0\\\" class=\\\"m-20 border school-period\\\">\\n      <div fxLayout=\\\"row inline\\\" *ngFor=\\\"let item of addClassSectionTempList; let i=index\\\"\\n        class=\\\"mw-100-p border-bottom\\\">\\n        <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\"\\n          class=\\\"border-right p-20 w-120 weekDay custom-white accent-fg font-weight-600 text-uppercase\\\" translate>\\n          {{item.name}}</div>\\n        <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\" fxLayoutAlign=\\\"start start\\\" class=\\\"w-232 p-20\\\"\\n          *ngFor=\\\"let child of item.value;let i=index\\\">\\n          <div fxLayout=\\\"row\\\">{{child.periodName}}</div>\\n          <div fxLayout=\\\"row\\\" class=\\\"grey-500-fg\\\" *ngIf=\\\"child.startTime!= null\\\">{{child.startTime | slice:0:5}} to\\n            {{child.endTime | slice:0:5}}\\n          </div>\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100-p\\\">\\n            <mat-label #periodTypeId translate>Period Type</mat-label>\\n            <mat-select (selectionChange)=\\\"onPeriodTypeSelect($event,child,i)\\\" #periodTypeId=\\\"ngModel\\\" ngModel [(ngModel)]=\\\"child.periodTypeId\\\"\\n             name=\\\"periodTypeId\\\" required>\\n                <mat-option *ngFor=\\\"let periodType of periodTypeList\\\" [value]=\\\"periodType.value\\\">\\n                  {{periodType.label}}\\n                </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <ng-container *ngIf=\\\"child && child?.isEdit && child?.isEdit?.length\\\">\\n            <div fxLayout=\\\"row\\\" *ngFor=\\\"let courseStaff of child.isEdit;\\\">\\n              <span class=\\\"pr-4\\\">{{courseStaff.courseName}} :</span><span class=\\\"break-word\\\">{{courseStaff.staffName}}</span></div>\\n            <div fxLayout=\\\"row\\\" *ngIf=\\\"child.isEdit.length>0\\\"><button mat-raised-button\\n                (click)=editMultiAssignments(child,periodTypeId.value); class=\\\"accent-fg\\\">Edit</button></div>\\n          </ng-container> \\n          <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"child.hasAssignments\\\" class=\\\"w-100-p\\\">\\n            <mat-label #courseId translate>Course</mat-label>\\n            <mat-select #coursesId=\\\"ngModel\\\" ngModel name=\\\"coursesId\\\"\\n              (selectionChange)=\\\"onSubmitStaffCourseDetails(child,coursesId.value,courseId,i)\\\" required>\\n              <mat-option *ngFor=\\\"let course of courseList\\\" [value]=\\\"course.value\\\">\\n                {{course.label}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"child.hasAssignments\\\" class=\\\"w-100-p\\\">\\n            <mat-label #staffId translate>Staff</mat-label>\\n            <mat-select #staffsId=\\\"ngModel\\\" ngModel name=\\\"staffsId\\\"\\n              (selectionChange)=\\\"onSubmitStaffCourseDetails(child,staffsId.value,staffId,i)\\\" required>\\n              <mat-option *ngFor=\\\"let staff of staffList\\\" [value]=\\\"staff.value\\\">\\n                {{staff.label}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n      </div>\\n    </div>\\n    <!-- End -->\\n\\n    <!-- Edit Class Timetable -->\\n    <div *ngIf=\\\"classTimetableForm.valid &&  updateClassTimetableDetails?.length>0\\\" class=\\\"m-20 border school-period\\\">\\n      <div fxLayout=\\\"row inline\\\" *ngFor=\\\"let item of updateClassTimetableDetails; let ind = index\\\" class=\\\"mw-100-p\\\">\\n        <div class=\\\"border-bottom\\\">\\n        <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\"\\n          class=\\\"border-right p-12 w-120 weekDay custom-white accent-fg font-weight-600 text-uppercase\\\" translate>\\n          {{item.weekDayName | translate}}</div>\\n        <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\" fxLayoutAlign=\\\"start\\\" class=\\\"border-right w-200 p-12\\\"\\n          *ngFor=\\\"let child of item.periodsView;let i=index\\\" [ngClass]=\\\"item.periodsView?.length > updateClassTimetableDetails[ind-1]?.periodsView?.length ? (i > ( updateClassTimetableDetails[ind-1]?.periodsView?.length-1) && ind  ? 'border-top' : ''): ''\\\">\\n          <div fxLayout=\\\"row\\\">{{child.periodName}}</div>\\n          <div fxLayout=\\\"row\\\" class=\\\"grey-500-fg\\\" *ngIf=\\\"child.startTime!= null\\\">{{child.startTime | slice:0:5}} to\\n            {{child.endTime | slice:0:5}}\\n          </div>\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100-p\\\">\\n            <mat-label #periodTypeId translate>Period Type</mat-label>\\n            <mat-select #ptId=\\\"ngModel\\\" [(ngModel)]=\\\"child.periodTypeId\\\" ngModel name=\\\"ptId\\\"\\n              (selectionChange)=\\\"onPeriodTypeSelect($event,child,item.weekDayName)\\\" required>\\n              <mat-option *ngFor=\\\"let periodType of periodTypeList\\\" [value]=\\\"periodType.value\\\">\\n                {{periodType.label}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <div fxLayout=\\\"row\\\" *ngFor=\\\"let cs of child.courseAndStaffViewModel\\\"><span\\n              *ngIf=\\\"cs.courseName!==null && child.hasMultipleAssignments === 1\\\" class=\\\"text-truncate\\\" matTooltipClass=\\\"matTool-tip\\\"\\n              matTooltipPosition=\\\"above\\\" [matTooltip]=\\\"cs.staffName\\\">{{cs.courseName}}&nbsp;-&nbsp;{{cs.staffName}}</span>\\n        </div>\\n          <div fxLayout=\\\"row\\\" *ngIf=\\\"child.hasMultipleAssignments == 1\\\" class=\\\"pt-8\\\"><button mat-raised-button\\n              (click)=editMultiAssignments(child,ptId.value); class=\\\"accent-fg\\\" translate>Edit</button></div>\\n          <div *ngIf=\\\"child.hasAssignments == 1\\\" class=\\\"w-100-p\\\">\\n            <div *ngFor=\\\"let cs of child.courseAndStaffViewModel\\\">\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100-p\\\">\\n                <mat-label #courseId translate>Course</mat-label>\\n                <mat-select #cId=\\\"ngModel\\\" [(ngModel)]=\\\"cs.courseId\\\" ngModel name=\\\"cId\\\"\\n                  (selectionChange)=\\\"onSubmitStaffCourseDetails(child,cId.value,courseId,cs)\\\" required>\\n                  <mat-option *ngFor=\\\"let course of courseList\\\" [value]=\\\"course.value\\\">\\n                    {{course.label}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100-p\\\">\\n                <mat-label #staffId translate>Staff</mat-label>\\n                <mat-select #sId=\\\"ngModel\\\" [(ngModel)]=\\\"cs.staffId\\\" ngModel name=\\\"sId\\\"\\n                  (selectionChange)=\\\"onSubmitStaffCourseDetails(child,sId.value,staffId,cs)\\\" required>\\n                  <mat-option *ngFor=\\\"let staff of staffList\\\" [value]=\\\"staff.value\\\">\\n                    {{staff.label}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      </div>\\n    </div>\\n    <!-- End -->\\n\\n    <!-- Add options for Class Timetable -->\\n    <div *ngIf=\\\"isHasTemp\\\" class=\\\"text-center font-size-16 mt-48\\\" translate>No Class Time Table Has Been\\n      Defined For The\\n      Selected Class And Section</div>\\n    <div *ngIf=\\\"isHasTemp\\\" class=\\\"text-center font-size-16 pt-4\\\" translate>Please Click On Add To Create A\\n      New Time Table</div>\\n    <div *ngIf=\\\"isHasTemp\\\" fxLayout=\\\"row\\\" class=\\\"p-20\\\" fxLayoutAlign=\\\"center center\\\">\\n      <button mat-raised-button type=\\\"button\\\" (click)=\\\"addClassTimetable()\\\" class=\\\"text-uppercase px-36\\\" color=\\\"accent\\\"\\n        translate>Add</button>\\n    </div>\\n    <mat-divider class=\\\"mb-20\\\" *ngIf=\\\"isHasTemp\\\"></mat-divider>\\n    <!-- End -->\\n  </div>\\n</div>\\n\\n<!-- Coustom Dialog for Has_Multiple_Assignments -->\\n<ng-template #myTemplate>\\n  <div [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\">\\n    <div fxLayoutAlign=\\\"space-between center\\\" class=\\\"font-size-20\\\"><span translate>Select Course & Staff</span> <button\\n        mat-icon-button (click)=\\\"closeDialog()\\\">\\n        <mat-icon>close</mat-icon>\\n      </button></div>\\n    <form [formGroup]=\\\"courseStaffMultAssgnForm\\\" (ngSubmit)=\\\"onSelectCourseStaffDetails()\\\"\\n      #CourseStaffMultiAssignForm=\\\"ngForm\\\">\\n      <div fxFlexFill fxLayout=\\\"column\\\" class=\\\"pt-24\\\" fxLayoutAlign=\\\"center center\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill>\\n          <mat-label #courseId translate>Course</mat-label>\\n          <mat-select formControlName=\\\"courseId\\\" required>\\n            <mat-option *ngFor=\\\"let course of courseList\\\" [value]=\\\"course.value\\\">\\n              {{course.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='courseId.innerText'\\n              [validationControl]=\\\"courseStaffMultAssgnForm.controls.courseId\\\" [doValidate]=\\\"isCourseStaffAssgnValid\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill>\\n          <mat-label #staffId translate>Staff</mat-label>\\n          <mat-select formControlName=\\\"staffId\\\" required>\\n            <mat-option *ngFor=\\\"let staff of staffList\\\" [value]=\\\"staff.value\\\">\\n              {{staff.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='staffId.innerText'\\n              [validationControl]=\\\"courseStaffMultAssgnForm.controls.staffId\\\" [doValidate]=\\\"isCourseStaffAssgnValid\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div fxFlexFill fxLayoutAlign=\\\"end center\\\" fxLayout=\\\"row\\\" class=\\\"pb-20\\\">\\n        <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase accent-fg\\\">{{'Select' | translate}}</button>\\n      </div>\\n    </form>\\n  </div>\\n  <div *ngIf=\\\"gridDataList?.length>0\\\" fxLayout=\\\"column\\\">\\n    <mat-list fxLayout=\\\"row wrap\\\" class=\\\"pt-0 confirm-table border-top border-horizontal class-timetable\\\">\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\" class=\\\"secondary-text\\\"><span translate>Course</span></mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\" class=\\\"secondary-text\\\"><span translate>Staff</span></mat-list-item>\\n    </mat-list>\\n    <mat-list fxLayout=\\\"row wrap\\\" class=\\\"pt-0 confirm-table border class-timetable\\\">\\n      <ng-container *ngFor=\\\"let column of gridDataList;let i=index\\\">\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\">{{column.courseName}}</mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\">\\n        <span>{{column.staffName}}</span> \\n        <button [disabled]=\\\"!(gridDataList?.length>1)\\\"  mat-icon-button (click)=\\\"deleteItem(i)\\\">\\n          <mat-icon>cancel</mat-icon>\\n        </button>\\n      </mat-list-item>\\n    </ng-container>\\n    </mat-list>\\n  </div>\\n\\n \\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"pt-12\\\">\\n    \\n\\n    <button *ngIf=\\\"gridDataList?.length===1\\\"  type=\\\"button\\\"  mat-raised-button class=\\\"mr-16 text-uppercase\\\" (click)=\\\"clearStaff()\\\">{{'Clear' | translate}}</button>\\n    <button *ngIf=\\\"gridDataList?.length>0\\\"  type=\\\"button\\\" mat-raised-button color=\\\"accent\\\" [disabled]=\\\"isSaveDetails\\\"\\n      (click)=\\\"onSubmitMultiAssignmentsDetails()\\\" translate>{{'Save' | translate}}</button>\\n\\n      <!-- <button *ngIf=\\\"gridDataList.length>0\\\"  type=\\\"button\\\" mat-raised-button class=\\\"mr-16\\\" (click)=\\\"clearStaff()\\\">{{'Close' | translate}}</button> -->\\n  </div>\\n\\n</ng-template>\\n<!-- End Coustom Dialog  -->\\n\"","module.exports = \".school-period {\\n  overflow-y: auto;\\n  overflow: overlay; }\\n  .school-period .mw-100-p {\\n    min-width: 100%; }\\n  .school-period .weekDay {\\n    position: -webkit-sticky;\\n    position: sticky;\\n    left: 0px;\\n    z-index: 1; }\\n  .class-timetable {\\n  max-height: 200px;\\n  overflow: auto; }\\n  .class-timetable ::ng-deep .mat-list-item-content {\\n    place-content: center space-between;\\n    -webkit-box-align: center;\\n            align-items: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9jbGFzcy1zY2hlZHVsZXMvY2xhc3MtdGltZXRhYmxlL2NsYXNzLXRpbWV0YWJsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUVJLGdCQUFnQjtFQUNoQixpQkFBaUIsRUFBQTtFQUhyQjtJQUtRLGVBQWUsRUFBQTtFQUx2QjtJQVFRLHdCQUFnQjtJQUFoQixnQkFBZ0I7SUFDaEIsU0FBUztJQUNULFVBQVUsRUFBQTtFQUdsQjtFQUNJLGlCQUFpQjtFQUNqQixjQUFjLEVBQUE7RUFGbEI7SUFJSSxtQ0FBbUM7SUFDbkMseUJBQW1CO1lBQW5CLG1CQUFtQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9jb25maWd1cmF0aW9uL2NsYXNzLXNjaGVkdWxlcy9jbGFzcy10aW1ldGFibGUvY2xhc3MtdGltZXRhYmxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uc2Nob29sLXBlcmlvZCB7XG4gICAgLy9tYXgtd2lkdGg6IDc4OHB4O1xuICAgIG92ZXJmbG93LXk6IGF1dG87XG4gICAgb3ZlcmZsb3c6IG92ZXJsYXk7XG4gICAgLm13LTEwMC1wIHtcbiAgICAgICAgbWluLXdpZHRoOiAxMDAlO1xuICAgICB9XG4gICAgLndlZWtEYXkge1xuICAgICAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgICAgICBsZWZ0OiAwcHg7XG4gICAgICAgIHotaW5kZXg6IDE7XG4gICAgfSAgIFxufVxuLmNsYXNzLXRpbWV0YWJsZXtcbiAgICBtYXgtaGVpZ2h0OiAyMDBweDtcbiAgICBvdmVyZmxvdzogYXV0bztcbiAgIDo6bmctZGVlcCAubWF0LWxpc3QtaXRlbS1jb250ZW50e1xuICAgIHBsYWNlLWNvbnRlbnQ6IGNlbnRlciBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgfVxufVxuXG4iXX0= */\"","import { Component, TemplateRef, ViewChild, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatDialog, MatSnackBar } from '@angular/material';\n\nimport { GradeSetupService } from 'app/service/grading-service/api/grade-setup.service';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { ClassTimetableService } from 'app/service/class-schedules/class-time-table.service';\nimport { CommonService } from 'app/service/common.service';\nimport { AppSettings } from 'app/app.constants';\nimport { ClassPeriodsDataView } from '../model/class-periods-data-view';\nimport { ClassPeriodsMultiView } from '../model/class-periods-multi-view';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { ClassTimetableUpdateView } from '../model/class-timetable-update-view';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-class-timetable',\n  templateUrl: './class-timetable.component.html',\n  styleUrls: ['./class-timetable.component.scss'],\n  providers: [GradeSetupService, ClassTimetableService]\n})\nexport class ClassTimetableComponent extends CommonComponent implements OnInit {\n  @ViewChild('myTemplate') customTemplate: TemplateRef<any>;\n  @ViewChild('ClassTimeTableForm') _classTimeTableForm;\n  @ViewChild('CourseStaffMultiAssignForm') _courseStaffMultiAssignForm;\n\n  classTimetableUpdateView: ClassTimetableUpdateView;\n  classPeriodsDataView: ClassPeriodsDataView;\n  classPeriodsMultiView: Array<ClassPeriodsMultiView>;\n\n  classNames: Array<any> = [];\n  filterClasses: Array<any> = [];\n  sectionNamesList: Array<any> = [];\n  scheduleTempList: Array<any> = [];\n  classSectionTempList: Array<any> = [];\n  addClassSectionTempList: Array<any> = [];\n  updateClassTimetableDetails: Array<any> = [];\n  gridDataList: Array<any> = [];\n\n  classTimetableTempList: Array<any> = [];\n  periodTypeList: Array<any> = [];\n  courseList: Array<any> = [];\n  staffList: Array<any> = [];\n\n  filterSchoolScheduleTempList: Array<any> = [];\n  httpStatus: any;\n  coustomDialog: any;\n  currentPeriod: any;\n  currentPeriodTypeId: any;\n  classTimetableId: any;\n  startDate: any;\n  endDate: any;\n  scheduleTemplateId: any;\n  weekDayName: any;\n  title: any;\n  errorFlag: any;\n  isValidDate = false;\n  isCourseStaffAssgnValid = false;\n  classTimetableFormDetails = false;\n  isClassSectionValid = true;\n  isTemplateValid = false;\n  isHasTemp = false;\n  isAddData = true;\n  isAddTimetable = false;\n  isScheduleTemp = false;\n  isSaveDetails = false;\n\n  classTimetableForm: FormGroup;\n  courseStaffMultAssgnForm: FormGroup;\n  timeTableId: any;\n\n  constructor(private _fb: FormBuilder, private gradeSetupService: GradeSetupService, private classTimetableService: ClassTimetableService,\n    public commonService: CommonService, public dialog: MatDialog, public snackBar: MatSnackBar) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.httpStatus = require('http-status-codes');\n    this.getClassesList();\n    this.timeTableForm();\n    this.gridDataList = [];\n    this.classTimetableId = null;\n    this.classPeriodsDataView = {\n      classPeriodsMultiView: this.classPeriodsMultiView = []\n    };\n    this.updateClassTimetableDetails = [];\n    this.title = 'Add Class Timetable';\n    this.classTimetableUpdateView = {};\n    this.errorFlag = 0;\n  }\n\n  timeTableForm(): void {\n    this.classTimetableForm = this._fb.group({\n      classId: new FormControl('', [Validators.required]),\n      sectionId: new FormControl('', [Validators.required]),\n      scheduleTemplateId: new FormControl(null),\n      startDate: new FormControl(null),\n      endDate: new FormControl(null),\n    });\n\n    this.courseStaffMultAssgnForm = this._fb.group({\n      courseId: new FormControl('', [Validators.required]),\n      staffId: new FormControl('', [Validators.required]),\n    });\n  }\n\n  // Get Classes to filter table data\n  getClassesList(): void {\n    this.filterClasses = [];\n    this.gradeSetupService.schoolAcademicClasses().subscribe(response => {\n      if (response.listViews != null) {\n        if (response.listViews.length) {\n          response.listViews.forEach(element => {\n            this.filterClasses.push({\n              label: element.name,\n              value: element.id\n            });\n            this.classNames = this.filterClasses;\n          });\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  // End\n\n  onClassSelect(data: any): void {\n    this.sectionNamesList = [];\n    this.classTimetableService.classTimetableSectionsGet(data.value).subscribe(res => {\n      if (res.classTimetableSectionsView != null) {\n        res.classTimetableSectionsView.map(x => {\n          this.sectionNamesList.push({ value: x.sectionId, label: x.sectionName, boardId: x.boardId, boardName: x.boardName });\n        });\n        this.isTemplateValid = false;\n        this.isHasTemp = false;\n        this.classSectionTempList = [];\n        this.classTimetableForm.controls['sectionId'].reset();\n      }\n    });\n  }\n\n  onSelect(): void {\n    if (this.classTimetableForm.controls.sectionId.status === AppSettings.VALID && this.classTimetableForm.controls.classId.status === AppSettings.VALID) {\n      const sid = this.classTimetableForm.value.sectionId;\n      this.classTimetableTempList = [];\n      const boardId = this.sectionNamesList.filter(function (val): boolean {\n        return val.value === sid;\n      });\n\n      this.classTimetableService.classTimetableClassTimetableTemplatesGet(this.classTimetableForm.value.sectionId,\n        this.classTimetableForm.value.classId, boardId[0].boardId).subscribe(res => {\n          if (res.classTimetableTemplatesDataView != null) {\n            res.classTimetableTemplatesDataView.map(x => {\n              if (x.startDate != null && x.endDate != null) {\n                const startDate = (x.startDate == null) ? null : this.commonService.customDateFormat(x.startDate, this.getSchoolDateFormat()).date;\n                const endDate = (x.endDate == null) ? null : this.commonService.customDateFormat(x.endDate, this.getSchoolDateFormat()).date;\n                this.classTimetableTempList.push({\n                  value: x.id, label: x.name + ' ' + startDate + ' ' + 'to' + ' ' + endDate,\n                  scheduleTemplateId: x.templateId,\n                  aSd: x.startDate,\n                  aEd: x.endDate,\n                  timeTableId: x.classTimetableId\n                });\n              }\n              else {\n                this.classTimetableTempList.push({\n                  value: x.id, label: x.name, scheduleTemplateId: x.templateId, aSd: x.startDate,\n                  aEd: x.endDate,\n                  timeTableId: x.classTimetableId\n                });\n              }\n            });\n\n            this.classTimetableForm.controls['scheduleTemplateId'].reset();\n            this.isTemplateValid = true;\n            this.isHasTemp = false;\n            this.isAddData = true;\n            this.isAddTimetable = false;\n\n            if (this.classTimetableTempList.length === 1) {\n              this.classTimetableForm.controls['scheduleTemplateId'].setValue(this.classTimetableTempList[0].value);\n              // localStorage.setItem('_templateId', this.classTimetableTempList.find(x => x.value === this.classTimetableForm.value.scheduleTemplateId).timeTableId);\n              this.onTemplateSelect(this.classTimetableTempList[0].value);\n            }\n            else {\n              this.classSectionTempList = [];\n            }\n          }\n          else {\n            this.isTemplateValid = false;\n            this.isHasTemp = true;\n            this.classTimetableTempList = [];\n            this.classSectionTempList = [];\n          }\n        });\n    }\n    else {\n      this.isClassSectionValid = true;\n    }\n  }\n\n  onTemplateSelect(data: any): void {\n    this.classSectionTempList = [];\n    const filterClassSectionList = this.classTimetableTempList.find(x => x.value === data.value || data);\n    this.scheduleTemplateId = filterClassSectionList.scheduleTemplateId;\n    this.classTimetableId = data.value || data;\n    // localStorage.removeItem('_templateId');\n    // localStorage.setItem('_templateId', this.classTimetableTempList.find(x => x.value === this.classTimetableId).timeTableId);\n    \n    const sid = this.classTimetableForm.value.sectionId;\n    const boardId = this.sectionNamesList.filter(function (val): boolean {\n      return val.value === sid;\n    });\n\n    this.classTimetableService.classTimetableClassTimetableGet(this.classTimetableForm.value.classId, this.classTimetableForm.value.sectionId,\n      boardId[0].boardId, this.classTimetableId).subscribe(res => {\n        if (res.classPeriodsView != null) {\n          this.classSectionTempList = res.classPeriodsView;\n        }\n      });\n  }\n\n  updateScheduleTemp(resData: any): void {\n    if (resData.length > 0) {\n      this.filterSchoolScheduleTempList = [];\n\n      for (const key of resData) {\n        const index = this.filterSchoolScheduleTempList.findIndex(ele => ele.name === key.weekDayName);\n        if (index === -1) {\n          const val = [];\n          val.push(key);\n          const data = { name: key.weekDayName, value: val };\n          this.filterSchoolScheduleTempList.push(data);\n        } else {\n          const i = this.filterSchoolScheduleTempList.findIndex(ele => ele.name === key.weekDayName);\n          this.filterSchoolScheduleTempList[i].value.push(key);\n        }\n      }\n      this.sortByWeekday(this.filterSchoolScheduleTempList);\n    }\n  }\n\n  sortByWeekday(data): void {\n    const sorter = {\n      'monday': 1,\n      'tuesday': 2,\n      'wednesday': 3,\n      'thursday': 4,\n      'friday': 5,\n      'saturday': 6,\n      'sunday': 7\n    };\n\n    data.sort(function sortByDay(a, b): number {\n      const day1 = a.name.toLowerCase();\n      const day2 = b.name.toLowerCase();\n      return sorter[day1] - sorter[day2];\n    });\n\n    if (this.isAddTimetable === true) {\n      this.addClassSectionTempList = data;\n    }\n    else {\n      this.classSectionTempList = data;\n    }\n  }\n\n  addClassTimetable(): void {\n    if (this.errorFlag === 0) {\n      localStorage.removeItem('_tId');\n      this.isAddData = false;\n      this.isHasTemp = false;\n      this.isAddTimetable = true;\n      this.classSectionTempList = [];\n      this.isScheduleTemp = false;\n      this.classTimetableId = null;\n      this.classTimetableForm.controls['scheduleTemplateId'].setValue(null);\n      this.classTimetableForm.controls['startDate'].clearValidators();\n      this.classTimetableForm.controls['endDate'].clearValidators();\n      this.classTimetableForm.controls['startDate'].setValue(null);\n      this.classTimetableForm.controls['endDate'].setValue(null);\n      this.classPeriodsDataView.classTimetableId = this.classTimetableId;\n      this.isTemplateValid = false;\n      this.getTemplateList();\n      this.validateData();\n      this.title = 'Add Class Timetable';\n      this.classTimetableFormDetails = false;\n      this.clearDateValidators();\n    }\n  }\n\n  getTemplateList(): void {\n    this.scheduleTempList = [];\n    this.classTimetableService.classTimetableTemplatesGet().subscribe(res => {\n      if (res.commonViewModel != null) {\n        res.commonViewModel.map(x => {\n          this.scheduleTempList.push({ value: x.id, label: x.name });\n        });\n        if (this.errorFlag === 0) {\n          this.classTimetableForm.controls['scheduleTemplateId'].setValue(0);\n          this.classTimetableFormDetails = false;\n        }\n        else {\n          this.classTimetableForm.controls['scheduleTemplateId'].setValue(this.scheduleTemplateId);\n        }\n      }\n    });\n  }\n\n  onScheduleTemplateSelect(): void {\n    // if (JSON.parse(localStorage.getItem('_templateId')) == null) {\n    //   localStorage.setItem('_templateId', this.classTimetableTempList.find(x => x.value === this.classTimetableForm.value.scheduleTemplateId).timeTableId);\n    // }\n\n    this.addClassSectionTempList = [];\n    this.classTimetableService.classTimetableTemplateDetailsGet(this.classTimetableForm.value.scheduleTemplateId).subscribe(res => {\n      if (res.periodsListViewModel != null) {\n        this.addClassSectionTempList = res.periodsListViewModel;\n        this.updateScheduleTemp(this.addClassSectionTempList);\n        this.getPeriodTypeList();\n        if (this.classTimetableId != null) {\n          this.isScheduleTemp = true;\n        }\n      }\n    });\n  }\n\n  getPeriodTypeList(): void {\n    this.periodTypeList = [];\n    this.classTimetableService.classTimetableClassPeriodTypesGet().subscribe(res => {\n      if (res.classPeriodTypesDropDownView != null) {\n        res.classPeriodTypesDropDownView.map(x => {\n          this.periodTypeList.push({\n            value: x.id, label: x.name, is_Break: x.is_Break,\n            has_Assignments: x.has_Assignments, has_Multiple_Assignments: x.has_Multiple_Assignments\n          });\n        });\n        this.getCourseList();\n      }\n    });\n  }\n\n  getCourseList(): void {\n    this.courseList = [];\n    const sectionId = this.classTimetableForm.value.sectionId;\n    const boardId = this.sectionNamesList.filter(function (val): boolean {\n      return val.value === sectionId;\n    });\n\n    this.classTimetableService.classTimetableCoursesGet(boardId[0].boardId, this.classTimetableForm.value.classId).subscribe(res => {\n      if (res.commonViewModel != null) {\n        this.courseList = [];\n        res.commonViewModel.map(x => {\n          this.courseList.push({ value: x.id, label: x.name });\n        });\n      }\n      else {\n        this.openSnackBar(AppSettings.SCHOOL_BOARD_HAS_COURSES, true);\n      }\n      this.getStaffList();\n      this.errorFlag = 0;\n    });\n  }\n\n  getStaffList(): void {\n    this.staffList = [];\n    this.classTimetableService.classTimetableStaffGet('STFT_TCH').subscribe(res => {\n      if (res.commonViewModel != null) {\n        this.staffList = [];\n        res.commonViewModel.map(x => {\n          this.staffList.push({ value: x.id, label: x.name });\n        });\n      }\n    });\n  }\n\n  onPeriodTypeSelect(data: any, child: any, weekDayName: any): void {\n    const periodTypeId = data.value;\n    const hasOptions = this.periodTypeList.filter(function (val): boolean {\n      return val.value === periodTypeId;\n    });\n    this.currentPeriod = child;\n    this.currentPeriodTypeId = periodTypeId;\n    this.weekDayName = weekDayName;\n\n    if (hasOptions.length > 0) {\n      switch (true) {\n        case hasOptions[0].is_Break === 1:\n          this.assignLanguage(child, weekDayName);\n          this.onSubmitIsBreakDetails();\n          break;\n\n        case hasOptions[0].has_Assignments === 1:\n          this.assignCourseStaff(child, weekDayName);\n          break;\n\n        case hasOptions[0].has_Multiple_Assignments === 1:\n          this.assignLanguage(child, weekDayName);\n          this.courseStaffMultAssgnForm.reset();\n          this.coustomDialog = this.dialog.open(this.customTemplate, {\n            disableClose: true,\n            width: '500px',\n          });\n          break;\n\n        case (hasOptions[0].has_Assignments === 0 && hasOptions[0].has_Multiple_Assignments === 0 &&\n          hasOptions[0].is_Break === 0):\n          this.assignLanguage(child, weekDayName);\n          this.onSubmitIsBreakDetails();\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  assignLanguage(data: any, weekDayName: any): void {\n    if (this.updateClassTimetableDetails.length > 0) {\n      this.updateClassTimetableDetails.forEach(n => {\n        if (n.weekDayName === weekDayName) {\n          n.periodsView.forEach(m => {\n            if (m.schoolSchedulePeriodId === data.schoolSchedulePeriodId) {\n              m.hasAssignments = 0;\n              m.hasMultipleAssignments = 0;\n              m.courseAndStaffViewModel = [];\n            }\n          });\n        }\n      });\n    }\n    else {\n      this.addClassSectionTempList.forEach(e => {\n        if (e.name === data.weekDayName) {\n          e.value.forEach(e1 => {\n            if (e1.schoolSchedulePeriodId === data.schoolSchedulePeriodId) {\n              e1.hasAssignments = false;\n            }\n          });\n        }\n      });\n    }\n  }\n\n  assignCourseStaff(data: any, weekDayName: any): void {\n    if (this.updateClassTimetableDetails.length > 0) {\n      this.updateClassTimetableDetails.forEach(a => {\n        if (a.weekDayName === weekDayName) {\n          a.periodsView.forEach(b => {\n            if (b.schoolSchedulePeriodId === data.schoolSchedulePeriodId) {\n              b.hasAssignments = 1;\n              b.hasMultipleAssignments = 0;\n              b.courseAndStaffViewModel = [];\n              b.courseAndStaffViewModel.push({\n                courseId: null, staffId: null\n              });\n            }\n          });\n        }\n      });\n    }\n    else {\n      this.addClassSectionTempList.forEach(e => {\n        if (e.name === data.weekDayName) {\n          e.value.forEach(e1 => {\n            if (e1.schoolSchedulePeriodId === data.schoolSchedulePeriodId) {\n              e1.hasAssignments = true;\n            }\n          });\n        }\n      });\n    }\n\n    this.assignViewModelForPost();\n    this.classPeriodsDataView.classPeriodsMultiView = [];\n    this.classPeriodsDataView.classPeriodsMultiView.push({\n      courseId: null,\n      staffId: null\n    });\n    this.classTimetableService.classTimetableClassTimetableStaffCoursePost(this.classPeriodsDataView).subscribe(res => {\n      if (res.statusCode === this.httpStatus.OK) {\n        if (res.classTimetableId != null) {\n          this.classTimetableId = res.classTimetableId;\n          this.setForm(res);\n          this.isScheduleTemp = true;\n        }\n        this.clearHasMultiAssignments();\n        this.openSnackBar(res.messages.ResultMessage);\n      }\n      else {\n        this.openSnackBar(res.messages.ResultMessage, true);\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n  setForm(data: any): void {\n    this.classTimetableForm.controls['classId'].setValue(data.classId);\n    this.classTimetableForm.controls['sectionId'].setValue(data.sectionId);\n    this.timeTableId = data.timetableId;\n  }\n\n  closeDialog(): void {\n    if (!this.gridDataList.length){\n      this.clearStaff();\n    }\n    this.gridDataList = [];\n    this.commonService.setOverlay(AppSettings.HIDE);\n    if (this.updateClassTimetableDetails.length) {\n      const tempweekDay = this.weekDayName;\n      this.updateClassTimetableDetails.forEach(element => {\n        if (element.weekDayName === this.weekDayName) {\n          element.periodsView.forEach(element1 => {\n            if (element1.schoolSchedulePeriodId === this.currentPeriod.schoolSchedulePeriodId && this.currentPeriod.courseAndStaffViewModel.length === 0) {\n              element1.periodTypeId = 0;\n            }\n          });\n          this.weekDayName = null;\n        }\n      });\n     this.weekDayName = tempweekDay;\n    }\n    else if (this.addClassSectionTempList.length) {\n      this.addClassSectionTempList.forEach(element => {\n        if (element.name === this.currentPeriod.weekDayName) {\n          element.value.forEach(element1 => {\n            if (element1.schoolSchedulePeriodId === this.currentPeriod.schoolSchedulePeriodId && (this.currentPeriod.isEdit.length === 0 || this.currentPeriod.isEdit === false)) {\n              element1['periodTypeId'] = 0;\n            }\n          });\n        }\n      });\n    }\n    this.dialog.closeAll();\n  }\n\n  onSelectCourseStaffDetails(): boolean {\n    let errorFlag = 0;\n    if (this.courseStaffMultAssgnForm.status === AppSettings.VALID) {\n      const tableData = [];\n      const cname = this.courseList.find(x => x.value === this.courseStaffMultAssgnForm.value.courseId);\n      const sname = this.staffList.find(x => x.value === this.courseStaffMultAssgnForm.value.staffId);\n\n      tableData.push({\n        courseId: cname.value, courseName: cname.label,\n        staffId: sname.value, staffName: sname.label\n      });\n      if (this.gridDataList.length > 0) {\n        if (this.gridDataList.filter(x => x.courseId === cname.value).length > 0) {\n          this.openSnackBar(AppSettings.DUPLICATE_COURSE_SELECTION, true);\n          errorFlag = 1;\n          return false;\n        }\n      }\n\n      if (errorFlag === 0) {\n        tableData.forEach(element => {\n          this.gridDataList.push(element);\n        });\n        this._courseStaffMultiAssignForm.resetForm();\n      }\n    }\n    else {\n      this.isCourseStaffAssgnValid = true;\n      return false;\n    }\n  }\n\n  deleteItem(index: any): void {\n    this.gridDataList.splice(index, 1);\n  }\n\n  onSubmitMultiAssignmentsDetails(): void {\n    this.isSaveDetails = true;\n    this.assignViewModelForPost();\n    this.assignCourseStaffGridDetails();\n    this.onSubmitHasMultiAssignments();\n  }\n\n  onSubmitStaffCourseDetails(child: any, value: any, label: any, cs: any): void {\n    this.currentPeriod = child;\n    if (label.textContent === 'Course') {\n      this.currentPeriod.courseId = value;\n    }\n\n    else {\n      this.currentPeriod.staffId = value;\n    }\n\n    if (this.updateClassTimetableDetails.length > 0) {\n      if (this.currentPeriod.staffId === undefined) {\n        this.currentPeriod.staffId = cs.staffId;\n      }\n\n      if (this.currentPeriod.courseId === undefined) {\n        this.currentPeriod.courseId = cs.courseId;\n      }\n    }\n\n    this.assignViewModelForPost();\n    this.classPeriodsDataView.classPeriodsMultiView = [];\n    this.classPeriodsDataView.classPeriodsMultiView.push({\n      courseId: this.currentPeriod.courseId,\n      staffId: this.currentPeriod.staffId\n    });\n    this.classTimetableService.classTimetableClassTimetableStaffCoursePost(this.classPeriodsDataView).subscribe(res => {\n      if (res.statusCode === this.httpStatus.OK) {\n        if (res.classTimetableId != null) {\n          this.classTimetableId = res.classTimetableId;\n          this.setForm(res);\n          this.isScheduleTemp = true;\n        }\n        this.clearHasMultiAssignments();\n        this.openSnackBar(res.messages.ResultMessage);\n      }\n      else {\n        this.openSnackBar(res.messages.ResultMessage, true);\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n  onSubmitIsBreakDetails(): void {\n    this.assignViewModelForPost();\n    this.classPeriodsDataView.classPeriodsMultiView = [];\n    this.classPeriodsDataView.classPeriodsMultiView.push({\n      courseId: null,\n      staffId: null\n    });\n\n    this.classTimetableService.classTimetableClassTimetableStaffCoursePost(this.classPeriodsDataView).subscribe(res => {\n      if (res.statusCode === this.httpStatus.OK) {\n        if (res.classTimetableId != null) {\n          this.classTimetableId = res.classTimetableId;\n          this.setForm(res);\n          this.isScheduleTemp = true;\n        }\n        this.clearHasMultiAssignments();\n        this.openSnackBar(res.messages.ResultMessage);\n      }\n      else {\n        this.openSnackBar(res.messages.ResultMessage, true);\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n  assignViewModelForPost(): void {\n    if (this.classTimetableId != null) {\n      this.classPeriodsDataView.classTimetableId = this.classTimetableId;\n    }\n\n    const sectionId = this.classTimetableForm.value.sectionId;\n    const boardId = this.sectionNamesList.filter(function (val): boolean {\n      return val.value === sectionId;\n    });\n\n    this.classPeriodsDataView.classId = this.classTimetableForm.value.classId;\n    this.classPeriodsDataView.sectionId = this.classTimetableForm.value.sectionId;\n    this.classPeriodsDataView.boardId = boardId[0].boardId;\n    this.classPeriodsDataView.templateId = this.classTimetableForm.value.scheduleTemplateId;\n    this.classPeriodsDataView.startDate = this.classTimetableForm.value.startDate;\n    this.classPeriodsDataView.endDate = this.classTimetableForm.value.endDate;\n    this.classPeriodsDataView.schoolSchedulePeriodId = this.currentPeriod.schoolSchedulePeriodId;\n    this.classPeriodsDataView.classPeriodTypeId = this.currentPeriodTypeId || this.currentPeriod.periodTypeId;\n  }\n\n  assignCourseStaffGridDetails(): void {\n    this.classPeriodsDataView.classPeriodsMultiView = [];\n    this.gridDataList.forEach(e => {\n      this.classPeriodsDataView.classPeriodsMultiView.push({\n        courseId: e.courseId,\n        staffId: e.staffId\n      });\n    });\n    if (this.updateClassTimetableDetails.length > 0) {\n      this.updateClassTimetableDetails.forEach(n => {\n        if (n.weekDayName === this.weekDayName) {\n          n.periodsView.forEach(m => {\n            if (m.schoolSchedulePeriodId === this.currentPeriod.schoolSchedulePeriodId) {\n              m.hasAssignments = 0;\n              m.courseAndStaffViewModel = this.gridDataList;\n              if (this.gridDataList.length){\n                m.hasMultipleAssignments = 1;\n              } else{\n                m.hasMultipleAssignments = 0;\n                m.periodTypeId = 0;\n              }\n            }\n          });\n        }\n      });\n    }\n    else {\n      this.addClassSectionTempList.forEach(p => {\n        if (p.name === this.currentPeriod.weekDayName) {\n          p.value.forEach(q => {\n            if (q.schoolSchedulePeriodId === this.currentPeriod.schoolSchedulePeriodId) {\n              const index = p.value.findIndex(ele => ele.schoolSchedulePeriodId === this.currentPeriod.schoolSchedulePeriodId);\n\n              q.hasAssignments = 0;\n              q.courseAndStaffViewModel = this.gridDataList;\n              if (this.gridDataList.length){\n                q.hasMultipleAssignments = 1;\n              } else{\n                q.hasMultipleAssignments = 0;\n                q.periodTypeId = 0;\n              }\n\n              p.value[index].isEdit = false;\n              for (const key of this.gridDataList) {\n                if (p.value[index].isEdit === false) {\n                  p.value[index].isEdit = [];\n                  p.value[index].isEdit.push(key);\n                }\n                else {\n                  p.value[index].isEdit.push(key);\n                }\n              }\n            }\n          });\n        }\n      });\n    }\n  }\n\n  onSubmitHasMultiAssignments(): void {\n    this.classTimetableService.classTimetableClassTimetableStaffCoursePost(this.classPeriodsDataView).subscribe(res => {\n      if (res.statusCode === this.httpStatus.OK) {\n        this.dialog.closeAll();\n        this.isSaveDetails = false;\n\n        if (res.classTimetableId != null) {\n          this.classTimetableId = res.classTimetableId;\n          this.setForm(res);\n          this.isScheduleTemp = true;\n        }\n        this.openSnackBar(res.messages.ResultMessage);\n        this.gridDataList = [];\n      }\n      else {\n        this.openSnackBar(res.messages.ResultMessage, true);\n      }\n    }, error => {\n      this.isSaveDetails = false;\n      this.errorResponse(error);\n    });\n  }\n\n  clearHasMultiAssignments(): void {\n    this.addClassSectionTempList.forEach(p => {\n      if (p.name === this.currentPeriod.weekDayName) {\n        p.value.forEach(q => {\n          if (q.schoolSchedulePeriodId === this.currentPeriod.schoolSchedulePeriodId) {\n            const index = p.value.findIndex(ele => ele.schoolSchedulePeriodId === this.currentPeriod.schoolSchedulePeriodId);\n            p.value[index].isEdit = [];\n          }\n        });\n      }\n    });\n  }\n\n  editMultiAssignments(data: any, periodTypeId: any): void {\n    this.currentPeriod = data;\n    this.currentPeriodTypeId = periodTypeId;\n    this.gridDataList = data.isEdit || data.courseAndStaffViewModel;\n    this.coustomDialog = this.dialog.open(this.customTemplate, {\n      disableClose: true,\n      width: '500px',\n    });\n    this.courseStaffMultAssgnForm.reset();\n  }\n\n  deleteClassTimetable(): void {\n    const dialogRef = this.dialog.open(CustomDialogComponent, {\n      disableClose: true,\n      data: { text: this.commonService.getTranslation(AppSettings.DELETE_CONFORMATION, ''), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n    });\n    dialogRef.afterClosed().subscribe(action => {\n      if (action === AppSettings.YES) {\n        this.classTimetableService.classTimetableClassPeriodsDelete(this.classTimetableForm.value.classId, this.classTimetableForm.value.sectionId,\n          this.classTimetableForm.value.scheduleTemplateId).subscribe(res => this.deleteResponse(res), error => {\n            this.errorResponse(error);\n          });\n      }\n      if (action === AppSettings.NO) {\n        this.dialog.closeAll();\n      }\n    });\n  }\n\n  deleteResponse(response: any): void {\n    this.isTemplateValid = false;\n    this.classTimetableForm.controls['scheduleTemplateId'].setValue(null);\n    this.validateStartEndDate();\n    this.openSnackBar(response.messages.ResultMessage);\n  }\n\n  updateClassTimetable(): void {\n    localStorage.setItem('_tId', this.classTimetableTempList.find(x => x.value === this.classTimetableForm.value.scheduleTemplateId).timeTableId);\n    const datePipe = new DatePipe('en-US');\n\n    this.classTimetableTempList.forEach(e => {\n      if (e.value === this.classTimetableForm.value.scheduleTemplateId) {\n        this.scheduleTemplateId = e.scheduleTemplateId;\n        this.startDate = datePipe.transform(e.aSd, AppSettings.DATE_FORMAT);\n        this.endDate = datePipe.transform(e.aEd, AppSettings.DATE_FORMAT);\n      }\n    });\n\n    this.classTimetableService.classTimetableClassTimetableByIdGet(this.classTimetableForm.value.classId, this.classTimetableForm.value.sectionId,\n      this.classTimetableForm.value.scheduleTemplateId, this.startDate, this.endDate).subscribe(res => {\n        if (res.classPeriodsView != null) {\n          this.classSectionTempList = [];\n          this.addClassSectionTempList = [];\n          this.updateClassTimetableDetails = [];\n          this.isAddData = false;\n          this.isHasTemp = false;\n          this.isAddTimetable = true;\n          this.isTemplateValid = false;\n          this.errorFlag = 1;\n          this.getPeriodTypeList();\n          this.getTemplateList();\n          this.classTimetableForm.controls['startDate'].setValue(this.startDate);\n          this.classTimetableForm.controls['endDate'].setValue(this.endDate);\n          this.classTimetableForm.controls['startDate'].clearValidators();\n          this.classTimetableForm.controls['endDate'].clearValidators();\n          this.updateClassTimetableDetails = res.classPeriodsView;\n          this.title = 'Edit Class Timetable';\n          this.isScheduleTemp = true;\n          this.validateData();\n        }\n        else {\n          this.openSnackBar(res.messages.ResultMessage);\n          return false;\n        }\n      });\n  }\n\n  validateStartEndDate(): void {\n    this.isAddData = true;\n    this.isHasTemp = false;\n    this.isAddTimetable = false;\n    this.classTimetableForm.reset();\n    this.classSectionTempList = [];\n    this.addClassSectionTempList = [];\n    this.updateClassTimetableDetails = [];\n    this.title = 'Add Class Timetable';\n    this._classTimeTableForm.resetForm();\n  }\n\n  validateData(): void {\n    if ((this.classTimetableForm.value.startDate == null\n      || this.classTimetableForm.value.startDate === undefined) && (this.classTimetableForm.value.endDate == null || this.classTimetableForm.value.endDate === undefined)) {\n      this.isValidDate = false;\n      this.classTimetableFormDetails = false;\n    } else {\n      this.isValidDate = true;\n    }\n  }\n\n  clearDateValidators(): void {\n    if ((this.classTimetableForm.value.startDate == null\n      || this.classTimetableForm.value.startDate === undefined) && (this.classTimetableForm.value.endDate == null || this.classTimetableForm.value.endDate === undefined)) {\n      if (this.classTimetableForm.controls['startDate'].invalid || this.classTimetableForm.controls['endDate'].invalid) {\n        this.classTimetableForm.controls['startDate'].clearValidators();\n        this.classTimetableForm.controls['startDate'].updateValueAndValidity();\n        this.classTimetableForm.controls['endDate'].clearValidators();\n        this.classTimetableForm.controls['endDate'].updateValueAndValidity();\n      }\n    }\n  }\n\n  onSelectClassTimetable(): boolean {\n    this.validateData();\n   // this.clearDateValidators();\n\n    if (this.classTimetableForm.controls.scheduleTemplateId.value === 0) {\n      this.classTimetableForm.controls['scheduleTemplateId'].setValue(null);\n    }\n    if (this.classTimetableForm.status === AppSettings.VALID) {\n      this.classTimetableUpdateView.id = this.classTimetableId;\n      this.classTimetableUpdateView.startDate = this.classTimetableForm.value.startDate;\n      this.classTimetableUpdateView.endDate = this.classTimetableForm.value.endDate;\n      if (this.classTimetableId != null) {\n        this.classTimetableService.classTimetableClassTimetableUpdatePut(this.classTimetableUpdateView).subscribe(res => {\n          if (res.statusCode === this.httpStatus.OK) {\n            this.isValidDate = false;\n            this.openSnackBar(res.messages.ResultMessage);\n            this.savedDataView(res.timetableId);\n          }\n          else {\n            this.openSnackBar(res.messages.ResultMessage, true);\n          }\n        }, error => {\n          this.errorResponse(error);\n        });\n      }\n      else {\n        this.openSnackBar(AppSettings.PLEASE_ASSIGN_COURSE_STAFF, true);\n      }\n    }\n    else {\n      this.classTimetableFormDetails = true;\n      return false;\n    }\n  }\n\n  savedDataView(data: any): void {\n    const sid = this.classTimetableForm.value.sectionId;\n    this.classTimetableTempList = [];\n    const boardId = this.sectionNamesList.filter(function (val): boolean {\n      return val.value === sid;\n    });\n\n    this.classTimetableService.classTimetableClassTimetableTemplatesGet(this.classTimetableForm.value.sectionId, this.classTimetableForm.value.classId,\n      boardId[0].boardId).subscribe(res => {\n        if (res.classTimetableTemplatesDataView != null) {\n          res.classTimetableTemplatesDataView.map(x => {\n            if (x.startDate != null && x.endDate != null) {\n              const startDate = (x.startDate == null) ? null : this.commonService.customDateFormat(x.startDate, this.getSchoolDateFormat()).date;\n              const endDate = (x.endDate == null) ? null : this.commonService.customDateFormat(x.endDate, this.getSchoolDateFormat()).date;\n              this.classTimetableTempList.push({\n                value: x.id, label: x.name + ' ' + startDate + ' ' + 'to' + ' ' + endDate,\n                scheduleTemplateId: x.templateId,\n                aSd: x.startDate,\n                aEd: x.endDate,\n                timeTableId: x.classTimetableId\n              });\n            }\n            else {\n              this.classTimetableTempList.push({\n                value: x.id, label: x.name, scheduleTemplateId: x.templateId, aSd: x.startDate,\n                aEd: x.endDate,\n                timeTableId: x.classTimetableId\n              });\n            }\n          });\n          this.addClassSectionTempList = [];\n          this.updateClassTimetableDetails = [];\n          this.classTimetableTempList.forEach(n => {\n            if (n.timeTableId === data) {\n              this.classTimetableId = n.value;\n            }\n          });\n\n          this.classTimetableForm.controls['scheduleTemplateId'].setValue(this.classTimetableId);\n          this.onTemplateSelect(this.classTimetableId);\n          this.isTemplateValid = true;\n          this.isHasTemp = false;\n          this.isAddData = true;\n          this.isAddTimetable = false;\n        }\n        else {\n          this.openSnackBar(res.messages.ResultMessage, true);\n        }\n      }, error => {\n        this.isSaveDetails = false;\n        this.errorResponse(error);\n      });\n  }\n\n  clearBack(): void {\n    this.classTimetableFormDetails = false;\n    if (JSON.parse(localStorage.getItem('_tId')) != null) {\n      this.savedDataView(JSON.parse(localStorage.getItem('_tId')));\n    }\n    //  else if (JSON.parse(localStorage.getItem('_templateId')) != null) {\n    //   this.savedDataView(JSON.parse(localStorage.getItem('_templateId')));\n    // } \n    \n    else if (this.classTimetableId != null) {\n      this.savedDataView(this.timeTableId);\n    } else {\n      this.isAddData = true;\n      this.isAddTimetable = false;\n      this.addClassSectionTempList = [];\n      this.updateClassTimetableDetails = [];\n      this.onSelect();\n    }\n    this.clearDateValidators();\n  }\n\n  clearStaff(): void {\n    this.gridDataList = [];\n    this.onSubmitMultiAssignmentsDetails();\n  }\n}\n","module.exports = \"<div class=\\\"content p-40\\\">\\n  <div class=\\\"pl-24 text-uppercase font-size-18 pb-4\\\"><span>{{title | translate}}</span>\\n  </div>\\n  <!-- Get details of class section dropdowns-->\\n  <div class=\\\"w-100-p mat-elevation-z8 simple-table-container radius-20\\\" fxLayout=\\\"column\\\">\\n    <form *ngIf=\\\"!addTimeTable && !isEdit\\\" [formGroup]=\\\"classTimetableForm\\\" (ngSubmit)=\\\"onSubmitClassTimetable()\\\"\\n      #ClassTimeTableForm=\\\"ngForm\\\" fxLayout=\\\"column\\\">\\n      <div fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\" class=\\\"pt-20 px-20\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"35\\\">\\n          <mat-label #classId translate>Class</mat-label>\\n          <mat-select (selectionChange)=\\\"onClassSelect($event)\\\" formControlName=\\\"classId\\\" required>\\n            <mat-option *ngFor=\\\"let class of filterClasses\\\" [value]=\\\"class.value\\\">\\n              {{class.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"classId.innerText\\\" [validationControl]=\\\"classTimetableForm.controls.classId\\\"\\n              [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"px-sm-24\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"35\\\">\\n          <mat-label #sectionId translate>Section</mat-label>\\n          <mat-select formControlName=\\\"sectionId\\\" (selectionChange)=\\\"onSectionSelect()\\\" required>\\n            <mat-option [style.display]=\\\"classTimetableForm.value.classId ? '' : 'none'\\\"\\n              *ngFor=\\\"let section of sectionNamesList\\\" [value]=\\\"section.value\\\">\\n              {{section.label}}\\n              <span *ngIf=\\\"section.boardName!=null\\\">({{section.boardName}})</span>\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"sectionId.innerText\\\"\\n              [validationControl]=\\\"classTimetableForm.controls.sectionId\\\" [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <!--  End -->\\n\\n        <!-- Edit,Delete actions if class section has template details -->\\n        <div fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\" fxLayout=\\\"column\\\" class=\\\"pt-12 pr-12\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n            <button *ngIf=\\\"classTimetableForm?.value?.selectedTemplated\\\" type=\\\"button\\\" mat-icon-button class=\\\"red-400-fg\\\"\\n              (click)=\\\"deleteClassTimetable()\\\">\\n              <mat-icon>delete</mat-icon>\\n            </button>\\n            <button *ngIf=\\\"classTimetableForm.valid && timeTableList?.length\\\" mat-raised-button type=\\\"button\\\"\\n              class=\\\"text-uppercase mx-20\\\" color=\\\"accent\\\" (click)=\\\"addClassTimetable()\\\"><span\\n                translate>Add</span></button>\\n            <button mat-button type=\\\"button\\\" (click)=\\\"getHelpText('Class Timetables')\\\">\\n              <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n        <!-- End -->\\n      </div>\\n\\n      <!-- Get Template details with respect to class section and board Id's-->\\n      <mat-divider *ngIf=\\\"classTimetableForm.valid && timeTableList?.length\\\"></mat-divider>\\n      <div *ngIf=\\\"classTimetableForm.valid && timeTableList?.length\\\" fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\"\\n        class=\\\"pt-24 px-20\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #classTempId translate>Timetables</mat-label>\\n          <mat-select (selectionChange)=\\\"onTimeTableSelect($event.value)\\\" formControlName=\\\"selectedTemplated\\\">\\n            <mat-option *ngFor=\\\"let classTemp of timeTableList\\\" [value]=\\\"classTemp.value\\\">\\n              {{classTemp.label}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <div class=\\\"pt-16\\\"><button *ngIf=\\\"classTimetableForm?.value?.selectedTemplated\\\" mat-raised-button type=\\\"button\\\" id=\\\"edit\\\"\\n            class=\\\"text-uppercase mx-20 mb-20\\\" color=\\\"primary\\\" (click)=\\\"updateClassTimetable()\\\" translate>\\n            <span\\n              translate>Edit</span></button> </div>\\n      </div>\\n      <!-- End -->\\n      <!-- Get Details of schedule template based on class section and board after save-->\\n      <mat-divider *ngIf=\\\"selectedTimeTableDetails?.length > 0\\\" class=\\\"mt-20\\\"></mat-divider>\\n      <div *ngIf=\\\"selectedTimeTableDetails?.length > 0\\\" class=\\\"m-20 border school-period\\\">\\n        <div fxLayout=\\\"row inline\\\" *ngFor=\\\"let item of selectedTimeTableDetails; let in = index\\\" class=\\\"mw-100-p\\\">\\n          <div class=\\\"border-bottom\\\">\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\"\\n              class=\\\"border-right p-20 w-120 weekDay custom-white accent-fg font-weight-600 text-uppercase\\\" translate>\\n              {{item.weekDayName | translate}}</div>\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\" class=\\\"border-right w-200 p-12 break-word\\\"\\n              *ngFor=\\\"let child of item.periodsView;let i=index\\\"\\n              [ngClass]=\\\"item.periodsView?.length > selectedTimeTableDetails[in-1]?.periodsView?.length ? (i > ( selectedTimeTableDetails[in-1]?.periodsView?.length-1) && in  ? 'border-top' : ''): ''\\\">\\n              <div fxLayout=\\\"row\\\">{{child.periodName}}</div>\\n              <div fxLayout=\\\"row\\\" class=\\\"grey-500-fg\\\" *ngIf=\\\"child.startTime!= null\\\">{{child.startTime | slice:0:5}} to\\n                {{child.endTime | slice:0:5}}\\n              </div>\\n              <div fxLayout=\\\"row\\\">{{child.periodTypeName}}</div>\\n              <div fxLayout=\\\"row\\\" *ngFor=\\\"let childs of child.courseAndStaffViewModel;\\\"><span\\n                  *ngIf=\\\"childs.courseName!=null || childs.staffName\\\" class=\\\"text-truncate\\\" matTooltipClass=\\\"matTool-tip\\\"\\n                  matTooltipPosition=\\\"above\\\" [matTooltip]=\\\"childs.staffName\\\">{{childs.courseName}} <span *ngIf=\\\"childs.courseName && childs.staffName\\\">-</span>\\n                  {{childs.staffName}}</span></div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- End -->\\n\\n    </form>\\n\\n    <!-- Add Class Timetable -->\\n    <form *ngIf=\\\"addTimeTable || isEdit\\\" [formGroup]=\\\"classTimetableForm\\\" (ngSubmit)=\\\"onSubmitClassTimetable()\\\"\\n      #ClassTimeTableForm=\\\"ngForm\\\">\\n      <div fxlayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"p-16\\\">\\n        <button mat-raised-button translate type=\\\"button\\\" color=\\\"primary\\\" class=\\\"text-uppercase\\\"\\n          (click)=\\\"clearBack()\\\">{{'Back' | translate}}</button>\\n        <button mat-button type=\\\"button\\\" (click)=\\\"getHelpText('Class Timetables')\\\">\\n          <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n        </button>\\n      </div>\\n      <mat-divider></mat-divider>\\n      <div fxLayoutAlign=\\\"center center\\\" fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\" class=\\\"pt-24 px-20\\\">\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n          <mat-label #classId translate>Class</mat-label>\\n          <mat-select formControlName=\\\"classId\\\" [disabled]=\\\"addTimeTable || isEdit\\\" required>\\n            <mat-option *ngFor=\\\"let class of filterClasses\\\" [value]=\\\"class.value\\\">\\n              {{class.label}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" class=\\\"px-sm-24\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n          fxFlex.gt-sm=\\\"35\\\">\\n          <mat-label #sectionId translate>Section</mat-label>\\n          <mat-select formControlName=\\\"sectionId\\\" [disabled]=\\\"addTimeTable || isEdit\\\" required>\\n            <mat-option *ngFor=\\\"let section of sectionNamesList\\\" [value]=\\\"section.value\\\">\\n              {{section.label}}\\n              <span *ngIf=\\\"section.boardName!=null\\\">({{section.boardName}})</span>\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n          <mat-label #scheduleTempId translate>Schedule Template</mat-label>\\n          <mat-select formControlName=\\\"scheduleTemplateId\\\" (selectionChange)=\\\"onScheduleTemplateSelect()\\\"\\n            [disabled]=\\\"classTimetableForm?.value?.scheduleTemplateId\\\" [required]=addTimeTable>\\n            <mat-option *ngFor=\\\"let scheduleTemp of scheduleTempList\\\" [value]=\\\"scheduleTemp.value\\\">\\n              {{scheduleTemp.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='scheduleTempId.innerText'\\n              [validationControl]=\\\"classTimetableForm.controls.scheduleTemplateId\\\" [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayoutAlign=\\\"start center\\\" fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\" class=\\\"py-16 px-20\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxFlex.gt-xs=\\\"32\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\"\\n          class=\\\"icon-center\\\">\\n          <mat-label #startDate translate>Start Date</mat-label>\\n          <input matInput (keyup)=\\\"forceValidation('startDate',classTimetableForm)\\\" [matDatepicker]=\\\"startDatePicker\\\"\\n            formControlName=\\\"startDate\\\"\\n            [required]=\\\"(classTimetableForm?.value?.startDate || classTimetableForm?.value?.endDate)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #startDatePicker></mat-datepicker>\\n          <mat-error>\\n            <app-validation [labelName]='startDate.innerText'\\n              [validationControl]=\\\"classTimetableForm.controls.startDate\\\" [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"px-sm-24 icon-center\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n          fxFlex.gt-sm=\\\"36\\\">\\n          <mat-label #endDate translate>End Date</mat-label>\\n          <input matInput (keyup)=\\\"forceValidation('endDate',classTimetableForm)\\\" [matDatepicker]=\\\"endDatePicker\\\"\\n            [min]=\\\"classTimetableForm.controls.startDate.value\\\" formControlName=\\\"endDate\\\"\\n            [required]=\\\"(classTimetableForm?.value?.startDate || classTimetableForm?.value?.endDate)\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #endDatePicker [startAt]=\\\"classTimetableForm.value.startDate\\\"></mat-datepicker>\\n          <mat-error>\\n            <app-validation [labelName]='endDate.innerText' [validationControl]=\\\"classTimetableForm.controls.endDate\\\"\\n              [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase mr-12 mb-20\\\"\\n          color=\\\"accent\\\">{{'submit' | translate}}</button>\\n      </div>\\n    </form>\\n\\n    <mat-divider *ngIf=\\\"classTimetableForm.valid && addTemplateView?.length > 0\\\" class=\\\"mt-20\\\"></mat-divider>\\n    <div *ngIf=\\\"classTimetableForm.valid && addTemplateView?.length > 0\\\" class=\\\"m-20 border school-period\\\">\\n      <div fxLayout=\\\"row inline\\\" *ngFor=\\\"let item of addTemplateView; let i=index\\\" class=\\\"mw-100-p border-bottom\\\">\\n        <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\"\\n          class=\\\"border-right p-20 w-120 weekDay custom-white accent-fg font-weight-600 text-uppercase\\\" translate>\\n          {{item.name}}</div>\\n        <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\" fxLayoutAlign=\\\"start start\\\" class=\\\"w-232 p-20\\\"\\n          *ngFor=\\\"let child of item.value;let ci=index\\\">\\n          <div fxLayout=\\\"row\\\">{{child.periodName}}</div>\\n          <div fxLayout=\\\"row\\\" class=\\\"grey-500-fg\\\" *ngIf=\\\"child.startTime!= null\\\">{{child.startTime | slice:0:5}} to\\n            {{child.endTime | slice:0:5}}\\n          </div>\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100-p\\\">\\n            <mat-label #periodTypeId translate>Period Type</mat-label>\\n            <mat-select (selectionChange)=\\\"onPeriodTypeSelect($event,child,i,ci)\\\" #periodTypeId=\\\"ngModel\\\" ngModel\\n              [(ngModel)]=\\\"child.periodTypeId\\\" name=\\\"periodTypeId\\\" required>\\n              <mat-option *ngFor=\\\"let periodType of periodTypeList\\\" [value]=\\\"periodType.value\\\">\\n                {{periodType.label}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <ng-container *ngIf=\\\"child && child?.courseAndStaffViewModel && child?.courseAndStaffViewModel?.length && addTimeTable\\\">\\n            <div fxLayout=\\\"row\\\" *ngFor=\\\"let courseStaff of child.courseAndStaffViewModel;\\\">\\n              <span class=\\\"pr-4\\\">{{courseStaff.courseName}}:</span><span class=\\\"break-word\\\">{{courseStaff.staffName}}</span></div>\\n            <div fxLayout=\\\"row\\\" *ngIf=\\\"child.courseAndStaffViewModel.length>0\\\"><button mat-raised-button id=\\\"edit\\\"\\n                (click)=editMultiAssignments(child,i); class=\\\"accent-fg\\\">Edit</button></div>\\n          </ng-container>\\n          <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"child.hasAssignments && addTimeTable\\\" class=\\\"w-100-p\\\">\\n            <mat-label #courseId translate>Course</mat-label>\\n            <mat-select \\n              (selectionChange)=\\\"onChangeStaffCourseDetails($event.value, true)\\\" required>\\n              <mat-option *ngFor=\\\"let course of courseList\\\" [value]=\\\"course.value\\\">\\n                {{course.label}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"child.hasAssignments && addTimeTable\\\" class=\\\"w-100-p\\\">\\n            <mat-label #staffId translate>Staff</mat-label>\\n            <mat-select \\n              (selectionChange)=\\\"onChangeStaffCourseDetails($event.value, false)\\\" required>\\n              <mat-option *ngFor=\\\"let staff of staffList\\\" [value]=\\\"staff.value\\\">\\n                {{staff.label}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <ng-container *ngIf=\\\"child && child?.courseAndStaffViewModel && child?.courseAndStaffViewModel?.length && !addTimeTable\\\">\\n            <ng-container *ngFor=\\\"let courseStaff of child.courseAndStaffViewModel;let l = last\\\">\\n              <div *ngIf=\\\"child.hasMultipleAssignments\\\" fxLayout=\\\"row\\\">\\n                <span class=\\\"pr-4\\\">{{courseStaff.courseName}}:</span><span class=\\\"break-word\\\">{{courseStaff.staffName}}</span></div>\\n              <div fxLayout=\\\"row\\\" *ngIf=\\\"child.hasMultipleAssignments && l\\\"><button mat-raised-button id=\\\"edit\\\"\\n                  (click)=\\\"editMultiAssignments(child, i);\\\" class=\\\"accent-fg\\\">Edit</button></div>\\n\\n              <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"child.hasAssignments\\\" class=\\\"w-100-p\\\">\\n                <mat-label #courseId translate>Course</mat-label>\\n                <mat-select #cId=\\\"ngModel\\\" [(ngModel)]=\\\"courseStaff.courseId\\\" ngModel name=\\\"cId\\\"\\n                  (selectionChange)=\\\"onChangeStaffCourseDetails($event.value, true, child)\\\" required>\\n                  <mat-option *ngFor=\\\"let course of courseList\\\" [value]=\\\"course.value\\\">\\n                    {{course.label}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n              <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"child.hasAssignments\\\" class=\\\"w-100-p\\\">\\n                <mat-label #staffId translate>Staff</mat-label>\\n                <mat-select #sId=\\\"ngModel\\\" [(ngModel)]=\\\"courseStaff.staffId\\\" ngModel name=\\\"sId\\\"\\n                  (selectionChange)=\\\"onChangeStaffCourseDetails($event.value, false, child)\\\" required>\\n                  <mat-option *ngFor=\\\"let staff of staffList\\\" [value]=\\\"staff.value\\\">\\n                    {{staff.label}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </ng-container>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"!child?.courseAndStaffViewModel?.length && isEdit\\\">\\n            <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"child.hasAssignments\\\" class=\\\"w-100-p\\\">\\n              <mat-label #courseId translate>Course</mat-label>\\n              <mat-select \\n                (selectionChange)=\\\"onChangeStaffCourseDetails($event.value, true, child)\\\" required>\\n                <mat-option *ngFor=\\\"let course of courseList\\\" [value]=\\\"course.value\\\">\\n                  {{course.label}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"outline\\\" *ngIf=\\\"child.hasAssignments\\\" class=\\\"w-100-p\\\">\\n              <mat-label #staffId translate>Staff</mat-label>\\n              <mat-select \\n                (selectionChange)=\\\"onChangeStaffCourseDetails($event.value, false, child)\\\" required>\\n                <mat-option *ngFor=\\\"let staff of staffList\\\" [value]=\\\"staff.value\\\">\\n                  {{staff.label}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </ng-container>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- Add options for Class Timetable -->\\n    <ng-container *ngIf=\\\"classTimetableForm.valid && !selectedTimeTableDetails?.length && !addTemplateView?.length && !timeTableList?.length && isReqProcessed | async\\\">\\n      <div class=\\\"text-center font-size-16 mt-48\\\" translate>No Class Time Table\\n        Has Been\\n        Defined For The\\n        Selected Class And Section</div>\\n      <div class=\\\"text-center font-size-16 pt-4\\\" translate>Please Click On Add To Create A\\n        New Time Table</div>\\n      <div fxLayout=\\\"row\\\" class=\\\"p-20\\\" fxLayoutAlign=\\\"center center\\\">\\n        <button mat-raised-button type=\\\"button\\\" (click)=\\\"addClassTimetable()\\\" class=\\\"text-uppercase px-36\\\"\\n          color=\\\"accent\\\" translate>Add</button>\\n      </div>\\n      <mat-divider class=\\\"mb-20\\\">\\n      </mat-divider>\\n      <!-- End -->\\n    </ng-container>\\n  </div>\\n</div>\\n\\n<!-- Coustom Dialog for Has_Multiple_Assignments -->\\n<ng-template #myTemplate>\\n  <!-- <div [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\"> -->\\n  <div fxLayoutAlign=\\\"space-between center\\\" class=\\\"font-size-20\\\"><span translate>Select Course & Staff</span><button id=\\\"close\\\"\\n      (click)=\\\"clearStaff()\\\" mat-icon-button>\\n      <mat-icon>close</mat-icon>\\n    </button></div>\\n  <form [formGroup]=\\\"courseStaffMultAssgnForm\\\" (ngSubmit)=\\\"onSelectCourseStaffDetails()\\\"\\n    #CourseStaffMultiAssignForm=\\\"ngForm\\\">\\n    <div fxFlexFill fxLayout=\\\"column\\\" class=\\\"pt-24\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill>\\n        <mat-label #courseId translate>Course</mat-label>\\n        <mat-select formControlName=\\\"courseId\\\" required>\\n          <mat-option *ngFor=\\\"let course of courseList\\\" [value]=\\\"course.value\\\">\\n            {{course.label}}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          <app-validation [labelName]='courseId.innerText'\\n            [validationControl]=\\\"courseStaffMultAssgnForm.controls.courseId\\\" [doValidate]=\\\"true\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill>\\n        <mat-label #staffId translate>Staff</mat-label>\\n        <mat-select formControlName=\\\"staffId\\\" required>\\n          <mat-option *ngFor=\\\"let staff of staffList\\\" [value]=\\\"staff.value\\\">\\n            {{staff.label}}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          <app-validation [labelName]='staffId.innerText'\\n            [validationControl]=\\\"courseStaffMultAssgnForm.controls.staffId\\\" [doValidate]=\\\"true\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n    <div fxFlexFill fxLayoutAlign=\\\"end center\\\" fxLayout=\\\"row\\\" class=\\\"pb-20\\\">\\n      <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase accent-fg\\\">{{'Select' | translate}}</button>\\n    </div>\\n  </form>\\n  <!-- </div> -->\\n  <div *ngIf=\\\"selectedCoursesSatffs?.length > 0\\\" fxLayout=\\\"column\\\">\\n    <mat-list fxLayout=\\\"row wrap\\\" class=\\\"pt-0 confirm-table border-top border-horizontal class-timetable\\\">\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\" class=\\\"secondary-text\\\"><span translate>Course</span></mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\" class=\\\"secondary-text\\\"><span translate>Staff</span></mat-list-item>\\n    </mat-list>\\n    <mat-list fxLayout=\\\"row wrap\\\" class=\\\"pt-0 confirm-table border class-timetable\\\">\\n      <ng-container *ngFor=\\\"let column of selectedCoursesSatffs;let i=index\\\">\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\">{{column.courseName}}</mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"50\\\">\\n          <span>{{column.staffName}}</span>\\n          <button [disabled]=\\\"!(selectedCoursesSatffs?.length>1)\\\" mat-icon-button\\n            (click)=\\\"deleteSelectedCourseStaffItem(i)\\\">\\n            <mat-icon>cancel</mat-icon>\\n          </button>\\n        </mat-list-item>\\n      </ng-container>\\n    </mat-list>\\n  </div>\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"pt-12\\\">\\n    <button *ngIf=\\\"selectedCoursesSatffs?.length===1\\\" type=\\\"reset\\\" mat-raised-button class=\\\"mr-16 text-uppercase\\\"\\n      (click)=\\\"clearMultiSelectStaff()\\\">{{'Clear' | translate}}</button>\\n    <button *ngIf=\\\"selectedCoursesSatffs?.length>0\\\" type=\\\"button\\\" mat-raised-button color=\\\"accent\\\"\\n      (click)=\\\"onMultiSelectCourseStaffSubmit()\\\" [disabled]=disableSaveBtn translate>{{'Save' | translate}}</button>\\n  </div>\\n</ng-template>\\n<!-- End Coustom Dialog  -->\\n\"","module.exports = \".school-period {\\n  overflow-y: auto;\\n  overflow: overlay; }\\n  .school-period .mw-100-p {\\n    min-width: 100%; }\\n  .school-period .weekDay {\\n    position: -webkit-sticky;\\n    position: sticky;\\n    left: 0px;\\n    z-index: 1; }\\n  .class-timetable {\\n  max-height: 200px;\\n  overflow: auto; }\\n  .class-timetable ::ng-deep .mat-list-item-content {\\n    place-content: center space-between;\\n    -webkit-box-align: center;\\n            align-items: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9jbGFzcy1zY2hlZHVsZXMvY2xhc3MtdGltZXRhYmxlcy9jbGFzcy10aW1ldGFibGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBRUksZ0JBQWdCO0VBQ2hCLGlCQUFpQixFQUFBO0VBSHJCO0lBS1EsZUFBZSxFQUFBO0VBTHZCO0lBUVEsd0JBQWdCO0lBQWhCLGdCQUFnQjtJQUNoQixTQUFTO0lBQ1QsVUFBVSxFQUFBO0VBR2xCO0VBQ0ksaUJBQWlCO0VBQ2pCLGNBQWMsRUFBQTtFQUZsQjtJQUlJLG1DQUFtQztJQUNuQyx5QkFBbUI7WUFBbkIsbUJBQW1CLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2NvbmZpZ3VyYXRpb24vY2xhc3Mtc2NoZWR1bGVzL2NsYXNzLXRpbWV0YWJsZXMvY2xhc3MtdGltZXRhYmxlcy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLnNjaG9vbC1wZXJpb2Qge1xuICAgIC8vbWF4LXdpZHRoOiA3ODhweDtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIG92ZXJmbG93OiBvdmVybGF5O1xuICAgIC5tdy0xMDAtcCB7XG4gICAgICAgIG1pbi13aWR0aDogMTAwJTtcbiAgICAgfVxuICAgIC53ZWVrRGF5IHtcbiAgICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgICAgbGVmdDogMHB4O1xuICAgICAgICB6LWluZGV4OiAxO1xuICAgIH0gICBcbn1cbi5jbGFzcy10aW1ldGFibGV7XG4gICAgbWF4LWhlaWdodDogMjAwcHg7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICA6Om5nLWRlZXAgLm1hdC1saXN0LWl0ZW0tY29udGVudHtcbiAgICBwbGFjZS1jb250ZW50OiBjZW50ZXIgc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIH1cbn1cbiJdfQ== */\"","import { Component, OnInit, TemplateRef, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { ClassTimetableService } from 'app/service/class-schedules/class-time-table.service';\nimport { GradeSetupService } from 'app/service/grading-service/api/grade-setup.service';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { CommonService } from 'app/service/common.service';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { AppSettings } from 'app/app.constants';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ClassPeriodsDataView } from '../model/class-periods-data-view';\nimport { ClassPeriodsMultiView } from '../model/class-periods-multi-view';\nimport { ClassTimetableUpdateView } from '../model/class-timetable-update-view';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'app-class-timetables',\n  templateUrl: './class-timetables.component.html',\n  styleUrls: ['./class-timetables.component.scss'],\n  providers: [ClassTimetableService, GradeSetupService]\n})\nexport class ClassTimetablesComponent extends CommonComponent implements OnInit {\n  @ViewChild('myTemplate') customTemplate: TemplateRef<any>;\n  @ViewChild('CourseStaffMultiAssignForm') _courseStaffMultiAssignForm;\n\n  filterClasses: any[];\n  sectionNamesList: any[];\n  classTimetableForm: any;\n  timeTableList: any[];\n  selectedTimeTableDetails: any[];\n  classPeriodsDataView: ClassPeriodsDataView;\n  classPeriodsMultiView: Array<ClassPeriodsMultiView>;\n  scheduleTempList: any[];\n  addTimeTable = false;\n  addTemplateView: any[];\n  periodTypeList: any[];\n  courseList: any[];\n  staffList: any[];\n  courseStaffMultAssgnForm: any;\n  selectedCoursesSatffs = [];\n  index: any;\n  classTimetableUpdateView: ClassTimetableUpdateView;\n  isReqProcessed = Promise.resolve(false);\n  title = 'Add Class Timetable';\n  isEdit: boolean;\n  classTimeTableValue: any;\n  disableSaveBtn: boolean;\n\n  constructor(private classTimetableService: ClassTimetableService, private gradeSetupService: GradeSetupService, private _fb: FormBuilder, public commonService: CommonService,\n    public dialog: MatDialog, public snackBar: MatSnackBar, private cd: ChangeDetectorRef, private _focusMonitor: FocusMonitor) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.timeTableForm();\n    this.getClassesList();\n  }\n\n  // Get Classes to filter table data\n  getClassesList(): void {\n    this.filterClasses = [];\n    this.gradeSetupService.schoolAcademicClasses().subscribe(response => {\n      if (response.listViews != null) {\n        if (response.listViews.length) {\n          response.listViews.forEach(element => {\n            this.filterClasses.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  // End\n\n  onClassSelect(data: any): void {\n    this.sectionNamesList = [];\n    this.clearSelectedTemplate();\n    this.isReqProcessed = Promise.resolve(false);\n    this.classTimetableForm.controls['sectionId'].reset();\n    this.classTimetableService.classTimetableSectionsGet(data.value).subscribe(res => {\n      if (res.classTimetableSectionsView != null) {\n        res.classTimetableSectionsView.map(x => {\n          this.sectionNamesList.push({ value: x.sectionId, label: x.sectionName, boardId: x.boardId, boardName: x.boardName });\n        });\n      }\n    });\n  }\n\n  timeTableForm(): void {\n    this.classTimetableForm = this._fb.group({\n      classId: new FormControl('', [Validators.required]),\n      sectionId: new FormControl('', [Validators.required]),\n      scheduleTemplateId: new FormControl(null),\n      startDate: new FormControl(null),\n      endDate: new FormControl(null),\n      selectedTemplated: new FormControl(null)\n    });\n\n    this.courseStaffMultAssgnForm = this._fb.group({\n      courseId: new FormControl('', [Validators.required]),\n      staffId: new FormControl('', [Validators.required]),\n    });\n  }\n\n  onSectionSelect(): void {\n    if (this.classTimetableForm.valid) {\n      this.clearSelectedTemplate();\n      this.isReqProcessed = Promise.resolve(false);\n      const boardId = this.sectionNamesList.find(s => s.value === this.classTimetableForm.value.sectionId).boardId;\n      this.getTemplateDetails(boardId);\n    }\n  }\n\n  getTemplateDetails(boardId: number): void {\n    this.classTimetableForm.controls['selectedTemplated'].reset();\n    this.timeTableList = [];\n    this.classTimetableService.classTimetableClassTimetableTemplatesGet(this.classTimetableForm.value.sectionId,\n      this.classTimetableForm.value.classId, boardId).subscribe(res => {\n        this.isReqProcessed = Promise.resolve(true);\n        if (res.classTimetableTemplatesDataView != null) {\n          res.classTimetableTemplatesDataView.map(x => {\n            const startDate = (x.startDate == null) ? null : this.commonService.customDateFormat(x.startDate, this.getSchoolDateFormat()).date;\n            const endDate = (x.endDate == null) ? null : this.commonService.customDateFormat(x.endDate, this.getSchoolDateFormat()).date;\n            const date = [startDate, endDate].filter(j => j).join(' to ');\n            this.timeTableList.push({\n              value: x.id,\n              label: [x.name, date].filter(j => j).join(' '),\n              scheduleTemplateId: x.templateId,\n              aSd: x.startDate,\n              aEd: x.endDate,\n              timeTableId: x.classTimetableId\n            });\n          });\n\n          if (this.timeTableList.length === 1 && (this.classTimeTableValue === undefined || this.classTimeTableValue === null)) {\n            this.classPeriodsDataView = {\n              classTimetableId: null\n            };\n            this.classTimeTableValue = this.timeTableList[0].timeTableId;\n          }\n\n          if (this.classTimeTableValue !== undefined && this.classTimeTableValue !== null) {\n            const classTimeTable = this.timeTableList.find(sl => sl.timeTableId === this.classTimeTableValue);\n            this.classPeriodsDataView.classTimetableId = classTimeTable !== undefined ? classTimeTable.value : null;\n            this.classTimetableForm.controls['selectedTemplated'].patchValue(this.classPeriodsDataView.classTimetableId);\n            this.onTimeTableSelect(this.classPeriodsDataView.classTimetableId);\n          }\n        }\n      });\n  }\n\n\n  onTimeTableSelect(data: any): void {\n    this.selectedTimeTableDetails = [];\n    const boardId = this.sectionNamesList.find(x => x.value === this.classTimetableForm.value.sectionId).boardId;\n    this.classTimeTableValue = this.timeTableList.find(sl => sl.value === data).timeTableId;\n\n    this.classTimetableService.classTimetableClassTimetableGet(this.classTimetableForm.value.classId, this.classTimetableForm.value.sectionId,\n      boardId, data).subscribe(res => {\n\n        if (res.classPeriodsView != null) {\n          this.selectedTimeTableDetails = res.classPeriodsView;\n        } else {\n          this.deleteTimeTable(false);\n        }\n      });\n  }\n\n  clearSelectedTemplate(): void {\n    if (this.classPeriodsDataView !== undefined) {\n      this.classPeriodsDataView.classTimetableId = null;\n    }\n    this.classTimetableForm.controls['selectedTemplated'].setValue(null);\n    this.selectedTimeTableDetails = [];\n    this.classTimeTableValue = null;\n  }\n\n  deleteClassTimetable(): void {\n    const dialogRef = this.dialog.open(CustomDialogComponent, {\n      disableClose: true,\n      data: { text: this.commonService.getTranslation(AppSettings.DELETE_CONFORMATION, ''), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n    });\n    dialogRef.afterClosed().subscribe(action => {\n      if (action === AppSettings.YES) {\n        this.deleteTimeTable();\n      }\n      if (action === AppSettings.NO) {\n        this.dialog.closeAll();\n      }\n    });\n  }\n\n  deleteTimeTable(showSnackBar = true): void {\n    this.classTimetableService.classTimetableClassPeriodsDelete(this.classTimetableForm.value.classId, this.classTimetableForm.value.sectionId,\n      this.classTimetableForm.value.selectedTemplated).subscribe(res => {\n        this.clearSelectedTemplate();\n        if (showSnackBar) {\n          this.onSectionSelect();\n          this.openSnackBar(res.messages.ResultMessage);\n        }\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n\n  addClassTimetable(): void {\n    this.title = 'Add Class Timetable';\n    this.classPeriodsDataView = {\n      classPeriodsMultiView: this.classPeriodsMultiView = []\n    };\n    this.selectedTimeTableDetails = [];\n    this.classPeriodsDataView.classTimetableId = this.classTimetableForm.value.scheduleTemplateId;\n    this.getTemplateList();\n    this.addTimeTable = true;\n\n  }\n\n  getTemplateList(setTemplateId?: any): void {\n    this.scheduleTempList = [];\n    this.classTimetableService.classTimetableTemplatesGet().subscribe(res => {\n      if (res.commonViewModel != null) {\n        res.commonViewModel.map(x => {\n          this.scheduleTempList.push({ value: x.id, label: x.name });\n        });\n        this.classTimetableForm.controls['scheduleTemplateId'].reset();\n        if (setTemplateId) {\n          this.classTimetableForm.controls['scheduleTemplateId'].setValue(setTemplateId);\n        }\n      }\n    });\n  }\n\n  clearBack(): void {\n    this.addTimeTable = false;\n    this.isEdit = false;\n    this.title = 'Add Class Timetable';\n    this.clearClassTimeTableFormValidator('classTimetableForm', 'scheduleTemplateId');\n    this.clearClassTimeTableFormValidator('classTimetableForm', 'startDate');\n    this.clearClassTimeTableFormValidator('classTimetableForm', 'endDate');\n    this.addTemplateView = [];\n    this.selectedCoursesSatffs = [];\n    // if (this.classTimeTableValue) {\n      const boardId = this.sectionNamesList.find(sl => sl.value === this.classTimetableForm.value.sectionId).boardId;\n      this.getTemplateDetails(boardId);\n    // }\n  }\n\n  clearClassTimeTableFormValidator(form: any, control: any, clearValidator = true): void {\n    if (clearValidator) {\n      this[form].controls[control].clearValidators();\n    }\n    this[form].controls[control].reset();\n    this[form].updateValueAndValidity();\n  }\n\n  onScheduleTemplateSelect(): void {\n    this.addTemplateView = [];\n    this.classTimetableService.classTimetableTemplateDetailsGet(this.classTimetableForm.value.scheduleTemplateId).subscribe(res => {\n      if (res.periodsListViewModel != null) {\n        this.addTemplateView = res.periodsListViewModel;\n        this.updateScheduleTemp(this.addTemplateView);\n        this.getPeriodTypeList();\n      }\n    });\n  }\n\n  getPeriodTypeList(): void {\n    this.periodTypeList = [];\n    this.classTimetableService.classTimetableClassPeriodTypesGet().subscribe(res => {\n      if (res.classPeriodTypesDropDownView != null) {\n        res.classPeriodTypesDropDownView.map(x => {\n          this.periodTypeList.push({\n            value: x.id, label: x.name, is_Break: x.is_Break,\n            has_Assignments: x.has_Assignments, has_Multiple_Assignments: x.has_Multiple_Assignments\n          });\n        });\n        this.getCourseList();\n      }\n    });\n  }\n\n  getCourseList(): void {\n    this.courseList = [];\n    const boardId = this.sectionNamesList.find(sl => sl.value === this.classTimetableForm.value.sectionId).boardId;\n\n    this.classTimetableService.classTimetableCoursesGet(boardId, this.classTimetableForm.value.classId).subscribe(res => {\n      if (res.commonViewModel != null) {\n        res.commonViewModel.map(x => {\n          this.courseList.push({ value: x.id, label: x.name });\n        });\n      }\n      else {\n        this.openSnackBar(AppSettings.SCHOOL_BOARD_HAS_COURSES, true);\n      }\n      this.getStaffList();\n    });\n  }\n\n  getStaffList(): void {\n    this.staffList = [];\n    this.classTimetableService.classTimetableStaffGet('STFT_TCH').subscribe(res => {\n      if (res.commonViewModel != null) {\n        res.commonViewModel.map(x => {\n          this.staffList.push({ value: x.id, label: x.name });\n        });\n      }\n    });\n  }\n\n  updateScheduleTemp(resData: any, isUpdate = false): void {\n    if (resData.length > 0) {\n      const filterSchoolScheduleTempList = [];\n\n      for (const key of resData) {\n        const index = filterSchoolScheduleTempList.findIndex(ele => ele.name === key.weekDayName);\n        if (index === -1) {\n          const val = [];\n          isUpdate ? val.push.apply(val, key.periodsView) : val.push(key);\n          const data = { name: key.weekDayName, value: val };\n          filterSchoolScheduleTempList.push(data);\n        } else {\n          const i = filterSchoolScheduleTempList.findIndex(ele => ele.name === key.weekDayName);\n          filterSchoolScheduleTempList[i].value.push(key);\n        }\n      }\n      this.sortByWeekday(filterSchoolScheduleTempList);\n    }\n  }\n\n  sortByWeekday(data): void {\n    const sorter = {\n      'monday': 1,\n      'tuesday': 2,\n      'wednesday': 3,\n      'thursday': 4,\n      'friday': 5,\n      'saturday': 6,\n      'sunday': 7\n    };\n\n    data.sort(function sortByDay(a, b): number {\n      const day1 = a.name.toLowerCase();\n      const day2 = b.name.toLowerCase();\n      return sorter[day1] - sorter[day2];\n    });\n    this.addTemplateView = data;\n  }\n\n  onPeriodTypeSelect(data: any, child: any, index: any, childIndex: any): void {\n    const hasOptions = this.periodTypeList.find(val => val.value === data.value);\n    this.assignViewModelForPost(child);\n    this.classPeriodsDataView.classPeriodsMultiView = [];\n    this.classPeriodsDataView.classPeriodsMultiView.push({\n      courseId: null,\n      staffId: null\n    });\n\n    if (this.addTemplateView[this.index] !== undefined &&\n      this.addTemplateView[this.index].value[childIndex].schoolSchedulePeriodId === this.classPeriodsDataView.schoolSchedulePeriodId) {\n      this.addTemplateView[this.index].value[childIndex].hasAssignments = false;\n      this.addTemplateView[this.index].value[childIndex].courseAndStaffViewModel = [];\n    }\n\n    this.index = index;\n    if (hasOptions) {\n      switch (true) {\n        case hasOptions.is_Break === 1:\n          this.onSavePeriod();\n          break;\n\n        case hasOptions.has_Assignments === 1:\n          if (this.addTemplateView.length > 0) {\n            if (this.addTemplateView[this.index].value[childIndex].schoolSchedulePeriodId === this.classPeriodsDataView.schoolSchedulePeriodId) {\n              this.addTemplateView[this.index].value[childIndex].hasAssignments = true;\n            }\n            this.onSavePeriod(false);\n          }\n          break;\n\n        case hasOptions.has_Multiple_Assignments === 1:\n          this.classPeriodsDataView.classPeriodsMultiView = [];\n          this.dialog.open(this.customTemplate, {\n            disableClose: true,\n            width: '500px',\n          });\n          break;\n\n        case (hasOptions.has_Assignments === 0 && hasOptions.has_Multiple_Assignments === 0 &&\n          hasOptions.is_Break === 0):\n          this.onSavePeriod();\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n\n  onSavePeriod(showSnackBar = true, isMultiSelect = false, isCloseAll = false): boolean {\n    let success = false;\n    this.classTimetableService.classTimetableClassTimetableStaffCoursePost(this.classPeriodsDataView).subscribe(res => {\n      if (res.classTimetableId != null) {\n        this.classPeriodsDataView.classTimetableId = res.classTimetableId;\n        this.classTimeTableValue = res.timetableId;\n      }\n      if (showSnackBar) {\n        this.openSnackBar(res.messages.ResultMessage);\n      }\n      if (isMultiSelect) {\n        this.dialog.closeAll();\n        this.checkIsAnyPeriodExist();\n        this.updateTemplate();\n      //  this.selectedCoursesSatffs = [];\n      }\n      success = true;\n      this.selectedCoursesSatffs = [];\n    }, error => {\n      const errorResult = error.error.messages.ResultMessage;\n      if (errorResult === 'TIME_OVERLAP') {\n        error.error.messages.ResultMessage =\n          'Operation Failed - A Timetable already exists for the selected timeframe or overlaps with an existing timetable.';\n      }\n      if (errorResult === 'TIME_OVERLAP' && isCloseAll) {\n        this.dialog.closeAll();\n        this.updateTemplate();\n      } else {\n        this.errorResponse(error);\n      }\n      this.disableSaveBtn = false;\n    });\n    return success;\n  }\n\n  checkIsAnyPeriodExist(): void {\n    const boardId = this.sectionNamesList.find(x => x.value === this.classTimetableForm.value.sectionId).boardId;\n    this.classTimetableService.classTimetableClassTimetableGet(this.classTimetableForm.value.classId, this.classTimetableForm.value.sectionId,\n      boardId, this.classPeriodsDataView.classTimetableId).subscribe(period => {\n        if (period.classPeriodsView == null) {\n          this.classTimetableForm.controls['selectedTemplated'].patchValue(this.classPeriodsDataView.classTimetableId);\n          this.deleteTimeTable(false);\n          this.classTimetableForm.controls['selectedTemplated'].reset();\n          this.classPeriodsDataView.classTimetableId = null;\n        }\n        this.disableSaveBtn = false;\n      });\n  }\n\n  assignViewModelForPost(data: any): void {\n    const boardId = this.sectionNamesList.find(sl => sl.value === this.classTimetableForm.value.sectionId).boardId;\n\n    this.classPeriodsDataView.classId = this.classTimetableForm.value.classId;\n    this.classPeriodsDataView.sectionId = this.classTimetableForm.value.sectionId;\n    this.classPeriodsDataView.boardId = boardId;\n    this.classPeriodsDataView.templateId = this.classTimetableForm.value.scheduleTemplateId;\n    this.classPeriodsDataView.startDate = this.classTimetableForm.value.startDate;\n    this.classPeriodsDataView.endDate = this.classTimetableForm.value.endDate;\n    this.classPeriodsDataView.schoolSchedulePeriodId = data.schoolSchedulePeriodId;\n    this.classPeriodsDataView.classPeriodTypeId = data.periodTypeId;\n  }\n\n  onSelectCourseStaffDetails(): void {\n    if (this.courseStaffMultAssgnForm.valid) {\n      const tableData = [];\n      const cname = this.courseList.find(x => x.value === this.courseStaffMultAssgnForm.value.courseId);\n      const sname = this.staffList.find(x => x.value === this.courseStaffMultAssgnForm.value.staffId);\n      if (cname && sname) {\n        tableData.push({\n          courseId: cname.value, courseName: cname.label,\n          staffId: sname.value, staffName: sname.label\n        });\n      }\n      if (this.selectedCoursesSatffs.length > 0 && this.selectedCoursesSatffs.filter(x => x.courseId === cname.value).length > 0) {\n        return this.openSnackBar(AppSettings.DUPLICATE_COURSE_SELECTION, true);\n      }\n      else {\n        this.selectedCoursesSatffs.push.apply(this.selectedCoursesSatffs, tableData);\n      }\n\n      this.courseStaffMultAssgnForm.patchValue({\n        courseId: null,\n        staffId: null\n      });\n      this._courseStaffMultiAssignForm.resetForm();\n    }\n  }\n\n\n  deleteSelectedCourseStaffItem(index: any): void {\n    this.selectedCoursesSatffs.splice(index, 1);\n  }\n\n  clearStaff(): void {\n    this.onMultiSelectCourseStaffSubmit(false, true);\n    // .then(v => {\n    if (this.addTemplateView.length > 0 && this.addTemplateView[this.index].value !== undefined) {\n      // this.addTemplateView[this.index].value.forEach(m => {\n      //   if (m.schoolSchedulePeriodId === this.classPeriodsDataView.schoolSchedulePeriodId && (m.courseAndStaffViewModel === undefined || !m.courseAndStaffViewModel.length)) {\n      //     m.periodTypeId = 0;\n      //     m.hasAssignments = false;\n      //   }\n      // });\n      this.courseStaffMultAssgnForm.reset();\n     \n      this.dialog.closeAll();\n      this.cd.detectChanges();\n      this.clearDefaultButtonFoucs('edit');\n    }\n    // });\n  }\n  onMultiSelectCourseStaffSubmit(showSnackBar = true, isCloseAll = false): any {\n    this.disableSaveBtn = true;\n    return new Promise(resolve => {\n      this.classPeriodsDataView.classPeriodsMultiView = [];\n      this.classPeriodsDataView.classPeriodsMultiView.push.apply(this.classPeriodsDataView.classPeriodsMultiView, this.selectedCoursesSatffs);\n      this.onSavePeriod(showSnackBar, true, isCloseAll);\n      this.clearDefaultButtonFoucs('edit');\n    });\n  }\n\n  updateTemplate(): void {\n    if (this.addTemplateView.length > 0 && this.addTemplateView[this.index] !== undefined) {\n      this.addTemplateView[this.index].value.forEach(m => {\n        if (m.schoolSchedulePeriodId === this.classPeriodsDataView.schoolSchedulePeriodId) {\n          m.hasAssignments = 0;\n          m.courseAndStaffViewModel = this.selectedCoursesSatffs;\n          if (this.selectedCoursesSatffs.length) {\n            m.hasMultipleAssignments = 1;\n          } else {\n            m.hasMultipleAssignments = 0;\n            m.periodTypeId = 0;\n          }\n        }\n      });\n      this.cd.detectChanges();\n    }\n  }\n\n  onChangeStaffCourseDetails(id: any, isCourseSelection: boolean, child: any): void {\n\n    if (child !== undefined && child.courseAndStaffViewModel !== undefined && child.courseAndStaffViewModel.length) {\n      this.assignViewModelForPost(child);\n      this.classPeriodsDataView.classPeriodsMultiView = [];\n      this.classPeriodsDataView.classPeriodsMultiView.push({\n        courseId: child.courseAndStaffViewModel[0].courseId,\n        staffId: child.courseAndStaffViewModel[0].staffId\n      });\n    }\n    if (isCourseSelection && this.classPeriodsDataView.classPeriodsMultiView.length) {\n      this.classPeriodsDataView.classPeriodsMultiView[0].courseId = id;\n      this.classPeriodsDataView.classPeriodsMultiView[0].staffId = this.classPeriodsDataView.classPeriodsMultiView[0].staffId !== null ?\n        this.classPeriodsDataView.classPeriodsMultiView[0].staffId : null;\n    } else {\n      this.classPeriodsDataView.classPeriodsMultiView[0].courseId = this.classPeriodsDataView.classPeriodsMultiView[0].courseId !== null ?\n        this.classPeriodsDataView.classPeriodsMultiView[0].courseId : null;\n      this.classPeriodsDataView.classPeriodsMultiView[0].staffId = id;\n    }\n    this.onSavePeriod();\n  }\n\n  onSubmitClassTimetable(): void {\n    if (this.classTimetableForm.invalid) {\n      return;\n    }\n    if (this.classTimetableForm.valid && !this.classPeriodsDataView.classTimetableId) {\n      return this.openSnackBar(AppSettings.PLEASE_ASSIGN_COURSE_STAFF, true);\n    }\n    this.isExistPeriodInClassTimeTable(this.classPeriodsDataView.classTimetableId);\n  }\n\n  savedDataView(classTimeTableId: any): void {\n    this.classTimeTableValue = classTimeTableId;\n    this.classPeriodsDataView.classTimetableId = classTimeTableId;\n    this.clearBack();\n  }\n\n  editMultiAssignments(data: any, index: any): void {\n    this.clearDefaultButtonFoucs('close');\n    this.index = index;\n    if (data) {\n      this.assignViewModelForPost(data);\n      this.selectedCoursesSatffs = data.courseAndStaffViewModel.map(({ courseId, staffId, courseName, staffName }) => ({ courseId, staffId, courseName, staffName }));\n      this.cd.detectChanges();\n      this.dialog.open(this.customTemplate, {\n        disableClose: true,\n        width: '500px',\n      });\n      this.courseStaffMultAssgnForm.reset();\n    }\n  }\n\n  updateClassTimetable(): void {\n    this.classPeriodsDataView = {\n      classPeriodsMultiView: this.classPeriodsMultiView = []\n    };\n    this.selectedTimeTableDetails = [];\n    this.title = 'Edit Class Timetable';\n    this.isEdit = true;\n    const timeTable = this.timeTableList.find(ti => ti.value === this.classTimetableForm.value.selectedTemplated);\n\n    this.addTimeTable = false;\n    this.classTimetableService.classTimetableClassTimetableByIdGet(this.classTimetableForm.value.classId, this.classTimetableForm.value.sectionId,\n      this.classTimetableForm.value.selectedTemplated, timeTable.aSd, timeTable.aEd).subscribe(res => {\n        if (res.classPeriodsView != null) {\n          this.getPeriodTypeList();\n          this.getTemplateList(timeTable.scheduleTemplateId);\n          this.classPeriodsDataView.classTimetableId = this.classTimetableForm.value.selectedTemplated;\n          this.classTimetableForm.controls['startDate'].setValue(timeTable.aSd);\n          this.classTimetableForm.controls['endDate'].setValue(timeTable.aEd);\n          this.addTemplateView = res.classPeriodsView;\n          this.updateScheduleTemp(this.addTemplateView, true);\n        }\n        else {\n          this.openSnackBar(res.messages.ResultMessage);\n          return false;\n        }\n      });\n  }\n\n  clearMultiSelectStaff(): void {\n    this.selectedCoursesSatffs = [];\n  }\n\n  clearDefaultButtonFoucs(buttonId: any): void {\n    setTimeout(() => {\n      this._focusMonitor.stopMonitoring(document.getElementById(buttonId));\n    });\n  }\n\n  isExistPeriodInClassTimeTable(classTimeTableId: any): void {\n    const boardId = this.sectionNamesList.find(x => x.value === this.classTimetableForm.value.sectionId).boardId;\n    this.classTimetableService.classTimetableClassTimetableGet(this.classTimetableForm.value.classId, this.classTimetableForm.value.sectionId,\n      boardId, classTimeTableId).subscribe(period => {\n        if (period.classPeriodsView != null) {\n          if (this.classTimetableForm.valid) {\n            this.classTimetableUpdateView = {};\n            this.classTimetableUpdateView.id = this.classPeriodsDataView.classTimetableId;\n            this.classTimetableUpdateView.startDate = this.classTimetableForm.value.startDate;\n            this.classTimetableUpdateView.endDate = this.classTimetableForm.value.endDate;\n            if (this.classTimetableUpdateView.id != null) {\n              this.classTimetableService.classTimetableClassTimetableUpdatePut(this.classTimetableUpdateView).subscribe(res => {\n                this.openSnackBar(res.messages.ResultMessage);\n                this.savedDataView(res.timetableId);\n              }, error => {\n                this.errorResponse(error);\n              });\n            }\n          }\n        } else {\n          this.classTimetableForm.controls['selectedTemplated'].patchValue(this.classPeriodsDataView.classTimetableId);\n          this.deleteTimeTable(false);\n          this.classTimetableForm.controls['selectedTemplated'].reset();\n          this.classPeriodsDataView.classTimetableId = null;\n          return this.openSnackBar(AppSettings.PLEASE_ASSIGN_COURSE_STAFF, true);\n        }\n      });\n  }\n}\n","module.exports = \"<app-table [settings]=\\\"tabSettings\\\" (selectedRows)=\\\"selectAllData($event)\\\"\\n(getTableData)='holidayTableData($event)' (rowBasedAction)='rowActions($event)'\\n [closeRowForm]='closeAddPanel' (openAddForm)=\\\"addForm()\\\" [templateRef]=\\\"addTemplateRef\\\" \\n (deleteAllRows)='deleteAll()' \\n (rowSelect)='onTableRowSelect($event)' (rowUnselect)='onTableRowUnSelect($event)'>\\n</app-table>\\n\\n\\n\\n<ng-template #addTemplateRef>\\n  <form [formGroup]=\\\"holidaysGrpForm\\\" (ngSubmit)=\\\"saveHolidayConfiguration(holidaysGrpForm)\\\" #holidayConfigurationsForm=\\\"ngForm\\\">\\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" class=\\\"pt-24\\\">\\n\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"mr-sm-20 icon-center\\\" fxFlexFill fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\" fxLayout=\\\"column\\\">\\n        <mat-label #fromDate translate>From Date</mat-label>\\n        <input matInput (keyup)=\\\"forceValidation('fromDate',holidaysGrpForm)\\\" [matDatepicker]=\\\"picker\\\" formControlName=\\\"fromDate\\\" required [min]=\\\"startDate\\\" [max]=\\\"endDate\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n        <mat-error>\\n          <app-validation [labelName]=\\\"fromDate.innerText\\\" [validationControl]=\\\"holidaysGrpForm.controls.fromDate\\\"\\n            [doValidate]=\\\"doValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"mr-sm-20 icon-center\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\">\\n        <mat-label #toDate translate>To Date</mat-label>\\n        <input matInput (keyup)=\\\"forceValidation('toDate',holidaysGrpForm)\\\" [min]=\\\"holidaysGrpForm.controls.fromDate.value\\\" [options]=\\\"myToDatePickerOptions\\\"\\n          [matDatepicker]=\\\"picker1\\\" formControlName=\\\"toDate\\\" required [max]=\\\"endDate\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker1 [startAt]=\\\"holidaysGrpForm.value.fromDate\\\"></mat-datepicker>\\n        <mat-error>\\n          <app-validation [labelName]=\\\"toDate.innerText\\\" [validationControl]=\\\"holidaysGrpForm.controls.toDate\\\"\\n            [doValidate]=\\\"doValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\">\\n        <mat-label #holidayReason translate>description</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'holidaysGrpForm','holidayReason')\\\" (blur)=\\\"trimTextBoxSpaces('holidaysGrpForm','holidayReason')\\\" matInput autocomplete=\\\"off\\\" formControlName=\\\"holidayReason\\\" required>\\n        <mat-error>\\n          <app-validation [labelName]=\\\"holidayReason.innerText\\\" [validationControl]=\\\"holidaysGrpForm.controls.holidayReason\\\"\\n            [doValidate]=\\\"doValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n    </div>\\n\\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" class=\\\"pt-12\\\">\\n      <div fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" class=\\\"mr-sm-20 radio-btn\\\" fxFlex.gt-sm=\\\"15\\\">   \\n          <mat-label #isStaffHoliday translate class=\\\"\\n           pb-8\\\">isstaffholiday?</mat-label>\\n        <mat-radio-group class=\\\"grey-500-fg text-semibold\\\" aria-label=\\\"Select an option\\\" fxFlexFill fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" formControlName=\\\"isStaffHoliday\\\">\\n          <mat-radio-button *ngFor=\\\"let radio of YesOrNo\\\" [value]=\\\"radio.value\\\" (change)=\\\"onStaffChange(radio.value)\\\">{{radio.label |\\n            translate}}</mat-radio-button>\\n        </mat-radio-group>\\n      </div>\\n      <div fxLayout=\\\"column\\\" class=\\\"mr-sm-20 radio-btn\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\">\\n        <label class=\\\"pb-8\\\" #IsPostCalender translate>Do you Want to post this Holiday Information To Student Calendar ?</label>\\n        <mat-radio-group fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" required formControlName=\\\"isPostToCalender\\\">\\n          <mat-radio-button *ngFor=\\\"let radio of YesOrNo\\\" [value]=\\\"radio.value\\\">{{radio.label |\\n            translate}}</mat-radio-button>\\n        </mat-radio-group>\\n      </div>\\n\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"mr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlexFill fxFlex.gt-sm=\\\"25\\\">\\n        <mat-label #classId translate>Class</mat-label>\\n        <mat-select formControlName=\\\"classId\\\" (selectionChange)=\\\"onSelectClass($event)\\\" [disabled]=\\\"holidaysGrpForm.value.isStaffHoliday == 1\\\">\\n          <mat-option *ngIf=\\\"classNames?.length\\\"></mat-option>\\n          <mat-option *ngFor=\\\"let class of classNames\\\" [value]=\\\"class.value\\\">\\n            {{class.label}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlexFill fxFlex.gt-sm=\\\"30\\\" *ngIf=\\\"holidaysGrpForm.controls.classId.value\\\">\\n        <mat-label #sectionId translate>Section</mat-label>\\n        <mat-select formControlName=\\\"sectionId\\\" [disabled]=\\\"holidaysGrpForm.value.isStaffHoliday == 1\\\">\\n          <mat-option *ngIf=\\\"sectionNames?.length\\\"></mat-option>\\n          <mat-option *ngFor=\\\"let section of sectionNames\\\" [value]=\\\"section.value\\\">\\n            {{section.label}}\\n            <span *ngIf=\\\"section.boardName!=null\\\">({{section.boardName}})</span>\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"my-12\\\">\\n      <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\" (click)=\\\"onCancelClick()\\\">{{'Cancel' | translate}}</button>\\n      <button [disabled]=\\\"disbleSubmitBtn\\\" mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\">\\n        {{(isUpdateData ? 'Update':'Submit') | translate}}</button>\\n    </div>\\n\\n  </form>\\n</ng-template>\\n\"","module.exports = \".radio-btn .mat-radio-group .mat-radio-button:not(:first-child) {\\n  padding-left: 20px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9jbGFzcy1zY2hlZHVsZXMvaG9saWRheXMvaG9saWRheXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFHWSxrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9jbGFzcy1zY2hlZHVsZXMvaG9saWRheXMvaG9saWRheXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmFkaW8tYnRue1xuICAgIC5tYXQtcmFkaW8tZ3JvdXB7XG4gICAgICAgIC5tYXQtcmFkaW8tYnV0dG9uOm5vdCg6Zmlyc3QtY2hpbGQpe1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICAgICAgICB9XG4gICAgfVxufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { HolidayConfigurationService } from 'app/service/class-schedules/holiday-configuration.service';\nimport { HolidayViewModel } from '../model/holiday-view-model';\nimport { HttpClient } from '@angular/common/http';\nimport { HolidaySearchView } from '../model/holiday-search-view';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\nimport { AppSettings } from 'app/app.constants';\nimport { ClassSectionService } from 'app/service/academic-service/api/class-section.service';\nimport { HolidaysView } from '../model/holidays-view';\nimport * as HttpStatus from 'http-status-codes';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { YesNo } from '../../../../models/yes-no-view';\nimport { ClassTimetableService } from 'app/service/class-schedules/class-time-table.service';\nimport { CalenderService } from 'app/service/staff/calender.service';\n\n@Component({\n  selector: 'app-holidays',\n  templateUrl: './holidays.component.html',\n  styleUrls: ['./holidays.component.scss'],\n  animations: fuseAnimations,\n  providers: [ClassTimetableService, CalenderService]\n})\nexport class HolidaysComponent extends CommonComponent implements OnInit {\n\n  @ViewChild('addHolidayTemplate') addHolidayTemplate;\n  @ViewChild('holidayConfigurationsForm') holidayConfigurationsForm;\n\n  holidaysView: HolidaysView;\n  holidayViewModel: HolidayViewModel;\n  holidaySearchView: HolidaySearchView;\n  /* form */\n  holidaysGrpForm: FormGroup;\n\n  //  refernces for ng prime table \n  tableData: Array<any>;\n  rows: Array<any>;\n  cols: any[];\n  pageCnt: number;\n  totalItems: number;\n  custRowsPerPageOptions: Array<number> = [];\n  tabSettings: {};\n  //  var for store clicked row details \n  failedRecords: any = [];\n  checkedRecords: any;\n  // filteredRecords: any;\n  filterClasses: Array<any> = [];\n  filterSections: Array<any> = [];\n  classNames: Array<any> = [];\n  sectionNames: Array<any> = [];\n  holidayConfigFormSubmitted = false;\n  isDeleteAllRequired = false;\n  closeAddPanel = false;\n  isUpdateData = false;\n  buttonDisable = false;\n  doValidate = true;\n  holidayIds: Array<string> = [];\n  holidayDetails: any;\n  modelname: any;\n  currentComponentName = 'HolidaysComponent';\n  YesOrNo: Array<any> = YesNo.values;\n  disbleSubmitBtn = false;\n  clickedRowData: any;\n  startDate: Date;\n  endDate: Date;\n  constructor(private formBuilder: FormBuilder, public commonService: CommonService,\n    public dialog: MatDialog, private _classSectionService: ClassSectionService,\n    private _holidayConfigurationService: HolidayConfigurationService,\n    private http: HttpClient, public snackBar: MatSnackBar, private classTimetableService: ClassTimetableService, private calenderService: CalenderService) {\n    super();\n    this.holidaySearchView = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER, pageSize: AppSettings.PAGESIZE,\n    };\n    const schoolAcademicSession = localStorage.getItem('_as') ? JSON.parse(localStorage.getItem('_as')) : null;\n    if (schoolAcademicSession) {\n      this.academicSessionMinDate = schoolAcademicSession.startDate;\n      this.academicSessionMaxDate = new Date(schoolAcademicSession.endDate);\n      this.academicSessionMaxDate.setMonth(this.academicSessionMaxDate.getMonth() + 3);\n    }\n  }\n\n  ngOnInit(): void {\n    this.cols = [\n      { field: 'holidayReason', header: 'Description', sort: true },\n      { field: 'class', header: 'Class', sort: true },\n      { field: 'section', header: 'Section', sort: true },\n      { field: 'isStaffHoliday', header: 'Staff Holiday', sort: true },\n      { field: 'fromDate', header: 'From Date', sort: true },\n      { field: 'toDate', header: 'To Date', sort: true },\n      { field: 'actions', header: 'Actions' },\n    ];\n\n    /* initializing form with validations */\n    this.holidaysGrpForm = new FormGroup({\n      id: new FormControl(''),\n      fromDate: new FormControl('', [Validators.required]),\n      toDate: new FormControl('', [Validators.required]),\n      holidayReason: new FormControl('', [Validators.required, Validators.maxLength(45)]),\n      isStaffHoliday: new FormControl(''),\n      classId: new FormControl(''),\n      sectionId: new FormControl(''),\n      isPostToCalender: new FormControl(AppSettings.NO),\n    });\n\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.holidaySearchView,\n      tablename: 'Holidays',\n      componentName: this.currentComponentName,\n      isNewStudentCourseSelectionRequired: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n    };\n    const modelTableComponent = this.getModelComponent(this.currentComponentName);\n    if (modelTableComponent) {\n      this.holidaySearchView = modelTableComponent;\n    }\n    if (!this.getTokenParam('_as')) {\n      setTimeout(() => {\n        this.openSnackBar(AppSettings.SCHOOLACADEMIC_SESSION_REQUIRED, true);\n      });\n    } else {\n      // / initializing table settings /\n    \n      this.holidayTableData(this.holidaySearchView);\n      this.getClassesList();\n    }\n    this.academicPrevAndAfterDates();\n  }\n    // get Academic Start Date and End Date with prev and after 3 months\n    academicPrevAndAfterDates(): void {\n      this.calenderService.getAllSchoolCalender().subscribe(res => {\n        this.startDate = res.academicDatesView.startDate;\n        this.endDate = res.academicDatesView.endDate;\n      });\n    }\n\n  response(data): void {\n    this.rows = [];\n    if (data.statusCode === HttpStatus.OK && data.searchHolidayView) {\n      data.searchHolidayView.list.forEach(e => {\n        e.fromDate = (e.fromDate == null) ? null : this.commonService.customDateFormat(e.fromDate, this.getSchoolDateFormat()).date;\n        e.toDate = (e.toDate == null) ? null : this.commonService.customDateFormat(e.toDate, this.getSchoolDateFormat()).date;\n      });\n      this.rows = data.searchHolidayView.list;\n      this.totalItems = data.searchHolidayView.totalItems;\n    }\n\n    const holidayoperations = [\n      {\n        name: AppSettings.EDIT_OPERATION,\n        icon: AppSettings.EDIT\n      },\n      {\n        name: AppSettings.DELETE_OPERATION,\n        icon: AppSettings.DELETE,\n      },\n    ];\n\n    this.rows.forEach(e => {\n      e.operations = holidayoperations;\n      e.isStaffHoliday = (e.isStaffHoliday === 1) ?\n        AppSettings.YES : AppSettings.NO;\n    });\n\n    if (data.searchHolidayView) {\n      this.holidaySearchView.pageNumber = data.searchHolidayView.pageNumber;\n    }\n\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.holidaySearchView,\n      rows: this.rows,\n      tablename: 'Holidays',\n      componentName: this.currentComponentName,\n      isNewStudentCourseSelectionRequired: true,\n      isSelectRowRequired: true,\n      visibleSelectAll: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      filtersList: data.filters,\n\n      headerOperations: {\n        infoButton: {\n          required: true,\n          text: 'Holidays'\n        },\n        addingForm: {\n          required: true,\n          btnName: AppSettings.BUTTON_NAME\n        }\n      }\n    };\n  }\n\n  // holidays list data\n  holidayTableData(data: any): void {\n    const modelTableComponent = this.getModelComponent(this.currentComponentName);\n    if (modelTableComponent) {\n      this.holidaySearchView = modelTableComponent;\n    }\n    this.holidayIds = [];\n    this._holidayConfigurationService.searchHolidays(data.classId, data.sectionId, data.fromDate,\n      data.fromDateBegin, data.fromDateEnd, data.toDate, data.toDateBegin, data.toDateEnd, data.holidayReason,\n      data.isStaffHoliday, data.sortOrder, data.sortBy, this.failedRecords, data.pageNumber, data.pageSize).subscribe(x => this.response(x), error => {\n        this.errorResponse(error);\n      });\n  }\n\n\n  // Get Classes to filter table data\n  getClassesList(): void {\n    this.filterClasses = [];\n    this._classSectionService.schoolAcademicClasses().subscribe(response => {\n      if (response.listViews != null) {\n        if (response.listViews.length) {\n          response.listViews.forEach(element => {\n            this.filterClasses.push({\n              label: element.name,\n              value: element.id\n            });\n            this.classNames = this.filterClasses;\n          });\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n    this.getSectionsList();\n  }\n\n  // Get Sections to filter table data\n  getSectionsList(): void {\n    this.filterSections = [];\n    this._classSectionService.schoolAcademicClassSections().subscribe(response => {\n      if (response.listViews != null) {\n        if (response.listViews.length) {\n          response.listViews.forEach(element => {\n            this.filterSections.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  // End\n\n  // on selection of class\n  onSelectClass(data: any): void {\n    this.sectionNames = [];\n    this.holidaysGrpForm.controls['sectionId'].patchValue(null);\n    if (data.value) {\n      this.loadSections(data.value);\n    }\n  }\n  // End\n\n  loadSections(data): void {\n    this.sectionNames = [];\n    // this._classSectionService.schoolAcademicClassSections(null, data).subscribe(response => {\n    //   if (response.listViews.length) {\n    //     response.listViews.forEach(element => {\n    //       this.sectionNames.push({\n    //         label: element.name,\n    //         value: element.id\n    //       });\n    //     });\n    //   }\n\n    this.classTimetableService.classTimetableSectionsGet(data).subscribe(res => {\n      if (res.classTimetableSectionsView != null) {\n        res.classTimetableSectionsView.map(x => {\n          this.sectionNames.push({ value: x.sectionId, label: x.sectionName, boardId: x.boardId, boardName: x.boardName });\n        });\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n\n  // onCancelClick\n  onCancelClick(): void {\n    this.holidaysGrpForm.reset();\n    this.closeAddPanel = true;\n    this.isUpdateData = false;\n    this.buttonDisable = false;\n    this.holidayConfigFormSubmitted = false;\n    this.holidayConfigurationsForm.resetForm();\n    this.sectionNames = [];\n  }\n  // End\n\n\n  // submit the data of holidays configuration\n  saveHolidayConfiguration(holidaysGrpForm: any): void {\n    this.holidayConfigFormSubmitted = true;\n    if (holidaysGrpForm.status === AppSettings.VALID) {\n      this.disbleSubmitBtn = true;\n      if (this.isUpdateData === true) {\n        this.holidayViewModel = holidaysGrpForm.value;\n        this.holidayViewModel.id = this.holidayDetails.id;\n        this._holidayConfigurationService.updateHoliday(this.holidayViewModel).subscribe(res =>\n          this.updateResponse(res), error => {\n            this.disbleSubmitBtn = false;\n            this.errorResponse(error);\n          });\n      } else {\n        holidaysGrpForm.value.isStaffHoliday = holidaysGrpForm.value.isStaffHoliday == null ? 0 : holidaysGrpForm.value.isStaffHoliday;\n        this.holidaysView = holidaysGrpForm.value;\n        this._holidayConfigurationService.createHolidays(this.holidaysView).subscribe(res => this.addResponse(res), error => {\n          this.disbleSubmitBtn = false;\n          this.errorResponse(error);\n        });\n      }\n    }\n  }\n  // End\n\n  // response of holidays configuration after update data\n  updateResponse(response): void {\n    this.disbleSubmitBtn = false;\n    if (response.statusCode === HttpStatus.OK || response.statusCode === HttpStatus.BAD_REQUEST || response.statusCode === HttpStatus.CONFLICT) {\n      if (response.statusCode === HttpStatus.BAD_REQUEST || response.statusCode === HttpStatus.CONFLICT) {\n        this.closeAddPanel = false;\n      } else {\n        this.closeAddPanel = true;\n        this.holidayTableData(this.holidaySearchView);\n        this.holidaysGrpForm.reset();\n        this.holidayConfigurationsForm.resetForm();\n        this.isUpdateData = false;\n        this.buttonDisable = false;\n      }\n    }\n    this.openSnackBar(response.messages.ResultMessage);\n  }\n  // End\n\n  // response after add data of holidays \n  addResponse(response): void {\n    this.disbleSubmitBtn = false;\n    if (response.statusCode === HttpStatus.OK || response.statusCode === HttpStatus.BAD_REQUEST || response.statusCode === HttpStatus.CONFLICT) {\n      this.closeAddPanel = true;\n      this.holidayTableData(this.holidaySearchView);\n      this.holidaysGrpForm.reset();\n      this.holidayConfigurationsForm.resetForm();\n      this.isUpdateData = false;\n      this.buttonDisable = false;\n    }\n    else {\n      this.closeAddPanel = false;\n    }\n    this.openSnackBar(response.messages.ResultMessage);\n  }\n  // End\n\n  // row-wise actions of the table(edit/delete)\n  rowActions(response): void {\n    if (response.operation === AppSettings.EDIT) {\n      this.isUpdateData = true;\n      this.closeAddPanel = false;\n      this.buttonDisable = true;\n      this.clickedRowData = response.clickedRow;\n      this._holidayConfigurationService.fetchHolidayById(response.clickedRow.id)\n        .subscribe(res => this.holidayConfigurationIdValue(res), error => {\n          this.errorResponse(error);\n        });\n    }\n\n    if (response.operation === AppSettings.DELETE) {\n      const dialogRef = this.dialog.open(CustomDialogComponent, {\n        disableClose: true,\n        data: { text: this.commonService.getTranslation(AppSettings.DELETE_CONFORMATION, ''), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n      });\n\n      dialogRef.afterClosed().subscribe(action => {\n        this.holidayIds = [];\n        if (action === AppSettings.YES) {\n          this.holidayIds.push(response.clickedRow.id);\n          this._holidayConfigurationService.deleteHolidays(this.holidayIds).subscribe(res => this.deleteResponse(res), error => {\n            this.errorResponse(error);\n          });\n        }\n      });\n    }\n  }\n  // End\n\n  // response after delete operation\n  deleteResponse(deleteResponse: any): void {\n    this.holidayTableData(this.holidaySearchView);\n    this.openSnackBar(deleteResponse.messages.ResultMessage);\n  }\n  // End\n\n  // to set holidays data to form after edit click\n  holidayConfigurationIdValue(holidayData: any): void {\n    if (holidayData.holidayDetailsView != null) {\n      this.holidaysGrpForm.patchValue(holidayData.holidayDetailsView);\n\n      if (holidayData.holidayDetailsView.classId !== null && holidayData.holidayDetailsView.classId !== undefined) {\n        this.loadSections(holidayData.holidayDetailsView.classId);\n      }\n\n      this.holidaysGrpForm.controls['sectionId'].setValue(holidayData.holidayDetailsView.sectionId);\n      const isStaffHoliday = (this.clickedRowData.isStaffHoliday === AppSettings.YES) ?\n        1 : 0;\n      this.holidaysGrpForm.controls['isStaffHoliday'].setValue(isStaffHoliday);\n      this.holidayDetails = holidayData.holidayDetailsView;\n    } else {\n      this.openSnackBar(holidayData.messages.ResultMessage);\n    }\n  }\n  // End\n\n  // to open the add form(reset things)\n  addForm(): void {\n    this.closeAddPanel = false;\n    this.holidaysGrpForm.reset();\n    this.holidayConfigurationsForm.resetForm();\n    this.holidaysGrpForm.controls.isStaffHoliday.setValue(1);\n    this.holidaysGrpForm.controls.isPostToCalender.setValue(0);\n    this.isUpdateData = false;\n    this.buttonDisable = true;\n  }\n  // End\n\n  // Multi Delete \n  deleteAll(): void {\n    const dialogRef = this.dialog.open(CustomDialogComponent, {\n      disableClose: true,\n      data: { text: this.commonService.getTranslation(AppSettings.DELETE_CONFORMATION, ''), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n    });\n\n    dialogRef.afterClosed().subscribe(action => {\n      if (action === AppSettings.YES) {\n        this._holidayConfigurationService.deleteHolidays(this.holidayIds).subscribe(res => this.multiDeleteResponse(res), error => {\n          if (error.error.failedRecords !== undefined && error.error.failedRecords.length > 0) {\n            this.failedRecords = (error.error.failedRecords);\n          }\n          this.errorResponse(error);\n          this.holidayTableData(this.holidaySearchView);\n        });\n      }\n    });\n  }\n  // End\n\n  // select all records from table(delete)\n  selectAllData(holidays: any): void {\n    if (holidays.length > 0) {\n      this.holidayIds = [];\n      this.isDeleteAllRequired = true;\n      holidays.forEach(element => {\n        this.holidayIds.push(element.id);\n      });\n    }\n    else {\n      this.isDeleteAllRequired = false;\n    }\n  }\n  // End\n\n\n  // response after multi delete\n  multiDeleteResponse(response: any): void {\n    if (response.failedRecords.length > 0) {\n      this.failedRecords = response.failedRecords;\n    }\n    if (response.statusCode === HttpStatus.OK) {\n      this.checkedRecords = this.rows;\n      this.holidayTableData(this.holidaySearchView);\n    }\n    this.openSnackBar(response.messages.ResultMessage);\n  }\n  // just adding this function for ignore build error --temp\n  onTableRowUnSelecloadHolidaysDatat(e): void {\n\n  }\n  // End\n\n  // select individual record from Holidays table \n  onTableRowSelect(data: any): void {\n    this.holidayIds.push(data.id);\n  }\n\n  // Unselect individual record from Holidays table \n  onTableRowUnSelect(value: any): void {\n    const index = this.holidayIds.findIndex((v: any) => {\n      return value === v.id;\n    });\n    this.holidayIds.splice(index, 1);\n  }\n  onStaffChange(data: any): void {\n    if (data === AppSettings.PAGENUMBER) {\n      this.holidaysGrpForm.controls.classId.setValue(null);\n      this.holidaysGrpForm.controls.sectionId.setValue(null);\n    }\n\n  }\n}\n\n\n\n\n\n","module.exports = \"<div class=\\\"content p-sm-40\\\" (window:resize)=\\\"onResize()\\\">\\n  <div class=\\\"w-100-p mat-elevation-z8 simple-table-container radius-t-20 mt-8\\\" fxLayout=\\\"column\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"p-20\\\">\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"40\\\">\\n        <div class=\\\"font-size-20\\\">\\n          {{tempName}}\\n        </div>\\n      </div>\\n\\n      <div class=\\\"text-right gridRightBtn\\\" fxFlex=\\\"60\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n          <button mat-raised-button translate type=\\\"button\\\" color=\\\"primary\\\" class=\\\"text-uppercase\\\"\\n            (click)=\\\"back()\\\">{{'Back' | translate}}</button>\\n          <button mat-button (click)=\\\"getHelpText('School Schedule Templates')\\\">\\n            <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n          </button>\\n        </div>\\n      </div>\\n\\n    </div>\\n    <mat-divider></mat-divider>\\n    <div class=\\\"m-20 border school-period\\\">\\n      <div *ngFor=\\\"let item of filterSchoolScheduleTempList; let ind = index\\\">\\n        <div fxLayout=\\\"row inline\\\" class=\\\"border-bottom\\\">\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\" class=\\\"border-right p-20 w-120 weekDay break-word custom-white accent-fg font-weight-600 text-uppercase\\\" translate>{{item.name}}</div>\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\" fxLayoutAlign=\\\"center start\\\" class=\\\"border-right w-132 px-12 break-word\\\"\\n            *ngFor=\\\"let child of item.value;let i=index\\\" [ngClass]=\\\"item.value?.length > filterSchoolScheduleTempList[ind-1]?.value?.length ? (i > ( filterSchoolScheduleTempList[ind-1]?.value?.length-1) && ind  ? 'border-top': '') : ''\\\">\\n            <div fxLayout=\\\"row\\\" *ngIf=\\\"child.periodNames == 'PERIOD'\\\" class=\\\"text-uppercase break-word\\\"\\n            translate>{{child.periodNames}}<span></span>&nbsp;{{i+1}}</div>\\n            <div fxLayout=\\\"row\\\" class=\\\"break-word\\\" translate>{{child.periodName}}</div>\\n            <div fxLayout=\\\"row\\\" class=\\\"grey-500-fg break-word\\\" *ngIf=\\\"child.startTime!= null\\\">{{child.startTime | slice:0:5}} to\\n              {{child.endTime | slice:0:5}}\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \".school-period {\\n  overflow-y: auto;\\n  overflow: overlay; }\\n  .school-period .weekDay {\\n    position: -webkit-sticky;\\n    position: sticky;\\n    left: 0px;\\n    z-index: 1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9jbGFzcy1zY2hlZHVsZXMvc2Nob29sLXNjaGVkdWxlLXRlbXBsYXRlLWRldGFpbHMvc2Nob29sLXNjaGVkdWxlLXRlbXBsYXRlLWRldGFpbHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxnQkFBZ0I7RUFDaEIsaUJBQWlCLEVBQUE7RUFIckI7SUFRUSx3QkFBZ0I7SUFBaEIsZ0JBQWdCO0lBQ2hCLFNBQVM7SUFDVCxVQUFVLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2NvbmZpZ3VyYXRpb24vY2xhc3Mtc2NoZWR1bGVzL3NjaG9vbC1zY2hlZHVsZS10ZW1wbGF0ZS1kZXRhaWxzL3NjaG9vbC1zY2hlZHVsZS10ZW1wbGF0ZS1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNjaG9vbC1wZXJpb2Qge1xuICAgLy8gbWF4LXdpZHRoOiA3ODhweDtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIG92ZXJmbG93OiBvdmVybGF5O1xuICAgIC8vIC5tdy0xMDAtcCB7XG4gICAgLy8gICAgIG1pbi13aWR0aDogMTAwJTtcbiAgICAvLyAgfVxuICAgIC53ZWVrRGF5IHtcbiAgICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgICAgbGVmdDogMHB4O1xuICAgICAgICB6LWluZGV4OiAxO1xuICAgIH1cbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { Params, ActivatedRoute } from '@angular/router';\nimport { SchoolScheduleTemplateService } from 'app/service/class-schedules/school-schedule-template.service';\nimport { Subscription } from 'rxjs';\nimport { CommonService } from 'app/service/common.service';\nimport { CommonComponent } from 'app/shared/common/common.component';\n\n@Component({\n  selector: 'app-school-schedule-template-details',\n  templateUrl: './school-schedule-template-details.component.html',\n  styleUrls: ['./school-schedule-template-details.component.scss'],\n  providers: [SchoolScheduleTemplateService]\n})\nexport class SchoolScheduleTemplateDetailsComponent extends CommonComponent implements OnInit {\n  templateId: any;\n  tempName: any;\n  schoolScheduleTempList: Array<any> = [];\n  filterSchoolScheduleTempList: Array<any> = [];\n // innerWidth: number;\n  subscription: Subscription;\n\n  constructor(private routes: ActivatedRoute,\n    private schoolScheduleTemplateService: SchoolScheduleTemplateService,\n    public commonService: CommonService, public location: Location) {\n    super();\n    this.subscription = this.commonService.getMenuWidth().subscribe(res => {\n      // if(res){\n      // this.innerWidth = window.innerWidth - 420 + res;\n      // this.getdeviceSize(res);\n      // }\n    });\n  }\n\n  ngOnInit(): void {\n    this.routes.params\n      .subscribe((params: Params) => {\n        this.templateId = params['id'];\n        this.getTemplateDetails();\n      });\n    this.schoolScheduleTempList = [];\n   // this.getdeviceSize();\n  }\n  onResize(): void {\n  // this.getdeviceSize();\n  }\n  // getdeviceSize(width?: any): void {\n  //   if (width !== undefined) {\n  //     this.innerWidth = window.innerWidth - 420 + width;\n  //   }\n  //   else {\n  //     this.innerWidth = window.innerWidth - 420;\n  //   }\n\n  // }\n\n\n  getTemplateDetails(): void {\n    this.schoolScheduleTemplateService.schoolScheduleTemplateTemplateDetailsGet(this.templateId).subscribe(res => {\n      this.schoolScheduleTempList = res.templateDetailsView.periodsListViewModel;\n      this.tempName = res.templateDetailsView.templateName;\n      this.updateScheduleTemp();\n    });\n  }\n\n  updateScheduleTemp(): void {\n    if (this.schoolScheduleTempList.length > 0) {\n      this.filterSchoolScheduleTempList = [];\n      this.filterSchoolScheduleTempList = [{\n        name: 'Day', value: []\n      }];\n      for (const key of this.schoolScheduleTempList) {\n        const index = this.filterSchoolScheduleTempList.findIndex(ele => ele.name === key.weekDayName);\n        if (index === -1) {\n          const val = [];\n          val.push(key);\n          const data = { name: key.weekDayName, value: val };\n          this.filterSchoolScheduleTempList.push(data);\n        } else {\n          const i = this.filterSchoolScheduleTempList.findIndex(ele => ele.name === key.weekDayName);\n          this.filterSchoolScheduleTempList[i].value.push(key);\n        }\n      }\n      let max = -Infinity;\n      let j = -1;\n      this.filterSchoolScheduleTempList.forEach(function (a, i): void {\n        if (a.value.length > max) {\n          max = a.value.length;\n          j = i;\n        }\n      });\n\n      for (let k = 0; k < max; k++) {\n        this.filterSchoolScheduleTempList[0].value.push({\n          periodNames: 'PERIOD'\n        });\n      }\n      this.sortByWeekday(this.filterSchoolScheduleTempList);\n    }\n\n  }\n\n  sortByWeekday(data): void {\n    const sorter = {\n      'monday': 1,\n      'tuesday': 2,\n      'wednesday': 3,\n      'thursday': 4,\n      'friday': 5,\n      'saturday': 6,\n      'sunday': 7\n    };\n\n    data.sort(function sortByDay(a, b): number {\n      const day1 = a.name.toLowerCase();\n      const day2 = b.name.toLowerCase();\n      return sorter[day1] - sorter[day2];\n    });\n  }\n}\n","module.exports = \"<app-table [settings]=\\\"tabSettings\\\" id=\\\"school-schedule-template\\\" (getTableData)='getSchoolScheduleTempGridDetails($event)'\\n   (rowBasedAction)=\\\"rowWiseActions($event)\\\" (openAddForm)=\\\"onAddFormClick()\\\"\\n  [closeRowForm]='closeAddPanel' [templateRef]=\\\"addTemplateRef\\\">\\n</app-table>\\n\\n<ng-template #addTemplateRef>\\n  <form [formGroup]=\\\"schoolScheduleForm\\\" #schoolScheduleTempForm=\\\"ngForm\\\">\\n    <div fxFlexFill fxLayoutAlign=\\\"start center\\\" fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-28\\\" id=\\\"tempName\\\">\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n        <mat-label #tempName translate>Template Name</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'schoolScheduleForm','templateName')\\\" matInput formControlName=\\\"templateName\\\"\\n          (blur)=\\\"trimTextBoxSpaces('schoolScheduleForm','templateName')\\\" required>\\n        <mat-error>\\n          <app-validation [labelName]='tempName.innerText'\\n            [validationControl]=\\\"schoolScheduleForm.controls.templateName\\\" [doValidate]=\\\"schoolScheduleFormDetails\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n      <app-custom-dropdown *ngIf=\\\"weekdaysDropdown\\\" fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n        fxFlex.gt-sm=\\\"50\\\" class=\\\"pl-sm-20\\\" [dropDownConf]=\\\"weekdaysDropdown\\\" formControlName=\\\"weekDayId\\\"\\n        [errorCheck]=\\\"schoolScheduleForm.controls.weekDayId\\\" (selectedData)=\\\"onSelect($event)\\\" ngDefaultControl [disable]=\\\"isUpdateDayPeriods\\\">\\n      </app-custom-dropdown>\\n    </div>\\n    <div fxFlexFill fxLayoutAlign=\\\"end center\\\" fxLayout=\\\"row\\\" class=\\\"py-12\\\">\\n      <button class=\\\"mr-12 text-uppercase\\\" *ngIf=\\\"isCancel\\\" mat-raised-button type=\\\"button\\\"\\n        (click)=\\\"cancel()\\\">{{'Cancel' | translate}}</button>\\n      <button *ngIf=\\\"!isUpdateDayPeriods\\\" mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\"\\n        (click)=\\\"schedulePeriods()\\\" [disabled]=\\\"isPeriodsTemp\\\">{{'Set Periods' | translate}}</button>\\n    </div>\\n  </form>\\n  <div *ngIf=\\\"isPeriodsTemp\\\">\\n    <mat-divider class=\\\"pb-16\\\"></mat-divider>\\n    <form [formGroup]=\\\"periodLists\\\" (ngSubmit)=\\\"updateSelectedSchoolScheduleTemplates()\\\">\\n      <div formArrayName=\\\"periodListsView\\\"  *ngFor=\\\"let itemrow of addNewRowSchoolScheduleform.controls; let i=index\\\">\\n        <div [formGroupName]=\\\"i\\\" fxFlexFill fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxLayout.gt-xs=\\\"row\\\"\\n          class=\\\"pt-16\\\">\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"45\\\">\\n            <mat-label #periodname translate>Period Name</mat-label>\\n            <input #myInput (keyup)=\\\"preventSpaceForArray($event,itemrow.controls.name);\\\"\\n              (blur)=\\\"trimSpaces(itemrow,'name');\\\" formControlName=\\\"name\\\" matInput\\n              required>\\n            <mat-error>\\n              <app-validation [labelName]='periodname.innerText' [validationControl]=\\\"itemrow.controls.name\\\"\\n                [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"45\\\" class=\\\"px-sm-20\\\">\\n            <app-custom-timepicker  [rangeMode]=\\\"true\\\" [label]=\\\"'Time'\\\" appearance=\\\"outline\\\" formControlName=\\\"periodTime\\\"\\n                                   [is24HoursFormat]=\\\"true\\\" [showLabel]=\\\"true\\\" [isRequired]=\\\"true\\\" [errorClass]=\\\"'pt-20'\\\"\\n                                   [requiredValidator]=\\\"true\\\" [timeValidator] = \\\"true\\\"></app-custom-timepicker>\\n          </div>\\n\\n         <!-- <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"25\\\" class=\\\"px-sm-20\\\">\\n            <app-custom-timepicker  [label]=\\\"'End Time'\\\" appearance=\\\"outline\\\" formControlName=\\\"endTime\\\"\\n                                   [is24HoursFormat]=\\\"true\\\" [showLabel]=\\\"true\\\" [isRequired]=\\\"true\\\" [errorClass]=\\\"'pt-20'\\\"\\n                                   [requiredValidator]=\\\"true\\\" [timeValidator] = \\\"true\\\"></app-custom-timepicker>\\n          </div>-->\\n\\n          <button *ngIf=\\\"itemrow.value.isRemoveVisible\\\" mat-icon-button type=\\\"button\\\" class=\\\"mb-16 red-400-fg\\\"\\n            (click)=\\\"deleteRow(i)\\\">\\n            <mat-icon>delete</mat-icon>\\n          </button>\\n          <button *ngIf=\\\"itemrow.value.isAddVisible\\\" mat-mini-fab class=\\\"mb-16\\\" type=\\\"button\\\" (click)=\\\"addNewRow(itemrow)\\\"\\n            [disabled]=\\\"isDisabled\\\">\\n            <mat-icon>add</mat-icon>\\n          </button>\\n\\n        </div>\\n        <div *ngIf=\\\"periodErrorMessages[i] !== undefined && periodErrorMessages[i] !== ''\\\" class=\\\"red-fg\\\">\\n          {{periodErrorMessages[i]}}\\n        </div>\\n      </div>\\n      <!--<div *ngIf=\\\"isDisabled\\\" class=\\\"red-fg\\\">{{errorMsg}}</div>-->\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"pt-16\\\">\\n        <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\"\\n          (click)=\\\"cancelPeriods()\\\">{{'Cancel' | translate}}</button>\\n        <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\"\\n          [disabled]=\\\"isDisabled\\\">{{'Select' | translate}}</button>\\n      </div>\\n    </form>\\n  </div>\\n  <mat-divider class=\\\"pb-28 mt-12\\\" *ngIf=\\\"filterSchoolScheduleTempList.length >0\\\"></mat-divider>\\n  <div class=\\\"border school-period\\\" *ngIf=\\\"filterSchoolScheduleTempList.length >0\\\">\\n    <div fxLayout=\\\"row inline\\\" *ngFor=\\\"let item of filterSchoolScheduleTempList; let ind = index\\\" class=\\\"mw-100-p\\\">\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\"\\n        class=\\\"border-right border-bottom py-20 pl-12 pr-4 w-144 weekDay custom-white break-word accent-fg font-weight-600 text-uppercase\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\" translate>{{item.name}}\\n          <button mat-icon-button color=\\\"primary\\\" *ngIf=\\\"item.name!='Day'\\\" [matMenuTriggerFor]=\\\"menuEdit\\\">\\n            <mat-icon>more_vert</mat-icon>\\n          </button>\\n        </div>\\n      </div>\\n      <mat-menu #menuEdit=\\\"matMenu\\\">\\n        <button mat-menu-item (click)=\\\"editPeriods(item)\\\">\\n          <mat-icon class=\\\"mr-8\\\">edit</mat-icon>{{'Change' | translate}}\\n        </button>\\n        <button mat-menu-item (click)=\\\"deletePeriods(item.name)\\\">\\n          <mat-icon class=\\\"mr-8\\\">delete</mat-icon>{{'Delete' | translate}}\\n        </button>\\n      </mat-menu>\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\" fxLayoutAlign=\\\"center start\\\"\\n      [ngClass]=\\\"item.value?.length > filterSchoolScheduleTempList[ind-1]?.value?.length ? (i > ( filterSchoolScheduleTempList[ind-1]?.value?.length-1) && ind  ? 'border-top': '') : ''\\\" class=\\\"border-right border-bottom w-140 px-12\\\"\\n        *ngFor=\\\"let child of item.value;let i=index\\\">\\n        <div fxLayout=\\\"row\\\" *ngIf=\\\"child.periodNames == 'PERIOD'\\\" class=\\\"text-uppercase break-word\\\" translate>\\n          {{child.periodNames}}<span></span>&nbsp;{{i+1}}</div>\\n        <div fxLayout=\\\"row\\\" class=\\\"break-word\\\">{{child.periodName}}</div>\\n        <div fxLayout=\\\"row\\\" class=\\\"grey-500-fg break-word\\\" *ngIf=\\\"child.startTime!= null\\\">{{child.startTime | slice:0:5}} to\\n          {{child.endTime | slice:0:5}}\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"filterSchoolScheduleTempList.length >0\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"pt-16\\\">\\n    <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\"\\n      (click)=\\\"cancel()\\\">{{'Cancel' | translate}}</button>\\n    <button mat-raised-button type=\\\"submit\\\" [disabled]=\\\"isDisabled\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\"\\n      (click)=\\\"onSubmitSchooolScheduleTemp()\\\">{{(isUpdateData ? 'Update':'Create') | translate}}</button>\\n  </div>\\n</ng-template>\\n\"","module.exports = \".school-period {\\n  max-width: 788px;\\n  overflow-y: auto;\\n  overflow: overlay; }\\n  .school-period .mw-100-p {\\n    min-width: 100%; }\\n  .school-period .weekDay {\\n    position: -webkit-sticky;\\n    position: sticky;\\n    left: 0px;\\n    z-index: 1; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9jbGFzcy1zY2hlZHVsZXMvc2Nob29sLXNjaGVkdWxlLXRlbXBsYXRlcy9zY2hvb2wtc2NoZWR1bGUtdGVtcGxhdGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixpQkFBaUIsRUFBQTtFQUhyQjtJQUtRLGVBQWUsRUFBQTtFQUx2QjtJQVFRLHdCQUFnQjtJQUFoQixnQkFBZ0I7SUFDaEIsU0FBUztJQUNULFVBQVUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9jbGFzcy1zY2hlZHVsZXMvc2Nob29sLXNjaGVkdWxlLXRlbXBsYXRlcy9zY2hvb2wtc2NoZWR1bGUtdGVtcGxhdGVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uc2Nob29sLXBlcmlvZCB7XG4gICAgbWF4LXdpZHRoOiA3ODhweDtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIG92ZXJmbG93OiBvdmVybGF5O1xuICAgIC5tdy0xMDAtcCB7XG4gICAgICAgIG1pbi13aWR0aDogMTAwJTtcbiAgICAgfVxuICAgIC53ZWVrRGF5IHtcbiAgICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgICAgbGVmdDogMHB4O1xuICAgICAgICB6LWluZGV4OiAxO1xuICAgIH1cbn0iXX0= */\"","import { Component, ViewChild, OnInit, ViewChildren, QueryList, ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators, FormArray } from '@angular/forms';\nimport { Pattern, AppSettings, URLConstants } from 'app/app.constants';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport {ErrorStateMatcher, MatDialog, MatSnackBar, ShowOnDirtyErrorStateMatcher} from '@angular/material';\nimport { Router } from '@angular/router';\n\nimport { CommonService } from 'app/service/common.service';\nimport { SchoolScheduleTemplateService } from 'app/service/class-schedules/school-schedule-template.service';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { DropDownConfModel } from 'app/models/drop-down-conf-view';\nimport { SearchSchoolScheduleTempView } from '../model/search-school-schedule-temp-view';\nimport { SchoolschedulePeriodsView } from '../model/school-schedule-periods-view';\nimport { SchoolschedulePeriodsUpdateView } from '../model/school-schedule-periods-update-view';\nimport { DatePipe } from '@angular/common';\nimport * as moment from 'moment';\nimport {distinctUntilChanged} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-school-schedule-templates',\n  templateUrl: './school-schedule-templates.component.html',\n  styleUrls: ['./school-schedule-templates.component.scss'],\n  // providers: [SchoolScheduleTemplateService]\n  providers: [ SchoolScheduleTemplateService , { provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher }]\n})\nexport class SchoolScheduleTemplatesComponent extends CommonComponent implements OnInit {\n  @ViewChildren('myInput') myInput: QueryList<ElementRef>;\n  @ViewChild('schoolScheduleTempForm') schoolScheduleTempForm;\n\n  searchSchoolScheduleTempView: SearchSchoolScheduleTempView;\n  schoolschedulePeriodsView: SchoolschedulePeriodsView;\n  schoolschedulePeriodsUpdateView: SchoolschedulePeriodsUpdateView;\n\n  closeAddPanel: boolean;\n  schoolScheduleFormDetails = false;\n  startTime: any;\n  endTime: any;\n  isPeriodsTemp = false;\n  isUpdateData = false;\n  isCancel = true;\n  isDisabled = false;\n  filterWeekdays: Array<any> = [];\n  schoolScheduleTempList: Array<any> = [];\n  schoolScheduleTempSelectList: Array<any> = [];\n  filterSchoolScheduleTempList: Array<any> = [];\n  filterRowData: any = [];\n  errorMsg: any;\n  periodErrorMessages = [];\n  isUpdateDayPeriods =  false;\n\n  weekdaysDropdown: DropDownConfModel;\n  httpStatus: any;\n\n  schoolScheduleForm: FormGroup;\n  periodLists: FormGroup;\n  /* Rajkumar Added Code Start*/\n  schoolSchedulePeriods: any;\n  selectedSchoolScheduleTemplates: any;\n  originalScheduleTemplate: any;\n  /* Rajkumar Added Code End*/\n\n  //  refernces for ng prime table\n  tableData: Array<any> = [];\n  rows: Array<any>;\n  cols: any[];\n  pageCnt: number;\n  totalItems: number;\n  custRowsPerPageOptions: Array<number> = [];\n  tabSettings: {};\n  currentComponent = 'SchoolScheduleTemplatesComponent';\n  schedulePeriodsList: any = [];\n\n  constructor(private _fb: FormBuilder, public dialog: MatDialog, public commonService: CommonService, private cd: ChangeDetectorRef,\n    private router: Router, private schoolScheduleTemplateService: SchoolScheduleTemplateService, public snackBar: MatSnackBar) {\n    super();\n    this.searchSchoolScheduleTempView = {\n      templateName: [],\n      sortBy: '',\n      sortOrder: AppSettings.SORT_ORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n  }\n\n  ngOnInit(): void {\n    this.httpStatus = require('http-status-codes');\n\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.searchSchoolScheduleTempView = modelTableComponent;\n    }\n\n    this.cols = [\n      { field: 'name', header: 'Template Name', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n\n    // initializing table settings /\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      tablename: 'School Schedule Templates',\n      componentName: this.currentComponent,\n    };\n\n    this.schoolschedulePeriodsView = {\n      templateName: '',\n      periodsListView: []\n    };\n\n    this.schoolschedulePeriodsUpdateView = {\n      templateName: '',\n      periodsListView: []\n    };\n    this.schoolScheduleTempList = [];\n    this.schoolScheduleTemplateForm();\n    this.periodsForm();\n    this.weekDays();\n    this.getSchoolScheduleTempGridDetails(this.searchSchoolScheduleTempView);\n\n\n  }\n\n  onChanges(): void {\n    this.periodLists.controls.periodListsView.valueChanges.pipe(distinctUntilChanged()).subscribe(val => {\n      this.schoolSchedulePeriods = [];\n      val.forEach(period => {\n        if (period.periodTime !== null && period.periodTime !== undefined) {\n          const periods = period.periodTime.split('-');\n          period.startTime = periods[0].trim();\n          period.endTime = (periods[1] !== undefined && periods[1] !== null) ? periods[1].trim() : null;\n        }\n        this.schoolSchedulePeriods.push(period);\n      });\n\n      if (this.periodLists.controls.periodListsView.status === AppSettings.VALID\n          && this.schoolScheduleForm.status === AppSettings.VALID) {\n        this.validateAllPeriods();\n      }\n      else {\n        this.periodErrorMessages = [];\n      }\n\n    });\n  }\n\n\n  schoolScheduleTemplateForm(): void {\n    this.schoolScheduleForm = this._fb.group({\n      templateName: new FormControl('', [Validators.required, Validators.maxLength(45)]),\n      weekDayId: new FormControl('', [Validators.required]),\n    });\n  }\n\n  periodsForm(): void {\n    this.periodLists = this._fb.group({\n      periodListsView: this._fb.array([this.initItemRows()]),\n    });\n    this.onChanges();\n  }\n\n  weekDays(): void {\n    this.filterWeekdays = [];\n    this.schoolScheduleTemplateService.schoolScheduleTemplateWeekdaysGet().subscribe(response => {\n      if (response.commonViewModel != null) {\n        if (response.commonViewModel.length) {\n          response.commonViewModel.forEach(element => {\n            this.filterWeekdays.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n          this.weekdaysDropdown = { multiSelect: true, placeholder: 'Weekdays', data: this.filterWeekdays, noEntryFoundLabel: 'No Data Found', isRequired: true };\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n  getSchoolScheduleTempGridDetails(data: any): void {\n    this.searchSchoolScheduleTempView = data;\n    this.schoolScheduleTemplateService.schoolScheduleTemplateAllTemplatesGet(this.searchSchoolScheduleTempView.templateName,\n      this.searchSchoolScheduleTempView.sortBy, this.searchSchoolScheduleTempView.sortOrder,\n      this.searchSchoolScheduleTempView.pageNumber, this.searchSchoolScheduleTempView.pageSize)\n        .subscribe(res => this.resSchoolScheTempDetails(res), error => {\n        this.errorResponse(error);\n      });\n  }\n\n  resSchoolScheTempDetails(data: any): void {\n    this.custRowsPerPageOptions = [];\n    if (!data.commonViewModelTemplates) {\n      this.rows = [];\n      this.totalItems = 0;\n      this.pageCnt = 0;\n    }\n    else {\n      this.rows = data.commonViewModelTemplates.list;\n      this.totalItems = data.commonViewModelTemplates.totalItems;\n      this.pageCnt = data.commonViewModelTemplates.totalPages;\n\n      const rowOperations = [\n        {\n          name: AppSettings.VIEW,\n          icon: AppSettings.DETAILS_ICON,\n        },\n        {\n          name: AppSettings.EDIT_OPERATION,\n          icon: AppSettings.EDIT_ICON,\n          operationName: AppSettings.EDIT\n        },\n        {\n          name: AppSettings.DELETE_OPERATION,\n          icon: AppSettings.DELETE_ICON,\n          operationName: AppSettings.DELETE\n        },\n      ];\n\n      this.rows.forEach(e => {\n        e.operations = rowOperations;\n      });\n    }\n    if (data.commonViewModelTemplates) {\n      this.searchSchoolScheduleTempView.pageNumber = data.commonViewModelTemplates.pageNumber;\n    }\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.searchSchoolScheduleTempView,\n      rows: this.rows,\n      tablename: 'School Schedule Templates',\n      componentName: this.currentComponent,\n      isNewStudentCourseSelectionRequired: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      pageCnt: this.pageCnt,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      filtersList: data.filters,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: AppSettings.NEW\n        },\n        infoButton: {\n          required: true,\n          text: 'School Schedule Templates'\n        }\n      },\n    };\n  }\n\n  onAddFormClick(): void {\n    this.closeAddPanel = false;\n    this.isUpdateData = false;\n    this.isDisabled = false;\n    this.schoolScheduleTempList = [];\n    this.selectedSchoolScheduleTemplates = [];\n    this.periodsForm();\n  }\n\n  cancel(): void {\n    this.schoolScheduleTempForm.resetForm();\n    this.isPeriodsTemp = false;\n    this.closeAddPanel = true;\n    this.isCancel = true;\n    this.schoolScheduleTempList = [];\n    this.selectedSchoolScheduleTemplates = [];\n    this.filterSchoolScheduleTempList = [];\n    this.errorMsg = '';\n    this.periodErrorMessages = [];\n    this.periodsForm();\n    this.getSchoolScheduleTempGridDetails(this.searchSchoolScheduleTempView);\n    this.scrollToView();\n    // this.isDisabled = true;\n    if (this.periodLists.controls.periodListsView.invalid && this.schoolScheduleForm.invalid) {\n      this.isDisabled = true;\n    }\n\n  }\n\n  cancelPeriods(): void {\n    this.errorMsg = '';\n    this.periodErrorMessages = [];\n    this.isDisabled = false;\n    this.isUpdateDayPeriods = false;\n    this.schoolScheduleForm.controls['weekDayId'].patchValue('');\n    if (this.schoolScheduleTempList.length === 0 && this.filterSchoolScheduleTempList.length === 0) {\n      this.cancel();\n    }\n    else {\n      this.isPeriodsTemp = false;\n    }\n    this.scrollToView();\n  }\n\n  // return type for educaion details form\n  get addNewRowSchoolScheduleform(): FormArray {\n    this.updateAddRemoveRow();\n    return <FormArray>this.periodLists.get('periodListsView');\n  }\n\n  // Adding assessmentSubCategory details onClick ADD\n  addNewRow(itemrow = null): any {\n    (<any>Object).values(itemrow.controls).forEach(control => {\n      control.markAsTouched();\n      control.updateValueAndValidity();\n    });\n    if (this.periodLists.controls.periodListsView.valid && this.schoolScheduleForm.valid) {\n      // control refers to your formarray\n      const control = <FormArray>this.periodLists.controls['periodListsView'];\n\n      // add new formgroup\n      control.push(this.initItemRows());\n\n      this.assignStartEndTime();\n      this.updateAddRemoveRow();\n      this.cd.detectChanges();\n      this.myInput.last.nativeElement.focus();\n    }\n   // else {\n      this.isDisabled = true;\n    // }\n  }\n\n  deleteRow(index: number): void {\n    // control refers to your formarray\n    const control = <FormArray>this.periodLists.controls['periodListsView'];\n    // remove the chosen row\n    control.removeAt(index);\n\n    let filterPeriods = [];\n    this.schoolScheduleForm.value.weekDayId.forEach(t => {\n      filterPeriods.push(this.schoolScheduleTempList.filter((item) => item.weekDayId !== t.value));\n      this.schoolScheduleTempList = filterPeriods[0];\n      filterPeriods = [];\n    });\n    this.updateAddRemoveRow();\n\n    this.periodErrorMessages = [];\n    if (this.periodLists.controls.periodListsView.status === AppSettings.VALID\n        && this.schoolScheduleForm.status === AppSettings.VALID) {\n      this.validateAllPeriods();\n    }\n    else {\n      this.periodErrorMessages = [];\n      this.isDisabled = true;\n    }\n    this.cd.detectChanges();\n    this.myInput.last.nativeElement.focus();\n  }\n\n  assignStartEndTime(): void {\n    const i = this.periodLists.controls.periodListsView.value.length;\n    const startTime = moment(this.periodLists.controls.periodListsView.value[i - 2].startTime, 'HH:mm');\n    const endTime = moment(this.periodLists.controls.periodListsView.value[i - 2].endTime, 'HH:mm');\n\n    // calculate total duration\n    const duration = moment.duration(endTime.diff(startTime));\n\n    // duration in hours\n    // tslint:disable-next-line:radix\n    const hours = parseInt(duration.asHours().toString());\n\n    // duration in minutes\n    // tslint:disable-next-line:radix\n    const minutes = parseInt(duration.asMinutes().toString()) % 60;\n\n    this.periodLists.controls.periodListsView.value[i - 1].startTime = this.periodLists.controls.periodListsView.value[i - 2].endTime;\n    const initialEndTime = moment.utc(this.periodLists.controls.periodListsView.value[i - 2].endTime, 'HH:mm').add(hours, 'hour').format('HH:mm');\n    const finalEndTime = moment.utc(initialEndTime, 'HH:mm').add(minutes, 'minutes').format('HH:mm');\n    this.periodLists.controls.periodListsView.value[i - 1].endTime = finalEndTime;\n    this.periodLists.controls.periodListsView['controls'].forEach((periodLst, indexOfLst) => {\n      this.periodLists.controls.periodListsView.value.forEach((resPeriodLst, j) => {\n        if (indexOfLst === j) {\n          if (resPeriodLst.schoolSchedulePeriodId !== undefined) {\n            periodLst.controls['schoolSchedulePeriodId'].setValue(resPeriodLst.schoolSchedulePeriodId);\n          }\n          periodLst.controls['startTime'].setValue(resPeriodLst.startTime);\n          periodLst.controls['endTime'].setValue(resPeriodLst.endTime === '00:00' ? '23:59' : resPeriodLst.endTime);\n          periodLst.controls['periodTime'].setValue(resPeriodLst.startTime + '-' + (resPeriodLst.endTime === '00:00' ? '23:59' : resPeriodLst.endTime));\n        }\n      });\n    });\n  }\n\n  rowWiseActions(event: any): void {\n    if (event.operation === AppSettings.DELETE) {\n      const dialogRef = this.dialog.open(CustomDialogComponent, {\n        disableClose: true,\n        data: { text: this.commonService.getTranslation(AppSettings.DELETE_CONFORMATION, ''), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n      });\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.schoolScheduleTemplateService.schoolScheduleTemplateDeleteTemplateDelete(event.clickedRow.id).subscribe(res => this.deleteResponse(res), error => {\n            this.errorResponse(error);\n          });\n        }\n        if (action === AppSettings.NO) {\n          this.dialog.closeAll();\n        }\n      });\n    }\n    else if (event.operation === AppSettings.VIEW.toLowerCase()) {\n      this.router.navigate(\n        [URLConstants.SCHOOL_SCHEDULE_TEMPLATE_DETAILS + event.clickedRow.id]);\n    }\n    else if (event.operation === AppSettings.EDIT) {\n      this.schoolschedulePeriodsUpdateView.id = event.clickedRow.id;\n      this.schoolScheduleTemplateService.schoolScheduleTemplateTemplateDetailsGet(event.clickedRow.id).subscribe(res => this.getById(res), error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n\n  getById(data: any): void {\n    if (data.statusCode === this.httpStatus.OK) {\n      data.templateDetailsView.periodsListViewModel.forEach(t => {\n        t.startTime = t.startTime.slice(0, 5);\n        t.endTime = t.endTime.slice(0, 5);\n      });\n      this.isUpdateData = true;\n      this.selectedSchoolScheduleTemplates = data.templateDetailsView.periodsListViewModel;\n      this.originalScheduleTemplate = data.templateDetailsView.periodsListViewModel;\n      this.schoolScheduleForm.controls['templateName'].setValue(data.templateDetailsView.templateName);\n      this.isPeriodsTemp = false;\n      this.isCancel = false;\n      this.isDisabled = false;\n      this.updateScheduleTemp();\n    }\n    else {\n      this.openSnackBar(data.messages.ResultMessage, true);\n    }\n  }\n\n  // delete return response after click\n  deleteResponse(response: any): void {\n    this.getSchoolScheduleTempGridDetails(this.searchSchoolScheduleTempView);\n    this.openSnackBar(response.messages.ResultMessage);\n  }\n\n  updateAddRemoveRow(): void {\n    const i = this.periodLists.controls.periodListsView.value.length;\n    if (this.periodLists.controls.periodListsView.value.length > 1) {\n      this.periodLists.controls.periodListsView.value.forEach(e => {\n        e.isAddVisible = false;\n        e.isRemoveVisible = true;\n      });\n      this.periodLists.controls.periodListsView.value[i - 1].isAddVisible = true;\n      this.periodLists.controls.periodListsView.value[i - 1].isRemoveVisible = true;\n    }\n    else if (this.periodLists.controls.periodListsView.value.length === 1) {\n      this.periodLists.controls.periodListsView.value[i - 1].isAddVisible = true;\n      this.periodLists.controls.periodListsView.value[i - 1].isRemoveVisible = false;\n    }\n  }\n\n  // list all your form controls here, which belongs to your form array\n  initItemRows(): FormGroup {\n    return this._fb.group({\n      name: new FormControl(null, [Validators.required, Validators.maxLength(15)]),\n      periodTime: new FormControl(null, [Validators.required]),\n      startTime: new FormControl(null),\n      endTime: new FormControl(null),\n      isAddVisible: Boolean(true),\n      isRemoveVisible: Boolean(false),\n      weekDayId: new FormControl(),\n      weekDayName: new FormControl(),\n      schoolSchedulePeriodId: new FormControl()\n    });\n  }\n\n  schedulePeriods(): void {\n    this.intializeForm();\n\n  }\n  intializeForm(): void{\n    this.periodsForm();\n    this.validWeeKday();\n    this.isDisabled = true;\n    this.errorMsg = '';\n    this.periodErrorMessages = [];\n    if (this.schoolScheduleForm.status === AppSettings.VALID) {\n      this.isCancel = false;\n      this.isPeriodsTemp = true;\n    }\n    else {\n      this.schoolScheduleFormDetails = true;\n    }\n    this.cd.detectChanges();\n  }\n\n  validateAllPeriods(): void {\n    this.periodErrorMessages = [];\n    for (let i = 0; i < this.schoolSchedulePeriods.length; i++) {\n      this.validatePeriod(i);\n    }\n    if (this.schoolSchedulePeriods.length >= 1 && !this.isDisabled) {\n      this.validatePeriodIntervals();\n      this.validateExistingSchedule();\n    }\n    const currentErrors = this.periodErrorMessages.filter(x => x !== '');\n    if (currentErrors && currentErrors.length) {\n      this.isDisabled = true;\n    }\n\n  }\n\n  validatePeriod(periodIndex): void {\n    const currentPeriod = this.schoolSchedulePeriods[periodIndex];\n    switch (true) {\n      case currentPeriod.name !== null && currentPeriod.name.length > 15:\n        this.errorMsg = 'Period Name should not exeed 15 Characters';\n        this.isDisabled = true;\n        this.periodErrorMessages[periodIndex] = this.errorMsg;\n        break;\n      case (this.schoolSchedulePeriods.filter(x => x.name !== null && currentPeriod.name !== null\n          && x.name.toLowerCase().trim() === currentPeriod.name.toLowerCase().trim()).length > 1):\n        this.errorMsg = AppSettings.WARNING_ON_DUPLICATE_PERIODS;\n        this.isDisabled = true;\n        this.periodErrorMessages[periodIndex] = this.errorMsg;\n        break;\n      case (currentPeriod.startTime !== null && currentPeriod.endTime === null)\n            || (currentPeriod.startTime === null && currentPeriod.endTime !== null):\n        this.errorMsg = 'Invalid Time Range for Period ' + currentPeriod.name;\n        this.isDisabled = true;\n        this.periodErrorMessages[periodIndex] = this.errorMsg;\n            break;\n      case currentPeriod.startTime !== null && currentPeriod.endTime !== null:\n        const datePipe = new DatePipe('en-US');\n        const periodStartTime = new Date();\n        const splitStartTime = currentPeriod.startTime.split(':');\n        if (!(splitStartTime[0] === '' || splitStartTime[1] === '')) {\n          periodStartTime.setHours((parseInt(splitStartTime[0], 10)));\n          periodStartTime.setMinutes(parseInt(splitStartTime[1], 10));\n        }\n\n        const periodEndTime = new Date();\n        const splitEndTime = currentPeriod.endTime.split(':');\n        if (!(splitEndTime[0] === '' || splitEndTime[1] === '')) {\n          periodEndTime.setHours((parseInt(splitEndTime[0], 10)));\n          periodEndTime.setMinutes(parseInt(splitEndTime[1], 10));\n        }\n\n        if (datePipe.transform(periodStartTime, 'HH:mm') === datePipe.transform(periodEndTime, 'HH:mm')) {\n          this.errorMsg = AppSettings.WARNING_ON_START_END_TIME;\n          this.isDisabled = true;\n          this.periodErrorMessages[periodIndex] = this.errorMsg;\n        }\n        else if (periodEndTime < periodStartTime) {\n          this.errorMsg = AppSettings.WARNING_ON_END_TIME_GREATER_START_TIME;\n          this.isDisabled = true;\n          this.periodErrorMessages[periodIndex] = this.errorMsg;\n        }\n        else {\n          this.isDisabled = false;\n        }\n\n        break;\n\n      default:\n        this.isDisabled = false;\n        break;\n    }\n  }\n\n  validatePeriodIntervals(): void {\n    for (let i = 0; i < this.schoolSchedulePeriods.length; i++) {\n      for (let j = i + 1; j < this.schoolSchedulePeriods.length; j++) {\n        if (((this.schoolSchedulePeriods[i].startTime < this.schoolSchedulePeriods[j].endTime)\n                && (this.schoolSchedulePeriods[j].startTime < this.schoolSchedulePeriods[i].endTime))\n            ||\n            (this.schoolSchedulePeriods[i].startTime <= this.schoolSchedulePeriods[j].startTime\n                && this.schoolSchedulePeriods[j].endTime <= this.schoolSchedulePeriods[i].endTime))\n        {\n          this.periodErrorMessages[i] = AppSettings.WARNING_ON_INVALID_PERIOD_TIMINGS;\n          this.periodErrorMessages[j] = AppSettings.WARNING_ON_INVALID_PERIOD_TIMINGS;\n          this.isDisabled = true;\n        }\n      }\n    }\n  }\n\n  validateExistingSchedule(): void {\n      if (this.selectedSchoolScheduleTemplates === undefined ||  this.isUpdateDayPeriods) {\n          return;\n      }\n      this.schoolScheduleForm.value.weekDayId.forEach( weekday => {\n          this.schoolSchedulePeriods.forEach((schoolSchedulePeriod , index) => {\n              const existingPeriods = this.selectedSchoolScheduleTemplates.filter(\n                  x => weekday.value === x.weekDayId) || [];\n              if (existingPeriods.length > 0) {\n                  existingPeriods.forEach(existingPeriod => {\n                      if ( existingPeriod.schoolSchedulePeriodId !== schoolSchedulePeriod.schoolSchedulePeriodId\n                          && existingPeriod.periodName.toLowerCase() !== schoolSchedulePeriod.name.toLowerCase()\n                          && ((existingPeriod.startTime < schoolSchedulePeriod.endTime\n                          && schoolSchedulePeriod.startTime < existingPeriod.endTime)\n                          ||\n                          (existingPeriod.startTime <= schoolSchedulePeriod.startTime\n                              && schoolSchedulePeriod.endTime <= existingPeriod.endTime))\n                      ) {\n                          this.periodErrorMessages[index] = AppSettings.WARNING_ON_INVALID_PERIOD_TIMINGS;\n                          this.isDisabled = true;\n                      }\n                  });\n              }\n          });\n      });\n\n  }\n\n  updateSelectedSchoolScheduleTemplates(): void {\n    this.errorMsg = '';\n    this.periodErrorMessages = [];\n    if (this.periodLists.controls.periodListsView.status === AppSettings.VALID\n        && this.schoolScheduleForm.status === AppSettings.VALID) {\n      if (this.selectedSchoolScheduleTemplates === undefined) {\n        this.selectedSchoolScheduleTemplates = [];\n      }\n\n      this.schoolScheduleForm.value.weekDayId.forEach(weekDay => {\n          if (this.isUpdateDayPeriods) {\n            this.selectedSchoolScheduleTemplates = this.selectedSchoolScheduleTemplates.filter(x => x.weekDayId !== weekDay.value);\n          }\n        this.schoolSchedulePeriods.forEach(schoolSchedulePeriod => {\n          const existingPeriodIndex = this.selectedSchoolScheduleTemplates.findIndex(elt =>\n              elt.weekDayId === weekDay.value && elt.periodName.toLowerCase() === schoolSchedulePeriod.name.toLowerCase());\n          if (existingPeriodIndex !== -1) {\n            const existingPeriodData = this.selectedSchoolScheduleTemplates[existingPeriodIndex];\n            const currentPeriodInfo = {\n              weekDayId: weekDay.value,\n              weekDayName: weekDay.label,\n              periodName: schoolSchedulePeriod.name,\n              startTime: schoolSchedulePeriod.startTime,\n              endTime: schoolSchedulePeriod.endTime,\n              schoolSchedulePeriodId:\n                  (existingPeriodData.schoolSchedulePeriodId === null || existingPeriodData.schoolSchedulePeriodId === undefined)\n                      ? 0 : existingPeriodData.schoolSchedulePeriodId\n            };\n              this.selectedSchoolScheduleTemplates[existingPeriodIndex] = currentPeriodInfo;\n          }\n          else {\n              this.selectedSchoolScheduleTemplates.push({\n                weekDayId: weekDay.value,\n                weekDayName: weekDay.label,\n                periodName: schoolSchedulePeriod.name,\n                startTime: schoolSchedulePeriod.startTime,\n                endTime: schoolSchedulePeriod.endTime,\n                schoolSchedulePeriodId:\n                    (schoolSchedulePeriod.schoolSchedulePeriodId === null || schoolSchedulePeriod.schoolSchedulePeriodId === undefined)\n                        ? 0 : schoolSchedulePeriod.schoolSchedulePeriodId\n              });\n          }\n\n        });\n      });\n        this.updateScheduleTemp();\n        this.schoolScheduleForm.controls['weekDayId'].reset();\n        this.isUpdateDayPeriods = false;\n        this.scrollToView();\n    }\n  }\n\n\n\n  validWeeKday(): void {\n    this.schoolScheduleForm.controls['weekDayId'].setValidators(Validators.required);\n    this.schoolScheduleForm.controls['weekDayId'].updateValueAndValidity();\n    this.weekdaysDropdown = { multiSelect: true, placeholder: 'Weekdays', data: this.filterWeekdays, noEntryFoundLabel: 'No Data Found', isRequired: true };\n  }\n\n\n\n  updateScheduleTemp(): void {\n    this.schedulePeriodsList = [];\n    Object.assign(this.schedulePeriodsList, this.selectedSchoolScheduleTemplates);\n    if (this.schedulePeriodsList.length > 0) {\n      this.filterSchoolScheduleTempList = [{\n        name: 'Day', value: []\n      }];\n      for (const key of this.schedulePeriodsList) {\n        const index = this.filterSchoolScheduleTempList.findIndex(ele => ele.name === key.weekDayName);\n        if (index === -1) {\n          const val = [];\n          val.push(key);\n          const data = { name: key.weekDayName, value: val };\n          this.filterSchoolScheduleTempList.push(data);\n        } else {\n          const i = this.filterSchoolScheduleTempList.findIndex(ele => ele.name === key.weekDayName);\n          this.filterSchoolScheduleTempList[i].value.push(key);\n        }\n      }\n\n      let max = -Infinity;\n      let j = -1;\n      this.filterSchoolScheduleTempList.forEach(function (schedules, i): void {\n        if (schedules.value.length > max) {\n          max = schedules.value.length;\n          j = i;\n        }\n      });\n\n      for (let k = 0; k < max; k++) {\n        this.filterSchoolScheduleTempList[0].value.push({\n          periodNames: 'PERIOD',\n          startTime: '00:00',\n          endTime: '00:00'\n        });\n      }\n\n      this.sortByTime(this.filterSchoolScheduleTempList);\n      this.sortByWeekday(this.filterSchoolScheduleTempList);\n    }\n    else {\n      this.schedulePeriodsList = [];\n      this.selectedSchoolScheduleTemplates = [];\n      this.schoolScheduleTempSelectList = [];\n      this.filterSchoolScheduleTempList = [];\n      this.periodsForm();\n      this.errorMsg = '';\n      this.isDisabled = false;\n      this.isPeriodsTemp = true;\n    }\n  }\n\n  sortByTime(data: any): void {\n    if (data[0].value === undefined) {\n      const check = [];\n      check.push({ name: '', value: data });\n      data = check;\n    }\n    data.forEach(g => g.value.forEach(element => {\n      return g.value.sort((startTime, endTime) => {\n        const aParts = getNumericParts(startTime.startTime);\n        const bParts = getNumericParts(endTime.endTime);\n\n        // Sorts by hour then minute\n        return aParts[0] - bParts[0] || aParts[1] - bParts[1];\n      });\n\n      function getNumericParts(time): void {\n        return time.split(' ')[0].split(':').map(x => +x);\n      }\n    }));\n  }\n\n  sortByWeekday(data): void {\n    const sorter = {\n      'monday': 1,\n      'tuesday': 2,\n      'wednesday': 3,\n      'thursday': 4,\n      'friday': 5,\n      'saturday': 6,\n      'sunday': 7\n    };\n\n    data.sort(function sortByDay(weekDay1, weekDay2): number {\n      const day1 = (weekDay1.name !== null) ? weekDay1.name.toLowerCase() : weekDay1.name;\n      const day2 = (weekDay2.name !== null) ?  weekDay2.name.toLowerCase() : weekDay2.name;\n      return sorter[day1] - sorter[day2];\n    });\n\n    this.filterSchoolScheduleTempList[0].value.forEach(x => {\n      x.startTime = null;\n      x.endTime = null;\n    });\n\n    this.isPeriodsTemp = false;\n  }\n\n  editPeriods(data): void {\n    this.isUpdateDayPeriods = true;\n    const editData = [];\n    const selectedArray = [];\n    const validators = [];\n    selectedArray.push({ label: data.value[0].weekDayName, value: data.value[0].weekDayId });\n\n    data.value.forEach(t => {\n      editData.push({\n        weekDayId: t.weekDayId,\n        weekDayName: t.weekDayName,\n        schoolSchedulePeriodId: t.schoolSchedulePeriodId,\n        name: t.periodName,\n        startTime: t.startTime,\n        endTime: t.endTime,\n        isAddVisible: null,\n        isRemoveVisible: null,\n        periodTime: t.startTime + '-' + t.endTime\n      });\n    });\n\n    const i = editData.length;\n    if (editData.length > 1) {\n      editData.forEach(e => {\n        e.isAddVisible = false;\n        e.isRemoveVisible = true;\n      });\n      editData[i - 1].isAddVisible = true;\n      editData[i - 1].isRemoveVisible = true;\n    }\n    else if (editData.length === 1) {\n      editData[i - 1].isAddVisible = true;\n      editData[i - 1].isRemoveVisible = false;\n    }\n    this.periodLists.controls['periodListsView'] = this._fb.array(editData.map(ind => this._fb.group(ind)));\n    this.isPeriodsTemp = true;\n\n    this.schoolScheduleForm.controls['weekDayId'].patchValue(this.compareArrayData(this.filterWeekdays, selectedArray));\n    this.errorMsg = '';\n    this.isDisabled = false;\n\n\n\n\n    validators.push(Validators.required, Validators.maxLength(15));\n    this.periodLists.controls.periodListsView.value.forEach((element, j) => {\n      // tslint:disable-next-line: max-line-length\n      (<FormArray>this.periodLists.get('periodListsView')).controls[j].get('name').setValidators(validators);\n      (<FormArray>this.periodLists.get('periodListsView')).controls[j].get('name').updateValueAndValidity({ emitEvent: false });\n    });\n    this.onChanges();\n    this.cd.detectChanges();\n    this.scrollToView();\n  }\n\n\n  scrollToView(): void{\n    setTimeout(() => {\n      this.scrollIntoViewById('tempName');\n     });\n  }\n\n\n  deletePeriods(data: any): void {\n    // const removedList = this.schoolScheduleTempList.filter(elt => elt.weekDayName !== data);\n    const removedList = this.selectedSchoolScheduleTemplates.filter(elt => elt.weekDayName !== data);\n    this.isUpdateDayPeriods = false;\n    this.schoolScheduleForm.controls['weekDayId'].patchValue('');\n    this.selectedSchoolScheduleTemplates = removedList;\n    this.updateScheduleTemp();\n  }\n\n  onSubmitSchooolScheduleTemp(): void {\n\n    switch (true) {\n      case this.schoolScheduleForm.controls.templateName.status === AppSettings.INVALID:\n        this.schoolScheduleFormDetails = true;\n        break;\n      // case this.schoolScheduleTempList.length === 0:\n      case this.selectedSchoolScheduleTemplates.length === 0:\n        this.openSnackBar(AppSettings.WARNING_ON_SCHEDULE_TEMPLATE, true);\n        break;\n      default:\n        this.schoolScheduleTempList = this.selectedSchoolScheduleTemplates;\n        this.saveDetails();\n        break;\n    }\n  }\n\n  saveDetails(): void {\n    if (this.isUpdateData === true) {\n      this.schoolschedulePeriodsUpdateView.periodsListView = [];\n      this.schoolschedulePeriodsUpdateView.templateName = this.schoolScheduleForm.value.templateName;\n      this.filterSchoolScheduleTempList.forEach(weekDay => {\n        if (weekDay.name !== 'Day') {\n          weekDay.value.forEach(scheduleList => {\n            let schoolSchedulePeriodId = 0;\n            if (!scheduleList.schoolSchedulePeriodId) {\n              const findExistingPeriodIndex = this.originalScheduleTemplate.findIndex(x =>\n                  x.periodName.toLowerCase() === scheduleList.periodName.toLowerCase()\n                  && x.weekDayId === scheduleList.weekDayId);\n              if (findExistingPeriodIndex >= 0) {\n                schoolSchedulePeriodId = this.originalScheduleTemplate[findExistingPeriodIndex].schoolSchedulePeriodId;\n                const indexDuplicatePeriod = this.schoolschedulePeriodsUpdateView.periodsListView.findIndex(\n                    x => x.id === schoolSchedulePeriodId\n                );\n                if (indexDuplicatePeriod >= 0) {\n                  this.schoolschedulePeriodsUpdateView.periodsListView[indexDuplicatePeriod].id = 0;\n                }\n              }\n            }\n            else {\n              schoolSchedulePeriodId = scheduleList.schoolSchedulePeriodId;\n            }\n            this.schoolschedulePeriodsUpdateView.periodsListView.push({\n              id: schoolSchedulePeriodId,\n              weekDayId: scheduleList.weekDayId,\n              name: scheduleList.periodName,\n              startTime: scheduleList.startTime,\n              endTime: scheduleList.endTime\n            });\n          });\n        }\n      });\n      this.schoolScheduleTemplateService.schoolScheduleTemplateUpdateTemplatePut(this.schoolschedulePeriodsUpdateView).subscribe(res => {\n        if (res.statusCode === this.httpStatus.OK) {\n          this.cancel();\n          this.openSnackBar(res.messages.ResultMessage);\n          setTimeout(() => {\n            this.scrollIntoView('app-table');\n          });\n        }\n        else {\n          this.openSnackBar(res.messages.ResultMessage, true);\n        }\n      }, error => {\n        this.errorResponse(error);\n      });\n    }\n    else {\n      this.schoolschedulePeriodsView.periodsListView = [];\n      this.schoolschedulePeriodsView.templateName = this.schoolScheduleForm.value.templateName;\n      this.schoolScheduleTempList.forEach(i => {\n        this.schoolschedulePeriodsView.periodsListView.push({\n          weekDayId: i.weekDayId, name: i.periodName, startTime: i.startTime, endTime: i.endTime\n        });\n      });\n\n      this.schoolScheduleTemplateService.schoolScheduleTemplateTemplatePost(this.schoolschedulePeriodsView).subscribe(res => {\n        if (res.statusCode === this.httpStatus.OK) {\n          this.cancel();\n          this.openSnackBar(res.messages.ResultMessage);\n          setTimeout(() => {\n            this.scrollIntoView('app-table');\n          });\n        }\n        else {\n          this.openSnackBar(res.messages.ResultMessage, true);\n        }\n      }, error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n\n  onSelect($event): void {\n   // if (this.isPeriodsTemp === true && this.periodLists.controls.periodListsView.status === AppSettings.VALID && $event.length > 0) {\n      this.schoolScheduleForm.value.weekDayId = $event;\n      if (this.schoolSchedulePeriods !== undefined && this.schoolSchedulePeriods.length > 0) {\n        this.validateAllPeriods();\n      }\n\n   // }\n  }\n}\n","/**\n * Course\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\n\n\nimport { Observable } from 'rxjs/Observable';\nimport { Configuration, BASE_PATH } from '../grading-service';\nimport { ModuleConfig, BaseUrlConfig, CourseModuleConfig } from 'app/url.config';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { SchoolschedulePeriodsUpdateView } from 'app/modules/configuration/class-schedules/model/school-schedule-periods-update-view';\nimport { SchoolschedulePeriodsView } from 'app/modules/configuration/class-schedules/model/school-schedule-periods-view';\nimport { CommonComponent } from 'app/shared/common/common.component';\n\n@Injectable()\nexport class SchoolScheduleTemplateService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Course;    \n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, \n    @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration, protected commonComponent: CommonComponent) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Get All Templates\n     *      \n     * @param name Gets or Sets SortBy\n     * @param sortBy Gets or Sets SortBy\n     * @param sortOrder Gets or Sets SortOrder\n     * @param pageNumber \n     * @param pageSize     \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public schoolScheduleTemplateAllTemplatesGet(name?: Array<string>, sortBy?: string, sortOrder?: number, \n        pageNumber?: number, pageSize?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public schoolScheduleTemplateAllTemplatesGet(name?: Array<string>, sortBy?: string, sortOrder?: number, \n        pageNumber?: number, pageSize?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public schoolScheduleTemplateAllTemplatesGet(name?: Array<string>, sortBy?: string, sortOrder?: number, \n        pageNumber?: number, pageSize?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public schoolScheduleTemplateAllTemplatesGet(name?: Array<string>, sortBy?: string, sortOrder?: number, \n        pageNumber?: number, pageSize?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n\n        queryParameters = this.commonComponent.setQueryParams(name, 'Name', queryParameters);\n\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + CourseModuleConfig._SchoolPeriodTemplate_All_Templates, // `${this.basePath}/SchoolScheduleTemplate/all-templates`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete Template\n     * \n     * @param id    \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public schoolScheduleTemplateDeleteTemplateDelete(id: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public schoolScheduleTemplateDeleteTemplateDelete(id: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public schoolScheduleTemplateDeleteTemplateDelete(id: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public schoolScheduleTemplateDeleteTemplateDelete(id: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling schoolScheduleTemplateDeleteTemplateDelete.');\n        }\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}` + CourseModuleConfig._SchoolPeriodTemplate_Delete_Template,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get Template Details\n     * \n     * @param id     \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public schoolScheduleTemplateTemplateDetailsGet(id: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public schoolScheduleTemplateTemplateDetailsGet(id: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public schoolScheduleTemplateTemplateDetailsGet(id: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public schoolScheduleTemplateTemplateDetailsGet(id: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling schoolScheduleTemplateTemplateDetailsGet.');\n        }\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + CourseModuleConfig._SchoolPeriodTemplate_Template_Details,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Add Template\n     *      \n     * @param schoolschedulePeriodsView     \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public schoolScheduleTemplateTemplatePost(schoolschedulePeriodsView?: SchoolschedulePeriodsView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public schoolScheduleTemplateTemplatePost(schoolschedulePeriodsView?: SchoolschedulePeriodsView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public schoolScheduleTemplateTemplatePost(schoolschedulePeriodsView?: SchoolschedulePeriodsView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public schoolScheduleTemplateTemplatePost(schoolschedulePeriodsView?: SchoolschedulePeriodsView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + CourseModuleConfig._SchoolPeriodTemplate_Template,\n            schoolschedulePeriodsView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Add Template\n     *      \n     * @param schoolschedulePeriodsUpdateView      \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public schoolScheduleTemplateUpdateTemplatePut(schoolschedulePeriodsUpdateView?: SchoolschedulePeriodsUpdateView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public schoolScheduleTemplateUpdateTemplatePut(schoolschedulePeriodsUpdateView?: SchoolschedulePeriodsUpdateView, \n        observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public schoolScheduleTemplateUpdateTemplatePut(schoolschedulePeriodsUpdateView?: SchoolschedulePeriodsUpdateView, \n        observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public schoolScheduleTemplateUpdateTemplatePut(schoolschedulePeriodsUpdateView?: SchoolschedulePeriodsUpdateView, \n        observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` + CourseModuleConfig._SchoolPeriodTemplate_Update_Template,\n            schoolschedulePeriodsUpdateView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get All WeekDays\n     *      \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public schoolScheduleTemplateWeekdaysGet(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public schoolScheduleTemplateWeekdaysGet(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public schoolScheduleTemplateWeekdaysGet(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public schoolScheduleTemplateWeekdaysGet(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + CourseModuleConfig._SchoolPeriodTemplate_Weekdays,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n}\n"],"sourceRoot":""}