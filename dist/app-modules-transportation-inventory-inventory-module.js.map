{"version":3,"sources":["webpack:///./src/app/modules/transportation/inventory/inventory-routing.module.ts","webpack:///./src/app/modules/transportation/inventory/inventory.module.ts","webpack:///./src/app/modules/transportation/inventory/vehicle-details/vehicle-details.component.html","webpack:///./src/app/modules/transportation/inventory/vehicle-details/vehicle-details.component.scss","webpack:///./src/app/modules/transportation/inventory/vehicle-details/vehicle-details.component.ts","webpack:///./src/app/modules/transportation/inventory/vehicle-inspection-history/vehicle-inspection-history.component.html","webpack:///./src/app/modules/transportation/inventory/vehicle-inspection-history/vehicle-inspection-history.component.scss","webpack:///./src/app/modules/transportation/inventory/vehicle-inspection-history/vehicle-inspection-history.component.ts","webpack:///./src/app/modules/transportation/inventory/vehicle-insurance/vehicle-insurance.component.html","webpack:///./src/app/modules/transportation/inventory/vehicle-insurance/vehicle-insurance.component.scss","webpack:///./src/app/modules/transportation/inventory/vehicle-insurance/vehicle-insurance.component.ts","webpack:///./src/app/modules/transportation/inventory/vehicle-inventory-details/vehicle-inventory-details.component.html","webpack:///./src/app/modules/transportation/inventory/vehicle-inventory-details/vehicle-inventory-details.component.scss","webpack:///./src/app/modules/transportation/inventory/vehicle-inventory-details/vehicle-inventory-details.component.ts","webpack:///./src/app/modules/transportation/inventory/vehicle-inventory/vehicle-inventory.component.html","webpack:///./src/app/modules/transportation/inventory/vehicle-inventory/vehicle-inventory.component.scss","webpack:///./src/app/modules/transportation/inventory/vehicle-inventory/vehicle-inventory.component.ts","webpack:///./src/app/modules/transportation/inventory/vehicle-pollution-check-history/vehicle-pollution-check-history.component.html","webpack:///./src/app/modules/transportation/inventory/vehicle-pollution-check-history/vehicle-pollution-check-history.component.scss","webpack:///./src/app/modules/transportation/inventory/vehicle-pollution-check-history/vehicle-pollution-check-history.component.ts","webpack:///./src/app/modules/transportation/inventory/vehicle-service-history/vehicle-service-history.component.html","webpack:///./src/app/modules/transportation/inventory/vehicle-service-history/vehicle-service-history.component.scss","webpack:///./src/app/modules/transportation/inventory/vehicle-service-history/vehicle-service-history.component.ts","webpack:///./src/app/service/Transport/vehicle-inspection.service.ts","webpack:///./src/app/service/Transport/vehicle-inventory.service.ts","webpack:///./src/app/service/Transport/vehicle-service-history.service.ts"],"names":[],"mappings":"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","file":"app-modules-transportation-inventory-inventory-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { VehicleInventoryComponent } from './vehicle-inventory/vehicle-inventory.component';\nimport { VehicleInventoryDetailsComponent } from './vehicle-inventory-details/vehicle-inventory-details.component';\nimport { VehicleInsuranceComponent } from './vehicle-insurance/vehicle-insurance.component';\nimport { VehicleInspectionHistoryComponent } from './vehicle-inspection-history/vehicle-inspection-history.component';\n\n\nconst routes: Routes = [\n  { path: 'vehicle-inventory', component: VehicleInventoryComponent, data: {title: 'Vehicle Inventory'} },\n  { path: 'vehicle-inventory/vehicle-inventory-details/:id', component: VehicleInventoryDetailsComponent, data: {title: 'Vehicle Inventory Details'} },\n  { path: 'vehicle-insurance', component: VehicleInsuranceComponent, data: {title: 'Vehicle Insurance'} },\n  { path: 'vehicle-inspection', component: VehicleInspectionHistoryComponent, data: {title: 'Vehicle Inspection'} }\n];\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InventoryRoutingModule { }\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatcomponentsModule } from 'app/main/matcomponents.module';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedManagementModule } from 'app/shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from 'app/interceptors/token-interceptor';\nimport { InventoryRoutingModule } from './inventory-routing.module';\nimport { VehicleInventoryComponent } from './vehicle-inventory/vehicle-inventory.component';\nimport { VehicleInventoryDetailsComponent } from './vehicle-inventory-details/vehicle-inventory-details.component';\nimport { VehicleInventoryService } from 'app/service/Transport/vehicle-inventory.service';\nimport { VehiclePollutionCheckHistoryComponent } from './vehicle-pollution-check-history/vehicle-pollution-check-history.component';\nimport { VehicleDetailsComponent } from './vehicle-details/vehicle-details.component';\nimport { VehicleInsuranceComponent } from './vehicle-insurance/vehicle-insurance.component';\nimport { VehicleInspectionHistoryComponent } from './vehicle-inspection-history/vehicle-inspection-history.component';\nimport { VehicleServiceHistoryComponent } from './vehicle-service-history/vehicle-service-history.component';\n\n@NgModule({\n  declarations: [VehicleInventoryComponent, \n    VehicleInventoryDetailsComponent, \n    VehiclePollutionCheckHistoryComponent, \n    VehicleDetailsComponent, \n    VehicleInspectionHistoryComponent, \n    VehicleServiceHistoryComponent,\n    VehicleInsuranceComponent\n  ],\n\n\n  imports: [\n    CommonModule,\n    InventoryRoutingModule,\n    CommonModule,\n    MatcomponentsModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedManagementModule,\n    TranslateModule,\n    FuseSharedModule,\n    Ng2TelInputModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }, VehicleInventoryService,\n  ],\n  exports: [],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class InventoryModule { }\n","module.exports = \"<div class=\\\"px-24 pb-20\\\">\\n  <div class=\\\"simple-table-container radius-t-20 mat-elevation-z8\\\" fxLayout=\\\"column\\\">\\n    <div fxLayoutAlign=\\\"end center\\\" class=\\\"border-bottom p-20\\\">\\n      <button mat-button (click)=\\\"editVehhicle()\\\">\\n        <mat-icon>edit</mat-icon>\\n      </button>\\n      <!-- <button mat-raised-button [routerLink]=\\\"['/transportation/inventory/vehicle-inventory']\\\" color=\\\"primary\\\" class=\\\"text-uppercase mx-4\\\"> \\n        {{'Back' | translate}}\\n      </button> -->\\n      <button mat-button class=\\\"text-uppercase\\\" (click)=\\\"getHelpText('Vehicle Basic Details')\\\">\\n        <mat-icon>info</mat-icon>\\n      </button>\\n    </div>\\n\\n\\n    <mat-list fxLayout.gt-xs=\\\"row wrap\\\" fxFlex=\\\"100\\\" fxLayout.lt-sm=\\\"column\\\"\\n      class=\\\"institution-details pt-0 confirm-table\\\" *ngIf=\\\"vehicleInformationView && isEdit === false\\\">\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngFor=\\\"let column of vehicleInformationHeaders\\\">\\n        <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\" ><span translate>{{column}}</span></div>\\n        <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"\\n          *ngIf=\\\"column != 'registrationCertAttachment' && column != 'photoAttachment' && vehicleInformationView[column] != null\\\">\\n          <span class=\\\"px-4\\\">:</span>{{vehicleInformationView[column]}}</div>\\n        <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"\\n          *ngIf=\\\"column == 'registrationCertAttachment' && vehicleInformationView[column] != null\\\"><a\\n            [href]=\\\"docUrl\\\"><span class=\\\"px-4\\\">:</span><span translate>downloadDocument</span></a></div>\\n          <div fxLayout=\\\"row\\\" fxFlex=\\\"50\\\"\\n        *ngIf=\\\"column == 'photoAttachment' && vehicleInformationView[column]\\\"><span class=\\\"px-4\\\">:</span><span translate><a\\n          [href]=\\\"vechileImageUrl\\\" target=\\\"_blank\\\">View Photo Attachment</a></span></div>\\n        <div fxLayout=\\\"row\\\" *ngIf=\\\"vehicleInformationView[column] == null\\\" fxFlex=\\\"50\\\"><span class=\\\"px-4\\\">:</span>--\\n        </div>\\n      </mat-list-item>\\n    </mat-list>\\n    <!-- <mat-expansion-panel [class.tabs-table-padding0]=\\\"matExpansioncustomClass\\\" [expanded]=\\\"accordionStep === 1\\\"> -->\\n      <ng-template  *ngIf=\\\"isEdit === true\\\" [ngTemplateOutlet]=\\\"myTemplate\\\"></ng-template>\\n     <!-- </mat-expansion-panel> -->\\n  </div>\\n</div>\\n\\n\\n\\n<ng-template #myTemplate>\\n  <form fxLayout=\\\"column\\\" [formGroup]=\\\"vehicleForm\\\" #vehicle=\\\"ngForm\\\" class=\\\"p-20\\\"  autocomplete=\\\"off\\\">\\n    <div fxLayout=\\\"roe\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-12\\\" fxFlex=\\\"100\\\">\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"pr-sm-20\\\">\\n        <mat-label #name translate>Vehicle Name</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'vehicleForm','name')\\\" (blur)=\\\"trimTextBoxSpaces('vehicleForm','name')\\\" formControlName=\\\"name\\\" matInput required>\\n        <mat-error>\\n          <app-validation [labelName]='name.innerText' [validationControl]=\\\"vehicleForm.controls.name\\\"\\n            [doValidate]=\\\"validate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"500\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"pr-sm-20\\\">\\n        <mat-label #model translate>Vehicle Model</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'vehicleForm','model')\\\" (blur)=\\\"trimTextBoxSpaces('vehicleForm','model')\\\" formControlName=\\\"model\\\" matInput required>\\n        <mat-error>\\n          <app-validation [labelName]='model.innerText' [validationControl]=\\\"vehicleForm.controls.model\\\"\\n            [doValidate]=\\\"validate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"pr-sm-20\\\">\\n        <mat-label #chassisNumber translate>Chassis Number</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'vehicleForm','chassisNumber')\\\" (blur)=\\\"trimTextBoxSpaces('vehicleForm','chassisNumber')\\\" formControlName=\\\"chassisNumber\\\" matInput>\\n        <mat-error>\\n          <app-validation [labelName]='chassisNumber.innerText' [validationControl]=\\\"vehicleForm.controls.chassisNumber\\\"\\n            [doValidate]=\\\"validate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" >\\n        <mat-label #regNumber translate>Registration Number</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'vehicleForm','regNumber')\\\" (blur)=\\\"trimTextBoxSpaces('vehicleForm','regNumber')\\\" formControlName=\\\"regNumber\\\" matInput>\\n        <mat-error>\\n          <app-validation [labelName]='regNumber.innerText' [validationControl]=\\\"vehicleForm.controls.regNumber\\\"\\n            [doValidate]=\\\"validate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"pr-sm-20\\\">\\n        <mat-label #engineNumber translate>Engine Number</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'vehicleForm','engineNumber')\\\" (blur)=\\\"trimTextBoxSpaces('vehicleForm','engineNumber')\\\" formControlName=\\\"engineNumber\\\" matInput>\\n        <mat-error>\\n          <app-validation [labelName]='engineNumber.innerText' [validationControl]=\\\"vehicleForm.controls.engineNumber\\\"\\n            [doValidate]=\\\"validate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\"\\n        class=\\\"pr-sm-20 icon-center\\\">\\n        <mat-label #manufactureYearr translate>Manufacture Year Date</mat-label>\\n        <input matInput (keyup)=\\\"forceValidation('manufactureYear',vehicleForm)\\\" [matDatepicker]=\\\"manufactureYear\\\"\\n          formControlName=\\\"manufactureYear\\\" autocomplete=\\\"off\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"manufactureYear\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #manufactureYear></mat-datepicker>\\n        <mat-error>\\n          <app-validation [labelName]='manufactureYearr.innerText'\\n            [validationControl]=\\\"vehicleForm.controls.manufactureYear\\\" [doValidate]=\\\"validate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"pr-sm-20\\\">\\n        <mat-label #maxCapacity translate>Max Capacity</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'vehicleForm','maxCapacity')\\\" (blur)=\\\"trimTextBoxSpaces('vehicleForm','maxCapacity')\\\" formControlName=\\\"maxCapacity\\\" numbersOnly matInput>\\n        <mat-error>\\n          <app-validation [labelName]='maxCapacity.innerText' [validationControl]=\\\"vehicleForm.controls.maxCapacity\\\"\\n            [doValidate]=\\\"validate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <!-- <div fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"px-sm-20 pt-16\\\"> -->\\n        <div fxLayout=\\\"column\\\" class=\\\"w-260 pt-12\\\">\\n          <div fxLayout=\\\"row\\\">\\n            <button mat-raised-button type=\\\"button\\\" color=\\\"primary\\\"\\n              (click)=\\\"logoImgInput.value='';logoImgInput.click()\\\">\\n              <mat-icon class=\\\"mr-8\\\">attachment</mat-icon>{{'Registration Certificate' | translate}}\\n            </button>\\n            <button mat-icon-button type=\\\"button\\\" [style.visibility]=\\\"logoImgProp?.src ? 'visible' : 'hidden'\\\">\\n              <mat-icon class=\\\"mb-4 grey-600-fg\\\" \\n                (click)=\\\"logoImgInput.value='';clearImages(true)\\\">highlight_off</mat-icon>\\n            </button>\\n          </div>\\n          <input [accept]=\\\"'.doc,.docx,image/jpeg,image/jpg,image/png,application/pdf,image/*'\\\" id=\\\"logoImgInput\\\"\\n            (change)=\\\"imgChanged(logoImgInput.files)\\\" fxHide type=\\\"file\\\" #logoImgInput>\\n          <div class=\\\"pt-8 logo-name break-word\\\"\\n            [style.visibility]=\\\"vehicleForm?.value?.registrationCertAttachment?.fileName ? 'visible' : 'hidden'\\\"\\n            [style.display]=\\\"logoImgProp?.src ? 'block' : 'none'\\\">\\n            {{vehicleForm?.value?.registrationCertAttachment?.fileName}}</div>\\n        </div>\\n      <!-- </div> -->\\n\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"m-16\\\">\\n      <button mat-raised-button (click)=\\\"onCancel()\\\" type=\\\"reset\\\" class=\\\"text-uppercase mr-12\\\">\\n        {{'Cancel' | translate}}\\n      </button>\\n      <button mat-raised-button type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\" (click)=\\\"onSubmit(vehicleForm)\\\">\\n        {{'Update' | translate}}\\n      </button>\\n    </div>\\n\\n  </form>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vaW52ZW50b3J5L3ZlaGljbGUtZGV0YWlscy92ZWhpY2xlLWRldGFpbHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild, TemplateRef, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { VehicleInventoryService } from 'app/service/Transport/vehicle-inventory.service';\nimport { VehicleInformationView } from 'app/modules/transportation/models/vehicle-information-view';\nimport { AttachmentViewModel } from 'app/modules/academics/student-admissions/model/attachment-view-model';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Pattern, AppSettings } from 'app/app.constants';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { CommonService } from 'app/service/common.service';\n\n@Component({\n  selector: 'app-vehicle-details',\n  templateUrl: './vehicle-details.component.html',\n  styleUrls: ['./vehicle-details.component.scss']\n})\nexport class VehicleDetailsComponent extends CommonComponent implements OnInit {\n  vehicleId: any;\n  vehicleInformationView: VehicleInformationView;\n  attachmentInfo: AttachmentViewModel;\n  vehicleInformationHeaders = [];\n  docUrl: any;\n  isEdit = false;\n  @ViewChild('vehicle') myForm;\n  @ViewChild('myTemplate') customTemplate: TemplateRef<any>;\n  vehicleForm: FormGroup;\n  validate: boolean;\n  vehicleImageProp: any;\n  vehicleCertImageProp: {};\n  fileName: string;\n  logoImgProp: any;\n  data: any;\n  accordionStep: number;\n  vechileImageUrl: any;\n\n\n  constructor(\n      private cd: ChangeDetectorRef,\n      public commonService: CommonService,\n      private _formBuilder: FormBuilder,\n      private route: ActivatedRoute,\n      private vehicleInventoryService: VehicleInventoryService,\n      private storeService: StoreService,\n      private sanitizer: DomSanitizer,\n      public dialogRef: MatDialog,\n      public snackBar: MatSnackBar) {\n    super();\n  }\n\n  ngOnInit(): void {\n\n    this.vehicleForm = this._formBuilder.group({\n      name: [null, [Validators.required, Validators.maxLength(45)]],\n      model: [null, [Validators.required, Validators.maxLength(45)]],\n      maxCapacity: [null, [Validators.maxLength(45), Validators.pattern(Pattern.NUMBER_PATTERN), Validators.min(1), Validators.max(100)]],\n      chassisNumber: [null, Validators.maxLength(20)],\n      engineNumber: [null, Validators.maxLength(20)],\n      manufactureYear: [null],\n      manufacturer: [null, [Validators.required, Validators.maxLength(45)]],\n      regNumber: [null, Validators.maxLength(15)],\n      registrationCertAttachment: this.attachmentInfo\n    });\n\n    this.vehicleInformationView = {\n      chassisNumber: null,\n      engineNumber: null,\n      manufactureYear: null,\n      manufacturer: null,\n      maxCapacity: null,\n      model: '',\n      vehicleName: '',\n      regNumber: null,\n      photoAttachment: {\n        fileValue: '',\n        fileName: ''\n      },\n      registrationCertAttachment: this.attachmentInfo\n    };\n    this.vehicleInformationHeaders = Object.getOwnPropertyNames(this.vehicleInformationView);\n    const index = this.vehicleInformationHeaders.indexOf('photoAttachment');\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.vehicleId = params.id;\n      }\n    });\n    this.assgnData();\n\n  }\n\n  assgnData(): void {\n    this.vechileImageUrl = '';\n    this.vehicleInventoryService.getVehicle(this.vehicleId).subscribe(async res => {\n      this.vehicleForm.controls.manufactureYear.patchValue(res.vehicleDetailsView.manufactureYear);\n      this.vehicleInformationView = this.prepareModel(this.vehicleInformationView, res.vehicleDetailsView);\n      this.vehicleInformationView.vehicleName = res.vehicleDetailsView.name;\n      this.setDateFormat(this.vehicleInformationView);\n      this.data = res.vehicleDetailsView;\n      this.vehicleForm.patchValue(res.vehicleDetailsView);\n      this.cd.detectChanges();\n      this.fileName = '';\n      if (res.vehicleDetailsView.registrationCertAttachment !== null && res.vehicleDetailsView.registrationCertAttachment !== undefined) {\n        this.fileName = res.vehicleDetailsView.registrationCertAttachment.fileName;\n        this.logoImgProp = {\n          src: this.sanitizer.bypassSecurityTrustResourceUrl(this.storeService.getFilePath(res.vehicleDetailsView.registrationCertAttachment.fileName))\n        };\n\n        this.storeService.storeFileEncryptByFileNameGet(res.vehicleDetailsView.registrationCertAttachment.fileName)\n          .subscribe(result => {\n            if (result) {\n              this.vehicleForm.controls.registrationCertAttachment.patchValue({ fileName: result.fileNameWithExtension, fileValue: result.value });\n              this.cd.detectChanges();\n            }\n          });\n      }\n      if (res.vehicleDetailsView.photoAttachment !== null && res.vehicleDetailsView.photoAttachment !== undefined) {\n        this.fileName = res.vehicleDetailsView.photoAttachment.fileName;\n        this.vechileImageUrl =  this.sanitizer.bypassSecurityTrustResourceUrl(this.storeService.getFilePath(res.vehicleDetailsView.photoAttachment.fileName));\n        this.logoImgProp = {\n          src: this.sanitizer.bypassSecurityTrustResourceUrl(this.storeService.getFilePath(res.vehicleDetailsView.photoAttachment.fileName))\n        };\n\n        this.storeService.storeFileEncryptByFileNameGet(res.vehicleDetailsView.photoAttachment.fileName)\n          .subscribe(result => {\n            if (result) {\n              this.vehicleInformationView.photoAttachment.fileName = result.fileNameWithExtension;\n              this.vehicleInformationView.photoAttachment.fileValue = result.value;\n              this.cd.detectChanges();\n            }\n          });\n      }\n      this.DownloadDoc();\n    });\n  }\n\n  async DownloadDoc(): Promise<void> {\n\n    if (this.vehicleInformationView !== null && this.vehicleInformationView.registrationCertAttachment !== null) {\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.storeService.getFilePath(this.vehicleInformationView.registrationCertAttachment.fileName));\n      const response = await fetch(this.storeService.getFilePath(this.vehicleInformationView.registrationCertAttachment.fileName));\n      const responseData = await response.blob();\n      const data = new Blob([responseData], { type: 'application/octet-stream' });\n      this.docUrl = this.sanitizer.bypassSecurityTrustResourceUrl(window.URL.createObjectURL(data));\n    }\n\n  }\n\n  editVehhicle(): void {\n    this.isEdit = true;\n    this.accordionStep = 1;\n    // this.dialogRef.open(CustomDialogComponent, {\n    //   data: { template: this.customTemplate }\n    // });\n    this.assgnData();\n  }\n\n  onSubmit(vehicleForm: any): void {\n    if (vehicleForm.status === AppSettings.VALID) {\n      this.validate = false;\n      this.dataAssignment(this.vehicleInformationView);\n      if (this.data.photoAttachment != null) {\n        this.vehicleInformationView.photoAttachment.fileName = this.data.photoAttachment.fileName;\n        this.vehicleInformationView.photoAttachment.fileValue = this.data.photoAttachment.fileValue;\n      }\n      this.vehicleInformationView['id'] = this.vehicleId;\n      this.vehicleInformationView['manufacturer'] = this.vehicleInformationView.manufacturer;\n      this.vehicleInformationView['code'] = this.data.code;\n      this.vehicleInformationView['regDate'] = this.data.regDate;\n      this.vehicleInformationView['regExpDate'] = this.data.regExpDate;\n      this.vehicleInformationView['purchaseDate'] = this.data.purchaseDate;\n      this.vehicleInformationView['purchaseCost'] = this.data.purchaseCost;\n      this.vehicleInformationView['purchaseOdometerReading'] = this.data.purchaseOdometerReading;\n      this.vehicleInventoryService.updateVehicle(this.vehicleInformationView)\n        .subscribe((res: any) => this.updateResponse(res), error => {\n          this.errorResponse(error);\n        });\n    }\n    else {\n      this.validate = true;\n    }\n  }\n\n  dataAssignment(vehicalDataAssign: any): void {\n    Object.assign(vehicalDataAssign, this.vehicleForm.value);\n  }\n\n  updateResponse(result: any): void {\n    this.assgnData();\n    this.onCancel();\n    this.openSnackBar(result.messages.ResultMessage);\n  }\n  onCancel(): void {\n    this.assgnData();\n    this.myForm.resetForm();\n    this.dialogRef.closeAll();\n    this.accordionStep = 0;\n    this.isEdit = false;\n  }\n\n  imgChanged(event): void {\n    if (this.checkFileSize(event[0], AppSettings.TEXT_AND_IMAGE_FILE_EXTENSION, 2097152)) {\n      return;\n    }\n    if (event && event.length > 0) {\n\n      const reader = new FileReader();\n      const file = event[0];\n      reader.readAsDataURL(file);\n      let image;\n      image = new Image();\n      image.src = reader.result;\n      const that = this;\n\n      reader.onload = (_event) => {\n        that.vehicleForm.controls.registrationCertAttachment.patchValue({ fileName: file.name, fileValue: (<string>reader.result).split(',')[1] });\n        that.cd.detectChanges();\n      };\n      that.setFileProperties(image);\n    }\n    this.cd.detectChanges();\n  }\n\n  clearImages(logo = false): void {\n    if (logo) {\n\n      this.logoImgProp = {};\n      this.fileName = '';\n      this.vehicleForm.controls.registrationCertAttachment.patchValue(this.attachmentInfo);\n    }\n    this.cd.detectChanges();\n  }\n\n  setFileProperties(image): void {\n    const data = {\n      src: this.sanitizer.bypassSecurityTrustResourceUrl(image.src),\n      width: image.width,\n      height: image.height\n    };\n\n    this.logoImgProp = {};\n    this.logoImgProp = data;\n\n    this.cd.detectChanges();\n  }\n\n\n}\n","module.exports = \"<app-table [settings]=\\\"tabSettings\\\" (getTableData)='getAllVehicleInspectionDetails($event)'\\n  (rowBasedAction)='rowActions($event)' [templateRef]=\\\"vehicleInspection\\\" [closeRowForm]='closeAddPanel'\\n  (openAddForm)=\\\"onAddFormClick()\\\"></app-table>\\n\\n<ng-template #vehicleInspection>\\n  <form class=\\\"p-20\\\" [formGroup]=\\\"inspectionForm\\\" (ngSubmit)=\\\"onSubmit(inspectionForm)\\\" #inspForm=\\\"ngForm\\\" fxLayout=\\\"column\\\" autocomplete=\\\"off\\\">\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxFlex=\\\"100\\\" class=\\\"pt-24\\\">\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxFlex.gt-sm=\\\"40\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" class=\\\"icon-center\\\">\\n        <mat-label #inspectionDate translate>Inspection Date</mat-label>\\n        <input matInput (keyup)=\\\"forceValidation('inspectionDate',inspectionForm)\\\"\\n          [matDatepicker]=\\\"inspectionDatePicker\\\" formControlName=\\\"inspectionDate\\\" required>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"inspectionDatePicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #inspectionDatePicker></mat-datepicker>\\n        <mat-error>\\n          <app-validation [labelName]='inspectionDate.innerText'\\n            [validationControl]=\\\"inspectionForm.controls.inspectionDate\\\" [doValidate]=\\\"true\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxFlex.gt-sm=\\\"40\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" class=\\\"px-sm-20 icon-center\\\">\\n        <mat-label #nextInspectionDate translate>Next Inspection Date</mat-label>\\n        <input matInput (keyup)=\\\"forceValidation('nextInspectionDate',inspectionForm)\\\"\\n          [matDatepicker]=\\\"nextInspectionDatePicker\\\" formControlName=\\\"nextInspectionDate\\\"\\n          [min]=\\\"inspectionForm.controls.inspectionDate.value\\\" required>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"nextInspectionDatePicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #nextInspectionDatePicker></mat-datepicker>\\n        <mat-error>\\n          <app-validation [labelName]='nextInspectionDate.innerText'\\n            [validationControl]=\\\"inspectionForm.controls.nextInspectionDate\\\" [doValidate]=\\\"true\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n      <div fxLayout=\\\"column\\\" class=\\\"w-220\\\" fxFlex.gt-sm=\\\"32\\\" fxFlex=\\\"100\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"mt-16\\\">\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"fileInput.value='';fileInput.click()\\\" type=\\\"button\\\">\\n            <mat-icon class=\\\"mr-4\\\">attach_file</mat-icon>{{'Upload Image' | translate}}\\n          </button>\\n          <button mat-icon-button [style.display]=\\\"flagImageProp?.src ? 'block' : 'none'\\\" type=\\\"button\\\">\\n            <mat-icon class=\\\"mb-4 grey-600-fg\\\" (click)=\\\"fileInput.value='';clearImages(true)\\\">highlight_off</mat-icon>\\n          </button>\\n        </div>\\n        <input [accept]=\\\"'.doc,.docx,image/jpeg,image/jpg,image/png,application/pdf,image/*'\\\" id=\\\"fileInput\\\"\\n          (change)=\\\"imgChanged(fileInput.files,inspectionForm)\\\" fxHide type=\\\"file\\\" #fileInput>\\n        <div [style.visibility]=\\\"inspectionForm?.value?.attachment?.fileName ? 'visible' : 'hidden'\\\"\\n          class=\\\"pt-4 break-word font-size-12 text-left pr-36\\\">\\n          {{inspectionForm?.value?.attachment?.fileName}}\\n        </div>\\n      </div>\\n\\n    </div>\\n\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxFlex=\\\"100\\\" class=\\\"pt-12\\\">\\n      <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"40\\\" fxFlex=\\\"100\\\">\\n        <mat-label #odometerReadingAtInspection translate>Odometer Reading At Inspection</mat-label>\\n        <input autocomplete=\\\"off\\\" matInput formControlName=\\\"odometerReadingAtInspection\\\" (keyup)=\\\"preventSpace($event,'inspectionForm','odometerReadingAtInspection')\\\" (blur)=\\\"trimTextBoxSpaces('inspectionForm','odometerReadingAtInspection')\\\" numbersOnly>\\n        <mat-error>\\n          <app-validation [labelName]=\\\"odometerReadingAtInspection.innerText\\\"\\n            [validationControl]=\\\"inspectionForm.controls.odometerReadingAtInspection\\\" [doValidate]=\\\"doValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"px-sm-20\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"40\\\" fxFlex=\\\"100\\\">\\n        <mat-label #odometerReadingNextInspection translate>Odometer Reading At Next Inspection</mat-label>\\n        <input autocomplete=\\\"off\\\" matInput formControlName=\\\"odometerReadingNextInspection\\\" (keyup)=\\\"preventSpace($event,'inspectionForm','odometerReadingNextInspection')\\\" (blur)=\\\"trimTextBoxSpaces('inspectionForm','odometerReadingNextInspection')\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"odometerReadingNextInspection.innerText\\\"\\n            [validationControl]=\\\"inspectionForm.controls.odometerReadingNextInspection\\\" [doValidate]=\\\"doValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-sm-12\\\">\\n      <button class=\\\"mr-12 text-uppercase\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeAddForm()\\\">\\n        {{'Cancel' | translate}}</button>\\n      <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\" [disabled]=\\\"disableSubmitBtn\\\">{{(updateButtonShow ? 'Update':'Create') | translate}}</button>\\n    </div>\\n  </form>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vaW52ZW50b3J5L3ZlaGljbGUtaW5zcGVjdGlvbi1oaXN0b3J5L3ZlaGljbGUtaW5zcGVjdGlvbi1oaXN0b3J5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { VehicleInspectionHistoryService } from 'app/service/Transport/vehicle-inspection.service';\nimport { InspectionHistoryFilterViewModel } from '../../models/inspection-history-filter-view-model';\nimport { AppSettings, Pattern } from 'app/app.constants';\nimport { CommonService } from 'app/service/common.service';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport * as HttpStatus from 'http-status-codes';\nimport { InspectionHistoryView } from '../../models/inspection-history-view';\nimport { InspectionHistoryViewModel } from '../../models/inspection-history-view-model';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { AttachmentViewModel } from 'app/modules/academics/student-admissions/model/attachment-view-model';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-vehicle-inspection-history',\n  templateUrl: './vehicle-inspection-history.component.html',\n  styleUrls: ['./vehicle-inspection-history.component.scss'],\n  providers: [VehicleInspectionHistoryService]\n})\nexport class VehicleInspectionHistoryComponent extends CommonComponent implements OnInit {\n  @ViewChild('inspForm') uForm;\n  @ViewChild('fileInput') fileInput: ElementRef;\n  inspectionForm: FormGroup;\n  doValidate = true;\n  columns: any;\n  tabSettings: any;\n  currentComponent: VehicleInspectionHistoryComponent;\n  filterViewModel: InspectionHistoryFilterViewModel;\n  inSpectionDetails: any = [];\n  rows: any = [];\n  totalRowsCount: number;\n  pageCnt: number;\n  closeAddPanel = true;\n  updateButtonShow: boolean;\n  vehicleId: string;\n  inspectionHistoryView: InspectionHistoryView;\n  inspectionHistoryViewModel: InspectionHistoryViewModel;\n  nameImgProp: any;\n  attachmentInfo: AttachmentViewModel;\n  flagImageProp: {};\n  constructor(private vehicleInspectionHistoryService: VehicleInspectionHistoryService, public commonService: CommonService,\n    public dialog: MatDialog, private storeService: StoreService, private cd: ChangeDetectorRef,\n    private sanitizer: DomSanitizer, private route: ActivatedRoute, public snackBar: MatSnackBar) {\n    super();\n    this.setColumnHeaders();\n    this.initializeFilterView();\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((param) => {\n      if (param.id) {\n        this.vehicleId = param.id;\n      }\n    });\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.filterViewModel = modelTableComponent;\n    }\n\n    this.initializeTabSettings();\n    this.inspectionForm = new FormGroup({\n      id: new FormControl(''),\n      vehicleId: new FormControl(''),\n      inspectionDate: new FormControl('', [Validators.required]),\n      nextInspectionDate: new FormControl('', [Validators.required]),\n      odometerReadingAtInspection: new FormControl(0, [Validators.max(999999999), Validators.pattern(Pattern.NUMBER_PATTERN)]),\n      odometerReadingNextInspection: new FormControl(0, [Validators.max(999999999), Validators.pattern(Pattern.NUMBER_PATTERN)]),\n      attachment: new FormControl({ fileName: '', fileValue: '' })\n    });\n    this.getAllVehicleInspectionDetails(this.filterViewModel);\n  }\n\n  setColumnHeaders(): void {\n    this.columns = [\n      { field: 'name', header: 'Vehicle Name', sort: true },\n      { field: 'regNumber', header: 'Reg.Number', sort: true },\n      { field: 'inspectionDate', header: 'Inspection Date', sort: true },\n      { field: 'nextInspectionDate', header: 'Next Inspection Date', sort: true },\n      { field: 'odometerReadingAtInspection', header: 'Odometer Reading', sort: true },\n      { field: 'odometerReadingNextInspection', header: 'Next Odometer Reading', sort: true },\n      { field: 'actions', header: 'Actions ', sort: false }\n    ];\n  }\n\n  initializeTabSettings(): void {\n    this.tabSettings = {\n      rows: [],\n      columns: this.columns,\n      tablename: '',\n      componentName: this.currentComponent,\n      model: this.filterViewModel\n    };\n  }\n\n  initializeFilterView(): void {\n    this.filterViewModel = {\n      sortBy: 'Id',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n    this.inspectionHistoryView = {\n      id: null,\n      vehicleId: null,\n      inspectionDate: new Date(),\n      nextInspectionDate: new Date(),\n      odometerReadingAtInspection: 0,\n      odometerReadingNextInspection: 0,\n      attachment: this.attachmentInfo\n    };\n    this.attachmentInfo = {\n      fileName: '',\n      fileValue: ''\n    };\n  }\n\n\n  getAllVehicleInspectionDetails(inspectionData: InspectionHistoryFilterViewModel): void {\n    this.filterViewModel = inspectionData;\n    this.filterViewModel.vehicleId = this.vehicleId;\n    this.vehicleInspectionHistoryService.getAllVehicleInspectionHistory(this.filterViewModel.vehicleId, this.filterViewModel.vehicleName, this.filterViewModel.registrationNumber,\n      this.filterViewModel.inspectionStartDateBegin,\n      this.filterViewModel.inspectionStartDateEnd,\n      this.filterViewModel.odometerReadingAtInspection, this.filterViewModel.odometerReadingNextInspection,\n      this.filterViewModel.nextInspectionStartDateBegin, this.filterViewModel.nextInspectionStartDateEnd,\n      this.filterViewModel.sortBy, this.filterViewModel.sortOrder, this.filterViewModel.pageNumber, this.filterViewModel.pageSize).subscribe(res => {\n        if (res.vehicleInspectionHistoryViewModel != null) {\n          this.inSpectionDetails = [];\n          this.inSpectionDetails = res.vehicleInspectionHistoryViewModel.list;\n          this.totalRowsCount = res.vehicleInspectionHistoryViewModel.totalItems;\n          this.pageCnt = res.vehicleInspectionHistoryViewModel.totalPages;\n          this.inSpectionDetails.forEach(e => {\n            e.operations = [\n              {\n                name: AppSettings.EDIT_OPERATION,\n                icon: AppSettings.EDIT,\n                operationName: AppSettings.EDIT\n              },\n              {\n                name: AppSettings.DELETE_OPERATION,\n                icon: AppSettings.DELETE_ICON,\n                operationName: AppSettings.DELETE\n              },\n              {\n                name: AppSettings.VIEW,\n                icon: AppSettings.DETAILS_ICON,\n                operationName: AppSettings.VIEW\n              }\n            ];\n\n            e.inspectionDate = (e.inspectionDate == null) ? null : this.commonService.customDateFormat(e.inspectionDate, this.getSchoolDateFormat()).date;\n            e.nextInspectionDate = (e.nextInspectionDate == null) ? null : this.commonService.customDateFormat(e.nextInspectionDate, this.getSchoolDateFormat()).date;\n\n          });\n          this.filterViewModel.pageNumber = res.vehicleInspectionHistoryViewModel.pageNumber;\n        }\n        else {\n          this.inSpectionDetails = [];\n          this.totalRowsCount = 0;\n          this.pageCnt = 0;\n        }\n        this.tabSettings = {\n          model: this.filterViewModel,\n          rows: this.inSpectionDetails,\n          columns: this.columns,\n          totalRowsCount: this.totalRowsCount,\n          pageCnt: this.pageCnt,\n          tablename: '',\n          componentName: this.currentComponent,\n          isPaginationRequired: true,\n          filtersList: res.filters,\n          headerOperations: {\n            addingForm: {\n              required: true,\n              btnName: 'Add'\n            },        \n            infoButton: {\n              required: true,\n              text: 'Vehicle Inspection'\n            }\n          }\n        };\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  // method for open the panel\n  onAddFormClick(): void {\n    this.uForm.resetForm();\n    this.inspectionForm.reset();\n    this.closeAddPanel = false;\n    this.updateButtonShow = false;\n  }\n\n  // method for close the panel\n  closeAddForm(): void {\n    this.inspectionForm.reset();\n    this.closeAddPanel = true;\n    this.doValidate = false;\n    this.uForm.resetForm();\n  }\n\n\n  onSubmit(inspectionForm): void {\n    if (inspectionForm.invalid) {\n      this.doValidate = true;\n      return;\n    }\n    inspectionForm.value.vehicleId = this.vehicleId;\n    inspectionForm.value.inspectionDate = this.getFormattedDateByAPIPattern(inspectionForm.value.inspectionDate);\n    inspectionForm.value.nextInspectionDate = this.getFormattedDateByAPIPattern(inspectionForm.value.nextInspectionDate);\n    this.inspectionHistoryView = inspectionForm.value;\n    if (inspectionForm.value.id == null) {\n      this.vehicleInspectionHistoryService.createVehicleInspectionHistory(this.inspectionHistoryView).subscribe(res => this.inspectionRespnse(res), error => {\n        this.errorResponse(error);\n      });\n    }\n    else {\n      this.vehicleInspectionHistoryService.updateVehicleInspectionHistory(this.inspectionHistoryView).subscribe(res => this.inspectionRespnse(res), error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n\n  inspectionRespnse(data): void {\n    this.updateButtonShow = false;\n    if (data.statusCode === HttpStatus.OK) {\n          this.inspectionForm.reset();\n          this.uForm.resetForm();\n          this.closeAddPanel = true;\n          this.doValidate = false;\n          this.getAllVehicleInspectionDetails(this.filterViewModel);\n          this.flagImageProp = null;\n    }\n    else {\n          this.closeAddPanel = false;\n    }\n    this.openSnackBar(data.messages.ResultMessage);\n  }\n  rowActions(data: any): void {\n    if (data.operation === AppSettings.DELETE) {\n      const dialogRef = this.dialog.open(CustomDialogComponent, {\n        disableClose: true,\n        data: {\n          text: this.commonService.getTranslation(AppSettings.WARNING_ON_SINGLE_DELETE),\n          action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES\n        },\n      });\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.vehicleInspectionHistoryService.deleteVehicleInspectionHistory(data.clickedRow.id).\n            subscribe(res => this.inspectionRespnse(res), error => {\n              this.errorResponse(error);\n            });\n        }\n      });\n    }\n    else if (data.operation === AppSettings.EDIT) {\n      this.updateButtonShow = true;\n      this.closeAddPanel = false;\n      this.vehicleInspectionHistoryService.getVehicleInspectionHistory(data.clickedRow.id).subscribe(res => {\n        if (res.vehicleInspectionHistoryView) {\n          this.inSpectionDetails = res.vehicleInspectionHistoryView;\n          if (this.inSpectionDetails.attachment != null){\n          this.flagImageProp = {\n            src: this.sanitizer.bypassSecurityTrustResourceUrl(this.inSpectionDetails.attachment.fileName)\n          };\n          this.storeService.storeFileEncryptByFileNameGet(this.inSpectionDetails.attachment.fileName)\n          .subscribe((value: any) => {\n            if (value) {\n              this.inspectionForm.controls.attachment.patchValue({ fileName: value.fileNameWithExtension, fileValue: value.value });\n            }\n          });\n        }     \n          this.inspectionForm.patchValue(this.inSpectionDetails);\n\n        }\n      }, error => {\n        this.errorResponse(error);\n      });\n    }\n    else if (data.operation === (AppSettings.VIEW_ICON).toLowerCase()) {\n      if (data.clickedRow.attachment != null) {\n        this.nameImgProp = this.storeService.getFilePath(data.clickedRow.attachment.fileName);\n        window.open(this.nameImgProp);\n      }\n      else {\n        this.openSnackBar(AppSettings.NO_ATTACHMENTS_FOUND, true);\n        return;\n      }\n    }\n  }\n\n  imgChanged(files, logo = false): void {\n    if (this.checkFileSize(files[0], 'image', 2097152)){\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(files[0]);\n    const that = this;\n    reader.onload = (_event) => {\n      let image;\n      image = new Image();\n      image.src = reader.result;\n      image.onload = function (): void {\n        that.flagImageProp = {\n          src: that.sanitizer.bypassSecurityTrustResourceUrl(image.src)\n        };\n        that.inspectionForm.controls.attachment.patchValue({ fileName: files[0].name, fileValue: (<string>reader.result).split(',')[1] });\n        that.cd.detectChanges();\n      };\n    };\n  }\n\n  clearImages(logo = false): void {\n    this.flagImageProp = {};\n    this.inspectionForm.controls.attachment.patchValue(this.attachmentInfo);\n    this.cd.detectChanges();\n  }\n}\n","module.exports = \"<app-table [settings]=\\\"tabSettings\\\" [templateRef]=\\\"insuranceTemplate\\\" (getTableData)='insuranceData($event)'\\n  (rowBasedAction)='rowActions($event)' [closeRowForm]='closeAddPanel' (openAddForm)=\\\"openForm()\\\">\\n</app-table>\\n\\n<ng-template #insuranceTemplate>\\n  <form fxLayout=\\\"column\\\" (ngSubmit)=\\\"insurancePost(insuranceFormGroup.value)\\\" [formGroup]=\\\"insuranceFormGroup\\\" autocomplete=\\\"off\\\"\\n    #insuranceForm=\\\"ngForm\\\">\\n    <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-24\\\" fxLayout.gt-xs=\\\"row\\\" fxFlex=\\\"100\\\">\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n        <mat-label translate #policyNumber>policyNumber</mat-label>\\n        <input matInput required name=\\\"policyNumber\\\" formControlName=\\\"policyNumber\\\" (keyup)=\\\"preventSpace($event,'insuranceFormGroup','policyNumber')\\\" (blur)=\\\"trimTextBoxSpaces('insuranceFormGroup','policyNumber')\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"policyNumber.innerText\\\"\\n            [validationControl]=\\\"insuranceFormGroup.controls.policyNumber\\\" [doValidate]=\\\"doValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"px-sm-20 icon-center\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\">\\n        <mat-label translate #issueDate>Issue Date</mat-label>\\n        <input matInput (keyup)=\\\"forceValidation('issueDate',insuranceFormGroup)\\\" required [matDatepicker]=\\\"picker\\\"\\n          formControlName=\\\"issueDate\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n        <mat-error>\\n          <app-validation [labelName]=\\\"issueDate.innerText\\\" [validationControl]=\\\"insuranceFormGroup.controls.issueDate\\\"\\n            [doValidate]=\\\"doValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n        <mat-label translate #companyName>companyName</mat-label>\\n        <input matInput required name=\\\"companyName\\\" formControlName=\\\"companyName\\\" (keyup)=\\\"preventSpace($event,'insuranceFormGroup','companyName')\\\" (blur)=\\\"trimTextBoxSpaces('insuranceFormGroup','companyName')\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"companyName.innerText\\\"\\n            [validationControl]=\\\"insuranceFormGroup.controls.companyName\\\" [doValidate]=\\\"doValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-sm-12\\\" fxLayout.gt-xs=\\\"row\\\" fxFlex=\\\"100\\\">\\n\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n        <mat-label translate #premiumAmount>premiumAmount</mat-label>\\n        <input matInput required name=\\\"premiumAmount\\\" formControlName=\\\"premiumAmount\\\" (keyup)=\\\"preventSpace($event,'insuranceFormGroup','premiumAmount')\\\" (blur)=\\\"trimTextBoxSpaces('insuranceFormGroup','premiumAmount')\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"premiumAmount.innerText\\\"\\n            [validationControl]=\\\"insuranceFormGroup.controls.premiumAmount\\\" [doValidate]=\\\"doValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"px-sm-20 icon-center\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\">\\n        <mat-label translate #expiryDate>expiryDate</mat-label>\\n        <input matInput (keyup)=\\\"forceValidation('expiryDate',insuranceFormGroup)\\\" required\\n        [matDatepicker]=\\\"expiryPicker\\\" [min]=\\\"insuranceFormGroup.controls.issueDate.value\\\" formControlName=\\\"expiryDate\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"expiryPicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #expiryPicker></mat-datepicker>\\n        <mat-error>\\n          <app-validation [labelName]=\\\"expiryDate.innerText\\\"\\n            [validationControl]=\\\"insuranceFormGroup.controls.expiryDate\\\" [doValidate]=\\\"doValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <div fxLayout=\\\"column\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n        <div fxLayout=\\\"row\\\">\\n          <button mat-raised-button type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"logoImgInput.value='';logoImgInput.click()\\\">\\n            <mat-icon class=\\\"mr-8\\\">attach_file</mat-icon>{{'Upload Image' | translate}}\\n          </button>\\n          <button mat-icon-button type=\\\"button\\\" [style.display]=\\\"logoImgProp?.src ? 'block' : 'none'\\\">\\n            <mat-icon class=\\\"mb-4 grey-600-fg\\\" \\n              (click)=\\\"logoImgInput.value='';clearImages(true)\\\">highlight_off</mat-icon>\\n          </button>\\n        </div>\\n        <input [accept]=\\\"'.doc,.docx,image/jpeg,image/jpg,image/png,application/pdf,image/*'\\\" id=\\\"logoImgInput\\\"\\n          (change)=\\\"imgChanged(logoImgInput.files)\\\" fxHide type=\\\"file\\\" #logoImgInput>\\n        <div class=\\\"pt-8 logo-name break-word\\\" [style.visibility]=\\\"uploadFiles?.value?.insuranceFileNameWithExtension ? 'visible' : 'hidden'\\\" [style.display]=\\\"logoImgProp?.src ? 'block' : 'none'\\\">\\n          {{uploadFiles?.value?.insuranceFileNameWithExtension}}</div>\\n      </div>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"my-20\\\">\\n      <button mat-raised-button translate class=\\\"mr-12 text-uppercase\\\" type=\\\"reset\\\" #formCancel id=\\\"formCancel\\\"\\n        (click)=\\\"onCancel()\\\"> {{'Cancel' | translate}}</button>\\n      <button mat-raised-button translate type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">{{(isUpdateData ? 'Update':'Submit') | translate}}\\n      </button>\\n    </div>\\n\\n  </form>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vaW52ZW50b3J5L3ZlaGljbGUtaW5zdXJhbmNlL3ZlaGljbGUtaW5zdXJhbmNlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, ChangeDetectorRef, ElementRef, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { AppSettings, Pattern } from 'app/app.constants';\nimport { ActivatedRoute } from '@angular/router';\nimport { VehicleInsuranceFilterViewModel } from '../../models/vehicle-Insurance-filter-view-model';\nimport { VehicleInventoryService } from 'app/service/Transport/vehicle-inventory.service';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { VehicleInsuranceViewModel } from '../../models/vehicle-Insurance-view-model';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-vehicle-insurance',\n  templateUrl: './vehicle-insurance.component.html',\n  styleUrls: ['./vehicle-insurance.component.scss']\n})\nexport class VehicleInsuranceComponent extends CommonComponent implements OnInit {\n\n  @ViewChild('insuranceForm') insuranceForm;\n  @ViewChild('logoImgInput') logoInput: ElementRef;\n  vehicleInsuranceSearchView: VehicleInsuranceFilterViewModel;\n  postModel: VehicleInsuranceViewModel;\n  insuranceFormGroup: FormGroup;\n  uploadFiles: FormGroup;\n  private _unsubscribeAll: Subject<any>;\n  tabSettings: {};\n  cols: any[];\n  currentComponentName = 'VehicleInsuranceComponent';\n  pageCnt: number;\n  totalItems: number;\n  custRowsPerPageOptions: Array<number> = [];\n  doValidate: boolean;\n  insuranceDetails: {};\n  closeAddPanel: boolean;\n  currentComponent: any;\n  rows: any[];\n  isUpdateData: boolean;\n  insuranceId: any;\n  logoImgProp: {};\n  nameImgProp: any;\n  fileName = '';\n  vehicleId: any;\n\n  constructor(private _fb: FormBuilder, private route: ActivatedRoute, private vehicleInventoryService: VehicleInventoryService\n    , public commonService: CommonService, public dialog: MatDialog, private cd: ChangeDetectorRef, private sanitizer: DomSanitizer\n    , private storeService: StoreService, public snackBar: MatSnackBar) {\n    super();\n    this.vehicleInsuranceSearchView = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n      policyNumber: '',\n      premiumAmount: 0,\n      issueDateBegin: [],\n      issueDateEnd: [],   \n      expiryDateBegin: [],\n      expiryDateEnd: [],\n      companyName: '',\n    };\n  }\n\n  ngOnInit(): void {\n\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.vehicleId = params.id;\n      }\n    });\n\n    this.cols = [\n      { field: 'policyNumber', header: 'policyNumber', sort: true },\n      { field: 'companyName', header: 'companyName', sort: true },\n      { field: 'issueDate', header: 'Issue Date', sort: true },\n      { field: 'expiryDate', header: 'expiryDate', sort: true },\n      { field: 'premiumAmount', header: 'premiumAmount', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.vehicleInsuranceSearchView,\n      componentName: this.currentComponent,\n    };\n\n    this.insuranceFormGroup = new FormGroup({\n      policyNumber: new FormControl('', [Validators.required, Validators.maxLength(25)]),\n      issueDate: new FormControl('', [Validators.required]),\n      companyName: new FormControl('', [Validators.maxLength(45)]),\n      premiumAmount: new FormControl('', [Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS), Validators.max(99999999.99), Validators.min(1)]),\n      expiryDate: new FormControl('', [Validators.required]),\n    });\n\n    this.uploadFiles = this._fb.group({\n      insuranceFileNameWithExtension: null,\n      insuranceFileValue: null,\n    });\n    this.vehicleInsuranceSearchView.vehicleId = this.vehicleId;\n    this.insuranceData(this.vehicleInsuranceSearchView);\n  }\n\n  insuranceData(data: any): void {\n    data.vehicleId = this.vehicleId;\n    this.vehicleInsuranceSearchView = data;\n    this.vehicleInventoryService.vehicleInsurances(this.vehicleInsuranceSearchView).subscribe(res => this.vehicleInsuranceData(res), error => {\n      this.errorResponse(error);\n    });\n  }\n\n  // Binding data To Table\n  vehicleInsuranceData(data: any): void {\n    this.custRowsPerPageOptions = [];\n\n    if (data.resultList == null) {\n      this.rows = [];\n    }\n    else {\n      this.rows = data.resultList.list;\n      this.totalItems = data.resultList.totalItems;\n    }\n\n    this.rows.forEach(e => {\n      e.operations = [\n        {\n          name: AppSettings.EDIT_OPERATION,\n          icon: AppSettings.EDIT\n        },\n        {\n          name: AppSettings.DELETE_OPERATION,\n          icon: AppSettings.DELETE\n        },\n        {\n          name: AppSettings.VIEW,\n          icon: AppSettings.DETAILS_ICON,\n          operationName: AppSettings.VIEW\n        }\n      ];\n    });\n\n    if (data.resultList) {\n      data.resultList.list.forEach(formatDate => {\n        formatDate.issueDate =\n          formatDate.issueDate != null ? this.commonService.customDateFormat(formatDate.issueDate.toString(), this.getSchoolDateFormat()).date : null;\n        formatDate.expiryDate =\n          formatDate.expiryDate != null ? this.commonService.customDateFormat(formatDate.expiryDate.toString(), this.getSchoolDateFormat()).date : null;\n      });\n      this.vehicleInsuranceSearchView.pageNumber = data.resultList.pageNumber;\n    }\n\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.vehicleInsuranceSearchView,\n      rows: this.rows,\n      componentName: this.currentComponent,\n      isNewStudentCourseSelectionRequired: true,\n      visibleSelectAll: false,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: 'New'\n        },\n        infoButton: {\n          required: true,\n          text: 'Insurance History'\n        }\n      },\n      filtersList: data.filters,\n    };\n\n  }\n\n  openForm(): void {\n    this.closeAddPanel = false;\n    this.isUpdateData = false;\n  }\n\n  // row-wise actions of the table(edit/delete)\n  rowActions(response: any): void {\n    if (response.operation === AppSettings.EDIT) {\n      this.editInsurance(response);\n    }\n    else if (response.operation === AppSettings.DELETE) {\n      this.deleteInsurance(response);\n    }\n    else if (response.operation === (AppSettings.VIEW).toLowerCase()) {\n      if (response.clickedRow.attachment != null) {\n        this.nameImgProp = this.storeService.getFilePath(response.clickedRow.attachment.fileName);\n        window.open(this.nameImgProp);\n      }\n      else {\n        this.openSnackBar(AppSettings.NO_ATTACHMENTS_FOUND, true);\n        return;\n      }\n    }\n  }\n\n  editInsurance(response: any): void {\n    this.isUpdateData = true;\n    this.closeAddPanel = false;\n    this.insuranceId = response.clickedRow.id;\n    this.vehicleInventoryService.getVehicleInsurance(this.insuranceId).subscribe(res =>\n      this.updateInsuranceDataAssignment(res), error => {\n        this.errorResponse(error);\n      });\n  }\n\n  deleteInsurance(response: any): void {\n\n    const dialogRef = this.dialog.open(CustomDialogComponent, {\n      disableClose: true,\n      data: { text: this.commonService.getTranslation(AppSettings.DELETE_CONFORMATION, ''), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n    });\n\n    dialogRef.afterClosed().subscribe(action => {\n\n      if (action === AppSettings.YES) {\n\n        this.vehicleInventoryService.deleteVehicleInsurance(response.clickedRow.id).subscribe(res => {\n          this.commonService.dialog(res.messages.ResultMessage, true, AppSettings.OK);\n          this.resetForm();\n          this.insuranceData(this.vehicleInsuranceSearchView);\n        },\n          error => {\n            this.errorResponse(error);\n          });\n\n      }\n    });\n  }\n\n  onCancel(): void {\n    this.resetForm();\n  }\n\n  insurancePost(data: any): void {\n\n    this.insuranceDetails = {};\n\n    if (this.insuranceFormGroup.status === AppSettings.VALID) {\n      this.doValidate = false;\n      this.postModel = {\n        policyNumber: '',\n        companyName: '',\n        premiumAmount: 0,\n        issueDate: null,\n        expiryDate: null,\n        id: '',\n        attachment: {\n          fileName: '',\n          fileValue: ''\n        }\n      };\n\n      this.postModel.attachment.fileName = this.uploadFiles.value.insuranceFileNameWithExtension;\n      this.postModel.attachment.fileValue = this.uploadFiles.value.insuranceFileValue;\n      data.issueDate = this.getFormattedDateByAPIPattern(data.issueDate);\n      data.expiryDate = this.getFormattedDateByAPIPattern(data.expiryDate);\n\n      if (this.isUpdateData) {\n          this.postModel.id = this.insuranceId;\n          this.vehicleInventoryService.updateVehicleInsurance(this.prepareModel(this.postModel, data)).subscribe(res => {\n          this.openSnackBar(res.messages.ResultMessage);\n          this.resetForm();\n          this.gridReset();\n        }\n        , error => {\n          this.errorResponse(error);\n        });\n      }\n      else {\n          this.postModel.id = this.vehicleInsuranceSearchView.vehicleId;\n          this.vehicleInventoryService.createVehicleInsurances(this.prepareModel(this.postModel, data)).subscribe(res => {\n          this.openSnackBar(res.messages.ResultMessage);\n          this.resetForm();\n          this.gridReset();\n        }\n        , error => {\n          this.errorResponse(error);\n        });\n      }\n    }\n    else {\n      this.doValidate = true;\n    }\n  }\n\n  resetForm(): void {\n    this.clearImages(true);\n    this.insuranceFormGroup.reset();\n    this.insuranceForm.resetForm();\n    this.uploadFiles.reset();\n    this.closeAddPanel = true;\n    this.isUpdateData = false;\n    this.doValidate = false;\n  }\n\n  gridReset(): void {\n    this.insuranceData(this.vehicleInsuranceSearchView);\n  }\n\n  updateInsuranceDataAssignment(data: any): void {\n\n    this.fileName = '';\n    if (data.resultModel.attachment !== null && data.resultModel.attachment !== undefined) {\n      this.fileName = data.resultModel.attachment.fileName;\n      this.logoImgProp = {\n        src: this.sanitizer.bypassSecurityTrustResourceUrl(this.storeService.getFilePath(data.resultModel.attachment.fileName))\n      };\n\n      this.storeService.storeFileEncryptByFileNameGet(data.resultModel.attachment.fileName)\n        .subscribe(result => {\n          if (result) {\n            this.fileName = data.resultModel.attachment.fileName;\n            this.uploadFiles.controls['insuranceFileNameWithExtension'].patchValue(result.fileNameWithExtension);\n            this.uploadFiles.controls['insuranceFileValue'].patchValue(result.value);\n            this.cd.detectChanges();\n          }\n        });\n    }\n    this.insuranceFormGroup.patchValue(data.resultModel);\n  }\n\n  clearImages(logo = false): void {\n    if (logo) {\n      this.logoImgProp = {};\n      this.fileName = '';\n      if (this.logoInput !== null) {\n        this.logoInput.nativeElement.remove();\n      }\n      this.uploadFiles.controls.insuranceFileNameWithExtension.patchValue(null);\n      this.uploadFiles.controls.insuranceFileValue.patchValue(null);\n    }\n    this.cd.detectChanges();\n  }\n\n  imgChanged(event): void {\n    if (this.checkFileSize(event[0], AppSettings.TEXT_AND_IMAGE_FILE_EXTENSION, 2097152)){\n      return;\n    }\n    if (event && event.length > 0) {\n\n      const reader = new FileReader();\n      const file = event[0];\n      reader.readAsDataURL(file);\n      let image;\n      image = new Image();\n      image.src = reader.result;\n      const that = this;\n\n      reader.onload = (_event) => {\n        that.uploadFiles.controls['insuranceFileNameWithExtension'].setValue(file.name);\n        that.uploadFiles.controls['insuranceFileValue'].setValue((<string>reader.result).split(',')[1]);\n        this.cd.detectChanges();\n      };\n      that.setFileProperties(image);\n    }\n  }\n\n  setFileProperties(image): void {\n    const data = {\n      src: this.sanitizer.bypassSecurityTrustResourceUrl(image.src),\n      width: image.width,\n      height: image.height\n    };\n\n    this.logoImgProp = {};\n    this.logoImgProp = data;\n\n    this.cd.detectChanges();\n  }\n\n}\n","module.exports = \"\\n<div fxLayout=\\\"column\\\" class=\\\"info-relative mt-28\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"edit-info\\\">\\n        <button mat-raised-button (click)=\\\"back()\\\" color=\\\"primary\\\" class=\\\"text-uppercase mx-4\\\"> \\n          {{'Back' | translate}}\\n        </button>\\n    </div>\\n  </div>\\n\\n<mat-tab-group [selectedIndex]=\\\"index\\\" (selectedIndexChange)=\\\"selected($event)\\\" class=\\\"manage-institue\\\">\\n\\n  <mat-tab label=\\\"{{'VEHICLE DETAILS' | translate}}\\\">\\n    <div *ngIf=\\\"showVehicleDetails\\\">\\n      <app-vehicle-details [data]=\\\"selectedChanged\\\"></app-vehicle-details>\\n    </div>\\n  </mat-tab>\\n\\n  <mat-tab label=\\\"{{'SERVICE HISTORY' | translate}}\\\">\\n    <div *ngIf=\\\"showShowServiceHistory\\\">\\n      <app-vehicle-service-history [data]=\\\"selectedChanged\\\"></app-vehicle-service-history>\\n    </div>\\n  </mat-tab>\\n\\n  <mat-tab label=\\\"{{'INSURANCE' | translate}}\\\">\\n    <div *ngIf=\\\"vehicleInsurance\\\">\\n      <app-vehicle-insurance  [data]=\\\"selectedChanged\\\"></app-vehicle-insurance>\\n    </div>\\n  </mat-tab>\\n\\n  <mat-tab label=\\\"{{'POLLUTION CHECK' | translate}}\\\">\\n    <div *ngIf=\\\"showPollutionCheck\\\">\\n      <app-vehicle-pollution-check-history [data]=\\\"selectedChanged\\\"></app-vehicle-pollution-check-history>\\n    </div>\\n  </mat-tab>\\n\\n  <mat-tab label=\\\"{{'INSPECTION' | translate}}\\\">\\n    <div *ngIf=\\\"showInspection\\\">\\n      <app-vehicle-inspection-history [data]=\\\"selectedChanged\\\"></app-vehicle-inspection-history>\\n    </div>\\n  </mat-tab>\\n\\n\\n</mat-tab-group>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vaW52ZW50b3J5L3ZlaGljbGUtaW52ZW50b3J5LWRldGFpbHMvdmVoaWNsZS1pbnZlbnRvcnktZGV0YWlscy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { RouteConfig } from 'app/url.config';\n@Component({\n  selector: 'app-vehicle-inventory-details',\n  templateUrl: './vehicle-inventory-details.component.html',\n  styleUrls: ['./vehicle-inventory-details.component.scss']\n})\nexport class VehicleInventoryDetailsComponent extends CommonComponent implements OnInit {\n  index: any;\n  vehicleInsurance: boolean;\n  showShowServiceHistory: boolean;\n  showVehicleDetails = true;\n  showPollutionCheck: boolean;\n  showInspection: boolean;\n  selectedChanged: any;\n\n  constructor(public location: Location, private router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n  }\n\n  // tab Selection\n  selected(value: any): void {\n    this.index = value;\n    switch (value) {\n      case 0: {\n        // statements; \n        this.showShowServiceHistory = false;\n        this.showVehicleDetails = true;\n        this.vehicleInsurance = false;\n        this.showPollutionCheck = false;\n        this.showInspection = false;\n        window.location.hash = 'VehicalDetails';\n        break;\n      }\n      case 1: {\n        this.showShowServiceHistory = true;\n        this.showVehicleDetails = false;\n        this.vehicleInsurance = false;\n        this.showPollutionCheck = false;\n        this.showInspection = false;\n        window.location.hash = 'ServiceHistory';\n        break;\n      }\n      case 2: {\n        this.showShowServiceHistory = false;\n        this.showVehicleDetails = false;\n        this.vehicleInsurance = true;\n        this.showPollutionCheck = false;\n        this.showInspection = false;\n        window.location.hash = 'Insurance';\n        break;\n      }\n      case 3: {\n        this.showShowServiceHistory = false;\n        this.showVehicleDetails = false;\n        this.vehicleInsurance = false;\n        this.showPollutionCheck = true;\n        this.showInspection = false;\n        window.location.hash = 'PollutionCheck';\n        break;\n      }\n      case 4: {\n        this.showShowServiceHistory = false;\n        this.showVehicleDetails = false;\n        this.vehicleInsurance = false;\n        this.showPollutionCheck = false;\n        this.showInspection = true;\n        window.location.hash = 'Inspection';\n        break;\n      }\n      default: {\n        // statements; \n        break;\n      }\n    }\n    /*const instituteDetails = JSON.parse(localStorage.getItem('_s'));\n    if (instituteDetails != null) {\n      this.selectedChanged = JSON.parse(localStorage.getItem('_s')).id;\n    }*/\n  }\n\n  back(): void {\n    this.router.navigate([RouteConfig._Vehicle_Details]);\n  }\n\n}\n","module.exports = \"<app-table [settings]=\\\"tabSettings\\\" (getTableData)='getAllVehicles($event)' (rowBasedAction)=\\\"rowWiseActions($event)\\\"\\n    (openAddForm)='openForm()' [matExpansioncustomClass]=\\\"true\\\" [templateRef]=\\\"testSchedules\\\"\\n    [closeRowForm]='closeAddPanel'>\\n</app-table>\\n\\n<ng-template #testSchedules>\\n    <mat-horizontal-stepper class=\\\"custom-horizontal-step\\\" [linear]=\\\"true\\\" fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" #stepper\\n        (selectionChange)=\\\"onSelectionChange($event)\\\">\\n        <mat-step [stepControl]=\\\"vehicalDetailsForm\\\">\\n            <form fxLayout=\\\"column\\\" [formGroup]=\\\"vehicalDetailsForm\\\" #vehicalDataForm=\\\"ngForm\\\">\\n                <ng-template matStepLabel><span translate>Vehicle Basic Details</span></ng-template>\\n                <!-- <div class=\\\"pt-24 font-size-18\\\"><span translate>Vehicle Basic Details</span></div> -->\\n                <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\" fxFlex=\\\"100\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n                        <mat-label #name translate>Vehicle Name</mat-label>\\n                        <input (keyup)=\\\"preventSpace($event, 'vehicalDetailsForm','name')\\\" (blur)=\\\"trimTextBoxSpaces('vehicalDetailsForm','name')\\\" formControlName=\\\"name\\\" matInput required>\\n                        <mat-error>\\n                            <app-validation [labelName]='name.innerText'\\n                                [validationControl]=\\\"vehicalDetailsForm.controls.name\\\" [doValidate]=\\\"validate\\\">\\n                            </app-validation>\\n                        </mat-error>\\n                    </mat-form-field>\\n\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\"\\n                        class=\\\"pl-sm-20\\\">\\n                        <mat-label #manufacturer translate>Manufacturer</mat-label>\\n                        <input (keyup)=\\\"preventSpace($event,'vehicalDetailsForm','manufacturer')\\\" (blur)=\\\"trimTextBoxSpaces('vehicalDetailsForm','manufacturer')\\\" formControlName=\\\"manufacturer\\\" matInput required>\\n                        <mat-error>\\n                            <app-validation [labelName]='manufacturer.innerText'\\n                                [validationControl]=\\\"vehicalDetailsForm.controls.manufacturer\\\" [doValidate]=\\\"validate\\\">\\n                            </app-validation>\\n                        </mat-error>\\n                    </mat-form-field>\\n                </div>\\n\\n                <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n                        <mat-label #model translate>Model</mat-label>\\n                        <input (keyup)=\\\"preventSpace($event,'vehicalDetailsForm','model')\\\" (blur)=\\\"trimTextBoxSpaces('vehicalDetailsForm','model')\\\" formControlName=\\\"model\\\" matInput required>\\n                        <mat-error>\\n                            <app-validation [labelName]='model.innerText'\\n                                [validationControl]=\\\"vehicalDetailsForm.controls.model\\\" [doValidate]=\\\"validate\\\">\\n                            </app-validation>\\n                        </mat-error>\\n                    </mat-form-field>\\n\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\"\\n                        class=\\\"pl-sm-20\\\">\\n                        <mat-label #code translate>Code</mat-label>\\n                        <input (keyup)=\\\"preventSpace($event,'vehicalDetailsForm','code')\\\" (blur)=\\\"trimTextBoxSpaces('vehicalDetailsForm','code')\\\" formControlName=\\\"code\\\" matInput>\\n                        <mat-error>\\n                            <app-validation [labelName]='code.innerText'\\n                                [validationControl]=\\\"vehicalDetailsForm.controls.code\\\" [doValidate]=\\\"validate\\\">\\n                            </app-validation>\\n                        </mat-error>\\n                    </mat-form-field>\\n                </div>\\n\\n                <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n                        <mat-label #maxCapacity translate>MaxCapacity</mat-label>\\n                        <input (keyup)=\\\"preventSpace($event,'vehicalDetailsForm','maxCapacity')\\\" (blur)=\\\"trimTextBoxSpaces('vehicalDetailsForm','maxCapacity')\\\" formControlName=\\\"maxCapacity\\\" numbersOnly matInput>\\n                        <mat-error>\\n                            <app-validation [labelName]='maxCapacity.innerText'\\n                                [validationControl]=\\\"vehicalDetailsForm.controls.maxCapacity\\\" [doValidate]=\\\"validate\\\">\\n                            </app-validation>\\n                        </mat-error>\\n                    </mat-form-field>\\n                    <div fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"pl-sm-20 pt-sm-16\\\">\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\"><button mat-raised-button color=\\\"primary\\\"\\n                                (click)=\\\"ImgInput.value='';ImgInput.click()\\\" type=\\\"button\\\">\\n                                <mat-icon class=\\\"mr-4\\\">attach_file</mat-icon>{{'Vehicle Photos' | translate}}\\n                            </button>\\n                            <button mat-icon-button [style.display]=\\\"vehicleImageProp?.src ? 'block' : 'none'\\\" (click)=\\\"ImgInput.value='';filePaths.image='';clearImages()\\\">\\n                                <mat-icon class=\\\"mb-4 grey-600-fg\\\" >\\n                                    highlight_off\\n                                </mat-icon>\\n                            </button>\\n                        </div>\\n\\n                        <input [accept]=\\\"'image/*'\\\" id=\\\"ImgInput\\\"\\n                            (change)=\\\"vehicleImgChanged(ImgInput.files,vehicalDetailsForm)\\\" fxHide type=\\\"file\\\"\\n                            #ImgInput>\\n                        <div *ngIf=\\\"filePaths?.image; else form_value\\\" class=\\\"pt-4 primary-300-fg font-size-12 text-left pr-36 break-word\\\">\\n                            <a target=\\\"_blank\\\" [href]=\\\"filePaths?.image\\\">View Vehicle Photo</a>\\n                        </div>\\n                        <ng-template #form_value>\\n                            <div [style.visibility]=\\\"vehicalDetailsForm?.value?.photoAttachment?.fileName ? 'visible' : 'hidden'\\\"\\n                            class=\\\"pt-4 break-word font-size-12 text-left pr-36\\\">\\n                            {{vehicalDetailsForm?.value?.photoAttachment?.fileName}}\\n                        </div>\\n                        </ng-template>\\n                        \\n                        <!-- <div class=\\\"pt-4 primary-300-fg font-size-12 text-right pr-36\\\">(<span translate>Preferred</span>\\n                            1:1)</div> -->\\n                    </div>\\n                </div>\\n\\n               \\n                <!-- <div fxLayout=\\\"column\\\" class=\\\"w-200 h-200 border\\\">\\n                    <img class=\\\"radius-5 w-200 h-200\\\" [src]=\\\"vehicleImageProp?.src\\\" *ngIf=\\\"vehicleImageProp?.src\\\"\\n                        alt=\\\"Launchship\\\" />\\n                </div> -->\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-16\\\">\\n                    <button #resetButtonStepper mat-raised-button id=\\\"resetButtonStepper\\\" (click)=\\\"onCancel()\\\"\\n                        type=\\\"reset\\\" class=\\\"text-uppercase mr-12\\\">\\n                        {{'Cancel' | translate}}\\n                    </button>\\n                    <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n                        {{'Next' | translate}}\\n                    </button>\\n                </div>\\n            </form>\\n        </mat-step>\\n\\n        <mat-step [stepControl]=\\\"registrationInfoForm\\\" [optional]=\\\"registrationInfoForm.valid\\\">\\n            <form fxLayout=\\\"column\\\" [formGroup]=\\\"registrationInfoForm\\\" #registrationForm=\\\"ngForm\\\"  autocomplete=\\\"off\\\">\\n                <ng-template matStepLabel><span translate>Registration Info</span></ng-template>\\n                <!-- <div class=\\\"pt-24 font-size-18\\\"><span translate>Registration Info</span></div> -->\\n                <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\" fxFlex=\\\"100\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n                        <mat-label #regNumber translate>Registration Number</mat-label>\\n                        <input (keyup)=\\\"preventSpace($event,'registrationInfoForm','regNumber')\\\" (blur)=\\\"trimTextBoxSpaces('registrationInfoForm','regNumber')\\\" formControlName=\\\"regNumber\\\" matInput>\\n                        <mat-error>\\n                            <app-validation [labelName]='regNumber.innerText'\\n                                [validationControl]=\\\"registrationInfoForm.controls.regNumber\\\" [doValidate]=\\\"validate\\\">\\n                            </app-validation>\\n                        </mat-error>\\n                    </mat-form-field>\\n\\n                    <div fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"px-sm-20 pt-16\\\">\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\"><button mat-raised-button color=\\\"primary\\\"\\n                                (click)=\\\"fileInput.value='';fileInput.click()\\\" type=\\\"button\\\"><mat-icon class=\\\"mr-4\\\">attach_file</mat-icon>\\n                                {{'Registration Certificate' | translate}}</button>\\n\\n                            <button mat-icon-button [style.display]=\\\"vehicleCertImageProp?.src ? 'block' : 'none'\\\" (click)=\\\"fileInput.value='';filePaths.certificate='';clearImagesRegistration()\\\">\\n                                <mat-icon class=\\\"mb-4 grey-600-fg\\\" >\\n                                    highlight_off\\n                                </mat-icon>\\n                            </button>\\n                        </div>\\n\\n                        <input [accept]=\\\"'image/*'\\\" id=\\\"fileInput\\\"\\n                            (change)=\\\"imgChanged(fileInput.files,registrationInfoForm)\\\" fxHide type=\\\"file\\\" #fileInput>\\n                        <div *ngIf=\\\"filePaths?.certificate; else form_value_cer\\\" class=\\\"pt-4 primary-300-fg font-size-12 text-left pr-36 break-word\\\">\\n                            <a target=\\\"_blank\\\" [href]=\\\"filePaths?.certificate\\\">View Registration Certificate</a>\\n                        </div>\\n                        <ng-template #form_value_cer>\\n                            <div [style.visibility]=\\\"registrationInfoForm?.value?.registrationCertAttachment?.fileName ? 'visible' : 'hidden'\\\"\\n                            class=\\\"pt-4 primary-300-fg font-size-12 text-left pr-36\\\">\\n                            {{registrationInfoForm?.value?.registrationCertAttachment?.fileName}}\\n                        </div>\\n                        </ng-template> \\n                    </div>\\n                </div>\\n\\n                <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"icon-center\\\">\\n                        <mat-label #registeredDate translate>Registered Date</mat-label>\\n                        <input matInput (keyup)=\\\"forceValidation('regDate',registrationInfoForm)\\\"\\n                            [matDatepicker]=\\\"regDate\\\" formControlName=\\\"regDate\\\" autocomplete=\\\"off\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"regDate\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #regDate></mat-datepicker>\\n                        <mat-error>\\n                            <app-validation [labelName]='registeredDate.innerText'\\n                                [validationControl]=\\\"registrationInfoForm.controls.regDate\\\" [doValidate]=\\\"validate\\\">\\n                            </app-validation>\\n                        </mat-error>\\n                    </mat-form-field>\\n\\n\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\"\\n                        class=\\\"pl-sm-20 icon-center\\\">\\n                        <mat-label #regExpiryDate translate>Registration Expiry Date</mat-label>\\n                        <input matInput (keyup)=\\\"forceValidation('regExpDate',registrationInfoForm)\\\"\\n                            [matDatepicker]=\\\"regExpDate\\\" formControlName=\\\"regExpDate\\\"\\n                            [min]=\\\"registrationInfoForm.controls.regDate.value\\\" autocomplete=\\\"off\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"regExpDate\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #regExpDate></mat-datepicker>\\n                        <mat-error>\\n                            <app-validation [labelName]='regExpiryDate.innerText'\\n                                [validationControl]=\\\"registrationInfoForm.controls.regExpDate\\\" [doValidate]=\\\"validate\\\">\\n                            </app-validation>\\n                        </mat-error>\\n                    </mat-form-field>\\n                </div>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-16\\\">\\n                    <!-- <button #resetButtonStepper mat-raised-button id=\\\"resetButtonStepper\\\" (click)=\\\"onCancel()\\\"\\n                        type=\\\"reset\\\" class=\\\"text-uppercase mr-12\\\">\\n                        {{'Cancel' | translate}}\\n                    </button> -->\\n                    <button  mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">{{'Previous' | translate}}</button>\\n                    <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n                        {{'Next' | translate}}\\n                    </button>\\n                </div>\\n            </form>\\n        </mat-step>\\n\\n        <mat-step [stepControl]=\\\"additionalDetailsForm\\\" [optional]=\\\"additionalDetailsForm.valid\\\">\\n            <form fxLayout=\\\"column\\\" [formGroup]=\\\"additionalDetailsForm\\\" #additionalDataForm=\\\"ngForm\\\"  autocomplete=\\\"off\\\">\\n                <ng-template matStepLabel><span translate>Additional Details</span></ng-template>\\n                <!-- <div class=\\\"pt-24 font-size-18\\\"><span translate>Additional Details</span></div> -->\\n                <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\" fxFlex=\\\"100\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n                        <mat-label #chassisNumber translate>Chassis Number</mat-label>\\n                        <input (keyup)=\\\"preventSpace($event,'additionalDetailsForm','chassisNumber')\\\" (blur)=\\\"trimTextBoxSpaces('additionalDetailsForm','chassisNumber')\\\" formControlName=\\\"chassisNumber\\\" matInput>\\n                        <mat-error>\\n                            <app-validation [labelName]='chassisNumber.innerText'\\n                                [validationControl]=\\\"additionalDetailsForm.controls.chassisNumber\\\"\\n                                [doValidate]=\\\"validate\\\">\\n                            </app-validation>\\n                        </mat-error>\\n                    </mat-form-field>\\n\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\"\\n                        class=\\\"pl-sm-20\\\">\\n                        <mat-label #engineNumber translate>Engine Number</mat-label>\\n                        <input (keyup)=\\\"preventSpace($event,'additionalDetailsForm','engineNumber')\\\" (blur)=\\\"trimTextBoxSpaces('additionalDetailsForm','engineNumber')\\\" formControlName=\\\"engineNumber\\\" matInput>\\n                        <mat-error>\\n                            <app-validation [labelName]='engineNumber.innerText'\\n                                [validationControl]=\\\"additionalDetailsForm.controls.engineNumber\\\"\\n                                [doValidate]=\\\"validate\\\">\\n                            </app-validation>\\n                        </mat-error>\\n                    </mat-form-field>\\n                </div>\\n\\n                <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"icon-center\\\">\\n                        <mat-label #manufactureYearr translate>Manufacture Year</mat-label>\\n                        <input matInput (keyup)=\\\"forceValidation('manufactureYear',additionalDetailsForm)\\\" (blur)=\\\"trimTextBoxSpaces('registrationInfoForm','regDate')\\\"\\n                            [matDatepicker]=\\\"manufactureYear\\\" formControlName=\\\"manufactureYear\\\"\\n                            [max]=\\\"registrationInfoForm.controls.regDate.value\\\" autocomplete=\\\"off\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"manufactureYear\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #manufactureYear></mat-datepicker>\\n                        <mat-error>\\n                            <app-validation [labelName]='manufactureYearr.innerText'\\n                                [validationControl]=\\\"additionalDetailsForm.controls.manufactureYear\\\"\\n                                [doValidate]=\\\"validate\\\">\\n                            </app-validation>\\n                        </mat-error>\\n                    </mat-form-field>\\n                </div>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-16\\\">\\n                    <!-- <button #resetButtonStepper mat-raised-button id=\\\"resetButtonStepper\\\" (click)=\\\"onCancel()\\\"\\n                        type=\\\"reset\\\" class=\\\"text-uppercase mr-12\\\">\\n                        {{'Cancel' | translate}}\\n                    </button> -->\\n                    <button  mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">{{'Previous' | translate}}</button>\\n                    <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n                        {{'Next' | translate}}\\n                    </button>\\n                </div>\\n            </form>\\n        </mat-step>\\n\\n        <mat-step [stepControl]=\\\"purchaseInfoForm\\\" [optional]=\\\"purchaseInfoForm.valid\\\">\\n            <form fxLayout=\\\"column\\\" [formGroup]=\\\"purchaseInfoForm\\\" #purchaseForm=\\\"ngForm\\\"  autocomplete=\\\"off\\\">\\n                <ng-template matStepLabel><span translate>Purchase Info</span></ng-template>\\n                <!-- <div class=\\\"pt-24 font-size-18\\\"><span translate>Purchase Info</span></div> -->\\n                <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\" fxFlex=\\\"100\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n                        <mat-label #purchaseCost translate>Purchase Cost</mat-label>\\n                        <input (keyup)=\\\"preventSpace($event,'purchaseInfoForm','purchaseCost')\\\" (blur)=\\\"trimTextBoxSpaces('purchaseInfoForm','purchaseCost')\\\" formControlName=\\\"purchaseCost\\\" matInput>\\n                        <mat-error>\\n                            <app-validation [labelName]='purchaseCost.innerText'\\n                                [validationControl]=\\\"purchaseInfoForm.controls.purchaseCost\\\"\\n                                [doValidate]=\\\"validate\\\">\\n                            </app-validation>\\n                        </mat-error>\\n                    </mat-form-field>\\n\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\"\\n                        class=\\\"px-sm-20\\\">\\n                        <mat-label #purchaseOdometerReading translate>Purchase Odometer Reading</mat-label>\\n                        <input (keyup)=\\\"preventSpace($event,'purchaseInfoForm','purchaseOdometerReading')\\\"  (blur)=\\\"trimTextBoxSpaces('purchaseInfoForm','purchaseOdometerReading')\\\" formControlName=\\\"purchaseOdometerReading\\\" matInput>\\n                        <mat-error>\\n                            <app-validation [labelName]='purchaseOdometerReading.innerText'\\n                                [validationControl]=\\\"purchaseInfoForm.controls.purchaseOdometerReading\\\"\\n                                [doValidate]=\\\"validate\\\">\\n                            </app-validation>\\n                        </mat-error>\\n                    </mat-form-field>\\n                </div>\\n\\n                <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-sm-12\\\" fxFlex=\\\"100\\\">\\n                    <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"icon-center\\\">\\n                        <mat-label #purchasseDate translate>Purchase Date</mat-label>\\n                        <input matInput (keyup)=\\\"forceValidation('purchaseDate',purchaseInfoForm)\\\"\\n                            [matDatepicker]=\\\"purchaseDate\\\" formControlName=\\\"purchaseDate\\\"\\n                            [min]=\\\"additionalDetailsForm.controls.manufactureYear.value\\\"\\n                             autocomplete=\\\"off\\\">\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"purchaseDate\\\"></mat-datepicker-toggle>\\n                        <mat-datepicker #purchaseDate></mat-datepicker>\\n                        <mat-error>\\n                            <app-validation [labelName]='purchasseDate.innerText'\\n                                [validationControl]=\\\"purchaseInfoForm.controls.purchaseDate\\\" [doValidate]=\\\"validate\\\">\\n                            </app-validation>\\n                        </mat-error>\\n                    </mat-form-field>\\n                </div>\\n\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-16\\\">\\n                    <!-- <button #resetButtonStepper mat-raised-button id=\\\"resetButtonStepper\\\" (click)=\\\"onCancel()\\\"\\n                        type=\\\"reset\\\" class=\\\"text-uppercase mr-12\\\">\\n                        {{'Cancel' | translate}}\\n                    </button> -->\\n                    <button  mat-raised-button matStepperPrevious type=\\\"button\\\" class=\\\"text-uppercase mr-12\\\">{{'Previous' | translate}}</button>\\n                    <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n                        {{'Next' | translate}}\\n                    </button>\\n                </div>\\n            </form>\\n        </mat-step>\\n\\n        <mat-step class=\\\"form-status\\\">\\n            <ng-template matStepLabel><span translate>Complete</span></ng-template>\\n            <div fxFlex=\\\"80\\\" class=\\\"text-center font-size-18 m-auto pt-24\\\" translate>{{isUpdate ? 'onUpdateStaffEntries' : 'onCreateStaffEntries'}}</div>\\n            <div fxFlex=\\\"80\\\" class=\\\"text-center font-size-18 m-auto pb-20 pt-8\\\" translate>{{isUpdate ? 'To Update Vehicle.':'To Create New Vehicle.'}}</div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-32 pt-24\\\">\\n                <button mat-raised-button matStepperPrevious type=\\\"submit\\\" class=\\\"text-uppercase mr-12\\\">{{'Previous' | translate}}</button>\\n                <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" (click)=\\\"onSubmit()\\\" color=\\\"accent\\\">{{button | translate}}\\n                </button>\\n            </div>\\n        </mat-step>\\n    </mat-horizontal-stepper>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vaW52ZW50b3J5L3ZlaGljbGUtaW52ZW50b3J5L3ZlaGljbGUtaW52ZW50b3J5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { VehicleSearchView } from '../../models/vehicle-search-view';\nimport { AppSettings, Pattern } from 'app/app.constants';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { VehicleInventoryService } from 'app/service/Transport/vehicle-inventory.service';\nimport { Router } from '@angular/router';\nimport { TransportModuleConfig } from 'app/url.config';\nimport { VehicleView } from '../../models/vehicle-view';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\nimport { AttachmentViewModel } from 'app/modules/academics/student-admissions/model/attachment-view-model';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { CommonService } from 'app/service/common.service';\nimport { VehicleDetailsView } from '../../models/vehicle-details-view';\nimport { StoreService } from 'app/service/file-management/store.service';\n\n@Component({\n  selector: 'app-vehicle-inventory',\n  templateUrl: './vehicle-inventory.component.html',\n  styleUrls: ['./vehicle-inventory.component.scss']\n})\nexport class VehicleInventoryComponent extends CommonComponent implements OnInit {\n  constructor(private router: Router, private vehicleInventoryService: VehicleInventoryService, private _formBuilder: FormBuilder,\n    private cd: ChangeDetectorRef, private sanitizer: DomSanitizer, public dialog: MatDialog, public commonService: CommonService,\n    private storeService: StoreService, public snackBar: MatSnackBar) {\n    super();\n    this.vehicleSearchView = {\n      vehicleName: [],\n      sortBy: '',\n      vehicleModel: [],\n      registrationNumber: [],\n      maxCapacity: [],\n      statusIds: [],\n      sortOrder: AppSettings.SORT_ORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE\n    };\n  }\n\n  @ViewChild('stepper') stepper;\n  @ViewChild('vehicalDataForm') vehicalDataForm;\n  @ViewChild('registrationForm') registrationForm;\n  @ViewChild('additionalDataForm') additionalDataForm;\n  @ViewChild('purchaseForm') purchaseForm;\n  @ViewChild('logoImgInput') logoImgInput: ElementRef;\n  vehicleSearchView: VehicleSearchView;\n  vehicleView: VehicleView;\n  vehicleDetailsView: VehicleDetailsView;\n  vehicalDetailsForm: FormGroup;\n  registrationInfoForm: FormGroup;\n  additionalDetailsForm: FormGroup;\n  purchaseInfoForm: FormGroup;\n  interactedStepperIndex: Number = 0;\n  closeAddPanel: boolean;\n  isUpdate: boolean;\n  validate = true;\n\n  HttpStatus: any;\n  cols: any[];\n  tabSettings: {};\n  currentComponent = 'VehicleInventoryComponent';\n  custRowsPerPageOptions: any[];\n  rows: any[];\n  totalItems: any;\n  pageCnt: any;\n  vehicleImageProp: any;\n  vehicleCertImageProp: any;\n  attachmentInfo: AttachmentViewModel;\n  button: any;\n  vehicleId: any;\n  filePaths: any = {\n    image: '',\n    certificate: ''\n  };\n  ngOnInit(): void {\n    this.HttpStatus = require('http-status-codes');\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.vehicleSearchView = modelTableComponent;\n    }\n\n\n    this.cols = [\n      { field: 'vehicleName', header: 'Vehicle Name', sort: true },\n      { field: 'vehicleModel', header: 'Vehicle Model', sort: true },\n      { field: 'registrationNumber', header: 'Reg.Number', sort: true },\n      { field: 'maxCapacity', header: 'Max Capacity', sort: true },\n      { field: 'status', header: 'Status', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.vehicleSearchView,\n      tablename: 'List of Vehicles',\n      componentName: this.currentComponent,\n    };\n    this.getAllVehicles(this.vehicleSearchView);\n\n    // Stepper Form intialization\n    this.attachmentInfo = {\n      fileName: null,\n      fileValue: null\n    };\n    this.vehicalDetailsForm = this._formBuilder.group({\n      name: [null, [Validators.required, Validators.maxLength(45)]],\n      manufacturer: [null, [Validators.required, Validators.maxLength(45)]],\n      model: [null, [Validators.required, Validators.maxLength(45)]],\n      code: [null, Validators.maxLength(6)],\n      maxCapacity: [null, [Validators.maxLength(45), Validators.pattern(Pattern.NUMBER_PATTERN), Validators.min(1), Validators.max(100)]],\n      photoAttachment: this.attachmentInfo,\n    });\n\n    this.registrationInfoForm = this._formBuilder.group({\n      regNumber: [null, Validators.maxLength(15)],\n      regDate: [null],\n      regExpDate: [null],\n      registrationCertAttachment: this.attachmentInfo\n    });\n\n    this.additionalDetailsForm = this._formBuilder.group({\n      chassisNumber: [null, Validators.maxLength(20)],\n      engineNumber: [null, Validators.maxLength(20)],\n      manufactureYear: [null],\n    });\n\n    this.purchaseInfoForm = this._formBuilder.group({\n      purchaseCost: [null, [Validators.min(1), Validators.max(99999999.99), Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS)]],\n      purchaseDate: [null],\n      purchaseOdometerReading: [null, [Validators.min(1), Validators.max(2147483647), Validators.pattern(Pattern.NUMBER_PATTERN)]],\n    });\n\n    this.vehicleView = {\n      code: '',\n      name: '',\n      model: '',\n      manufacturer: '',\n      manufactureYear: new Date,\n      regDate: new Date,\n      regExpDate: new Date,\n      regNumber: '',\n      engineNumber: '',\n      chassisNumber: '',\n      purchaseDate: new Date,\n      purchaseCost: 0,\n      purchaseOdometerReading: 0,\n      maxCapacity: 0,\n      photoAttachment: this.attachmentInfo,\n      registrationCertAttachment: this.attachmentInfo\n    };\n  }\n\n  // Get all Vehicles \n  getAllVehicles(getVehiclesDataView: any): void {\n    this.vehicleSearchView = getVehiclesDataView;\n    this.vehicleInventoryService.getAllVehicles(getVehiclesDataView.vehicleName, getVehiclesDataView.vehicleModel,\n      getVehiclesDataView.registrationNumber, getVehiclesDataView.maxCapacity, getVehiclesDataView.statusIds,\n      getVehiclesDataView.sortBy,\n      getVehiclesDataView.sortOrder, getVehiclesDataView.pageNumber, getVehiclesDataView.pageSize).subscribe(res => {\n        this.vehiclesData(res);\n      });\n  }\n\n  // Binding Vehicles To Table\n  vehiclesData(data: any): void {\n    this.custRowsPerPageOptions = [];\n    if (data.resultList == null) {\n      this.rows = [];\n    }\n    else {\n      this.rows = data.resultList.list;\n      this.totalItems = data.resultList.totalItems;\n    }\n    this.rows.forEach(e => {\n      e.operations = [\n        {\n          name: AppSettings.EDIT_OPERATION,\n          icon: AppSettings.EDIT\n        },\n        {\n          name: AppSettings.VIEW,\n          icon: AppSettings.DETAILS_ICON,\n          operationName: AppSettings.VIEW\n        }\n      ];\n    });\n    if (data.resultList) {\n      this.vehicleSearchView.pageNumber = data.resultList.pageNumber;\n    }\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.vehicleSearchView,\n      rows: this.rows,\n      tablename: 'List Of Vehicles',\n      componentName: this.currentComponent,\n      isNewStudentCourseSelectionRequired: true,\n      visibleSelectAll: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: AppSettings.NEW\n        },\n        infoButton: {\n          required: true,\n          text: 'Inventory'\n        }\n      },\n      filtersList: data.filters,\n    };\n  }\n\n  openForm(): void {\n    this.setDefaultFilepaths();\n    this.interactedStepperIndex = 0;\n    this.button = AppSettings.SUBMIT;\n    this.isUpdate = false;\n    this.closeAddPanel = false;\n\n    // this.interactedStepperIndex = this.stepper._steps._results.length;\n  }\n  rowWiseActions(event: any): void {\n    if (event.operation === AppSettings.VIEW.toLowerCase()) {\n      this.router.navigate([TransportModuleConfig._Transport_VehicleAllDetails + '/' + event.clickedRow.id]);\n    }\n    if (event.operation === AppSettings.EDIT) {\n      this.isUpdate = true;\n      this.closeAddPanel = false;\n      this.button = AppSettings.UPDATE;\n      this.vehicleId = event.clickedRow.id;\n      this.setDefaultFilepaths();\n      this.vehicleInventoryService.getVehicle(event.clickedRow.id)\n        .subscribe((res: any) => this.vehicleData(res.vehicleDetailsView), error => {\n          this.errorResponse(error);\n        });\n    }\n  }\n  setDefaultFilepaths(): void{\n    this.filePaths = {\n      image: '',\n      certificate: ''\n    };\n  }\n  // onCancelClick\n  onCancel(): void {\n    this.stepper.reset();\n    this.vehicalDataForm.resetForm();\n    this.registrationForm.resetForm();\n    this.additionalDataForm.resetForm();\n    this.purchaseForm.resetForm();\n    this.clearImages();\n    this.clearImagesRegistration();\n    this.isUpdate = false;\n    this.closeAddPanel = true;\n  }\n\n  clearImages(): void {\n      this.vehicleImageProp = {};\n      this.vehicalDetailsForm.controls.photoAttachment.patchValue(this.attachmentInfo);\n      this.cd.detectChanges();\n  }\n\n  clearImagesRegistration(): void {\n      this.vehicleCertImageProp = {};\n      this.registrationInfoForm.controls.registrationCertAttachment.patchValue(this.attachmentInfo);\n      this.cd.detectChanges();\n  }\n\n  onSelectionChange(event: any): void {\n    if (event.selectedIndex > this.interactedStepperIndex) {\n      this.interactedStepperIndex = event.selectedIndex;\n    } else {\n      this.stepper._steps._results.forEach((x, i) => {\n        x.interacted = i < this.interactedStepperIndex ? true : false;\n      });\n    }\n    if (event.selectedIndex === AppSettings.FOURTH_STEPPER) {\n      this.stepper._steps._results.forEach((x, i) => {\n        if (i > 0) {\n          x.interacted = true;\n        }\n      });\n    }\n  }\n\n  vehicleImgChanged(files, logo = false): void {\n    if (this.checkFileSize(files[0], 'image', 2097152)) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(files[0]);\n    const that = this;\n    reader.onload = (_event) => {\n      let image;\n      image = new Image();\n      image.src = reader.result;\n      image.onload = function (): void {\n        that.vehicleImageProp = {\n          src: that.sanitizer.bypassSecurityTrustResourceUrl(image.src)\n        };\n        that.vehicalDetailsForm.controls.photoAttachment.patchValue({ fileName: files[0].name, fileValue: (<string>image.src).split(',')[1] });\n        that.filePaths.image = '';\n        that.cd.detectChanges();\n      };\n    };\n  }\n\n  imgChanged(files, form): void {\n    if (this.checkFileSize(files[0], AppSettings.TEXT_AND_IMAGE_FILE_EXTENSION, 2097152)) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(files[0]);\n    const that = this;\n    const mimeType = files[0].type;\n    if (mimeType.match(/image\\/*/)) {\n      reader.onload = (_event) => {\n        let image;\n        image = new Image();\n        image.src = reader.result;\n        image.onload = function (): void {\n          that.setImgProperties(image.src, files[0].name);\n        };\n      };\n    } else {\n      reader.onload = () => {\n        let image;\n        image = new Image();\n        image.src = reader.result;\n        that.setImgProperties(image.src, files[0].name);\n      };\n    }\n    that.filePaths.certificate = '';\n  }\n\n  setImgProperties(imgSrc: string, fileName: string): void {\n    const that = this;\n    that.vehicleCertImageProp = {\n      src: that.sanitizer.bypassSecurityTrustResourceUrl(imgSrc)\n    };\n\n    that.registrationInfoForm.controls.registrationCertAttachment.patchValue({ fileName: fileName, fileValue: (<string>imgSrc).split(',')[1] });\n    that.cd.detectChanges();\n  }\n\n  onSubmit(): void {\n    if (!this.isUpdate) {\n      this.dataAssignment(this.vehicleView);\n      this.vehicleInventoryService.createVehicle(this.vehicleView)\n        .subscribe((res: any) => this.addUpdateResponse(res), error => {\n          this.errorResponse(error);\n        });\n    } else {\n      this.vehicleDetailsView = {};\n      this.dataAssignment(this.vehicleView);\n      this.vehicleView['id'] = this.vehicleId;\n      this.vehicleDetailsView = this.vehicleView;\n      if (this.vehicleView.registrationCertAttachment != null) {\n        this.vehicleDetailsView.registrationCertAttachment.fileName = this.vehicleView.registrationCertAttachment.fileName;\n        this.vehicleDetailsView.registrationCertAttachment.fileValue = this.vehicleView.registrationCertAttachment.fileValue;\n      }\n      this.vehicleInventoryService.updateVehicle(this.vehicleDetailsView)\n        .subscribe((res: any) => this.addUpdateResponse(res), error => {\n          this.errorResponse(error);\n        });\n    }\n  }\n\n  dataAssignment(vehicalDataAssign: any): void {\n    Object.assign(vehicalDataAssign, this.vehicalDetailsForm.value, this.registrationInfoForm.value, this.additionalDetailsForm.value, this.purchaseInfoForm.value);\n    vehicalDataAssign['photoAttachment'] = null;\n    vehicalDataAssign['registrationCertAttachment'] = null;\n    if (this.vehicalDetailsForm.value.photoAttachment && this.vehicalDetailsForm.value.photoAttachment.fileName) {\n      Object.assign(vehicalDataAssign['photoAttachment'] = {}, this.vehicalDetailsForm.controls.photoAttachment.value);\n    }\n    if (this.registrationInfoForm.value.registrationCertAttachment && this.registrationInfoForm.value.registrationCertAttachment.fileName) {\n      Object.assign(vehicalDataAssign['registrationCertAttachment'] = {}, this.registrationInfoForm.controls.registrationCertAttachment.value);\n    }\n  }\n\n  addUpdateResponse(result: any): void {\n    this.onCancel();\n    this.getAllVehicles(this.vehicleSearchView);\n    this.openSnackBar(result.messages.ResultMessage);\n  }\n\n  vehicleData(vehicleDetails: any): void {\n    this.vehicalDetailsForm.patchValue(vehicleDetails);\n    this.registrationInfoForm.patchValue(vehicleDetails);\n    this.additionalDetailsForm.patchValue(vehicleDetails);\n    this.purchaseInfoForm.patchValue(vehicleDetails);\n    const that = this;\n    if (vehicleDetails.photoAttachment && vehicleDetails.photoAttachment.fileName) {\n      that.vehicleImageProp = {\n        src: this.getFileName(vehicleDetails.photoAttachment.fileName)\n      };\n      if (vehicleDetails.photoAttachment.fileName){\n        this.filePaths.image = this.storeService.getFilePath(vehicleDetails.photoAttachment.fileName); \n      }\n      this.setFormAttachmentValue(that.vehicalDetailsForm.controls.photoAttachment, vehicleDetails.photoAttachment.fileName);\n    }\n    if (vehicleDetails.registrationCertAttachment && vehicleDetails.registrationCertAttachment.fileName) {\n      that.vehicleCertImageProp = {\n        src: this.getFileName(vehicleDetails.registrationCertAttachment.fileName)\n      };\n      if (vehicleDetails.registrationCertAttachment.fileName){\n        this.filePaths.certificate = this.storeService.getFilePath(vehicleDetails.registrationCertAttachment.fileName); \n      }\n      this.setFormAttachmentValue(that.registrationInfoForm.controls.registrationCertAttachment, vehicleDetails.registrationCertAttachment.fileName);\n    }\n\n    this.stepper._steps._results.forEach((x) => {\n      x.interacted = true;\n    });\n    this.interactedStepperIndex = this.stepper._steps._results.length;\n    this.customSteperLabelChange();\n    that.cd.detectChanges();\n  }\n\n  getFileName(fileName: any): SafeResourceUrl {\n    const that = this;\n    return that.sanitizer.bypassSecurityTrustResourceUrl(this.storeService.getFilePath(fileName));\n  }\n\n  setFormAttachmentValue(setForm: any, fileName: any): void {\n    this.storeService.storeFileEncryptByFileNameGet(fileName)\n      .subscribe((value: any) => {\n        if (value) {\n          setForm.patchValue({ fileName: value.fileNameWithExtension, fileValue: value.value });\n        }\n      });\n  }\n}\n","module.exports = \"<div class=\\\"mat-elevation-z4 mx-40 mb-24 radius-t-20\\\">\\n<app-table [settings]=\\\"tabSettings\\\" (getTableData)='getPollutionCheckHistory($event)'\\n  (rowBasedAction)=\\\"rowWiseActions($event)\\\" [disabled]=\\\"disbleSubmitBtn\\\" [templateRef]=\\\"addPollutionCheckTemplate\\\"\\n  [closeAddForm]=\\\"closeAddPanel\\\" (openAddForm)=\\\"onAddFormClick()\\\" [closeRowForm]='closeAddPanel'>\\n</app-table>\\n</div>\\n<ng-template #addPollutionCheckTemplate>\\n  <form [formGroup]=\\\"pollutionCheckForm\\\" (ngSubmit)=\\\"onSubmit(pollutionCheckForm)\\\" #pollutionCheck=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" class=\\\"pt-24\\\">\\n\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"40\\\" fxFlex=\\\"100\\\" class=\\\"icon-center\\\">\\n        <mat-label #pollutioncheckdate translate>pollutioncheckdate</mat-label>\\n        <input matInput (keyup)=\\\"forceValidation('pollutionCheckDate',pollutionCheckForm)\\\"\\n          [matDatepicker]=\\\"pollutionCheckDate\\\" [max]=\\\"currentDate\\\" formControlName=\\\"pollutionCheckDate\\\" required>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"pollutionCheckDate\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #pollutionCheckDate></mat-datepicker>\\n        <mat-error>\\n          <app-validation [labelName]=\\\"pollutioncheckdate.innerText\\\"\\n            [validationControl]=\\\"pollutionCheckForm.controls.pollutionCheckDate\\\" [doValidate]=\\\"validate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"40\\\" fxFlex=\\\"100\\\" class=\\\"px-sm-20 icon-center\\\">\\n        <mat-label #pollutioncheckexpirydate translate>pollutioncheckexpirydate</mat-label>\\n        <input matInput (keyup)=\\\"forceValidation('pollutionCheckExpiryDate',pollutionCheckForm)\\\"\\n          [matDatepicker]=\\\"pollutionCheckExpiryDate\\\" [min]=\\\"pollutionCheckForm.controls.pollutionCheckDate.value\\\"\\n          formControlName=\\\"pollutionCheckExpiryDate\\\" required>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"pollutionCheckExpiryDate\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #pollutionCheckExpiryDate></mat-datepicker>\\n        <mat-error>\\n          <app-validation [labelName]=\\\"pollutioncheckexpirydate.innerText\\\"\\n            [validationControl]=\\\"pollutionCheckForm.controls.pollutionCheckExpiryDate\\\" [doValidate]=\\\"validate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <div fxLayout=\\\"column\\\" class=\\\"mt-12 w-280\\\" fxFlex.gt-xs=\\\"32\\\" fxFlex=\\\"100\\\">\\n        <div fxLayout=\\\"row\\\">\\n          <button mat-raised-button type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"logoImgInput.value='';logoImgInput.click()\\\">\\n            <mat-icon class=\\\"mr-8\\\">attach_file</mat-icon>{{'Upload Image' | translate}}\\n          </button>\\n          <button mat-icon-button type=\\\"button\\\"  [style.display]=\\\"logoImgProp?.src ? 'block' : 'none'\\\">\\n            <mat-icon class=\\\"mb-4 grey-600-fg\\\"\\n              (click)=\\\"logoImgInput.value='';clearImages(true)\\\">highlight_off</mat-icon>\\n          </button>\\n        </div>\\n        <input [accept]=\\\"'.doc,.docx,image/jpeg,image/jpg,image/png,application/pdf,image/*'\\\" id=\\\"logoImgInput\\\"\\n          (change)=\\\"imgChanged(logoImgInput.files)\\\" fxHide type=\\\"file\\\" #logoImgInput>\\n        <div class=\\\"pt-8 logo-name break-word\\\"\\n          [style.visibility]=\\\"uploadFiles?.value?.pollutionFileNameWithExtension ? 'visible' : 'hidden'\\\"\\n          [style.display]=\\\"logoImgProp?.src ? 'block' : 'none'\\\">\\n          {{uploadFiles?.value?.pollutionFileNameWithExtension}}</div>\\n      </div>\\n    </div>\\n   \\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"pt-16\\\">\\n      <button mat-raised-button class=\\\"mr-12 text-uppercase\\\" type=\\\"button\\\" (click)=\\\"cancel()\\\">{{'cancel' | translate}}</button>\\n      <button type=\\\"submit\\\" mat-raised-button class=\\\"text-uppercase\\\" type=\\\"submit\\\" color=\\\"accent\\\"\\n        *ngIf=\\\"!updateBtn\\\">{{'create' | translate}}</button>\\n      <button type=\\\"submit\\\" mat-raised-button class=\\\"text-uppercase\\\" type=\\\"submit\\\" color=\\\"accent\\\"\\n        *ngIf=\\\"updateBtn\\\">{{'update' | translate}}</button>\\n    </div>\\n  </form>\\n</ng-template>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vaW52ZW50b3J5L3ZlaGljbGUtcG9sbHV0aW9uLWNoZWNrLWhpc3RvcnkvdmVoaWNsZS1wb2xsdXRpb24tY2hlY2staGlzdG9yeS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, ChangeDetectorRef, ElementRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { VehiclePollutionCheckSearchView } from '../../models/vehicle-pollution-check-search-view';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { AppSettings } from 'app/app.constants';\nimport { VehicleInventoryService } from 'app/service/Transport/vehicle-inventory.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { VehiclePollutionDataView } from '../../models/vehicle-pollution-data-view';\nimport { VehiclePollutionUpdateView } from '../../models/vehicle-pollution-update-view';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { CommonService } from 'app/service/common.service';\nimport { StoreService } from 'app/service/file-management/store.service';\n\n@Component({\n  selector: 'app-vehicle-pollution-check-history',\n  templateUrl: './vehicle-pollution-check-history.component.html',\n  styleUrls: ['./vehicle-pollution-check-history.component.scss']\n})\nexport class VehiclePollutionCheckHistoryComponent extends CommonComponent implements OnInit {\n  pollutionCheckForm: FormGroup;\n  @ViewChild('pollutionCheck') myForm;\n  @ViewChild('logoImgInput') logoImgInput: ElementRef;\n  validate: boolean;\n  HttpStatus: any;\n  disbleSubmitBtn = false;\n  closeAddPanel: boolean;\n  updateBtn: boolean;\n  vehiclePollutionCheckSearchView: VehiclePollutionCheckSearchView;\n  pollutionDataView: VehiclePollutionDataView;\n  pollutionUpdateView: VehiclePollutionUpdateView;\n  cols: any[];\n  tabSettings: {};\n  currentComponent = 'VehiclePollutionCheckHistoryComponent';\n  custRowsPerPageOptions: any[];\n  rows: any[];\n  totalItems: any;\n  pageCnt: any;\n  isedit: boolean;\n  logoImgProp: any;\n  uploadFiles: FormGroup;\n  vehicleId: any;\n  pollutionCheckId: any;\n  nameImgProp: any;\n  flagImageProp: any;\n  fileName: string;\n  constructor(private storeService: StoreService, public commonService: CommonService,\n    private _fb: FormBuilder, private sanitizer: DomSanitizer, public dialogRef: MatDialog, private cd: ChangeDetectorRef,\n    public dialog: MatDialog, private route: ActivatedRoute, private vehicleInventoryService: VehicleInventoryService, public snackBar: MatSnackBar) {\n    super();\n    this.vehiclePollutionCheckSearchView = {\n      vehicleId: '',\n      sortBy: '',\n      pollutionCheckDateBegin: [],\n      pollutionCheckDateEnd: [],\n      pollutionCheckExpiryDateBegin: [],\n      pollutionCheckExpiryDateEnd: [],\n      sortOrder: AppSettings.SORT_ORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE\n    };\n\n    this.pollutionDataView = {\n      vehicleId: '',\n      pollutionCheckDate: '',\n      pollutionCheckExpiryDate: '',\n      attachment:\n      {\n        fileName: '',\n        fileValue: ''\n      }\n    };\n\n    this.pollutionUpdateView = {\n      id: '',\n      pollutionCheckDate: '',\n      pollutionCheckExpiryDate: '',\n      attachment:\n      {\n        fileName: '',\n        fileValue: ''\n      }\n    };\n  }\n\n  ngOnInit(): void {\n\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.vehicleId = params.id;\n      }\n    });\n\n    this.HttpStatus = require('http-status-codes');\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.vehiclePollutionCheckSearchView = modelTableComponent;\n    }\n\n    this.cols = [\n      { field: 'pollutionCheckDate', header: 'Pollution Check Date', sort: true },\n      { field: 'pollutionCheckExpiryDate', header: 'Pollution Check Expiry Date', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.vehiclePollutionCheckSearchView,\n      componentName: this.currentComponent,\n    };\n    this.uploadFiles = this._fb.group({\n      pollutionFileNameWithExtension: null,\n      pollutionFileValue: null,\n    });\n\n    this.pollutionCheckForm = new FormGroup({\n      pollutionCheckDate: new FormControl('', [Validators.required]),\n      pollutionCheckExpiryDate: new FormControl('', [Validators.required]),\n    });\n    this.getPollutionCheckHistory(this.vehiclePollutionCheckSearchView);\n  }\n\n\n  // Get all VehiclePollutionCheckHistory\n  getPollutionCheckHistory(vehiclePollutionCheckData: any): void {\n    this.vehiclePollutionCheckSearchView = vehiclePollutionCheckData;\n    this.vehicleInventoryService.fetchVehiclePollutionCheckHistory(this.vehicleId, vehiclePollutionCheckData.pollutionCheckDateBegin,\n      vehiclePollutionCheckData.pollutionCheckDateEnd, vehiclePollutionCheckData.pollutionCheckExpiryDateBegin, vehiclePollutionCheckData.pollutionCheckExpiryDateEnd,\n      vehiclePollutionCheckData.sortBy,\n      vehiclePollutionCheckData.sortOrder, vehiclePollutionCheckData.pageNumber, vehiclePollutionCheckData.pageSize).subscribe(res =>\n        this.vehiclesPollutionData(res), error => {\n          this.errorResponse(error);\n        });\n  }\n\n  // Binding data To Table\n  vehiclesPollutionData(data: any): void {\n    this.custRowsPerPageOptions = [];\n    if (data.resultList == null) {\n      this.rows = [];\n    }\n    else {\n      data.resultList.list.forEach(formatDate => {\n        formatDate.pollutionCheckDate =\n          formatDate.pollutionCheckDate != null ? this.commonService.customDateFormat(formatDate.pollutionCheckDate.toString(), this.getSchoolDateFormat()).date : null;\n        formatDate.pollutionCheckExpiryDate =\n          formatDate.pollutionCheckExpiryDate != null ? this.commonService.customDateFormat(formatDate.pollutionCheckExpiryDate.toString(), this.getSchoolDateFormat()).date : null;\n      });\n      this.rows = data.resultList.list;\n      this.totalItems = data.resultList.totalItems;\n    }\n    this.rows.forEach(e => {\n      e.operations = [\n        {\n          name: AppSettings.EDIT_OPERATION,\n          icon: AppSettings.EDIT\n        },\n        {\n          name: AppSettings.VIEW,\n          icon: AppSettings.DETAILS_ICON,\n          operationName: AppSettings.VIEW\n        },\n        {\n          name: AppSettings.DELETE_OPERATION,\n          icon: AppSettings.DELETE_ICON,\n          operationName: AppSettings.DELETE\n        }\n      ];\n    });\n    if (data.resultList) {\n      this.vehiclePollutionCheckSearchView.pageNumber = data.resultList.pageNumber;\n    }\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.vehiclePollutionCheckSearchView,\n      rows: this.rows,\n      componentName: this.currentComponent,\n      isNewStudentCourseSelectionRequired: true,\n      visibleSelectAll: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: 'New'\n        },\n        infoButton: {\n          required: true,\n          text: 'Vehicle Pollution Check History'\n        }\n      },\n      filtersList: data.filters,\n      tabTable: true,\n      padding: true,\n    };\n  }\n\n  // Adding Post Form\n  onAddFormClick(): void {\n    this.validate = false;\n    this.closeAddPanel = false;\n    this.updateBtn = false;\n    this.disbleSubmitBtn = true;\n  }\n\n\n  onSubmit(pollutionForm: any): any {\n    this.disbleSubmitBtn = true;\n    if (pollutionForm.status === AppSettings.VALID) {\n      this.validate = false;\n      this.disbleSubmitBtn = false;\n\n      if (this.isedit === true) {\n        this.pollutionUpdateView.pollutionCheckDate = this.getFormattedDateByAPIPattern(pollutionForm.value.pollutionCheckDate),\n          this.pollutionUpdateView.pollutionCheckExpiryDate = this.getFormattedDateByAPIPattern(pollutionForm.value.pollutionCheckExpiryDate),\n          this.pollutionUpdateView.id = this.pollutionCheckId;\n          this.pollutionUpdateView.attachment.fileName = this.uploadFiles.value.pollutionFileNameWithExtension,\n          this.pollutionUpdateView.attachment.fileValue = this.uploadFiles.value.pollutionFileValue;\n          this.vehicleInventoryService.updateVehiclePollutionCheck(this.pollutionUpdateView).subscribe(res => this.updateResponse(res), error => {\n          this.errorResponse(error);\n        });\n      }\n      else {\n        this.pollutionDataView.vehicleId = this.vehicleId;\n        this.pollutionDataView.pollutionCheckDate = this.getFormattedDateByAPIPattern(pollutionForm.value.pollutionCheckDate),\n        this.pollutionDataView.pollutionCheckExpiryDate = this.getFormattedDateByAPIPattern(pollutionForm.value.pollutionCheckExpiryDate),\n        this.pollutionDataView.attachment.fileName = this.uploadFiles.value.pollutionFileNameWithExtension,\n        this.pollutionDataView.attachment.fileValue = this.uploadFiles.value.pollutionFileValue;\n\n        this.vehicleInventoryService.vehilePollutionCheck(this.pollutionDataView).subscribe(res => this.updateResponse(res), error => {\n          this.errorResponse(error);\n        });\n\n      }\n    }\n    else {\n      this.validate = true;\n      return false;\n    }\n  }\n\n\n  // update Response\n  updateResponse(response: any): void {\n    this.clearImages(true);\n    this.isedit = false;\n    if (response.statusCode === this.HttpStatus.OK || response.statusCode === this.HttpStatus.CONFLICT) {\n          if (response.statusCode === this.HttpStatus.CONFLICT) {\n            this.closeAddPanel = false;\n          }\n          else {\n            this.closeAddPanel = true;\n            this.getPollutionCheckHistory(this.vehiclePollutionCheckSearchView);\n            this.myForm.resetForm();\n            this.clearImages(true);\n            this.updateBtn = false;\n            this.disbleSubmitBtn = false;\n          }\n    }\n    else {\n          this.closeAddPanel = false;\n    }\n    this.openSnackBar(response.messages.ResultMessage);\n  }\n  // End\n\n  // Cancel Button\n  cancel(): void {\n    this.clearImages(true);\n    this.closeAddPanel = true;\n    this.disbleSubmitBtn = false;\n    this.myForm.resetForm();\n    this.isedit = false;\n  }\n\n\n  // For Edit and Delete Events\n  rowWiseActions(event: any): void {\n    if (event.operation === AppSettings.EDIT) {\n      this.isedit = true;\n      this.closeAddPanel = false;\n      this.updateBtn = true;\n      this.disbleSubmitBtn = true;\n      this.pollutionCheckId = event.clickedRow.id;\n      this.vehicleInventoryService.getVehiclePollutionCheck(event.clickedRow.id).subscribe(res => {\n        this.pollutionCheckForm.controls['pollutionCheckDate'].setValue(res.resultModel.pollutionCheckDate);\n        this.pollutionCheckForm.controls['pollutionCheckExpiryDate'].setValue(res.resultModel.pollutionCheckExpiryDate);\n        this.fileName = '';\n        if (res.resultModel.attachment !== null && res.resultModel.attachment !== undefined) {\n          this.fileName = res.resultModel.attachment.fileName;\n          this.logoImgProp = {\n            src: this.sanitizer.bypassSecurityTrustResourceUrl(this.storeService.getFilePath(res.resultModel.attachment.fileName))\n          };\n\n          this.storeService.storeFileEncryptByFileNameGet(res.resultModel.attachment.fileName)\n            .subscribe(result => {\n              if (result) {\n                this.uploadFiles.controls['pollutionFileNameWithExtension'].patchValue(result.fileNameWithExtension);\n                this.uploadFiles.controls['pollutionFileValue'].patchValue(result.value);\n              }\n            });\n\n          this.cd.detectChanges();\n        }\n      }, error => {\n        this.disbleSubmitBtn = false;\n        this.errorResponse(error);\n      });\n    }\n    if (event.operation === AppSettings.DELETE) {\n      const dialogRef = this.dialog.open(CustomDialogComponent, {\n        disableClose: true,\n        data: { text: this.commonService.getTranslation(AppSettings.DELETE_CONFORMATION, ''), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n      });\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.vehicleInventoryService.deleteVehiclePollutionCheck(event.clickedRow.id).subscribe(res => this.deleteResponse(res), error => {\n            this.errorResponse(error);\n          });\n        }\n        if (action === AppSettings.NO) {\n          this.dialog.closeAll();\n        }\n      });\n    }\n    else if (event.operation === (AppSettings.VIEW).toLowerCase()) {\n      if (event.clickedRow.attachment != null) {\n        this.nameImgProp = this.storeService.getFilePath(event.clickedRow.attachment.fileName);\n        window.open(this.nameImgProp);\n      }\n      else {\n        this.openSnackBar(AppSettings.NO_ATTACHMENTS_FOUND, true);\n        return;\n      }\n    }\n  }\n\n  // Delete Response\n  deleteResponse(response: any): void {\n    this.getPollutionCheckHistory(this.vehiclePollutionCheckSearchView);\n    this.openSnackBar(response.messages.ResultMessage);\n  }\n\n  clearImages(logo = false): void {\n    if (logo) {\n      this.logoImgProp = {};\n      this.fileName = '';\n      this.uploadFiles.controls.pollutionFileNameWithExtension.patchValue(null);\n      this.uploadFiles.controls.pollutionFileValue.patchValue(null);\n    }\n    this.cd.detectChanges();\n  }\n\n  imgChanged(event): void {\n    if (this.checkFileSize(event[0], AppSettings.TEXT_AND_IMAGE_FILE_EXTENSION, 2097152)){\n      return;\n    }\n    if (event && event.length > 0) {\n\n      const reader = new FileReader();\n      const file = event[0];\n      reader.readAsDataURL(file);\n      let image;\n      image = new Image();\n      image.src = reader.result;\n      const that = this;\n\n      reader.onload = (_event) => {\n        that.uploadFiles.controls['pollutionFileNameWithExtension'].setValue(file.name);\n        that.uploadFiles.controls['pollutionFileValue'].setValue((<string>reader.result).split(',')[1]);\n        this.cd.detectChanges();\n      };\n      that.setFileProperties(image);\n    }\n  }\n\n  setFileProperties(image): void {\n    const data = {\n      src: this.sanitizer.bypassSecurityTrustResourceUrl(image.src),\n      width: image.width,\n      height: image.height\n    };\n\n    this.logoImgProp = {};\n    this.logoImgProp = data;\n    this.cd.detectChanges();\n  }\n}\n","module.exports = \"<app-table [settings]=\\\"tabSettings\\\" [closeRowForm]='closeAddPanel' (rowBasedAction)=\\\"rowActions($event)\\\"\\n  (getTableData)='getAllVehicleService($event)' [templateRef]=\\\"addServiceHistory\\\" (openAddForm)=\\\"onAddFormClick()\\\">\\n</app-table>\\n\\n<ng-template #addServiceHistory>\\n  <form class=\\\"p-20\\\" [formGroup]=\\\"serviceHistoryForm\\\" (ngSubmit)=\\\"onSubmit(serviceHistoryForm)\\\" #serviceForm=\\\"ngForm\\\" autocomplete=\\\"off\\\">\\n\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\">\\n\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxFlex.gt-sm=\\\"32\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\"\\n        class=\\\"icon-center\\\">\\n        <mat-label #serviceDate translate>Service Date</mat-label>\\n        <input matInput (keyup)=\\\"forceValidation('serviceDate',serviceHistoryForm)\\\" [matDatepicker]=\\\"serviceDatePicker\\\"\\n          formControlName=\\\"serviceDate\\\" required>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"serviceDatePicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #serviceDatePicker></mat-datepicker>\\n        <mat-error>\\n          <app-validation [labelName]='serviceDate.innerText'\\n            [validationControl]=\\\"serviceHistoryForm.controls.serviceDate\\\" [doValidate]=\\\"serviceValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxFlex.gt-sm=\\\"36\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\"\\n        class=\\\"px-sm-20 icon-center\\\">\\n        <mat-label #nextServiceDate translate>Next Service Date</mat-label>\\n        <input matInput (keyup)=\\\"forceValidation('nextServiceDate',serviceHistoryForm)\\\"\\n          [matDatepicker]=\\\"nextServiceDatePicker\\\" [min]=\\\"serviceHistoryForm.controls.serviceDate.value\\\"\\n          formControlName=\\\"nextServiceDate\\\" required>\\n        <mat-datepicker-toggle matSuffix [for]=\\\"nextServiceDatePicker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #nextServiceDatePicker></mat-datepicker>\\n        <mat-error>\\n          <app-validation [labelName]='nextServiceDate.innerText'\\n            [validationControl]=\\\"serviceHistoryForm.controls.nextServiceDate\\\" [doValidate]=\\\"serviceValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <div fxLayout=\\\"column\\\" class=\\\"mt-12\\\" fxFlex.gt-xs=\\\"32\\\" fxFlex=\\\"100\\\">\\n        <div fxLayout=\\\"row\\\">\\n          <button mat-raised-button type=\\\"button\\\" color=\\\"primary\\\" (click)=\\\"logoImgInput.value='';logoImgInput.click()\\\">\\n            <mat-icon class=\\\"mr-8\\\">attach_file</mat-icon>{{'Upload Image' | translate}}\\n          </button>\\n          <button mat-icon-button type=\\\"button\\\"  [style.display]=\\\"logoImgProp?.src ? 'block' : 'none'\\\"  (click)=\\\"logoImgInput.value='';clearImages(true)\\\">\\n            <mat-icon class=\\\"mb-4 grey-600-fg\\\"\\n             >highlight_off</mat-icon>\\n          </button>\\n\\n          <!-- <button mat-icon-button [style.display]=\\\"logoImgProp?.src ? 'block' : 'none'\\\" (click)=\\\"logoImgInput.value='';clearImages(true)\\\">\\n            <mat-icon class=\\\"mb-4 grey-600-fg\\\" >\\n                highlight_off\\n            </mat-icon>\\n        </button> -->\\n\\n\\n        </div>\\n        <input [accept]=\\\"'.doc,.docx,image/jpeg,image/jpg,image/png,application/pdf,image/*'\\\" id=\\\"logoImgInput\\\"\\n          (change)=\\\"imgChanged(logoImgInput.files)\\\" fxHide type=\\\"file\\\" #logoImgInput>\\n        <div class=\\\"pt-8 logo-name break-word\\\"\\n          [style.visibility]=\\\"serviceHistoryForm.controls?.attachment?.value.fileName ? 'visible' : 'hidden'\\\"\\n          [style.display]=\\\"logoImgProp?.src ? 'block' : 'none'\\\">\\n          {{serviceHistoryForm.controls?.attachment?.value.fileName}}</div>\\n      </div>\\n    </div>\\n\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-12\\\">\\n\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"mr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"32\\\" fxFlex=\\\"100\\\">\\n        <mat-label #odometerReadingService translate>Odometer Reading At Service</mat-label>\\n        <input autocomplete=\\\"off\\\" matInput (keyup)=\\\"preventSpace($event,'serviceHistoryForm','odometerReadingAtService')\\\" formControlName=\\\"odometerReadingAtService\\\" (blur)=\\\"trimTextBoxSpaces('serviceHistoryForm','odometerReadingAtService')\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"odometerReadingService.innerText\\\"\\n            [validationControl]=\\\"serviceHistoryForm.controls.odometerReadingAtService\\\" [doValidate]=\\\"serviceValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"px-sm-20\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"36\\\" fxFlex=\\\"100\\\">\\n        <mat-label #odometerNextService translate>Odometer Reading Next Service</mat-label>\\n        <input autocomplete=\\\"off\\\" (keyup)=\\\"preventSpace($event,'serviceHistoryForm','odomenterReadingNextService')\\\" matInput formControlName=\\\"odomenterReadingNextService\\\" (blur)=\\\"trimTextBoxSpaces('serviceHistoryForm','odomenterReadingNextService')\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"odometerNextService.innerText\\\"\\n            [validationControl]=\\\"serviceHistoryForm.controls.odomenterReadingNextService\\\"\\n            [doValidate]=\\\"serviceValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n\\n      <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"32\\\" fxFlex=\\\"100\\\">\\n        <mat-label #additionalDetail translate>Additional Details</mat-label>\\n        <input autocomplete=\\\"off\\\" matInput formControlName=\\\"additionalDetails\\\" (keyup)=\\\"preventSpace($event,'serviceHistoryForm','additionalDetails')\\\" (blur)=\\\"trimTextBoxSpaces('serviceHistoryForm','additionalDetails')\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"additionalDetail.innerText\\\"\\n            [validationControl]=\\\"serviceHistoryForm.controls.additionalDetails\\\"\\n            class=\\\"error-msg messages text-left text-danger\\\" [doValidate]=\\\"serviceValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-sm-12\\\">\\n      <button class=\\\"mr-12 text-uppercase\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeAddForm()\\\">\\n        {{'Cancel' | translate}}</button>\\n      <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\"\\n        [disabled]=\\\"disableSubmitBtn\\\">{{(updateButtonShow ? 'Update':'Create') | translate}}</button>\\n    </div>\\n  </form>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdHJhbnNwb3J0YXRpb24vaW52ZW50b3J5L3ZlaGljbGUtc2VydmljZS1oaXN0b3J5L3ZlaGljbGUtc2VydmljZS1oaXN0b3J5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, OnChanges, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { CommonService } from 'app/service/common.service';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppSettings, Pattern } from 'app/app.constants';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { ServiceVehicleView } from '../../models/service-vehicle-view';\nimport { VehicleServiceView } from '../../models/vehicle-service-view';\nimport { VehicleServiceFilterViewModel } from '../../models/vehicle-service-filter-viewmodel';\nimport { VehicleServiceHistroyService } from 'app/service/Transport/vehicle-service-history.service';\nimport { AttachmentViewModel } from 'app/modules/academics/student-admissions/model/attachment-view-model';\n\n\n\n@Component({\n  selector: 'app-vehicle-service-history',\n  templateUrl: './vehicle-service-history.component.html',\n  styleUrls: ['./vehicle-service-history.component.scss'],\n  providers: [VehicleServiceHistroyService]\n})\nexport class VehicleServiceHistoryComponent extends CommonComponent implements OnInit, OnChanges {\n  dataLoaded = Promise.resolve(false);\n  @ViewChild('vehicleService') vehicleService;\n  @ViewChild('serviceForm') serviceForm;\n  vehicleServiceView: VehicleServiceView;\n  serviceVehicleView: ServiceVehicleView;\n  vehicleServiceFilterView: VehicleServiceFilterViewModel;\n  attachmentInfo: AttachmentViewModel;\n  HttpStatus: any;\n  currentComponent: any;\n  flagImageProp = {};\n  rows: any[];\n  totalItems: any;\n  cols: any;\n  pageCnt: any;\n  selectedChanged: any;\n  vehicleId: string;\n  serviceHistoryForm: FormGroup;\n  closeAddPanel = false;\n  serviceValidate = true;\n  updateButtonShow: boolean;\n  inSpectionDetails: any;\n  nameImgProp: any;\n  id: any;\n  tabSettings: {};\n  logoImgProp: {};\n  fileName: string;\n\n  constructor(private _fb: FormBuilder, public commonService: CommonService,\n    public route: ActivatedRoute, public dialogRef: MatDialog,\n    public vehicleHistoryService: VehicleServiceHistroyService, public storeService: StoreService, private cd: ChangeDetectorRef,\n    private sanitizer: DomSanitizer, public snackBar: MatSnackBar) {\n    super();\n  }\n\n\n  ngOnInit(): void {\n    this.route.params.subscribe((param) => {\n      if (param.id) {\n        this.vehicleId = param.id;\n      }\n    });\n\n    this.HttpStatus = require('http-status-codes');\n\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.vehicleServiceFilterView,\n      componentName: this.currentComponent,\n    };\n    this.vehicleServiceFilterView = {\n      vehicleId: '',\n      vehicleName: [],\n      registrationNumber: [],\n      serviceDate: '',\n      odometerReadingAtService: '',\n      nextServiceDate: '',\n      odomenterReadingNextService: '',\n      additionalDetails: [],\n      serviceDateBegin: '',\n      serviceDateEnd: '',\n      nextServiceDateBegin: '',\n      nextServiceDateEnd: '',\n      sortBy: '',\n      sortOrder: AppSettings.SORTORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n\n    // Table Colums\n    this.cols = [\n      { field: 'vehicleName', header: 'Vehicle Name', sort: true },\n      { field: 'registrationNumber', header: 'Registration Number', sort: true },\n      { field: 'serviceDate', header: 'Service Date', sort: true },\n      { field: 'nextServiceDate', header: 'Next Service Date', sort: true },\n      { field: 'odometerReadingAtService', header: 'Odometer Reading At Service', sort: true },\n      { field: 'odomenterReadingNextService', header: 'Odometer Reading Next Service', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.vehicleServiceFilterView = modelTableComponent;\n    }\n    this.getAllVehicleService(this.vehicleServiceFilterView);\n\n    this.serviceHistoryForm = new FormGroup({\n      id: new FormControl(''),\n      vehicleId: new FormControl(''),\n      serviceDate: new FormControl('', [Validators.required]),\n      odometerReadingAtService: new FormControl(0,  [Validators.min(1), Validators.max(999999), Validators.pattern(Pattern.NUMBER_PATTERN)]),\n      odomenterReadingNextService: new FormControl(0,  [Validators.min(1), Validators.max(999999), Validators.pattern(Pattern.NUMBER_PATTERN)]),\n      nextServiceDate: new FormControl('', [Validators.required]),\n      additionalDetails: new FormControl('', [Validators.maxLength(200), Validators.pattern(Pattern.ALPHANUMERIC)]),\n      attachment: this._fb.group({\n        fileName: null,\n        fileValue: null,\n      }),\n    });\n\n    this.vehicleServiceView = {\n      vehicleId: this.vehicleId,\n      serviceDate: new Date(),\n      nextServiceDate: new Date(),\n      odometerReadingAtService: 0,\n      odomenterReadingNextService: 0,\n      additionalDetails: '',\n      attachment: this.attachmentInfo\n    };\n    this.attachmentInfo = {\n      fileName: '',\n      fileValue: ''\n    };\n    this.serviceVehicleView = {\n      id: '',\n      vehicleId: this.vehicleId,\n      serviceDate: new Date(),\n      nextServiceDate: new Date(),\n      odometerReadingAtService: 0,\n      odomenterReadingNextService: 0,\n      additionalDetails: '',\n      attachment: this.attachmentInfo\n    };\n    this.attachmentInfo = {\n      fileName: '',\n      fileValue: ''\n    };\n\n  }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngOnChanges(): void {\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.vehicleServiceFilterView = modelTableComponent;\n\n    }\n  }\n\n  onAddFormClick(): void {\n    this.updateButtonShow = false;\n    this.serviceValidate = false;\n    this.serviceHistoryForm.reset();\n    this.serviceForm.resetForm();\n    this.closeAddPanel = false;\n  }\n\n  getAllVehicleService(vehicleServiceFilterView: VehicleServiceFilterViewModel): void {\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.vehicleServiceFilterView = modelTableComponent;\n    }\n    this.vehicleServiceFilterView = vehicleServiceFilterView;\n    this.vehicleHistoryService.getAllServiceHistory(this.vehicleId, this.vehicleServiceFilterView.vehicleName, this.vehicleServiceFilterView.registrationNumber,\n      this.vehicleServiceFilterView.serviceDate,\n      this.vehicleServiceFilterView.odometerReadingAtService,\n      this.vehicleServiceFilterView.nextServiceDate,\n      this.vehicleServiceFilterView.odomenterReadingNextService,\n      this.vehicleServiceFilterView.additionalDetails,\n      this.vehicleServiceFilterView.serviceDateBegin,\n      this.vehicleServiceFilterView.serviceDateEnd,\n      this.vehicleServiceFilterView.nextServiceDateBegin,\n      this.vehicleServiceFilterView.nextServiceDateEnd, this.vehicleServiceFilterView.sortBy,\n      this.vehicleServiceFilterView.sortOrder,\n      this.vehicleServiceFilterView.pageNumber, this.vehicleServiceFilterView.pageSize).subscribe(res => {\n        this.getStudent(res);\n        this.dataLoaded = Promise.resolve(true);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n  // response of application categories\n  getStudent(data: any): void {\n    if (data.resultList == null) {\n      this.rows = [];\n    }\n    else {\n      this.rows = data.resultList.list;\n      this.totalItems = data.resultList.totalItems;\n\n    }\n    this.rows.forEach(e => {\n      e.operations = [\n        {\n          name: AppSettings.EDIT_OPERATION,\n          icon: AppSettings.EDIT,\n          operationName: AppSettings.EDIT\n\n        }, {\n          name: AppSettings.DELETE_OPERATION,\n          icon: AppSettings.DELETE,\n          operationName: AppSettings.DELETE\n        },\n        {\n          name: AppSettings.VIEW,\n          icon: AppSettings.DETAILS_ICON,\n          operationName: AppSettings.VIEW\n        }\n      ];\n      e.serviceDate = (e.serviceDate == null) ? null : this.commonService.customDateFormat(e.serviceDate, this.getSchoolDateFormat()).date;\n      e.nextServiceDate = (e.nextServiceDate == null) ? null : this.commonService.customDateFormat(e.nextServiceDate, this.getSchoolDateFormat()).date;\n    });\n    if (data.resultList) {\n      this.vehicleServiceFilterView.pageNumber = data.resultList.list.pageNumber;\n    }\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.vehicleServiceFilterView,\n      rows: this.rows,\n      componentName: this.currentComponent,\n      visibleSelectAll: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      pageCnt: this.pageCnt,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: AppSettings.NEW\n        },\n        infoButton: {\n          required: true,\n          text: 'Vehicle Service History'\n        },\n      },\n\n      filtersList: data.filters\n    };\n  }\n  // method for when click cancel panel it will open\n  closeAddForm(): void {\n    this.logoImgProp = {};\n    this.clearImages(true);\n    this.serviceValidate = false;\n    this.commonService.setOverlay(AppSettings.HIDE);\n    this.closeAddPanel = true;\n    this.serviceHistoryForm.reset();\n    this.serviceForm.resetForm();\n  }\n\n  // submit the data when we post the service vehicle history\n  onSubmit(serviceHistoryForm): void {\n    if (this.inSpectionDetails != null) {\n      serviceHistoryForm.value.id = this.inSpectionDetails.id;\n    }\n    if (serviceHistoryForm.invalid) {\n      this.serviceValidate = true;\n      return;\n    }\n    this.serviceValidate = false;\n    serviceHistoryForm.value.vehicleId = this.vehicleId;\n    serviceHistoryForm.value.inspectionDate = this.getFormattedDateByAPIPattern(serviceHistoryForm.value.inspectionDate);\n    serviceHistoryForm.value.nextInspectionDate = this.getFormattedDateByAPIPattern(serviceHistoryForm.value.nextInspectionDate);\n    if (serviceHistoryForm.value.id == null) {\n      this.vehicleServiceView = serviceHistoryForm.value;\n      this.vehicleHistoryService.createVehicleServiceHistory(this.vehicleServiceView).subscribe(res => this.serviceResponse(res), error => {\n        this.errorResponse(error);\n      });\n    }\n\n    else {\n      this.serviceVehicleView = serviceHistoryForm.value;\n      this.serviceVehicleView.id = this.inSpectionDetails.id;\n      this.vehicleHistoryService.vehicleServiceHistory(this.serviceVehicleView).subscribe(res => this.serviceResponse(res), error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n\n  serviceResponse(data): void {\n    this.inSpectionDetails = null;\n    this.clearImages(true);\n    if (data.statusCode === this.HttpStatus.OK) {\n      this.getAllVehicleService(this.vehicleServiceFilterView);\n      this.closeAddPanel = true;\n      this.clearImages(true);\n      this.serviceForm.resetForm();\n      this.serviceValidate = false;\n      this.flagImageProp = null;\n      this.updateButtonShow = false;\n    }\n    else {\n      this.closeAddPanel = false;\n    }\n    this.openSnackBar(data.messages.ResultMessage);\n  }\n\n\n  rowActions(data: any): void {\n    if (data.operation === AppSettings.DELETE) {\n      const dialogRef = this.dialogRef.open(CustomDialogComponent, {\n        disableClose: true,\n        data: {\n          text: this.commonService.getTranslation(AppSettings.WARNING_ON_SINGLE_DELETE),\n          action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES\n        },\n      });\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.vehicleHistoryService.deleteVehicleService(data.clickedRow.id).\n            subscribe(res => this.serviceResponse(res), error => {\n              this.errorResponse(error);\n            });\n        }\n      });\n    }\n    else if (data.operation === AppSettings.EDIT) {\n      this.updateButtonShow = true;\n      this.closeAddPanel = false;\n      this.vehicleHistoryService.getServiceHistory(data.clickedRow.id).subscribe(res => {\n        if (res.resultModel) {\n          this.inSpectionDetails = res.resultModel;\n          this.serviceHistoryForm.controls['serviceDate'].setValue(res.resultModel.serviceDate);\n          this.serviceHistoryForm.controls['nextServiceDate'].setValue(res.resultModel.nextServiceDate);\n          this.serviceHistoryForm.controls['odometerReadingAtService'].setValue(res.resultModel.odometerReadingAtService);\n          this.serviceHistoryForm.controls['odomenterReadingNextService'].setValue(res.resultModel.odomenterReadingNextService);\n          this.serviceHistoryForm.controls['additionalDetails'].setValue(res.resultModel.additionalDetails);\n          this.fileName = '';\n          if (res.resultModel.attachment !== null && res.resultModel.attachment !== undefined) {\n            this.fileName = res.resultModel.attachment.fileName;\n            this.logoImgProp = {\n              src: this.sanitizer.bypassSecurityTrustResourceUrl(this.storeService.getFilePath(res.resultModel.attachment.fileName))\n            };\n\n            this.storeService.storeFileEncryptByFileNameGet(res.resultModel.attachment.fileName)\n              .subscribe(result => {\n                if (result) {\n                  this.serviceHistoryForm.controls.attachment.value.fileName = result.fileNameWithExtension;\n                  this.serviceHistoryForm.controls.attachment.value.fileValue = result.value;\n                }\n              });\n\n            this.cd.detectChanges();\n          }\n        }\n      }, error => {\n        this.errorResponse(error);\n      });\n    }\n\n    else if (data.operation === (AppSettings.VIEW_ICON).toLowerCase()) {\n      if (data.clickedRow.attachment != null) {\n        this.nameImgProp = this.storeService.getFilePath(data.clickedRow.attachment.fileName);\n        window.open(this.nameImgProp);\n      }\n      else {\n        this.openSnackBar(AppSettings.NO_ATTACHMENTS_FOUND, true);\n        return;\n      }\n    }\n  }\n\n  clearImages(logo = false): void {\n    if (logo) {\n      this.logoImgProp = {};\n      this.fileName = '';\n      if (this.serviceHistoryForm.controls.attachment.value !== null) {\n        this.serviceHistoryForm.controls.attachment.value.fileName = null;\n        this.serviceHistoryForm.controls.attachment.value.fileValue = null;\n      }\n    }\n    this.cd.detectChanges();\n\n  }\n\n  imgChanged(event): void {\n    if (this.checkFileSize(event[0], AppSettings.TEXT_AND_IMAGE_FILE_EXTENSION, 2097152)) {\n      return;\n    }\n    if (event && event.length > 0) {\n\n      const reader = new FileReader();\n      const file = event[0];\n      reader.readAsDataURL(file);\n      let image;\n      image = new Image();\n      image.src = reader.result;\n      const that = this;\n\n      reader.onload = (_event) => {\n        that.serviceHistoryForm.controls.attachment.value.fileName = file.name;\n        that.serviceHistoryForm.controls.attachment.value.fileValue = ((<string>reader.result).split(',')[1]);\n        this.cd.detectChanges();\n      };\n      that.setFileProperties(image);\n    }\n  }\n\n  setFileProperties(image): void {\n    const data = {\n      src: this.sanitizer.bypassSecurityTrustResourceUrl(image.src),\n      width: image.width,\n      height: image.height\n    };\n\n    this.logoImgProp = {};\n    this.logoImgProp = data;\n    this.cd.detectChanges();\n  }\n}\n\n\n","/**\n * Transport\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent } from '@angular/common/http';\nimport { Configuration, BASE_PATH } from '../grading-service';\nimport { InspectionHistoryView } from 'app/modules/transportation/models/inspection-history-view';\nimport { Observable } from 'rxjs';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { InspectionHistoryViewModel } from 'app/modules/transportation/models/inspection-history-view-model';\nimport { BaseUrlConfig, ModuleConfig } from 'app/url.config';\n\n\n\n@Injectable()\nexport class VehicleInspectionHistoryService {\n\n   // protected basePath = 'http://localhost:8015';\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Transport;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(public commonComponent: CommonComponent,\n        protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Create inspection history\n     * \n     * @param inspectionHistoryView \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createVehicleInspectionHistory(inspectionHistoryView?: InspectionHistoryView, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/VehicleInspectionHistory/create-inspection-history`,\n            inspectionHistoryView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete inspection history based on VehicleInspectionHistoryId\n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteVehicleInspectionHistory(id?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteVehicleInspectionHistory(id?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteVehicleInspectionHistory(id?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteVehicleInspectionHistory(id?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/VehicleInspectionHistory/delete-inspection-history`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all inspection history based on SchoolId\n     * \n     * @param vehicleId Gets Or Sets\n     * @param vehicleNames VehicleNames\n     * @param regNumbers RegNumber\n     * @param inspectionFromDate Gets Or Sets\n     * @param inspectionToDate Gets Or Sets\n     * @param odometerReadingAtInspection Gets Or Sets\n     * @param odometerReadingNextInspection Gets Or Sets\n     * @param nextInspectionFromDate Gets Or Sets\n     * @param nextInspectionToDate Gets Or Sets\n     * @param sortBy Gets or Sets SortBy\n     * @param sortOrder Gets or Sets SortOrder\n     * @param pageNumber \n     * @param pageSize \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllVehicleInspectionHistory(vehicleId?: string, \n        vehicleName?: string, registrationNumber?: string, \n        inspectionFromDate?: Date, inspectionToDate?: Date, \n        odometerReadingAtInspection?: string, \n        odometerReadingNextInspection?: string, \n        nextInspectionFromDate?: Date, nextInspectionToDate?: Date, \n        sortBy?: string, sortOrder?: 0 | 1 | -1, pageNumber?: number, pageSize?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n\n        queryParameters = this.commonComponent.setQueryParams(vehicleId, 'VehicleId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(vehicleName, 'VehicleName', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(registrationNumber, 'RegistrationNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(inspectionFromDate, 'InspectionFromDate', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(inspectionToDate, 'InspectionToDate', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(odometerReadingAtInspection, 'OdometerReadingAtInspection', queryParameters);\n\n        queryParameters = this.commonComponent.setQueryParams(odometerReadingNextInspection, 'OdometerReadingNextInspection', queryParameters);\n\n        queryParameters = this.commonComponent.setQueryParams(nextInspectionFromDate, 'NextInspectionFromDate', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(nextInspectionToDate, 'NextInspectionToDate', queryParameters);\n\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/VehicleInspectionHistory/inspection-history-list`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get  inspection history based on SchoolId and VehicleId\n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVehicleInspectionHistory(id?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getVehicleInspectionHistory(id?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getVehicleInspectionHistory(id?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getVehicleInspectionHistory(id?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/VehicleInspectionHistory/inspection-history-by-id`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update  inspection history\n     * \n     * @param inspectionHistoryViewModel \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateVehicleInspectionHistory(inspectionHistoryViewModel?: InspectionHistoryViewModel, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}/VehicleInspectionHistory/update-inspection-history`,\n            inspectionHistoryViewModel,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n}\n","/**\n * Transport\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { BaseUrlConfig, ModuleConfig, TransportModuleConfig } from 'app/url.config';\nimport { Configuration, BASE_PATH } from '../grading-service';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { VehiclePollutionUpdateView } from 'app/modules/transportation/models/vehicle-pollution-update-view';\nimport { VehiclePollutionDataView } from 'app/modules/transportation/models/vehicle-pollution-data-view';\nimport { VehicleView } from 'app/modules/transportation/models/vehicle-view';\nimport { VehicleDetailsView } from 'app/modules/transportation/models/vehicle-details-view';\nimport { VehicleInsuranceViewModel } from 'app/modules/transportation/models/vehicle-Insurance-view-model';\nimport { VehicleInsuranceFilterViewModel } from 'app/modules/transportation/models/vehicle-Insurance-filter-view-model';\n\n\n\n@Injectable()\nexport class VehicleInventoryService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Transport;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(private commonComponent: CommonComponent,\n        protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Get all Vehicles based on SchoolId\n     * \n     * @param vehicleName Gets or Sets VehicleName\n     * @param vehicleModel Gets or Sets VehicleModel\n     * @param registrationNumber Gets or Sets RegistrationNumber\n     * @param maxCapacity Gets or Sets MaxCapacity\n     * @param status Gets or Sets Status\n     * @param sortBy Gets or Sets SortBy\n     * @param sortOrder Gets or Sets SortOrder\n     * @param pageNumber \n     * @param pageSize \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllVehicles(vehicleName?: Array<string>, vehicleModel?: Array<string>, registrationNumber?: Array<string>, maxCapacity?: Array<string>,\n        status?: Array<string>, sortBy?: string, sortOrder?: 0 | 1 | -1, pageNumber?: number, pageSize?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getAllVehicles(vehicleName?: Array<string>, vehicleModel?: Array<string>, registrationNumber?: Array<string>, maxCapacity?: Array<string>,\n        status?: Array<string>, sortBy?: string, sortOrder?: 0 | 1 | -1, pageNumber?: number, pageSize?: number,\n        observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getAllVehicles(vehicleName?: Array<string>, vehicleModel?: Array<string>, registrationNumber?: Array<string>, maxCapacity?: Array<string>,\n        status?: Array<string>, sortBy?: string, sortOrder?: 0 | 1 | -1, pageNumber?: number, pageSize?: number,\n        observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getAllVehicles(vehicleName?: Array<string>, vehicleModel?: Array<string>, registrationNumber?: Array<string>, maxCapacity?: Array<string>,\n        status?: Array<string>, sortBy?: string, sortOrder?: 0 | 1 | -1, pageNumber?: number, pageSize?: number,\n        observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n\n        queryParameters = this.commonComponent.setQueryParams(vehicleName, 'VehicleName', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(vehicleModel, 'VehicleModel', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(registrationNumber, 'RegistrationNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(maxCapacity, 'MaxCapacity', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(status, 'Status', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        return this.httpClient.get<any>(`${this.basePath}` + TransportModuleConfig._Transport_All_Vehicles,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n* Add Vehicle\n* \n* @param vehicleView \n* @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n* @param reportProgress flag to report request and response progress.\n*/\n\n    public createVehicle(vehicleView?: VehicleView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n\n        return this.httpClient.post<any>(`${this.basePath}` + TransportModuleConfig._Vehicle_Inventory,\n\n            vehicleView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n    /**\n    * Get Vehicle based on SchoolId,Id\n    * \n    * @param id \n    * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n    * @param reportProgress flag to report request and response progress.\n    */\n\n    public getVehicle(id: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getVehicle.');\n        }\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + TransportModuleConfig._Vehicle_Inventory,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n    * Update Vehicle\n    * \n    * @param vehicleDetailsView \n    * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n    * @param reportProgress flag to report request and response progress.\n    */\n\n    public updateVehicle(vehicleDetailsView?: VehicleDetailsView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` + TransportModuleConfig._Vehicle_Inventory,\n            vehicleDetailsView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n   * Get all Vehicle Pollution Check History\n   * \n   * @param vehicleId Gets Or Sets\n   * @param pollutionCheckDateBegin Gets Or Sets\n   * @param pollutionCheckDateEnd Gets Or Sets\n   * @param pollutionCheckExpiryDateBegin Gets Or Sets\n   * @param pollutionCheckExpiryDateEnd Gets Or Sets\n   * @param sortBy Gets or Sets SortBy\n   * @param sortOrder Gets or Sets SortOrder\n   * @param pageNumber \n   * @param pageSize \n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n    public fetchVehiclePollutionCheckHistory(vehicleId?: string, pollutionCheckDateBegin?: Date,\n        pollutionCheckDateEnd?: Date, pollutionCheckExpiryDateBegin?: Date,\n        pollutionCheckExpiryDateEnd?: Date, sortBy?: string, sortOrder?: 0 | 1 | -1,\n        pageNumber?: number, pageSize?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchVehiclePollutionCheckHistory(vehicleId?: string, pollutionCheckDateBegin?: Date,\n        pollutionCheckDateEnd?: Date, pollutionCheckExpiryDateBegin?: Date,\n        pollutionCheckExpiryDateEnd?: Date, sortBy?: string, sortOrder?: 0 | 1 | -1,\n        pageNumber?: number, pageSize?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchVehiclePollutionCheckHistory(vehicleId?: string, pollutionCheckDateBegin?: Date,\n        pollutionCheckDateEnd?: Date, pollutionCheckExpiryDateBegin?: Date,\n        pollutionCheckExpiryDateEnd?: Date, sortBy?: string, sortOrder?: 0 | 1 | -1,\n        pageNumber?: number, pageSize?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchVehiclePollutionCheckHistory(vehicleId?: string, pollutionCheckDateBegin?: Date,\n        pollutionCheckDateEnd?: Date, pollutionCheckExpiryDateBegin?: Date,\n        pollutionCheckExpiryDateEnd?: Date, sortBy?: string, sortOrder?: 0 | 1 | -1,\n        pageNumber?: number, pageSize?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n\n        queryParameters = this.commonComponent.setQueryParams(vehicleId, 'VehicleId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pollutionCheckDateBegin, 'PollutionCheckDateBegin', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pollutionCheckDateEnd, 'PollutionCheckDateEnd', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pollutionCheckExpiryDateBegin, 'PollutionCheckExpiryDateBegin', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pollutionCheckExpiryDateEnd, 'PollutionCheckExpiryDateEnd', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + TransportModuleConfig._Transport_Vehicle_Pollution_History,\n\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n   * Get Vehicle Pollution Check History\n   * \n   * @param authorization access token\n   * @param id \n   * @param schoolId SchoolId in Encrypted Form\n   * @param instituteId InstituteId in Encrypted Form\n   * @param userId UserId in Encrypted Form\n   * @param academicSessionId AcademicSessionId in Encrypted Form \n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n    public getVehiclePollutionCheck(id?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getVehiclePollutionCheck(id?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getVehiclePollutionCheck(id?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getVehiclePollutionCheck(id?: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + TransportModuleConfig._Transport_Vehicle_Pollution_History_By_Id,\n\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n    * Update Pollution Check History\n    * \n    * @param authorization access token\n    * @param model \n    * @param schoolId SchoolId in Encrypted Form\n    * @param instituteId InstituteId in Encrypted Form\n    * @param userId UserId in Encrypted Form\n    * @param academicSessionId AcademicSessionId in Encrypted Form \n    * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n    * @param reportProgress flag to report request and response progress.\n    */\n    public updateVehiclePollutionCheck(model?: VehiclePollutionUpdateView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateVehiclePollutionCheck(model?: VehiclePollutionUpdateView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateVehiclePollutionCheck(model?: VehiclePollutionUpdateView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateVehiclePollutionCheck(model?: VehiclePollutionUpdateView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` + TransportModuleConfig._Transport_Vehicle_Pollution_Check,\n\n            model,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n    * Create Vehile Pollution Check History\n    * \n    * @param authorization access token\n    * @param vehiclePollutionDataView \n    * @param schoolId SchoolId in Encrypted Form\n    * @param instituteId InstituteId in Encrypted Form\n    * @param userId UserId in Encrypted Form\n    * @param academicSessionId AcademicSessionId in Encrypted Form \n    * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n    * @param reportProgress flag to report request and response progress.\n    */\n    public vehilePollutionCheck(vehiclePollutionDataView?: VehiclePollutionDataView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public vehilePollutionCheck(vehiclePollutionDataView?: VehiclePollutionDataView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public vehilePollutionCheck(vehiclePollutionDataView?: VehiclePollutionDataView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public vehilePollutionCheck(vehiclePollutionDataView?: VehiclePollutionDataView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + TransportModuleConfig._Transport_Vehicle_Pollution_Check,\n\n            vehiclePollutionDataView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete Vehicle Pollution Check History\n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteVehiclePollutionCheck(id?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteVehiclePollutionCheck(id?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteVehiclePollutionCheck(id?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteVehiclePollutionCheck(id?: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}` + TransportModuleConfig._Transport_Vehicle_Pollution_Check,\n\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n * Vehicle Insurances list\n * @param model\n * @param pageSize \n * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n * @param reportProgress flag to report request and response progress.\n */\n\n    public vehicleInsurances(model: VehicleInsuranceFilterViewModel, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public vehicleInsurances(model: VehicleInsuranceFilterViewModel, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public vehicleInsurances(model: VehicleInsuranceFilterViewModel, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public vehicleInsurances(model: VehicleInsuranceFilterViewModel, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n\n        queryParameters = this.commonComponent.setQueryParamsWithModel(model, queryParameters);\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        let headers = this.defaultHeaders;\n\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        return this.httpClient.get<any>(`${this.basePath}` + TransportModuleConfig._Transport_Vehicle_Insurance_List,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n   * Update Vehicle Insurance\n   * \n   * @param model \n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n    public updateVehicleInsurance(model?: VehicleInsuranceViewModel, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateVehicleInsurance(model?: VehicleInsuranceViewModel, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateVehicleInsurance(model?: VehicleInsuranceViewModel, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateVehicleInsurance(model?: VehicleInsuranceViewModel, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` + TransportModuleConfig._Transport_Vehicle_Insurance,\n            model,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n\n    /**\n     * Get Vehicle Insurance By Id\n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getVehicleInsurance(id?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getVehicleInsurance(id?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getVehicleInsurance(id?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getVehicleInsurance(id?: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        let headers = this.defaultHeaders;\n\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        return this.httpClient.get<any>(`${this.basePath}` + TransportModuleConfig._Transport_Vehicle_Insurance_By_Id,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n\n    /**\n     * Create Vehicle Insurances\n     *\n     * @param model \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createVehicleInsurances(model?: VehicleInsuranceViewModel, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createVehicleInsurances(model?: VehicleInsuranceViewModel, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createVehicleInsurances(model?: VehicleInsuranceViewModel, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createVehicleInsurances(model?: VehicleInsuranceViewModel, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + TransportModuleConfig._Transport_Vehicle_Insurance,\n            model,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete Vehicle Insurance\n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteVehicleInsurance(id?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteVehicleInsurance(id?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteVehicleInsurance(id?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteVehicleInsurance(id?: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        return this.httpClient.delete<any>(`${this.basePath}` + TransportModuleConfig._Transport_Vehicle_Insurance,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n}\n","/**\n * Transport\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\nimport { Configuration, BASE_PATH } from '../grading-service';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { ServiceVehicleView } from '../../modules/transportation/models/service-vehicle-view';\nimport { VehicleServiceView } from '../../modules/transportation/models/vehicle-service-view';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { BaseUrlConfig, ModuleConfig, TransportModuleConfig } from 'app/url.config';\n\n\n\n\n@Injectable()\nexport class VehicleServiceHistroyService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Transport;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(private commonComponent: CommonComponent,\n        protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n       if (basePath) {\n           this.basePath = basePath;\n       }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * create vehicle service history for school\n     * \n     * @param authorization access token\n     * @param vehicleServiceView \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createVehicleServiceHistory(vehicleServiceView?: VehicleServiceView, schoolId?: string, instituteId?: string, \n        userId?: string, academicSessionId?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createVehicleServiceHistory(vehicleServiceView?: VehicleServiceView, schoolId?: string, instituteId?: string,\n         userId?: string, academicSessionId?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createVehicleServiceHistory(vehicleServiceView?: VehicleServiceView, schoolId?: string, instituteId?: string, \n        userId?: string, academicSessionId?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createVehicleServiceHistory(vehicleServiceView?: VehicleServiceView, schoolId?: string, instituteId?: string,\n         userId?: string, academicSessionId?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n    \n        let headers = this.defaultHeaders;\n        if (schoolId !== undefined && schoolId !== null) {\n            headers = headers.set('SchoolId', String(schoolId));\n        }\n        if (instituteId !== undefined && instituteId !== null) {\n            headers = headers.set('InstituteId', String(instituteId));\n        }\n        if (userId !== undefined && userId !== null) {\n            headers = headers.set('UserId', String(userId));\n        }\n        if (academicSessionId !== undefined && academicSessionId !== null) {\n            headers = headers.set('AcademicSessionId', String(academicSessionId));\n        }\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + TransportModuleConfig._VehicleServiceHistroy_Create,\n            vehicleServiceView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Delete vehicle service\n     * \n     * @param authorization access token\n     * @param id \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteVehicleService(id?: string, schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string,\n         observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteVehicleService(id?: string, schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string,\n         observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteVehicleService(id?: string, schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string,\n         observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteVehicleService(id?: string, schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string,\n         observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n      \n        if (schoolId !== undefined && schoolId !== null) {\n            headers = headers.set('SchoolId', String(schoolId));\n        }\n        if (instituteId !== undefined && instituteId !== null) {\n            headers = headers.set('InstituteId', String(instituteId));\n        }\n        if (userId !== undefined && userId !== null) {\n            headers = headers.set('UserId', String(userId));\n        }\n        if (academicSessionId !== undefined && academicSessionId !== null) {\n            headers = headers.set('AcademicSessionId', String(academicSessionId));\n        }\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}` + TransportModuleConfig._VehicleServiceHistroy_Delete,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * get all details of vehicle service history\n     * \n     * @param vehicleId Gets Or Sets\n     * @param vehicleNames Gets Or Sets\n     * @param regNumbers Gets Or Sets\n     * @param serviceDate Gets Or Sets\n     * @param odometerReadingAtService Gets Or Sets\n     * @param nextServiceDate Gets Or Sets\n     * @param odomenterReadingNextService Gets Or Sets\n     * @param additionalDetails Gets Or Sets\n     * @param serviceDateBegin Gets or Sets ServiceDateBegin\n     * @param serviceDateEnd Gets or Sets ServiceDateEnd\n     * @param nextServiceDateBegin Gets or Sets NextServiceDateBegin\n     * @param nextServiceDateEnd Gets or Sets NextServiceDateEnd\n     * @param sortBy Gets or Sets SortBy\n     * @param sortOrder Gets or Sets SortOrder\n     * @param pageNumber \n     * @param pageSize \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllServiceHistory(vehicleId?: string, vehicleName?: Array<string>, registrationNumber?: Array<string>, serviceDate?: Date,\n         odometerReadingAtService?: Array<string>, nextServiceDate?: Date, odomenterReadingNextService?: Array<string>,\n          additionalDetails?: Array<string>,\n           serviceDateBegin?: Date, serviceDateEnd?: Date, nextServiceDateBegin?: Date, nextServiceDateEnd?: Date,\n            sortBy?: string, sortOrder?: 0 | 1 | -1, pageNumber?: number, pageSize?: number, \n            schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getAllServiceHistory(vehicleId?: string, vehicleName?: Array<string>,\n        registrationNumber?: Array<string>, serviceDate?: Date, odometerReadingAtService?: Array<string>, nextServiceDate?: Date,\n          odomenterReadingNextService?: Array<string>, additionalDetails?: Array<string>, serviceDateBegin?: Date,\n           serviceDateEnd?: Date, nextServiceDateBegin?: Date, nextServiceDateEnd?: Date, sortBy?: string, sortOrder?: 0 | 1 | -1,\n            pageNumber?: number, pageSize?: number, schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string, \n            observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getAllServiceHistory(vehicleId?: string, vehicleName?: Array<string>, registrationNumber?: Array<string>, serviceDate?: Date,\n         odometerReadingAtService?: Array<string>, nextServiceDate?: Date, odomenterReadingNextService?: Array<string>,\n          additionalDetails?: Array<string>, serviceDateBegin?: Date, serviceDateEnd?: Date, nextServiceDateBegin?: Date,\n           nextServiceDateEnd?: Date, sortBy?: string, sortOrder?: 0 | 1 | -1, pageNumber?: number, pageSize?: number,\n            schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getAllServiceHistory(vehicleId?: string, vehicleName?: Array<string>, registrationNumber?: Array<string>, serviceDate?: Date, \n        odometerReadingAtService?: Array<string>, nextServiceDate?: Date, odomenterReadingNextService?: Array<string>, \n        additionalDetails?: Array<string>, serviceDateBegin?: Date, serviceDateEnd?: Date, nextServiceDateBegin?: Date,\n         nextServiceDateEnd?: Date, sortBy?: string, sortOrder?: 0 | 1 | -1, pageNumber?: number, pageSize?: number, \n         schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n\n        queryParameters = this.commonComponent.setQueryParams(vehicleId, 'VehicleId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(vehicleName, 'VehicleName', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(registrationNumber, 'RegistrationNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(serviceDate, 'ServiceDate', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(odometerReadingAtService, 'OdometerReadingAtService', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(nextServiceDate, 'NextServiceDate', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(odomenterReadingNextService, 'OdomenterReadingNextService', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(additionalDetails, 'AdditionalDetails', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(serviceDateBegin, 'ServiceDateBegin', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(serviceDateEnd, 'ServiceDateEnd', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(nextServiceDateBegin, 'NextServiceDateBegin', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(nextServiceDateEnd, 'NextServiceDateEnd', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n\n        let headers = this.defaultHeaders;\n\n        if (schoolId !== undefined && schoolId !== null) {\n            headers = headers.set('SchoolId', String(schoolId));\n        }\n        if (instituteId !== undefined && instituteId !== null) {\n            headers = headers.set('InstituteId', String(instituteId));\n        }\n        if (userId !== undefined && userId !== null) {\n            headers = headers.set('UserId', String(userId));\n        }\n        if (academicSessionId !== undefined && academicSessionId !== null) {\n            headers = headers.set('AcademicSessionId', String(academicSessionId));\n        }\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + TransportModuleConfig._VehicleServiceHistroy_All_Details,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * get vehicle service history by Id\n     * \n     * @param authorization access token\n     * @param id \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getServiceHistory(id?: string, schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string, \n        observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getServiceHistory(id?: string, schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string,\n         observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getServiceHistory(id?: string, schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string,\n         observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getServiceHistory( id?: string, schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string, \n        observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n        if (schoolId !== undefined && schoolId !== null) {\n            headers = headers.set('SchoolId', String(schoolId));\n        }\n        if (instituteId !== undefined && instituteId !== null) {\n            headers = headers.set('InstituteId', String(instituteId));\n        }\n        if (userId !== undefined && userId !== null) {\n            headers = headers.set('UserId', String(userId));\n        }\n        if (academicSessionId !== undefined && academicSessionId !== null) {\n            headers = headers.set('AcademicSessionId', String(academicSessionId));\n        }\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + TransportModuleConfig._VehicleServiceHistroy_Details,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * update vehicle service history based on  school\n     * \n     * @param serviceVehicleView \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public vehicleServiceHistory(serviceVehicleView?: ServiceVehicleView, schoolId?: string, instituteId?: string, userId?: string, \n        academicSessionId?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public vehicleServiceHistory(serviceVehicleView?: ServiceVehicleView, schoolId?: string, instituteId?: string, userId?: string, \n        academicSessionId?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public vehicleServiceHistory(serviceVehicleView?: ServiceVehicleView, schoolId?: string, instituteId?: string, userId?: string,\n         academicSessionId?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public vehicleServiceHistory(serviceVehicleView?: ServiceVehicleView, schoolId?: string, instituteId?: string, userId?: string, \n        academicSessionId?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n        if (schoolId !== undefined && schoolId !== null) {\n            headers = headers.set('SchoolId', String(schoolId));\n        }\n        if (instituteId !== undefined && instituteId !== null) {\n            headers = headers.set('InstituteId', String(instituteId));\n        }\n        if (userId !== undefined && userId !== null) {\n            headers = headers.set('UserId', String(userId));\n        }\n        if (academicSessionId !== undefined && academicSessionId !== null) {\n            headers = headers.set('AcademicSessionId', String(academicSessionId));\n        }\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` + TransportModuleConfig._VehicleServiceHistroy_Update,\n            serviceVehicleView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n"],"sourceRoot":""}