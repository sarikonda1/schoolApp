{"version":3,"sources":["webpack:///./src/app/modules/staff/staff-information-system/teacher-schedule/teacher-schedule.component.html","webpack:///./src/app/modules/staff/staff-information-system/teacher-schedule/teacher-schedule.component.scss","webpack:///./src/app/modules/staff/staff-information-system/teacher-schedule/teacher-schedule.component.ts","webpack:///./src/app/service/staff-information-system/teachers-schedules.service.ts","webpack:///./src/app/service/staff/staff-leave-request-service.ts","webpack:///./src/app/service/staff/staffCommon.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+GAA+G,+DAA+D,g7BAAg7B,oBAAoB,ujBAAujB,iBAAiB,0BAA0B,iBAAiB,6vDAA6vD,qBAAqB,uDAAuD,uBAAuB,uDAAuD,iBAAiB,uDAAuD,sBAAsB,6EAA6E,0BAA0B,mMAAmM,kBAAkB,UAAU,0NAA0N,+BAA+B,ggBAAggB,wNAAwN,kBAAkB,qSAAqS,wPAAwP,kBAAkB,mGAAmG,8BAA8B,qBAAqB,2BAA2B,iHAAiH,iBAAiB,kBAAkB,mBAAmB,0DAA0D,kBAAkB,uF;;;;;;;;;;;ACAt9L,6CAA6C,gCAAgC,4BAA4B,kBAAkB,EAAE,eAAe,iBAAiB,EAAE,aAAa,iBAAiB,EAAE,oBAAoB,qBAAqB,sBAAsB,EAAE,6BAA6B,+BAA+B,uBAAuB,gBAAgB,iBAAiB,EAAE,kBAAkB,kCAAkC,EAAE,+CAA+C,+4C;;;;;;;;;;;;;;;;;;;;;;;ACAza;AACmB;AACsC;AAChC;AACzB;AACS;AACX;AAShD;IAA8C,kFAAe;IAe3D,kCAAmB,wBAAkD,EAAU,kBAAsC,EAC3G,aAA4B,EAAS,QAAqB;QADpE,YACwE,iBAAO,SAAG;QAD/D,8BAAwB,GAAxB,wBAAwB,CAA0B;QAAU,wBAAkB,GAAlB,kBAAkB,CAAoB;QAC3G,mBAAa,GAAb,aAAa,CAAe;QAAS,cAAQ,GAAR,QAAQ,CAAa;QAdpE,cAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAM/B,cAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAElC,kBAAY,GAAG,KAAK,CAAC;QACrB,sBAAgB,GAAG,EAAE,CAAC;;IAK2D,CAAC;IAElF,2CAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,cAAc,EAAE,CAAC;IAExB,CAAC;IAED,iDAAc,GAAd;QACE,IAAI,CAAC,gBAAgB,GAAG;YACtB,gBAAgB,EAAE,EAAE;YACpB,aAAa,EAAE,EAAE;SAClB,CAAC;QAEF,IAAI,CAAC,eAAe,GAAG;YACrB,mBAAmB,EAAE,EAAE;YACvB,kBAAkB,EAAE,EAAE;YACtB,aAAa,EAAE,CAAC;SACjB,CAAC;IACJ,CAAC;IAED,8CAAW,GAAX;QAAA,iBAIC;QAHC,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAxB,CAAwB,EAAE,eAAK;YACnG,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAS,GAAT,UAAU,SAAqB;QAC7B,IAAM,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC;YACvC,KAAK,EAAE,CAAC,CAAC,IAAI;YACb,KAAK,EAAE,CAAC,CAAC,EAAE;SACZ,CAAC,EAHsC,CAGtC,CAAC,CAAC;QACJ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;IAChD,CAAC;IAED,oDAAiB,GAAjB,UAAkB,SAAiB;QAAnC,iBAaC;QAZC,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;QAC/B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAC;YACnC,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAnC,CAAmC,EAAE,eAAK;gBAC/H,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;SACJ;aACI;YACH,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC1B;IAEH,CAAC;IAED,uDAAoB,GAApB,UAAqB,QAAa;QAChC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QACjC,IAAI,IAAI,CAAC,gBAAgB,CAAC,aAAa,IAAI,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,EAAE;YACrF,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC;gBAClF,KAAK,EAAE,CAAC,CAAC,IAAI;gBACb,KAAK,EAAE,CAAC,CAAC,EAAE;aACZ,CAAC,EAHiF,CAGjF,CAAC,CAAC;YACJ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YAC/E,IAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACrE,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;YACxC,IAAI,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;SAC1C;IACH,CAAC;IAED,qDAAkB,GAAlB,UAAmB,UAAkB;QAArC,iBAeC;QAdC,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,IAAI,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAC,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,eAAe,GAAG,QAAQ,EAA/B,CAA+B,EACxI,eAAK;gBACH,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;SACN;aACI;YACH,IAAI,CAAC,eAAe,GAAG;gBACrB,mBAAmB,EAAE,EAAE;gBACvB,kBAAkB,EAAE,EAAE;gBACtB,aAAa,EAAE,CAAC;aACjB,CAAC;SACH;IAEH,CAAC;IAhGU,wBAAwB;QAPpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,2KAAgD;YAEhD,UAAU,EAAE,CAAC,+DAAc,CAAC;YAC5B,SAAS,EAAE,CAAC,wHAAwB,CAAC;;SACtC,CAAC;+EAgB6C,wHAAwB,EAA8B,wFAAkB;YAC5F,wEAAa,EAAmB,6DAAW;OAhBzD,wBAAwB,CAiGpC;IAAD,+BAAC;CAAA,CAjG6C,kFAAe,GAiG5D;AAjGoC;;;;;;;;;;;;;;;;;;;;;;;;ACfwB;AAEE;AAGT;AACR;AACuB;AACR;AACA;AAG7D;IAMI,kCAAsB,UAAsB,EAAgC,QAAgB,EAC/E,aAA4B,EAAU,eAAgC;QAD7D,eAAU,GAAV,UAAU,CAAY;QACO,oBAAe,GAAf,eAAe,CAAiB;QALzE,aAAQ,GAAG,4DAAa,CAAC,QAAQ,GAAG,2DAAY,CAAC,OAAO,CAAC;QAC5D,mBAAc,GAAG,IAAI,gEAAW,EAAE,CAAC;QACnC,kBAAa,GAAG,IAAI,iEAAa,EAAE,CAAC;QAIvC,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;QACD,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,aAAa,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;SACvE;IACL,CAAC;IAED;;;OAGG;IACK,iDAAc,GAAtB,UAAuB,QAAkB;QACrC,IAAM,IAAI,GAAG,qBAAqB,CAAC;QACnC,KAAsB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE;YAA3B,IAAM,OAAO;YACd,IAAI,IAAI,KAAK,OAAO,EAAE;gBAClB,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAmBM,qDAAkB,GAAzB,UAA0B,SAAkB,EAAE,WAAoB,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAEtH,IAAI,eAAe,GAAG,IAAI,+DAAU,CAAC,EAAC,OAAO,EAAE,IAAI,wEAA0B,EAAE,EAAC,CAAC,CAAC;QAElF,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,SAAS,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;QAC/F,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,WAAW,EAAE,aAAa,EAAE,eAAe,CAAC,CAAC;QAEnG,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa,EAC1B,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,wCAAqC,EACjF;YACI,MAAM,EAAE,eAAe;YACvB,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAiBM,0DAAuB,GAA9B,UAA+B,EAAW,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAE9F,IAAI,eAAe,GAAG,IAAI,+DAAU,CAAC,EAAC,OAAO,EAAE,IAAI,wEAA0B,EAAE,EAAC,CAAC,CAAC;QAC9E,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,EAAE,IAAI,EAAE,eAAe,CAAC,CAAC;QAErF,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa,EAC1B,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,kDAA+C,EAC3F;YACI,MAAM,EAAE,eAAe;YACvB,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IA3HQ,wBAAwB;QADpC,gEAAU,EAAE;QAOsC,+GAAQ,EAAE,GAAC,6GAAM,CAAC,yDAAS,CAAC;QACzE,+GAAQ,EAAE;+EADsB,+DAAU,UAChB,iEAAa,EAA2B,kFAAe;OAP1E,wBAAwB,CA6HpC;IAAD,+BAAC;CAAA;AA7HoC;;;;;;;;;;;;;ACZrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AACH,uDAAuD;;AAEM;AAI/B;AAEwB;AACR;AACe;AACU;AACQ;AAK/E;IAOI,kCAAsB,UAAsB,EAC5C,QAAgB,EAAc,aAA4B,EAAU,eAAgC;QAD9E,eAAU,GAAV,UAAU,CAAY;QACwB,oBAAe,GAAf,eAAe,CAAiB;QAN1F,aAAQ,GAAG,4DAAa,CAAC,QAAQ,GAAG,2DAAY,CAAC,OAAO,CAAC;QACnE,gDAAgD;QACzC,mBAAc,GAAG,IAAI,gEAAW,EAAE,CAAC;QACnC,kBAAa,GAAG,IAAI,iEAAa,EAAE,CAAC;QAIvC,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;QACD,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,aAAa,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;SACvE;IACL,CAAC;IAED;;;OAGG;IACK,iDAAc,GAAtB,UAAuB,QAAkB;QACrC,IAAM,IAAI,GAAG,qBAAqB,CAAC;QACnC,KAAsB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE;YAA3B,IAAM,OAAO;YACd,IAAI,IAAI,KAAK,OAAO,EAAE;gBAClB,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAeM,yDAAsB,GAA7B,UAA8B,cAAuB,EAAE,OAAgB,EAAE,eAAyB,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAEtJ,IAAI,eAAe,GAAG,IAAI,+DAAU,CAAC,EAAE,OAAO,EAAE,IAAI,wEAA0B,EAAE,EAAE,CAAC,CAAC;QACpF,IAAI,cAAc,KAAK,SAAS,IAAI,cAAc,KAAK,IAAI,EAAE;YACzD,eAAe,GAAG,eAAe,CAAC,GAAG,CAAC,gBAAgB,EAAO,cAAc,CAAC,CAAC;SAChF;QACD,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,IAAI,EAAE;YAC3C,eAAe,GAAG,eAAe,CAAC,GAAG,CAAC,SAAS,EAAO,OAAO,CAAC,CAAC;SAClE;QACD,IAAI,eAAe,KAAK,SAAS,IAAI,eAAe,KAAK,IAAI,EAAE;YAC3D,eAAe,GAAG,eAAe,CAAC,GAAG,CAAC,iBAAiB,EAAO,eAAe,CAAC,CAAC;SAClF;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa,EAC1B,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,KAAG,IAAI,CAAC,QAAU,GAAG,+DAAgB,CAAC,2BAA2B,EAC7F,IAAI,EACJ;YACI,MAAM,EAAE,eAAe;YACvB,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAWM,0DAAuB,GAA9B,UAA+B,iBAA8C,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAEjI,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa;YACvB,6BAA6B;YAC7B,kBAAkB;YAClB,WAAW;YACX,qBAAqB;SACxB,CAAC;QACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAM,KAAG,IAAI,CAAC,QAAU,GAAG,+DAAgB,CAAC,mBAAmB,EACtF,iBAAiB,EACjB;YACI,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IA6BM,0DAAuB,GAA9B,UAA+B,MAAe,EAAE,SAAsB,EAAE,UAA0B,EAAE,UAA0B,EAC1H,OAAuB,EAAE,QAAwB,EAAE,oBAA6B,EAAE,kBAA2B,EAAE,kBAA2B,EAC1I,gBAAyB,EAAE,UAAmB,EAAE,QAAiB,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAGzH,IAAI,eAAe,GAAG,IAAI,+DAAU,CAAC,EAAE,OAAO,EAAE,IAAI,wEAA0B,EAAE,EAAE,CAAC,CAAC;QAEpF,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,UAAU,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;QACjG,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,UAAU,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;QACjG,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,OAAO,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;QAC3F,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,EAAE,eAAe,CAAC,CAAC;QAC7F,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,oBAAoB,EAAE,sBAAsB,EAAE,eAAe,CAAC,CAAC;QACrH,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,kBAAkB,EAAE,oBAAoB,EAAE,eAAe,CAAC,CAAC;QACjH,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,kBAAkB,EAAE,oBAAoB,EAAE,eAAe,CAAC,CAAC;QACjH,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,gBAAgB,EAAE,kBAAkB,EAAE,eAAe,CAAC,CAAC;QAC7G,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,SAAS,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;QAC/F,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,MAAM,EAAE,QAAQ,EAAE,eAAe,CAAC,CAAC;QACzF,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,UAAU,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;QACjG,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,EAAE,eAAe,CAAC,CAAC;QAE7F,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa,EAC1B,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,KAAG,IAAI,CAAC,QAAU,GAAG,+DAAgB,CAAC,mBAAmB,EACrF;YACI,MAAM,EAAE,eAAe;YACvB,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAtMQ,wBAAwB;QADpC,gEAAU,EAAE;QAQsC,+GAAQ,EAAE,GAAE,6GAAM,CAAC,yDAAS,CAAC;QACzD,+GAAQ,EAAE;+EADK,+DAAU,UACC,iEAAa,EAA2B,+EAAe;OAR3F,wBAAwB,CAwMpC;IAAD,+BAAC;CAAA;AAxMoC;;;;;;;;;;;;;AC5BrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AACH,uDAAuD;;AAEM;AAEE;AAGF;AACf;AACQ;AAC2B;AAGjF;IAMI,4BAAsB,UAAsB,EAAgC,QAAgB,EAAc,aAA4B;QAAhH,eAAU,GAAV,UAAU,CAAY;QAJlC,aAAQ,GAAG,yDAAa,CAAC,QAAQ,GAAG,wDAAY,CAAC,OAAO,CAAC;QAC5D,mBAAc,GAAG,IAAI,gEAAW,EAAE,CAAC;QACnC,kBAAa,GAAG,IAAI,iEAAa,EAAE,CAAC;QAGvC,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;QACD,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,aAAa,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;SACvE;IACL,CAAC;IAED;;;OAGG;IACK,2CAAc,GAAtB,UAAuB,QAAkB;QACrC,IAAM,IAAI,GAAG,qBAAqB,CAAC;QACnC,KAAsB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE;YAA3B,IAAM,OAAO;YACd,IAAI,IAAI,KAAK,OAAO,EAAE;gBAClB,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAiBM,4CAAe,GAAtB,UAAuB,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAEzE,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAGlC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa,EAC1B,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,KAAG,IAAI,CAAC,QAAU,GAAG,4DAAgB,CAAC,YAAY,EAC9E;YACI,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAiBM,wCAAW,GAAlB,UAAmB,aAAsB,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAG7F,IAAI,eAAe,GAAG,IAAI,+DAAU,CAAC,EAAC,OAAO,EAAE,IAAI,wEAA0B,EAAE,EAAC,CAAC,CAAC;QAClF,IAAI,aAAa,KAAK,SAAS,IAAI,aAAa,KAAK,IAAI,EAAE;YACvD,eAAe,GAAG,eAAe,CAAC,GAAG,CAAC,eAAe,EAAO,aAAa,CAAC,CAAC;SAC9E;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa,EAC1B,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAM,KAAG,IAAI,CAAC,QAAU,GAAG,4DAAgB,CAAC,oBAAoB,EACtF;YACI,MAAM,EAAE,eAAe;YACvB,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAtHQ,kBAAkB;QAD9B,gEAAU,EAAE;QAOsC,+GAAQ,EAAE,GAAC,6GAAM,CAAC,yDAAS,CAAC,GAAoB,+GAAQ,EAAE;+EAAvE,+DAAU,UAA6E,iEAAa;OAN7H,kBAAkB,CAwH9B;IAAD,yBAAC;CAAA;AAxH8B","file":"default~app-modules-staff-staff-information-system-staff-information-system-module~app-modules-staff~5ac3da42.js","sourcesContent":["module.exports = \"<div class=\\\"p-40\\\">\\n  <div *ngIf=\\\"!isShow\\\" class=\\\"px-16 font-size-18 text-uppercase\\\">{{ (!isStaffLogin ? 'Teacher Schedule': 'Schedule') | translate}}</div>\\n  <div class=\\\"mat-elevation-z8 radius-t-20 simple-table-container\\\" fxLayout=\\\"column\\\">\\n    <div class=\\\"px-20 pt-20\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start\\\" fxLayout.gt-sm=\\\"row\\\"\\n      fxLayoutAlign.gt-xs=\\\"space-between center\\\">\\n      <div class=\\\"ml-sm-32\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxFlex>\\n        <div *ngIf=\\\"!isStaffLogin\\\" class=\\\"mw-400\\\" fxLayoutAlign=\\\"center center\\\">\\n            <af-select appearance=\\\"outline\\\" label=\\\"Teacher\\\" [optionGroupRequired]=\\\"false\\\" fxFlex=\\\"100\\\" [required]=\\\"false\\\"\\n            [options]=\\\"teachers | async\\\" placeholder=\\\"Select Teacher\\\" (selectionChange)=\\\"getStaffTemplates($event)\\\">\\n          </af-select>\\n        </div>\\n\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n        <button mat-button type='button' (click)=\\\"getHelpText('Teacher Schedules')\\\">\\n          <mat-icon class=\\\"grey-600-fg\\\" matTooltip=\\\"{{'Info' | translate}}\\\">info</mat-icon>\\n        </button>\\n      </div>\\n    </div>\\n\\n    <mat-divider *ngIf=\\\"showClasses\\\"></mat-divider>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n      <div fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"50\\\">\\n        <table class=\\\"custom-table my-24 border\\\" *ngIf=\\\"showClasses\\\">\\n          <tr *ngIf=\\\"teacherTemplates?.classSectionList?.length\\\">\\n            <th translate>Class Teacher For</th>\\n            <th></th>\\n          </tr>\\n          <tr *ngFor=\\\"let classData of teacherTemplates?.classSectionList\\\">\\n            <td> {{classData.value}}</td>\\n            <td> {{classData.label}}</td>\\n          </tr>\\n          <tr *ngIf=\\\"!teacherTemplates?.classSectionList?.length\\\">\\n            <td colspan=\\\"2\\\" translate>No classes assigned as class teacher</td>\\n          </tr>\\n        </table>\\n      </div>\\n    </div>\\n    <mat-divider *ngIf=\\\"showClasses\\\"></mat-divider>\\n    <div class=\\\"px-20 pt-20\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start\\\" fxLayout.gt-sm=\\\"row\\\"\\n      fxLayoutAlign.gt-xs=\\\"space-between center\\\" *ngIf=\\\"teacherTemplates.timeTableList\\\">\\n      <div class=\\\"mr-sm-32\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxFlex *ngIf=\\\"teacherTemplates.timeTableList.length\\\">\\n          <af-select appearance=\\\"outline\\\" label=\\\"Time Table\\\" [optionGroupRequired]=\\\"false\\\" fxFlex.gt-sm=\\\"40\\\" fxFlex=\\\"100\\\" class=\\\"mw-400\\\" [required]=\\\"false\\\"\\n          [options]=\\\"teacherTemplates.timeTableList\\\" [value]=\\\"selectedTemplate\\\" placeholder=\\\"Select Time Table\\\" (selectionChange)=\\\"getTeacherSchedule($event)\\\">\\n        </af-select>\\n      </div>\\n    </div>\\n    <div *ngIf=\\\"!showSchedules && showClasses\\\" class=\\\"text-center pb-20\\\" translate>No Classes has been scheduled</div>\\n    <div fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center start\\\" class=\\\"section-assignament mb-20\\\"\\n      *ngIf=\\\"teacherSchedule?.teacherScheduleList.length\\\">\\n      <div fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"65\\\" fxFlex=\\\"100\\\">\\n        <table class=\\\"custom-table m-24 border\\\">\\n          <tr>\\n            <th translate>Class</th>\\n            <th translate>Section</th>\\n            <th translate>Board</th>\\n            <th translate>Subject</th>\\n            <th translate>Periods Per Week</th>\\n          </tr>\\n          <tr *ngFor=\\\"let classData of teacherSchedule?.teacherScheduleList\\\">\\n            <td>\\n              {{classData.className}}\\n            </td>\\n            <td>\\n              {{classData.sectionName}}\\n            </td>\\n            <td>\\n              {{classData.board}}\\n            </td>\\n            <td>\\n              {{classData.courseName}}\\n            </td>\\n            <td class=\\\"text-center\\\">\\n              {{classData.periodsPerWeek}}\\n            </td>\\n          </tr>\\n        </table>\\n      </div>\\n      <div fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"40\\\" fxFlex=\\\"100\\\" class=\\\"border m-w m-24 radius-10\\\"\\n        [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\">\\n        <p class=\\\"text-center text-uppercase font-size-16\\\" translate>Total Periods Per Week</p>\\n        <mat-divider></mat-divider>\\n        <span class=\\\"text-center font-size-24 py-8 accent-900-fg-custom\\\">{{teacherSchedule.toatalPeriods}}</span>\\n\\n      </div>\\n    </div>\\n\\n    <mat-divider *ngIf=\\\"teacherSchedule?.teacherPeriodsView.length\\\"></mat-divider>\\n\\n\\n\\n    <div class=\\\"m-20 border school-period\\\" [style.max-width.px]=\\\"innerWidth\\\"\\n      *ngIf=\\\"teacherSchedule?.teacherPeriodsView.length\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\n      <div xLayout=\\\"row inline\\\" class=\\\"mw-100-p border-bottom h2 p-12 weekDay\\\" translate>Time Table</div>\\n      <div fxLayout=\\\"row inline\\\" *ngFor=\\\"let item of teacherSchedule?.teacherPeriodsView; \\\"\\n        class=\\\"mw-100-p\\\">\\n        <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\"\\n          class=\\\"border-right border-bottom p-20 w-120 weekDay custom-white font-weight-600 text-uppercase\\\" translate>\\n          {{item.weekDayName}}</div>\\n        <div *ngIf=\\\"item?.teacherSchedulePeriodsView.length > 0\\\" class=\\\"border-bottom\\\">\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"20\\\" fxLayoutAlign=\\\"center start\\\" class=\\\"border-right w-180 p-12 break-word\\\"\\n            *ngFor=\\\"let child of item.teacherSchedulePeriodsView;let i=index\\\" [ngClass]=\\\"item.value?.length > teacherSchedule?.teacherPeriodsView[ind-1]?.value?.length ? (i > ( teacherSchedule?.teacherPeriodsView[ind-1]?.value?.length-1) && ind  ? 'border-top': '') : ''\\\">\\n            <div fxLayout=\\\"row\\\">{{child.periodName}}</div>\\n            <div fxLayout=\\\"row\\\" class=\\\"grey-500-fg\\\" *ngIf=\\\"child.startTime!= null\\\">{{child.startTime | slice:0:5 }} to\\n              {{child.endTime | slice:0:5}}\\n            </div>\\n            <div fxLayout=\\\"row\\\" class=\\\"grey-500-fg\\\" *ngIf=\\\"child.startTime!= null\\\">{{child.className}}\\n              {{child.sectionName}}\\n            </div>\\n            <div fxLayout=\\\"row\\\">{{child.courseName}}</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".section-assignament .m-w {\\n  max-width: 180px !important;\\n  width: 180px !important;\\n  height: 133px; }\\n\\n.w-sm-400 {\\n  width: 400px; }\\n\\n.mw-400 {\\n  width: 450px; }\\n\\n.school-period {\\n  overflow-y: auto;\\n  overflow: overlay; }\\n\\n.school-period .weekDay {\\n    position: -webkit-sticky;\\n    position: sticky;\\n    left: 0px;\\n    z-index: 1; }\\n\\n.text-center {\\n  text-align: center !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvc3RhZmYvc3RhZmYtaW5mb3JtYXRpb24tc3lzdGVtL3RlYWNoZXItc2NoZWR1bGUvdGVhY2hlci1zY2hlZHVsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUdRLDJCQUEyQjtFQUMzQix1QkFBdUI7RUFDdkIsYUFBYSxFQUFBOztBQUtyQjtFQUNJLFlBQVksRUFBQTs7QUFFaEI7RUFDSSxZQUFZLEVBQUE7O0FBRWhCO0VBQ0ksZ0JBQWdCO0VBQ2hCLGlCQUFpQixFQUFBOztBQUZyQjtJQU9RLHdCQUFnQjtJQUFoQixnQkFBZ0I7SUFDaEIsU0FBUztJQUNULFVBQVUsRUFBQTs7QUFHbEI7RUFDSSw2QkFBNkIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3RhZmYvc3RhZmYtaW5mb3JtYXRpb24tc3lzdGVtL3RlYWNoZXItc2NoZWR1bGUvdGVhY2hlci1zY2hlZHVsZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zZWN0aW9uLWFzc2lnbmFtZW50e1xuICAgIC8vIG1pbi1oZWlnaHQ6IDMwMHB4O1xuICAgIC5tLXd7XG4gICAgICAgIG1heC13aWR0aDogMTgwcHggIWltcG9ydGFudDtcbiAgICAgICAgd2lkdGg6IDE4MHB4ICFpbXBvcnRhbnQ7XG4gICAgICAgIGhlaWdodDogMTMzcHg7XG5cbiAgICB9XG59XG5cbi53LXNtLTQwMHtcbiAgICB3aWR0aDogNDAwcHg7XG59XG4ubXctNDAwe1xuICAgIHdpZHRoOiA0NTBweDs7XG59XG4uc2Nob29sLXBlcmlvZHtcbiAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgIG92ZXJmbG93OiBvdmVybGF5O1xuICAgICY6Zmlyc3QtY2hpbGQgLm13LTEwMC1we1xuXG4gICAgfVxuICAgIC53ZWVrRGF5IHtcbiAgICAgICAgcG9zaXRpb246IHN0aWNreTtcbiAgICAgICAgbGVmdDogMHB4O1xuICAgICAgICB6LWluZGV4OiAxO1xuICAgIH1cbn1cbi50ZXh0LWNlbnRlciB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XG59XG4vLyBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50KCdndC14cycpIHtcblxuLy8gfSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { TeachersSchedulesService } from 'app/service/staff-information-system/teachers-schedules.service';\nimport { StaffCommonService } from 'app/service/staff/staffCommon.service';\nimport { fuseAnimations } from '@fuse/animations';\nimport { CommonService } from 'app/service/common.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-teacher-schedule',\n  templateUrl: './teacher-schedule.component.html',\n  styleUrls: ['./teacher-schedule.component.scss'],\n  animations: [fuseAnimations],\n  providers: [TeachersSchedulesService]\n})\nexport class TeacherScheduleComponent extends CommonComponent implements OnInit {\n\n  teachers = Promise.resolve([]);\n  teacherTemplates: any;\n  teacherSchedule: any;\n  selectedTeacherId: number;\n  showClasses: boolean;\n  showSchedules: boolean;\n  loadData = Promise.resolve(false);\n  selectedValue: number;\n  isStaffLogin = false;\n  currentStaffName = '';\n  selectedTemplate: any;\n  isShow: boolean;\n\n  constructor(public teachersSchedulesService: TeachersSchedulesService, private staffCommonService: StaffCommonService,\n     public commonService: CommonService, public snackBar: MatSnackBar) { super(); }\n\n  ngOnInit(): void {\n    this.getTeachers();\n    this.initializeForm();\n\n  }\n\n  initializeForm(): void {\n    this.teacherTemplates = {\n      classSectionList: [],\n      timeTableList: []\n    };\n\n    this.teacherSchedule = {\n      teacherScheduleList: [],\n      teacherPeriodsView: [],\n      toatalPeriods: 0\n    };\n  }\n\n  getTeachers(): void {\n    this.staffCommonService.fetchStaffs('STFT_TCH').subscribe(response => this.bindStaff(response), error => {\n      this.errorResponse(error);\n    });\n  }\n\n  bindStaff(staffData: Array<any>): void {\n    const dropDownData = staffData.map(x => ({\n      label: x.name,\n      value: x.id\n    }));\n    this.teachers = Promise.resolve(dropDownData);\n  }\n\n  getStaffTemplates(teacherId: number): void {\n    this.selectedValue = teacherId;\n    this.initializeForm();\n    if (teacherId) {\n      this.selectedTeacherId = teacherId;\n      this.teachersSchedulesService.getTeacherTimeTableById(teacherId).subscribe(response => this.bindTeacherTemplates(response), error => {\n        this.errorResponse(error);\n      });\n    }\n    else {\n      this.showClasses = false;\n    }\n\n  }\n\n  bindTeacherTemplates(response: any): void {\n    this.showClasses = true;\n    this.teacherTemplates = response;\n    if (this.teacherTemplates.timeTableList && this.teacherTemplates.timeTableList.length) {\n      this.teacherTemplates.timeTableList = this.teacherTemplates.timeTableList.map(x => ({\n        label: x.name,\n        value: x.id\n      }));\n      this.showSchedules = this.teacherTemplates.timeTableList.length ? true : false;\n      const firstTemplateId = this.teacherTemplates.timeTableList[0].value;\n      this.selectedTemplate = firstTemplateId;\n      this.getTeacherSchedule(firstTemplateId);\n    }\n  }\n\n  getTeacherSchedule(templateId: number): void {\n    if (templateId) {\n      this.teachersSchedulesService.getTeacherSchedule(this.selectedTeacherId, templateId).subscribe(response => this.teacherSchedule = response,\n        error => {\n          this.errorResponse(error);\n        });\n    }\n    else {\n      this.teacherSchedule = {\n        teacherScheduleList: [],\n        teacherPeriodsView: [],\n        toatalPeriods: 0\n      };\n    }\n\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Configuration } from '../base/configuration';\nimport { BASE_PATH } from '../base/variables';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { BaseUrlConfig, ModuleConfig } from 'app/url.config';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\n\n@Injectable()\nexport class TeachersSchedulesService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Teacher;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string,\n     @Optional() configuration: Configuration, private commonComponent: CommonComponent) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Method to get teacher schedule by TeacherId and TimetableId\n     * \n     * @param authorization access token\n     * @param teacherId Gets or Sets TeacherId\n     * @param timeTableId Gets or Sets TimeTableId\n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTeacherSchedule(teacherId?: number, timeTableId?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getTeacherSchedule(teacherId?: number, timeTableId?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getTeacherSchedule(teacherId?: number, timeTableId?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getTeacherSchedule(teacherId?: number, timeTableId?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n\n        queryParameters = this.commonComponent.setQueryParams(teacherId, 'TeacherId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(timeTableId, 'TimeTableId', queryParameters);\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/TeachersSchedules/teacher-schedule`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Method to get teacher schedule by TeacherId and TimetableId\n     * \n     * @param authorization access token\n     * @param id \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getTeacherTimeTableById(id?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getTeacherTimeTableById(id?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getTeacherTimeTableById(id?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getTeacherTimeTableById(id?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n            queryParameters = this.commonComponent.setQueryParams(id, 'Id', queryParameters);\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/TeachersSchedules/teacher-timetable-dropdown`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Teacher API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Configuration } from '../base/configuration';\nimport { BASE_PATH } from '../base/variables';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { CommonComponent } from '../../shared/common/common.component';\nimport { BaseModuleConfig, BaseUrlConfig, ModuleConfig } from 'app/url.config';\nimport { StaffLeaveRequestViewModel } from 'app/modules/staff/staff-information-system/model/staff-leave-request-view-model';\n\n\n@Injectable()\nexport class StaffLeaveRequestService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Teacher;\n    // protected basePath = 'http://localhost:8016';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH)\n    basePath: string, @Optional() configuration: Configuration, private commonComponent: CommonComponent, ) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n        * Approve Or reject the leave request\n        * \n        * @param leaveRequestId Gets or Sets of LeaveRequestId\n        * @param staffId Gets or Sets of StaffId\n        * @param isApproveAction Gets or Sets of IsApproveAction\n        * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n        * @param reportProgress flag to report request and response progress.\n        */\n    public approveOrRejectRequest(leaveRequestId?: string, staffId?: string, isApproveAction?: boolean, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public approveOrRejectRequest(leaveRequestId?: string, staffId?: string, isApproveAction?: boolean,\n        observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public approveOrRejectRequest(leaveRequestId?: string, staffId?: string, isApproveAction?: boolean, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public approveOrRejectRequest(leaveRequestId?: string, staffId?: string, isApproveAction?: boolean, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (leaveRequestId !== undefined && leaveRequestId !== null) {\n            queryParameters = queryParameters.set('LeaveRequestId', <any>leaveRequestId);\n        }\n        if (staffId !== undefined && staffId !== null) {\n            queryParameters = queryParameters.set('StaffId', <any>staffId);\n        }\n        if (isApproveAction !== undefined && isApproveAction !== null) {\n            queryParameters = queryParameters.set('IsApproveAction', <any>isApproveAction);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.put<any>(`${this.basePath}` + BaseModuleConfig.Staff_Leave_Request_Approve,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n    /**\n     * Add Staff Leave Request\n     * \n     * @param staffLeaveRequest \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createStaffLeaveRequest(staffLeaveRequest?: StaffLeaveRequestViewModel, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createStaffLeaveRequest(staffLeaveRequest?: StaffLeaveRequestViewModel, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createStaffLeaveRequest(staffLeaveRequest?: StaffLeaveRequestViewModel, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createStaffLeaveRequest(staffLeaveRequest?: StaffLeaveRequestViewModel, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + BaseModuleConfig.Staff_Leave_Request,\n            staffLeaveRequest,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Fetch Staff Leave Request\n     * \n     * @param sortBy Gets or Sets of SortBy\n     * @param sortOrder Gets or Sets of SortOrder\n     * @param staffNames Gets or Sets of Classes\n     * @param staffTypes Gets or Sets of Sections\n     * @param reasons Gets or Sets of SchoolBoards\n     * @param statuses Gets or Sets of AssesmentGroups\n     * @param leaveStartDatesBegin Gets or Sets of LeaveStartDatesBegin\n     * @param leaveStartDatesEnd Gets or Sets of LeaveStartDatesEnd\n     * @param leaveEndDatesBegin Gets or Sets of LeaveEndDatesBegin\n     * @param leaveEndDatesEnd Gets or Sets of LeaveEndDatesEnd\n     * @param pageNumber \n     * @param pageSize \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public fetchStaffLeaveRequests(sortBy?: string, sortOrder?: 0 | 1 | -1, staffNames?: Array<string>, staffTypes?: Array<string>,\n        reasons?: Array<string>, statuses?: Array<string>, leaveStartDatesBegin?: string, leaveStartDatesEnd?: string,\n        leaveEndDatesBegin?: string, leaveEndDatesEnd?: string, pageNumber?: number, pageSize?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchStaffLeaveRequests(sortBy?: string, sortOrder?: 0 | 1 | -1, staffNames?: Array<string>, staffTypes?: Array<string>,\n        reasons?: Array<string>, statuses?: Array<string>, leaveStartDatesBegin?: string, leaveStartDatesEnd?: string, leaveEndDatesBegin?: string,\n        leaveEndDatesEnd?: string, pageNumber?: number, pageSize?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchStaffLeaveRequests(sortBy?: string, sortOrder?: 0 | 1 | -1, staffNames?: Array<string>, staffTypes?: Array<string>,\n        reasons?: Array<string>, statuses?: Array<string>, leaveStartDatesBegin?: string, leaveStartDatesEnd?: string, leaveEndDatesBegin?: string,\n        leaveEndDatesEnd?: string, pageNumber?: number, pageSize?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchStaffLeaveRequests(sortBy?: string, sortOrder?: 0 | 1 | -1, staffNames?: Array<string>, staffTypes?: Array<string>,\n        reasons?: Array<string>, statuses?: Array<string>, leaveStartDatesBegin?: string, leaveStartDatesEnd?: string, leaveEndDatesBegin?: string,\n        leaveEndDatesEnd?: string, pageNumber?: number, pageSize?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n\n        queryParameters = this.commonComponent.setQueryParams(staffNames, 'StaffNames', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(staffTypes, 'StaffTypes', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(reasons, 'Reasons', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(statuses, 'Statuses', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(leaveStartDatesBegin, 'LeaveStartDatesBegin', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(leaveStartDatesEnd, 'LeaveStartDatesEnd', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(leaveEndDatesBegin, 'LeaveEndDatesBegin', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(leaveEndDatesEnd, 'LeaveEndDatesEnd', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig.Staff_Leave_Request,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n\n","/**\n * Teacher API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { BASE_PATH } from '../base/variables';\nimport { Configuration } from '../base/configuration';\nimport { BaseUrlConfig, ModuleConfig, BaseModuleConfig } from '../../url.config';\n\n@Injectable()\nexport class StaffCommonService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Teacher;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Fetch Staff Types\n     * \n     * @param authorization access token\n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public fetchStaffTypes(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchStaffTypes(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchStaffTypes(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchStaffTypes(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n        \n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Staff_Types,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Fetch Staffs\n     * \n     * @param authorization access token\n     * @param staffTypeCode \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public fetchStaffs(staffTypeCode?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchStaffs(staffTypeCode?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchStaffs(staffTypeCode?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchStaffs(staffTypeCode?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        \n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (staffTypeCode !== undefined && staffTypeCode !== null) {\n            queryParameters = queryParameters.set('staffTypeCode', <any>staffTypeCode);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Staff_Based_On_Code,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n"],"sourceRoot":""}