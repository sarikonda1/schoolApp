{"version":3,"sources":["webpack:///./node_modules/ng2-ckeditor/fesm5/ng2-ckeditor.js","webpack:///./node_modules/ng2-ckeditor/node_modules/tslib/tslib.es6.js","webpack:///./src/app/modules/manage-role-right/manage-role-right-routing.module.ts","webpack:///./src/app/modules/manage-role-right/manage-role-right.module.ts","webpack:///./src/app/modules/manage-role-right/module/module.component.html","webpack:///./src/app/modules/manage-role-right/module/module.component.scss","webpack:///./src/app/modules/manage-role-right/module/module.component.ts","webpack:///./src/app/modules/manage-role-right/page-information/page-information.component.html","webpack:///./src/app/modules/manage-role-right/page-information/page-information.component.scss","webpack:///./src/app/modules/manage-role-right/page-information/page-information.component.ts","webpack:///./src/app/modules/manage-role-right/right/right.component.html","webpack:///./src/app/modules/manage-role-right/right/right.component.scss","webpack:///./src/app/modules/manage-role-right/right/right.component.ts","webpack:///./src/app/modules/manage-role-right/role/role.component.html","webpack:///./src/app/modules/manage-role-right/role/role.component.scss","webpack:///./src/app/modules/manage-role-right/role/role.component.ts","webpack:///./src/app/modules/manage-role-right/service/api.ts","webpack:///./src/app/modules/manage-role-right/service/module.service.ts","webpack:///./src/app/modules/manage-role-right/service/right.service.ts","webpack:///./src/app/modules/manage-role-right/service/role.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACwG;AACxG;AACI;;AAEnD;AACA;AACA;AACA,4CAA4C,IAAI;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,0DAAY;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb,QAAQ,wDAAU;AAClB;AACA,wBAAwB,wDAAU;AAClC,QAAQ,+DAAS;AACjB;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,4CAA4C,IAAI;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,sCAAsC,EAAE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,qEAAe;AACvB,QAAQ,wDAAU,gBAAgB,uDAAS;AAC3C;AACA,uBAAuB,wDAAU;AACjC,QAAQ,+DAAS;AACjB;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,4CAA4C,IAAI;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC,gCAAgC,0DAAY;AAC5C,yBAAyB,0DAAY;AACrC,wBAAwB,0DAAY;AACpC,yBAAyB,0DAAY;AACrC,8BAA8B,0DAAY;AAC1C,qCAAqC,0DAAY;AACjD,sCAAsC,0DAAY;AAClD,yBAAyB,0DAAY;AACrC,wBAAwB,0DAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD,SAAS,OAAO,oDAAM;AACtB,MAAM;AACN,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,4DAAM;AACd,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,+DAAS,UAAU,gBAAgB;AAC3C,QAAQ,wDAAU;AAClB;AACA,IAAI,wDAAU;AACd,QAAQ,qEAAe;AACvB,QAAQ,wDAAU,gBAAgB,uDAAS;AAC3C;AACA,IAAI,wDAAU;AACd,QAAQ,qEAAe;AACvB,QAAQ,wDAAU,gBAAgB,uDAAS;AAC3C;AACA,IAAI,wDAAU;AACd,QAAQ,2DAAK;AACb,QAAQ,wDAAU;AAClB,QAAQ,wDAAU;AAClB;AACA,8CAA8C,wDAAU;AACxD,QAAQ,+DAAS;AACjB;AACA;AACA;AACA,6BAA6B,gEAAiB;AAC9C,iCAAiC,gEAAU,cAAc,4BAA4B,EAAE;AACvF;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT,QAAQ,wDAAU,uBAAuB,oDAAM;AAC/C;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wDAAU;AAC/B,QAAQ,8DAAQ;AAChB,sBAAsB,4DAAY;AAClC;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEoG;AACpG;;;;;;;;;;;;;ACraA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;;AAEO;AACP;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;;;;;;;;;;;;;;;;;;;;;;ACnMyC;AACc;AACK;AACN;AACG;AACgC;AAEzF,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,wEAAe;QAC1B,IAAI,EAAE,EAAC,KAAK,EAAE,QAAQ,EAAC;KAC1B;IACD;QACI,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,kEAAa;QACxB,IAAI,EAAE,EAAC,KAAK,EAAE,MAAM,EAAC;KACxB;IACD;QACI,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,qEAAc;QACzB,IAAI,EAAE,EAAC,KAAK,EAAE,OAAO,EAAC;KACzB;IACD;QACI,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,qGAAwB;QACnC,IAAI,EAAE,EAAC,KAAK,EAAE,kBAAkB,EAAC;KACpC;CAEJ,CAAC;AAQF;IAAA;IAAiC,CAAC;IAArB,mBAAmB;QAN/B,8DAAQ,CAAC;YACN,OAAO,EAAE,CAAE,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAE;YAC1C,OAAO,EAAE;gBACL,4DAAY;aACf;SACJ,CAAC;OACW,mBAAmB,CAAE;IAAD,0BAAC;CAAA;AAAF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpC2B;AACO;AACnB;AACA;AACyC;AACpB;AACE;AACV;AACN;AACG;AACgB;AAClB;AACa;AAChB;AACqC;AAC7C;AAiC5C;IAAA;IAAqC,CAAC;IAAzB,qBAAqB;QA9BjC,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,qEAAgB;gBAChB,4DAAY;gBACZ,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,qEAAgB;gBAChB,4EAAsB;gBACtB,kFAAmB;gBACnB,sFAAmB;gBACnB,kEAAkB,CAAC,OAAO,EAAE;gBAC5B,4DAAc;aACjB;YACD,YAAY,EAAE;gBACd,wEAAe;gBACf,kEAAa;gBACb,sEAAc;gBACd,sGAAwB;aAAC;YACzB,SAAS,EAAE;gBACP;oBACI,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAE,gFAAgB;oBAC1B,KAAK,EAAE,IAAI;iBACd;aAEJ;YACD,OAAO,EAAE,CAAC,8DAAgB,CAAC;SAC9B,CAAC;OAEW,qBAAqB,CAAI;IAAD,4BAAC;CAAA;AAAJ;;;;;;;;;;;;ACjDlC,6kD;;;;;;;;;;;ACAA,+DAA+D,+K;;;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AACb;AAEU;AACC;AACS;AACpB;AACF;AAC2C;AACpB;AAQrE;IAAqC,yEAAe;IAmBlD,yBAAoB,aAA4B,EAAS,SAAoB,EAAS,aAA4B;QAAlH,YACE,iBAAO,SAKR;QANmB,mBAAa,GAAb,aAAa,CAAe;QAAS,eAAS,GAAT,SAAS,CAAW;QAAS,mBAAa,GAAb,aAAa,CAAe;QAjBlH,sBAAgB,GAAQ,iBAAiB,CAAC;QAW1C,qBAAe,GAAG,IAAI,CAAC;QAEvB,mBAAa,GAAG,IAAI,CAAC;QAMnB,KAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,KAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,KAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,KAAI,CAAC,cAAc,EAAE,CAAC;;IACxB,CAAC;IAED,kCAAQ,GAAR;QACE,IAAM,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC1E,IAAI,mBAAmB,EAAE;YACvB,IAAI,CAAC,QAAQ,GAAG,mBAAmB,CAAC;SACrC;QACD,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,wCAAc,GAAd;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,wDAAS,CAAC;YAC9B,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3E,CAAC,CAAC;IACL,CAAC;IAED,0CAAgB,GAAhB;QACE,IAAI,CAAC,OAAO,GAAG;YACb,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,IAAI,EAAE;YACpD,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE;SACtD,CAAC;IACJ,CAAC;IAED,iDAAuB,GAAvB;QACE,IAAI,CAAC,aAAa,GAAG;YACnB,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,SAAS,EAAE,SAAS;YACpB,aAAa,EAAE,IAAI,CAAC,gBAAgB;YACpC,KAAK,EAAE,IAAI,CAAC,QAAQ;SACrB,CAAC;IACJ,CAAC;IAED,8CAAoB,GAApB;QACE,IAAI,CAAC,QAAQ,GAAG;YACd,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,CAAC;YACZ,UAAU,EAAE,6DAAW,CAAC,UAAU;YAClC,QAAQ,EAAE,6DAAW,CAAC,QAAQ;SAC/B,CAAC;IACJ,CAAC;IAED,uCAAa,GAAb;QAAA,iBAMC;QALC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,aAAG;YAC3I,IAAI,GAAG,EAAE;gBACP,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAU,GAAV,UAAW,IAAsB;QAC/B,IAAI,CAAC,IAAI,CAAC,qBAAqB,EAAE;YAC/B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;SAClB;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC;YAC5C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC;YAE5D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC;YACrD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAC;gBACjB,CAAC,CAAC,UAAU,GAAG;oBACb;wBACE,IAAI,EAAE,6DAAW,CAAC,cAAc;wBAChC,IAAI,EAAE,6DAAW,CAAC,IAAI;wBACtB,aAAa,EAAE,6DAAW,CAAC,IAAI;qBAChC;iBACF,CAAC;YACJ,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC9B,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC;SAClE;QACD,IAAI,CAAC,aAAa,GAAG;YACnB,KAAK,EAAE,IAAI,CAAC,QAAQ;YACpB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,SAAS,EAAE,SAAS;YACpB,aAAa,EAAE,IAAI,CAAC,gBAAgB;YACpC,WAAW,EAAE,EAAE;YACf,oBAAoB,EAAE,IAAI;YAC1B,gBAAgB,EAAE;gBAChB,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,OAAO,EAAE,YAAY;iBACtB;aACF;SACF,CAAC;IACJ,CAAC;IAED,mCAAS,GAAT,UAAU,MAAsB;QAC9B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,kCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,kCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;QAC9B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,6CAAmB,GAAnB,UAAoB,IAAS;QAA7B,iBA4BC;QA3BC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,6DAAW,CAAC,KAAK,EAAE;YAC5D,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC;iBAClC,SAAS,CAAC,UAAC,GAA0B;gBACpC,IAAI,GAAG,CAAC,UAAU,KAAK,oDAAa,EAAE;oBACpC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,6DAAW,CAAC,EAAE,CAAC,CAAC;oBACpE,KAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,KAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;qBACI;oBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,6DAAW,CAAC,EAAE,CAAC,CAAC;oBACpE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;SACN;aAAM,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;YAChC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC;iBAClC,SAAS,CAAC,UAAC,GAA0B;gBACpC,IAAI,GAAG,CAAC,UAAU,KAAK,oDAAa,EAAE;oBACpC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,6DAAW,CAAC,EAAE,CAAC,CAAC;oBACpE,KAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,KAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;qBACI;oBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,6DAAW,CAAC,EAAE,CAAC,CAAC;oBACpE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,iCAAO,GAAP,UAAQ,aAAkB;QACxB,IAAI,aAAa,CAAC,SAAS,KAAK,6DAAW,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YAC9D,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SACtD;IACH,CAAC;IAED,sCAAY,GAAZ,UAAa,UAAe,EAAE,YAAqB,EAAE,WAAmB,EAAE,WAAoB;QAC5F,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,sGAAqB,EAAE;YAChD,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,EAAE;SAC1H,CAAC,CAAC;IACL,CAAC;IAjKoB;QAApB,+DAAS,CAAC,QAAQ,CAAC;;yDAAc;IAjBvB,eAAe;QAN3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,gIAAsC;YAEtC,SAAS,EAAE,CAAC,qEAAa,CAAC;;SAC3B,CAAC;+EAoBmC,qEAAa,EAAoB,2DAAS,EAAwB,wEAAa;OAnBvG,eAAe,CAmL3B;IAAD,sBAAC;CAAA,CAnLoC,kFAAe,GAmLnD;AAnL2B;;;;;;;;;;;;ACjB5B,86CAA86C,gBAAgB,mrC;;;;;;;;;;;ACA97C,+DAA+D,2M;;;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AACQ;AACrB;AACW;AACA;AACW;AACtB;AACyC;AACrB;AASpE;IAA8C,kFAAe;IAsB3D,kCAAmB,SAAoB,EAC9B,aAA4B,EAAU,mBAAwC,EAAS,QAAqB;QADrH,YAEE,iBAAO,SAMR;QARkB,eAAS,GAAT,SAAS,CAAW;QAC9B,mBAAa,GAAb,aAAa,CAAe;QAAU,yBAAmB,GAAnB,mBAAmB,CAAqB;QAAS,cAAQ,GAAR,QAAQ,CAAa;QArBrH,sBAAgB,GAAQ,0BAA0B,CAAC;QAUnD,qBAAe,GAAG,IAAI,CAAC;QAEvB,mBAAa,GAAG,IAAI,CAAC;QAKrB,eAAS,GAAe,EAAE,CAAC;QAOzB,KAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,KAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,KAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,KAAI,CAAC,cAAc,EAAE,CAAC;;IACxB,CAAC;IAED,2CAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAM,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC1E,IAAI,mBAAmB,EAAE;YACvB,IAAI,CAAC,QAAQ,GAAG,mBAAmB,CAAC;SACrC;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,mDAAgB,GAAhB;QACE,IAAI,CAAC,OAAO,GAAG;YACb,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;YAC3C,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE;YAChE,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,kBAAkB,EAAE,IAAI,EAAE,IAAI,EAAE;YAC5D,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE;SACtD,CAAC;IACJ,CAAC;IAED,uDAAoB,GAApB;QACE,IAAI,CAAC,QAAQ,GAAG;YACd,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,CAAC;YACZ,UAAU,EAAE,6DAAW,CAAC,UAAU;YAClC,QAAQ,EAAE,6DAAW,CAAC,QAAQ;SAC/B,CAAC;IACJ,CAAC;IAED,0DAAuB,GAAvB;QACE,IAAI,CAAC,aAAa,GAAG;YACnB,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,SAAS,EAAE,kBAAkB;YAC7B,aAAa,EAAE,IAAI,CAAC,gBAAgB;YACpC,KAAK,EAAE,IAAI,CAAC,QAAQ;SACrB,CAAC;IACJ,CAAC;IAED,iDAAc,GAAd;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,wDAAS,CAAC;YAChC,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvB,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACzE,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YAC7E,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7E,CAAC,CAAC;IACL,CAAC;IAED,4CAAS,GAAT,UAAU,MAAwB;QAChC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QACvB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,+CAAY,GAAZ;QAAA,iBAOC;QANC,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,EAC7G,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,aAAG;YAC5G,IAAI,GAAG,EAAE;gBACP,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAU,GAAV,UAAW,IAAwB;QACjC,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;YAC7B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;SAClB;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;YAC1C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;YAE1D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;YACnD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAC;gBACjB,CAAC,CAAC,UAAU,GAAG;oBACb;wBACE,IAAI,EAAE,6DAAW,CAAC,cAAc;wBAChC,IAAI,EAAE,6DAAW,CAAC,IAAI;wBACtB,aAAa,EAAE,6DAAW,CAAC,IAAI;qBAChC;oBACD;wBACE,IAAI,EAAE,6DAAW,CAAC,gBAAgB;wBAClC,IAAI,EAAE,6DAAW,CAAC,MAAM;wBACxB,aAAa,EAAE,6DAAW,CAAC,MAAM;qBAClC;oBACD;wBACE,IAAI,EAAE,6DAAW,CAAC,cAAc;wBAChC,IAAI,EAAE,6DAAW,CAAC,YAAY;wBAC9B,aAAa,EAAE,6DAAW,CAAC,IAAI;qBAChC;iBACF,CAAC;YACJ,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;SAChE;QACD,IAAI,CAAC,aAAa,GAAG;YACnB,KAAK,EAAE,IAAI,CAAC,QAAQ;YACpB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,SAAS,EAAE,kBAAkB;YAC7B,aAAa,EAAE,IAAI,CAAC,gBAAgB;YACpC,WAAW,EAAE,IAAI,CAAC,OAAO;YACzB,kBAAkB,EAAE,CAAC,KAAK,CAAC;YAC3B,oBAAoB,EAAE,IAAI;YAC1B,gBAAgB,EAAE;gBAChB,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,IAAI,EAAE,kBAAkB;iBACvB;gBACH,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,OAAO,EAAE,KAAK;iBACf;aACF;SACF,CAAC;IACJ,CAAC;IAGD,2CAAQ,GAAR;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,gCAAgC;QAChC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,2CAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,gCAAgC;QAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,CAAC;QACtC,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,KAAK,CAAC;QAC5C,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;QAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,0CAAO,GAAP,UAAQ,aAAkB;QAA1B,iBAyBC;QAxBC,IAAI,aAAa,CAAC,SAAS,KAAK,6DAAW,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YAC9D,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SACxD;aACI,IAAI,aAAa,CAAC,SAAS,KAAK,6DAAW,CAAC,MAAM,CAAC,iBAAiB,EAAE,EAAE;YAC3E,IAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,6DAAW,CAAC,wBAAwB,EAAE,IAAI,EAAE,6DAAW,CAAC,EAAE,EAAE,6DAAW,CAAC,GAAG,CAAC,CAAC;YAC3H,WAAW,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;gBACxC,IAAI,MAAM,KAAK,6DAAW,CAAC,GAAG,EAAE;oBAC9B,IAAM,MAAM,GAAW,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC;oBACnD,KAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,kBAAQ;wBACvE,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,6DAAW,CAAC,EAAE,CAAC,CAAC;wBACjF,KAAI,CAAC,YAAY,EAAE,CAAC;oBACtB,CAAC,EAAE,eAAK;wBACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oBAC5B,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;SAEJ;aACI,IAAI,aAAa,CAAC,SAAS,KAAK,6DAAW,CAAC,cAAc,CAAC,iBAAiB,EAAE,EAAE;YACnF,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;SACtD;IACH,CAAC;IAED,+CAAY,GAAZ,UAAa,UAAe,EAAE,YAAqB,EAAE,WAAmB,EAAE,WAAoB;QAC5F,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,sGAAqB,EAAE;YAChD,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,EAAE;SAC1H,CAAC,CAAC;IACL,CAAC;IAED,qDAAkB,GAAlB,UAAmB,KAAK;QAAxB,iBAaC;QAZC,IAAI,CAAC,mBAAmB,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,SAAS,CAC9D,aAAG;YACD,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,sGAAqB,EAAE;gBACzC,KAAK,EAAE,OAAO;gBACd,IAAI,EAAE;oBACJ,KAAK,EAAE,GAAG,CAAC,wBAAwB,CAAC,GAAG;oBACvC,gBAAgB,EAAE,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,CAAC,wBAAwB,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,6DAAW,CAAC,EAAE;iBAChI;aACF,CAAC,CAAC;QAEL,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mDAAgB,GAAhB,UAAiB,IAAI;QAArB,iBA6BC;QA5BC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,6DAAW,CAAC,KAAK,EAAE;YAC9D,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,CAAC;iBACjD,SAAS,CAAC,UAAC,GAA0B;gBACpC,IAAI,GAAG,CAAC,UAAU,KAAK,oDAAa,EAAE;oBACpC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,6DAAW,CAAC,EAAE,CAAC,CAAC;oBACpE,KAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,KAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;qBACI;oBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,6DAAW,CAAC,EAAE,CAAC,CAAC;oBACpE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;SACN;aAAM,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE;YAClC,IAAI,CAAC,mBAAmB,CAAC,qBAAqB,CAAC,IAAI,CAAC;iBACjD,SAAS,CAAC,UAAC,GAA0B;gBACpC,IAAI,GAAG,CAAC,UAAU,KAAK,oDAAa,EAAE;oBACpC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,6DAAW,CAAC,EAAE,CAAC,CAAC;oBACpE,KAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,KAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;qBACI;oBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,6DAAW,CAAC,EAAE,CAAC,CAAC;oBACpE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAGD,2CAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;IACD,iDAAc,GAAd,UAAe,KAAK;QAClB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED,gDAAa,GAAb;QAAA,iBAaC;QAZC,yCAAyC;QACzC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,aAAG;YAC7C,IAAI,GAAG,KAAK,SAAS,IAAI,GAAG,CAAC,SAAS,EAAE;gBACtC,GAAG,CAAC,SAAS,CAAC,OAAO,CAAC,iBAAO;oBAC3B,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC;wBAClB,KAAK,EAAE,OAAO,CAAC,KAAK;wBACpB,KAAK,EAAE,OAAO,CAAC,EAAE;qBAClB,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;aACJ;QAEH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAW,GAAX,UAAY,KAAK;QACf,IAAI,QAAgB,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,IAAI,CAAC,gBAAgB,KAAK,IAAI,IAAI,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAE;YACzE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC9B;QAED,IAAI,CAAC,mBAAmB,CAAC,iCAAiC,CAAC,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAClG,aAAG;YACD,IAAI,GAAG,CAAC,wBAAwB,KAAK,IAAI,EAAE;gBACzC,QAAQ,GAAG,GAAG,CAAC,wBAAwB,CAAC,KAAK,CAAC;aAC/C;iBACI;gBACH,QAAQ,GAAG,GAAG,CAAC,wBAAwB,CAAC;aACzC;QACH,CAAC,CACF,CAAC;QACF,OAAO,QAAQ,CAAC;IAClB,CAAC;IA1QsB;QAAtB,+DAAS,CAAC,UAAU,CAAC;;0EAAsB;IArBjC,wBAAwB;QANpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,8JAAgD;YAEhD,SAAS,EAAE,CAAC,iFAAmB,CAAC;;SACjC,CAAC;+EAuB8B,2DAAS;YACf,wEAAa,EAA+B,iFAAmB,EAAmB,6DAAW;OAvB1G,wBAAwB,CAgSpC;IAAD,+BAAC;CAAA,CAhS6C,kFAAe,GAgS5D;AAhSoC;;;;;;;;;;;;ACjBrC,81BAA81B,gBAAgB,4pBAA4pB,cAAc,szBAAszB,qBAAqB,0wEAA0wE,gBAAgB,q7B;;;;;;;;;;;ACA7nJ,+DAA+D,+K;;;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AACJ;AACgC;AACpB;AACK;AACf;AACA;AACS;AAEpB;AAQhD;IAAoC,wEAAe;IAmBjD,wBAAoB,YAA0B,EAAS,SAAoB,EACpE,aAA4B,EAAU,WAAwB,EAAU,aAA4B,EAAS,QAAqB;QADzI,YAEE,iBAAO,SACR;QAHmB,kBAAY,GAAZ,YAAY,CAAc;QAAS,eAAS,GAAT,SAAS,CAAW;QACpE,mBAAa,GAAb,aAAa,CAAe;QAAU,iBAAW,GAAX,WAAW,CAAa;QAAU,mBAAa,GAAb,aAAa,CAAe;QAAS,cAAQ,GAAR,QAAQ,CAAa;QAlBzI,sBAAgB,GAAQ,gBAAgB,CAAC;QAOzC,qBAAe,GAAG,IAAI,CAAC;QAEvB,mBAAa,GAAG,IAAI,CAAC;QAGrB,aAAO,GAAU,EAAE,CAAC;QACpB,WAAK,GAAU,EAAE,CAAC;QAClB,kBAAY,GAAU,EAAE,CAAC;QACzB,aAAO,GAAU,EAAE,CAAC;;IAKpB,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAwBC;QAvBC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAE/B,IAAM,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC1E,IAAI,mBAAmB,EAAE;YACvB,IAAI,CAAC,QAAQ,GAAG,mBAAmB,CAAC;SACrC;QACD,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,SAAS,CAAC,cAAI;YACrC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAO;gBAC3B,YAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC;YAA/D,CAA+D,CAChE,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,cAAI;YACzC,IAAI,CAAC,OAAO,CAAC,iBAAO;gBAClB,YAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC;YAA7D,CAA6D,CAC9D,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC;QACtE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,kCAAS,GAAT;QAAA,iBAMC;QALC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,cAAI;YACvC,IAAI,CAAC,OAAO,CAAC,iBAAO;gBAClB,YAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC;YAAlE,CAAkE,CACnE,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAc,GAAd;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvB,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACpD,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClD,GAAG,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACxB,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC3B,YAAY,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,yDAAO,CAAC,cAAc,CAAC,CAAC,CAAC;YACpG,aAAa,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAClC,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACzB,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAC3E,CAAC,CAAC;IACL,CAAC;IAED,yCAAgB,GAAhB;QACE,IAAI,CAAC,OAAO,GAAG;YACb,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,EAAE;YACnD,EAAE,KAAK,EAAE,iBAAiB,EAAE,MAAM,EAAE,mBAAmB,EAAE,IAAI,EAAE,IAAI,EAAE;YACrE,EAAE,KAAK,EAAE,YAAY,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,IAAI,EAAE;YAC1D,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE;YACtD,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;YAC3C,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE;YACjD,EAAE,KAAK,EAAE,cAAc,EAAE,MAAM,EAAE,eAAe,EAAE,IAAI,EAAE,IAAI,EAAE;YAC9D,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE;YAC7C,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE;SACtD,CAAC;IACJ,CAAC;IAED,gDAAuB,GAAvB;QACE,IAAI,CAAC,aAAa,GAAG;YACnB,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,SAAS,EAAE,QAAQ;YACnB,aAAa,EAAE,IAAI,CAAC,gBAAgB;YACpC,KAAK,EAAE,IAAI,CAAC,QAAQ;SACrB,CAAC;IACJ,CAAC;IAED,6CAAoB,GAApB;QACE,IAAI,CAAC,QAAQ,GAAG;YACd,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,CAAC;YACZ,UAAU,EAAE,6DAAW,CAAC,UAAU;YAClC,QAAQ,EAAE,6DAAW,CAAC,QAAQ;SAC/B,CAAC;IACJ,CAAC;IAED,sCAAa,GAAb;QAAA,iBAMC;QALC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,aAAG;YACxI,IAAI,GAAG,EAAE;gBACP,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAU,GAAV,UAAW,IAAqB;QAAhC,iBAiDC;QAhDC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE;YAC9B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;SAClB;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC;YAC3C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC;YAE3D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC;YACpD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAC;gBAClB,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAC;oBACjB,CAAC,CAAC,MAAM,GAAG,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,6DAAW,CAAC,GAAG,CAAC,CAAC;iBAC/D;qBAAK,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAC;oBACxB,CAAC,CAAC,MAAM,GAAG,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,6DAAW,CAAC,EAAE,CAAC,CAAC;iBAC7D;gBACA,CAAC,CAAC,UAAU,GAAG;oBACb;wBACE,IAAI,EAAE,6DAAW,CAAC,cAAc;wBAChC,IAAI,EAAE,6DAAW,CAAC,IAAI;wBACtB,aAAa,EAAE,6DAAW,CAAC,IAAI;qBAChC;iBACF,CAAC;YACJ,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC;SACjE;QACD,IAAI,CAAC,aAAa,GAAG;YACnB,KAAK,EAAE,IAAI,CAAC,QAAQ;YACpB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,SAAS,EAAE,QAAQ;YACnB,aAAa,EAAE,IAAI,CAAC,gBAAgB;YACpC,oBAAoB,EAAE,IAAI;YAC1B,WAAW,EAAE,EAAE;YACf,gBAAgB,EAAE;gBAChB,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,IAAI,EAAE,kBAAkB;iBACvB;gBACH,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,OAAO,EAAE,KAAK;iBACf;aACF;SACF,CAAC;IACJ,CAAC;IAED,kCAAS,GAAT,UAAU,MAAqB;QAC7B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QACvB,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC;QAC7B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,4CAAmB,GAAnB,UAAoB,IAAS;QAA7B,iBA8BC;QA7BC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,6DAAW,CAAC,KAAK,EAAE;YAC3D,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC;iBACpC,SAAS,CAAC,UAAC,GAA0B;gBACpC,IAAI,GAAG,CAAC,UAAU,KAAK,oDAAa,EAAE;oBACpC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,6DAAW,CAAC,EAAE,CAAC,CAAC;oBACpE,KAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,KAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,KAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;qBACI;oBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,EAAE,6DAAW,CAAC,EAAE,CAAC,CAAC;oBACpE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;SACN;aAAM,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YAC/B,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC;iBAChC,SAAS,CAAC,UAAC,GAA0B;gBACpC,IAAI,GAAG,CAAC,UAAU,KAAK,oDAAa,EAAE;oBACpC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;oBAC9C,KAAI,CAAC,aAAa,EAAE,CAAC;oBACrB,KAAI,CAAC,SAAS,EAAE,CAAC;oBACjB,KAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;qBACI;oBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;oBACpD,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;SACN;IACH,CAAC;IAED,gCAAO,GAAP,UAAQ,aAAkB;QACxB,IAAI,aAAa,CAAC,SAAS,KAAK,6DAAW,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YAC5D,IAAI,aAAa,CAAC,UAAU,CAAC,MAAM,KAAK,6DAAW,CAAC,GAAG,EAAC;gBACtD,aAAa,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;aACrC;iBAAK,IAAI,aAAa,CAAC,UAAU,CAAC,MAAM,KAAK,6DAAW,CAAC,EAAE,EAAC;gBAC3D,aAAa,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;aACrC;YACH,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SACrD;IACH,CAAC;IAED,qCAAY,GAAZ,UAAa,UAAe,EAAE,YAAqB,EAAE,WAAmB,EAAE,WAAoB;QAC5F,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,sGAAqB,EAAE;YAChD,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,EAAE;SAC1H,CAAC,CAAC;IACL,CAAC;IA3NmB;QAAnB,+DAAS,CAAC,OAAO,CAAC;;uDAAa;IAbrB,cAAc;QAN1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,6HAAqC;YAErC,SAAS,EAAE,CAAC,yDAAY,EAAE,wDAAW,EAAE,0DAAa,CAAC;;SACtD,CAAC;+EAoBkC,yDAAY,EAAoB,2DAAS;YACrD,wEAAa,EAAuB,wDAAW,EAAyB,0DAAa,EAAmB,6DAAW;OApB9H,cAAc,CA0O1B;IAAD,qBAAC;CAAA,CA1OmC,kFAAe,GA0OlD;AA1O0B;;;;;;;;;;;;ACjB3B,ukD;;;;;;;;;;;ACAA,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;;;;;ACAF;AAChB;AACwB;AACV;AACA;AACS;AACpB;AACyC;AAEzC;AAQhD;IAAmC,uEAAe;IAkBhD,uBAAoB,WAAwB,EAAS,SAAoB,EAAS,aAA4B,EAAU,eAAgC,EAC9I,QAAqB;QAD/B,YAEE,iBAAO,SAKP;QAPkB,iBAAW,GAAX,WAAW,CAAa;QAAS,eAAS,GAAT,SAAS,CAAW;QAAS,mBAAa,GAAb,aAAa,CAAe;QAAU,qBAAe,GAAf,eAAe,CAAiB;QAC9I,cAAQ,GAAR,QAAQ,CAAa;QAjB/B,sBAAgB,GAAQ,eAAe,CAAC;QAUxC,qBAAe,GAAG,IAAI,CAAC;QAEvB,mBAAa,GAAG,IAAI,CAAC;QAOnB,KAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,KAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,KAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,KAAI,CAAC,cAAc,EAAE,CAAC;;IACvB,CAAC;IAEF,gCAAQ,GAAR;QACE,IAAM,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAC1E,IAAI,mBAAmB,EAAE;YACvB,IAAI,CAAC,QAAQ,GAAG,mBAAmB,CAAC;SACrC;QACD,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,sCAAc,GAAd;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,wDAAS,CAAC;YAC5B,EAAE,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YACvB,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SAC/E,CAAC,CAAC;IACL,CAAC;IAED,wCAAgB,GAAhB;QACE,IAAI,CAAC,OAAO,GAAG;YACb,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE;YACtD,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE;SACtD,CAAC;IACJ,CAAC;IAED,+CAAuB,GAAvB;QACE,IAAI,CAAC,aAAa,GAAG;YACnB,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,SAAS,EAAE,OAAO;YAClB,aAAa,EAAE,IAAI,CAAC,gBAAgB;YACpC,KAAK,EAAE,IAAI,CAAC,QAAQ;SACrB,CAAC;IACJ,CAAC;IAED,4CAAoB,GAApB;QACE,IAAI,CAAC,QAAQ,GAAG;YACd,MAAM,EAAE,EAAE;YACV,SAAS,EAAE,CAAC;YACZ,UAAU,EAAE,6DAAW,CAAC,UAAU;YAClC,QAAQ,EAAE,6DAAW,CAAC,QAAQ;SAC/B,CAAC;IACJ,CAAC;IAED,mCAAW,GAAX;QAAA,iBAMC;QALC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,aAAG;YACtI,IAAI,GAAG,EAAC;gBACN,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aACtB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAU,GAAV,UAAW,IAAoB;QAC7B,IAAI,CAAC,IAAI,CAAC,mBAAmB,EAAE;YAC7B,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;SAClB;aAAM;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC;YAC1C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;YAE1D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;YACnD,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAC;gBACjB,CAAC,CAAC,UAAU,GAAG;oBACb;wBACE,IAAI,EAAE,6DAAW,CAAC,cAAc;wBAChC,IAAI,EAAE,6DAAW,CAAC,IAAI;wBACtB,aAAa,EAAE,6DAAW,CAAC,IAAI;qBAChC;iBACF,CAAC;YACJ,CAAC,CAAC,CAAC;SACJ;QACD,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC5B,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC;SAChE;QACD,IAAI,CAAC,aAAa,GAAG;YACnB,KAAK,EAAE,IAAI,CAAC,QAAQ;YACpB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,SAAS,EAAE,OAAO;YAClB,aAAa,EAAE,IAAI,CAAC,gBAAgB;YACpC,WAAW,EAAE,EAAE;YACf,oBAAoB,EAAE,IAAI;YAC1B,gBAAgB,EAAE;gBAChB,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,OAAO,EAAE,UAAU;iBACpB;aACF;SACF,CAAC;IACJ,CAAC;IAED,iCAAS,GAAT,UAAU,MAAoB;QAC5B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;QACvB,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,gCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACzB,CAAC;IAED,gCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;QAC5B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,2CAAmB,GAAnB,UAAoB,IAAS;QAA7B,iBA4BC;QA3BG,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,6DAAW,CAAC,KAAK,EAAE;YAC1D,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC;iBAChC,SAAS,CAAC,UAAC,GAA0B;gBACpC,IAAI,GAAG,CAAC,UAAU,KAAK,oDAAa,EAAE;oBACpC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;oBAC9C,KAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,KAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;qBACI;oBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;oBACpD,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;SACN;aAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAC;YAC5B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC;iBAChC,SAAS,CAAC,UAAC,GAA0B;gBACpC,IAAI,GAAG,CAAC,UAAU,KAAK,oDAAa,EAAE;oBACpC,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;oBAC9C,KAAI,CAAC,WAAW,EAAE,CAAC;oBACnB,KAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;qBACI;oBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;oBACpD,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;iBACxB;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,+BAAO,GAAP,UAAQ,aAAkB;QACxB,IAAI,aAAa,CAAC,SAAS,KAAK,6DAAW,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YAC9D,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SACpD;IACH,CAAC;IAED,oCAAY,GAAZ,UAAa,UAAe,EAAE,YAAqB,EAAE,WAAmB,EAAE,WAAoB;QAC5F,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,sGAAqB,EAAE;YAChD,YAAY,EAAE,YAAY;YAC1B,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,EAAE;SAC1H,CAAC,CAAC;IACL,CAAC;IAlKkB;QAAlB,+DAAS,CAAC,MAAM,CAAC;;qDAAY;IAhBnB,aAAa;QANzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,0HAAoC;YAEpC,SAAS,EAAE,CAAC,wDAAW,CAAC;;SACzB,CAAC;+EAmBiC,wDAAW,EAAoB,2DAAS,EAAwB,wEAAa,EAA2B,kFAAe;YACpI,6DAAW;OAnBpB,aAAa,CAoLzB;IAAD,oBAAC;CAAA,CApLkC,kFAAe,GAoLjD;AApLyB;;;;;;;;;;;;;AChB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiC;AACgB;AACjB;AACe;AAChB;AACc;AACN;AACsB;AACtD,IAAM,IAAI,GAAG,CAAE,6DAAa,EAAE,2DAAY,EAAE,yDAAW,EAAE,yEAAmB,CAAC,CAAC;;;;;;;;;;;;;ACTrF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AACH,uDAAuD;;AAEM;AAEE;AAEA;AACR;AACe;AAES;AAEV;AAIrE;IAMI,uBAAsB,UAAsB,EACd,QAAgB,EAAc,aAA4B,EAAU,eAAgC;QAD5G,eAAU,GAAV,UAAU,CAAY;QACsD,oBAAe,GAAf,eAAe,CAAiB;QALxH,aAAQ,GAAG,4DAAa,CAAC,QAAQ,GAAG,2DAAY,CAAC,aAAa,CAAC;QAClE,mBAAc,GAAG,IAAI,gEAAW,EAAE,CAAC;QACnC,kBAAa,GAAG,IAAI,4EAAa,EAAE,CAAC;QAIvC,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;QACD,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,aAAa,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;SACvE;IACL,CAAC;IAED;;;OAGG;IACI,sCAAc,GAArB,UAAsB,QAAkB;QACpC,IAAM,IAAI,GAAG,qBAAqB,CAAC;QACnC,KAAsB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE;YAA3B,IAAM,OAAO;YACd,IAAI,IAAI,KAAK,OAAO,EAAE;gBAClB,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAcM,oCAAY,GAAnB,UAAoB,aAA6B,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAErG,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAClC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa;YACvB,6BAA6B;YAC7B,kBAAkB;YAClB,WAAW;YACX,qBAAqB;SACxB,CAAC;QACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,IAAI,CAAC,QAAQ,0BAAuB,EACpE,aAAa,EACb;YACI,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAYM,+BAAO,GAAd,UAAe,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAEjE,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAClC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa,EAC1B,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,4BAAyB,EACrE;YACI,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAiBM,mCAAW,GAAlB,UAAmB,SAAsB,EAAE,MAAe,EAAE,UAAmB,EAAE,QAAiB,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QACtJ,IAAI,eAAe,GAAG,IAAI,+DAAU,CAAC,EAAC,OAAO,EAAE,IAAI,mFAA0B,EAAE,EAAC,CAAC,CAAC;QAElF,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,SAAS,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;QAC/F,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,MAAM,EAAE,QAAQ,EAAE,eAAe,CAAC,CAAC;QACzF,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,UAAU,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;QACjG,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,EAAE,eAAe,CAAC,CAAC;QAE7F,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAClC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa,EAC1B,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,wBAAqB,EACjE;YACI,MAAM,EAAE,eAAe;YACvB,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAaM,oCAAY,GAAnB,UAAoB,KAAuB,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAG/F,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa;YACvB,6BAA6B;YAC7B,kBAAkB;YAClB,WAAW;YACX,qBAAqB;SACxB,CAAC;QACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,mBAAgB,EAC5D,KAAK,EACL;YACI,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IA5MQ,aAAa;QADzB,gEAAU,EAAE;QAQR,+GAAQ,EAAE,GAAC,6GAAM,CAAC,oEAAS,CAAC,GAAoB,+GAAQ,EAAE;+EADzB,+DAAU,UAC+B,4EAAa,EAA2B,kFAAe;OAPzH,aAAa,CA8MzB;IAAD,oBAAC;CAAA;AA9MyB;;;;;;;;;;;;;AC3B1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AACH,uDAAuD;;AAEM;AAEE;AAGA;AACR;AACe;AAES;AAEV;AAKrE;IAMI,sBAAsB,UAAsB,EACT,QAAgB,EAAc,aAA4B,EAAU,eAAgC;QADjH,eAAU,GAAV,UAAU,CAAY;QAC2D,oBAAe,GAAf,eAAe,CAAiB;QAL7H,aAAQ,GAAG,4DAAa,CAAC,QAAQ,GAAG,2DAAY,CAAC,aAAa,CAAC;QAClE,mBAAc,GAAG,IAAI,gEAAW,EAAE,CAAC;QACnC,kBAAa,GAAG,IAAI,4EAAa,EAAE,CAAC;QAIvC,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;QACD,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,aAAa,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;SACvE;IACL,CAAC;IAED;;;OAGG;IACI,qCAAc,GAArB,UAAsB,QAAkB;QACpC,IAAM,IAAI,GAAG,qBAAqB,CAAC;QACnC,KAAsB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE;YAA3B,IAAM,OAAO;YACd,IAAI,IAAI,KAAK,OAAO,EAAE;gBAClB,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAaM,gCAAS,GAAhB,UAAiB,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAEnE,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QAEvC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,sBAAmB,EAC/D;YACI,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAaM,sCAAe,GAAtB,UAAuB,UAAuB,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAElG,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAClC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa;YACvB,6BAA6B;YAC7B,kBAAkB;YAClB,WAAW;YACX,qBAAqB;SACxB,CAAC;QACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,IAAI,CAAC,QAAQ,wBAAqB,EAClE,UAAU,EACV;YACI,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAaM,4BAAK,GAAZ,UAAa,YAAqB,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAEtF,IAAI,eAAe,GAAG,IAAI,+DAAU,CAAC,EAAC,OAAO,EAAE,IAAI,mFAA0B,EAAE,EAAC,CAAC,CAAC;QAClF,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,YAAY,EAAE,cAAc,EAAE,eAAe,CAAC,CAAC;QAErG,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa,EAC1B,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,sBAAmB,EAC/D;YACI,MAAM,EAAE,eAAe;YACvB,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAiBM,gCAAS,GAAhB,UAAiB,SAAsB,EAAE,MAAe,EAAE,UAAmB,EAAE,QAAiB,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAEpJ,IAAI,eAAe,GAAG,IAAI,+DAAU,CAAC,EAAC,OAAO,EAAE,IAAI,mFAA0B,EAAE,EAAC,CAAC,CAAC;QAElF,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,SAAS,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;QAC/F,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,MAAM,EAAE,QAAQ,EAAE,eAAe,CAAC,CAAC;QACzF,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,UAAU,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;QACjG,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,EAAE,eAAe,CAAC,CAAC;QAE7F,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QAEvC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,sBAAmB,EAC/D;YACI,MAAM,EAAE,eAAe;YACvB,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAYM,6BAAM,GAAb,UAAc,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAEhE,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa,EAC1B,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,0BAAuB,EACnE;YACI,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAaM,kCAAW,GAAlB,UAAmB,gBAAmC,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAE1G,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa;YACvB,6BAA6B;YAC7B,kBAAkB;YAClB,WAAW;YACX,qBAAqB;SACxB,CAAC;QACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,iBAAc,EAC1D,gBAAgB,EAChB;YACI,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAvRQ,YAAY;QADxB,gEAAU,EAAE;QAQH,+GAAQ,EAAE,GAAC,6GAAM,CAAC,oEAAS,CAAC,GAAoB,+GAAQ,EAAE;+EAD9B,+DAAU,UACoC,4EAAa,EAA2B,kFAAe;OAP9H,YAAY,CAyRxB;IAAD,mBAAC;CAAA;AAzRwB;;;;;;;;;;;;;AC7BzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;GAUG;AACH,uDAAuD;;AAEM;AAEE;AAEA;AACR;AACe;AAGT;AACQ;AAGrE;IAMI,qBAAsB,UAAsB,EACV,QAAgB,EAAc,aAA4B,EAAU,eAAgC;QADhH,eAAU,GAAV,UAAU,CAAY;QAC0D,oBAAe,GAAf,eAAe,CAAiB;QAL5H,aAAQ,GAAG,4DAAa,CAAC,QAAQ,GAAG,2DAAY,CAAC,aAAa,CAAC;QAClE,mBAAc,GAAG,IAAI,gEAAW,EAAE,CAAC;QACnC,kBAAa,GAAG,IAAI,4EAAa,EAAE,CAAC;QAIvC,IAAI,QAAQ,EAAE;YACV,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC5B;QACD,IAAI,aAAa,EAAE;YACf,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;YACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,aAAa,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC;SACvE;IACL,CAAC;IAED;;;OAGG;IACK,oCAAc,GAAtB,UAAuB,QAAkB;QACrC,IAAM,IAAI,GAAG,qBAAqB,CAAC;QACnC,KAAsB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE;YAA3B,IAAM,OAAO;YACd,IAAI,IAAI,KAAK,OAAO,EAAE;gBAClB,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;IAcM,gCAAU,GAAjB,UAAkB,aAA6B,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAEnG,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa;YACvB,6BAA6B;YAC7B,kBAAkB;YAClB,WAAW;YACX,qBAAqB;SACxB,CAAC;QACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAS,IAAI,CAAC,QAAQ,sBAAmB,EAChE,aAAa,EACb;YACI,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAgBM,8BAAQ,GAAf,UAAgB,SAAsB,EAAE,MAAe,EAAE,UAAmB,EAAE,QAAiB,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAEnJ,IAAI,eAAe,GAAG,IAAI,+DAAU,CAAC,EAAC,OAAO,EAAE,IAAI,mFAA0B,EAAE,EAAC,CAAC,CAAC;QAElF,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,SAAS,EAAE,WAAW,EAAE,eAAe,CAAC,CAAC;QAC/F,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,MAAM,EAAE,QAAQ,EAAE,eAAe,CAAC,CAAC;QACzF,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,UAAU,EAAE,YAAY,EAAE,eAAe,CAAC,CAAC;QACjG,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,EAAE,eAAe,CAAC,CAAC;QAC7F,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa,EAC1B,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,oBAAiB,EAC7D;YACI,MAAM,EAAE,eAAe;YACvB,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAaM,2BAAK,GAAZ,UAAa,EAAW,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAE5E,IAAI,eAAe,GAAG,IAAI,+DAAU,CAAC,EAAC,OAAO,EAAE,IAAI,mFAA0B,EAAE,EAAC,CAAC,CAAC;QAClF,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,IAAI,EAAE;YACjC,eAAe,GAAG,eAAe,CAAC,GAAG,CAAC,IAAI,EAAO,EAAE,CAAC,CAAC;SACxD;QAED,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa,EAC1B,CAAC;QAEF,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,wBAAqB,EACjE;YACI,MAAM,EAAE,eAAe;YACvB,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IAaM,gCAAU,GAAjB,UAAkB,KAAgB,EAAE,OAAqB,EAAE,cAA+B;QAAtD,0CAAqB;QAAE,uDAA+B;QAEtF,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC;QAElC,iCAAiC;QACjC,IAAM,iBAAiB,GAAa,EACnC,CAAC;QACF,IAAM,wBAAwB,GAAuB,IAAI,CAAC,aAAa,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,CAAC;QAC9G,IAAI,wBAAwB,KAAK,SAAS,EAAE;YACxC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,wBAAwB,CAAC,CAAC;SAC7D;QAED,uCAAuC;QACvC,IAAM,QAAQ,GAAa;YACvB,6BAA6B;YAC7B,kBAAkB;YAClB,WAAW;YACX,qBAAqB;SACxB,CAAC;QACF,IAAM,uBAAuB,GAAuB,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;QACzG,IAAI,uBAAuB,KAAK,SAAS,EAAE;YACvC,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,uBAAuB,CAAC,CAAC;SAClE;QAED,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,IAAI,CAAC,QAAQ,eAAY,EACxD,KAAK,EACL;YACI,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,eAAe;YACnD,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;SACjC,CACJ,CAAC;IACN,CAAC;IApNQ,WAAW;QADvB,gEAAU,EAAE;QAQJ,+GAAQ,EAAE,GAAC,6GAAM,CAAC,oEAAS,CAAC,GAAoB,+GAAQ,EAAE;+EAD7B,+DAAU,UACmC,4EAAa,EAA2B,kFAAe;OAP7H,WAAW,CAsNvB;IAAD,kBAAC;CAAA;AAtNuB","file":"app-modules-manage-role-right-manage-role-right-module.js","sourcesContent":["import { __decorate, __metadata } from 'tslib';\nimport { EventEmitter, Output, Input, Directive, ContentChildren, QueryList, NgZone, ViewChild, Component, forwardRef, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * CKGroup component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\">\n *      <ckbutton [name]=\"'SaveButton'\" [command]=\"'saveCommand'\" (click)=\"save($event)\"\n *                [icon]=\"'/save.png'\" [toolbar]=\"'customGroup,1'\" [label]=\"'Save'\">\n *      </ckbutton>\n *   </ckeditor>\n */\nvar CKButtonDirective = /** @class */ (function () {\n    function CKButtonDirective() {\n        this.click = new EventEmitter();\n    }\n    CKButtonDirective.prototype.initialize = function (editor) {\n        var _this = this;\n        editor.instance.addCommand(this.command, {\n            exec: function (evt) {\n                _this.click.emit(evt);\n            },\n        });\n        editor.instance.ui.addButton(this.name, {\n            label: this.label,\n            command: this.command,\n            toolbar: this.toolbar,\n            icon: this.icon,\n        });\n    };\n    CKButtonDirective.prototype.ngOnInit = function () {\n        if (!this.name)\n            throw new Error('Attribute \"name\" is required on <ckbutton>');\n        if (!this.command)\n            throw new Error('Attribute \"command\" is required on <ckbutton>');\n    };\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CKButtonDirective.prototype, \"click\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], CKButtonDirective.prototype, \"label\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], CKButtonDirective.prototype, \"command\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], CKButtonDirective.prototype, \"toolbar\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], CKButtonDirective.prototype, \"name\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], CKButtonDirective.prototype, \"icon\", void 0);\n    CKButtonDirective = __decorate([\n        Directive({\n            selector: 'ckbutton',\n        })\n    ], CKButtonDirective);\n    return CKButtonDirective;\n}());\n\n/**\n * CKGroup component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\">\n *      <ckgroup [name]=\"'exampleGroup2'\" [previous]=\"'1'\" [subgroupOf]=\"'exampleGroup1'\">\n *          .\n *          .\n *      </ckgroup>\n *   </ckeditor>\n */\nvar CKGroupDirective = /** @class */ (function () {\n    function CKGroupDirective() {\n    }\n    CKGroupDirective.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        // Reconfigure each button's toolbar property within ckgroup to hold its parent's name\n        this.toolbarButtons.forEach(function (button) { return (button.toolbar = _this.name); });\n    };\n    CKGroupDirective.prototype.initialize = function (editor) {\n        editor.instance.ui.addToolbarGroup(this.name, this.previous, this.subgroupOf);\n        // Initialize each button within ckgroup\n        this.toolbarButtons.forEach(function (button) {\n            button.initialize(editor);\n        });\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], CKGroupDirective.prototype, \"name\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CKGroupDirective.prototype, \"previous\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], CKGroupDirective.prototype, \"subgroupOf\", void 0);\n    __decorate([\n        ContentChildren(CKButtonDirective),\n        __metadata(\"design:type\", QueryList)\n    ], CKGroupDirective.prototype, \"toolbarButtons\", void 0);\n    CKGroupDirective = __decorate([\n        Directive({\n            selector: 'ckgroup',\n        })\n    ], CKGroupDirective);\n    return CKGroupDirective;\n}());\n\n/**\n * CKEditor component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\"></ckeditor>\n */\nvar CKEditorComponent = /** @class */ (function () {\n    /**\n     * Constructor\n     */\n    function CKEditorComponent(zone) {\n        this.zone = zone;\n        this.change = new EventEmitter();\n        this.editorChange = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.contentDom = new EventEmitter();\n        this.fileUploadRequest = new EventEmitter();\n        this.fileUploadResponse = new EventEmitter();\n        this.paste = new EventEmitter();\n        this.drop = new EventEmitter();\n        this._value = '';\n    }\n    CKEditorComponent_1 = CKEditorComponent;\n    Object.defineProperty(CKEditorComponent.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (v) {\n            if (v !== this._value) {\n                this._value = v;\n                this.onChange(v);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CKEditorComponent.prototype.ngOnChanges = function (changes) {\n        if (changes.readonly && this.instance) {\n            this.instance.setReadOnly(changes.readonly.currentValue);\n        }\n    };\n    /**\n     * On component destroy\n     */\n    CKEditorComponent.prototype.ngOnDestroy = function () {\n        var _this = this;\n        if (this.instance) {\n            setTimeout(function () {\n                if (_this.instance) {\n                    _this.instance.removeAllListeners();\n                    CKEDITOR.instances[_this.instance.name].destroy();\n                    _this.instance.destroy();\n                    _this.instance = null;\n                }\n            });\n        }\n    };\n    /**\n     * On component view init\n     */\n    CKEditorComponent.prototype.ngAfterViewInit = function () {\n        this.ckeditorInit(this.config || {});\n    };\n    /**\n     * On component view checked\n     */\n    CKEditorComponent.prototype.ngAfterViewChecked = function () {\n        this.ckeditorInit(this.config || {});\n    };\n    /**\n     * Value update process\n     */\n    CKEditorComponent.prototype.updateValue = function (value) {\n        var _this = this;\n        this.zone.run(function () {\n            _this.value = value;\n            _this.onChange(value);\n            _this.onTouched();\n            _this.change.emit(value);\n        });\n    };\n    /**\n     * CKEditor init\n     */\n    CKEditorComponent.prototype.ckeditorInit = function (config) {\n        var _this = this;\n        if (typeof CKEDITOR === 'undefined') {\n            console.warn('CKEditor 4.x is missing (http://ckeditor.com/)');\n        }\n        else {\n            // Check textarea exists\n            if (this.instance || !this.documentContains(this.host.nativeElement)) {\n                return;\n            }\n            if (this.readonly) {\n                config.readOnly = this.readonly;\n            }\n            // CKEditor replace textarea\n            this.instance = CKEDITOR.replace(this.host.nativeElement, config);\n            // Set initial value\n            this.instance.setData(this.value);\n            // listen for instanceReady event\n            this.instance.on('instanceReady', function (evt) {\n                // if value has changed while instance loading\n                // update instance with current component value\n                if (_this.instance.getData() !== _this.value) {\n                    _this.instance.setData(_this.value);\n                }\n                // send the evt to the EventEmitter\n                _this.ready.emit(evt);\n            });\n            // CKEditor change event\n            this.instance.on('change', function (evt) {\n                _this.onTouched();\n                var value = _this.instance.getData();\n                if (_this.value !== value) {\n                    // Debounce update\n                    if (_this.debounce) {\n                        if (_this.debounceTimeout)\n                            clearTimeout(_this.debounceTimeout);\n                        _this.debounceTimeout = setTimeout(function () {\n                            _this.updateValue(value);\n                            _this.debounceTimeout = null;\n                        }, parseInt(_this.debounce));\n                        // Live update\n                    }\n                    else {\n                        _this.updateValue(value);\n                    }\n                }\n                // Original ckeditor event dispatch\n                _this.editorChange.emit(evt);\n            });\n            // CKEditor blur event\n            this.instance.on('blur', function (evt) {\n                _this.blur.emit(evt);\n            });\n            // CKEditor focus event\n            this.instance.on('focus', function (evt) {\n                _this.focus.emit(evt);\n            });\n            // CKEditor contentDom event\n            this.instance.on('contentDom', function (evt) {\n                _this.contentDom.emit(evt);\n            });\n            // CKEditor fileUploadRequest event\n            this.instance.on('fileUploadRequest', function (evt) {\n                _this.fileUploadRequest.emit(evt);\n            });\n            // CKEditor fileUploadResponse event\n            this.instance.on('fileUploadResponse', function (evt) {\n                _this.fileUploadResponse.emit(evt);\n            });\n            // CKEditor paste event\n            this.instance.on('paste', function (evt) {\n                _this.paste.emit(evt);\n            });\n            // CKEditor drop event\n            this.instance.on('drop', function (evt) {\n                _this.drop.emit(evt);\n            });\n            // Add Toolbar Groups to Editor. This will also add Buttons within groups.\n            this.toolbarGroups.forEach(function (group) {\n                group.initialize(_this);\n            });\n            // Add Toolbar Buttons to Editor.\n            this.toolbarButtons.forEach(function (button) {\n                button.initialize(_this);\n            });\n        }\n    };\n    /**\n     * Implements ControlValueAccessor\n     */\n    CKEditorComponent.prototype.writeValue = function (value) {\n        this._value = value;\n        if (this.instance)\n            this.instance.setData(value);\n    };\n    CKEditorComponent.prototype.onChange = function (_) { };\n    CKEditorComponent.prototype.onTouched = function () { };\n    CKEditorComponent.prototype.registerOnChange = function (fn) {\n        this.onChange = fn;\n    };\n    CKEditorComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouched = fn;\n    };\n    CKEditorComponent.prototype.documentContains = function (node) {\n        return document.contains ? document.contains(node) : document.body.contains(node);\n    };\n    var CKEditorComponent_1;\n    CKEditorComponent.ctorParameters = function () { return [\n        { type: NgZone }\n    ]; };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object)\n    ], CKEditorComponent.prototype, \"config\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], CKEditorComponent.prototype, \"readonly\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], CKEditorComponent.prototype, \"debounce\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CKEditorComponent.prototype, \"change\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CKEditorComponent.prototype, \"editorChange\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CKEditorComponent.prototype, \"ready\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CKEditorComponent.prototype, \"blur\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CKEditorComponent.prototype, \"focus\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CKEditorComponent.prototype, \"contentDom\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CKEditorComponent.prototype, \"fileUploadRequest\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CKEditorComponent.prototype, \"fileUploadResponse\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CKEditorComponent.prototype, \"paste\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], CKEditorComponent.prototype, \"drop\", void 0);\n    __decorate([\n        ViewChild('host', { static: false }),\n        __metadata(\"design:type\", Object)\n    ], CKEditorComponent.prototype, \"host\", void 0);\n    __decorate([\n        ContentChildren(CKButtonDirective),\n        __metadata(\"design:type\", QueryList)\n    ], CKEditorComponent.prototype, \"toolbarButtons\", void 0);\n    __decorate([\n        ContentChildren(CKGroupDirective),\n        __metadata(\"design:type\", QueryList)\n    ], CKEditorComponent.prototype, \"toolbarGroups\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], CKEditorComponent.prototype, \"value\", null);\n    CKEditorComponent = CKEditorComponent_1 = __decorate([\n        Component({\n            selector: 'ckeditor',\n            providers: [\n                {\n                    provide: NG_VALUE_ACCESSOR,\n                    useExisting: forwardRef(function () { return CKEditorComponent_1; }),\n                    multi: true,\n                },\n            ],\n            template: \"\\n    <textarea #host></textarea>\\n  \"\n        }),\n        __metadata(\"design:paramtypes\", [NgZone])\n    ], CKEditorComponent);\n    return CKEditorComponent;\n}());\n\n/**\n * CKEditorModule\n */\nvar CKEditorModule = /** @class */ (function () {\n    function CKEditorModule() {\n    }\n    CKEditorModule = __decorate([\n        NgModule({\n            imports: [CommonModule],\n            declarations: [CKEditorComponent, CKButtonDirective, CKGroupDirective],\n            exports: [CKEditorComponent, CKButtonDirective, CKGroupDirective],\n        })\n    ], CKEditorModule);\n    return CKEditorModule;\n}());\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CKEditorModule, CKEditorComponent as ɵa, CKButtonDirective as ɵb, CKGroupDirective as ɵc };\n//# sourceMappingURL=ng2-ckeditor.js.map\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ModuleComponent } from './module/module.component';\nimport { RoleComponent } from './role/role.component';\nimport { RightComponent } from './right/right.component';\nimport { PageInformationComponent } from './page-information/page-information.component';\n\nconst routes: Routes = [\n    {\n        path: 'module',\n        component: ModuleComponent,\n        data: {title: 'module'}\n    },\n    {\n        path: 'role',\n        component: RoleComponent,\n        data: {title: 'Role'}\n    },\n    {\n        path: 'right',\n        component: RightComponent,\n        data: {title: 'Right'}\n    },\n    {\n        path: 'page-information',\n        component: PageInformationComponent,\n        data: {title: 'Page Information'}\n    }\n\n];\n\n@NgModule({\n    imports: [ RouterModule.forChild(routes) ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class ManageRoutingModule{}\n","\nimport { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HTTP_INTERCEPTORS, HttpBackend, HttpClientModule } from '@angular/common/http';\nimport { SharedManagementModule } from '../../shared/shared.module';\nimport {TokenInterceptor} from '../../interceptors/token-interceptor';\nimport { ModuleComponent } from './module/module.component';\nimport { RoleComponent } from './role/role.component';\nimport { RightComponent } from './right/right.component';\nimport { ManageRoutingModule } from './manage-role-right-routing.module';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { MatcomponentsModule } from 'app/main/matcomponents.module';\nimport { NgHttpLoaderModule } from 'ng-http-loader';\nimport { PageInformationComponent } from './page-information/page-information.component';\nimport {CKEditorModule} from 'ng2-ckeditor';\n\n\n@NgModule({\n    imports: [\n        HttpClientModule,\n        CommonModule,\n        RouterModule,\n        FormsModule,\n        ReactiveFormsModule,\n        FuseSharedModule,\n        SharedManagementModule,\n        MatcomponentsModule,\n        ManageRoutingModule,\n        NgHttpLoaderModule.forRoot(),\n        CKEditorModule\n    ],\n    declarations: [\n    ModuleComponent,\n    RoleComponent,\n    RightComponent,\n    PageInformationComponent],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenInterceptor,\n            multi: true,\n        },\n        // CommonService\n    ],\n    schemas: [NO_ERRORS_SCHEMA]\n})\n\nexport class ManageRoleRightModule { }\n","module.exports = \"<app-table  [settings]=\\\"tableSettings\\\" [closeRowForm]=closeForm \\n[templateRef]=\\\"newModule\\\" (getTableData)='tableData($event)'\\n(openAddForm)='openForm()' (rowBasedAction)='actions($event)'>\\n</app-table>\\n\\n<ng-template #newModule>\\n  <form [formGroup]=\\\"moduleForm\\\" (ngSubmit)=\\\"createOrUpdateClass(moduleForm.value)\\\" #module=\\\"ngForm\\\">\\n\\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" class=\\\"pt-24\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-form-field appearance=\\\"outline\\\"  class=\\\" mr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"35\\\"\\n        fxFlex=\\\"100\\\">\\n        <mat-label #moduleName translate>Module Name</mat-label>\\n        <input required matInput autocomplete=\\\"off\\\" (keyup)=\\\"preventSpace($event,'moduleForm','name')\\\" (blur)=\\\"trimTextBoxSpaces('moduleForm','name')\\\" formControlName=\\\"name\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"moduleName.innerText\\\" [validationControl]=\\\"moduleForm.controls.name\\\"\\n            [doValidate]=\\\"isFormSubmitted\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n      <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\"  (click)=\\\"onCancel()\\\">Cancel</button>\\n      <button *ngIf=\\\"showCreateBtn\\\" mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\">Create</button>\\n      <button *ngIf=\\\"!showCreateBtn\\\" mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\">Update</button>\\n    </div>\\n  </form>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlLXJvbGUtcmlnaHQvbW9kdWxlL21vZHVsZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { AppSettings } from 'app/app.constants';\nimport { ModuleGridView, ModuleResultView, ValidationMessageView } from '../model/module-grid-view';\nimport { ModuleService } from '../service/module.service';\nimport { CommonService } from 'app/service/common.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as HttpStatus from 'http-status-codes';\nimport { MatDialog } from '@angular/material';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { CommonComponent } from 'app/shared/common/common.component';\n\n@Component({\n  selector: 'app-module',\n  templateUrl: './module.component.html',\n  styleUrls: ['./module.component.scss'],\n  providers: [ModuleService]\n})\nexport class ModuleComponent extends CommonComponent implements OnInit {\n  columns: any[];\n  currentComponent: any = 'ModuleComponent';\n  gridView: ModuleGridView;\n  rows: any[];\n  totalRowsCount: number;\n  pageCnt: number;\n  tableSettings: { model: ModuleGridView; rows: any[];\n  columns: any; totalRowsCount?: number; pageCnt?: number;\n  tablename: string; componentName: any; visibleSelectAll?: boolean;\n  isSelectRowRequired?: boolean; isPaginationRequired?: boolean; \n  filtersList?: any[]; headerOperations?: {}; };\n  moduleForm: any;\n  isFormSubmitted = true;\n  closeForm: boolean;\n  showCreateBtn = true;\n\n  @ViewChild('module') myModuleForm;\n\n  constructor(private moduleService: ModuleService, public dialogRef: MatDialog, public commonService: CommonService) {\n    super();\n    this.initializeFilterView();\n    this.initializeTableSettings();\n    this.setColumnHeaders();\n    this.initializeForm();\n  }\n\n  ngOnInit(): void {\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.gridView = modelTableComponent;\n    }\n    this.getModuleGrid();\n  }\n\n  initializeForm(): void {\n    this.moduleForm = new FormGroup({\n      id: new FormControl(''),\n      name: new FormControl('', [Validators.required, Validators.maxLength(15)]),\n    });\n  }\n\n  setColumnHeaders(): void {\n    this.columns = [\n      { field: 'name', header: 'Module Name', sort: true },\n      { field: 'actions', header: 'Actions ', sort: false }\n    ];\n  }\n\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.columns,\n      tablename: 'Modules',\n      componentName: this.currentComponent,\n      model: this.gridView\n    };\n  }\n\n  initializeFilterView(): void {\n    this.gridView = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n  }\n\n  getModuleGrid(): void {\n    this.moduleService.modulesGrid(this.gridView.sortOrder, this.gridView.sortBy, this.gridView.pageNumber, this.gridView.pageSize).subscribe(res => {\n      if (res) {\n        this.bindResult(res);\n      }\n    });\n  }\n\n  bindResult(data: ModuleResultView): any {\n    if (!data.pagedModuleViewModels) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n    } else {\n      this.rows = data.pagedModuleViewModels.list;\n      this.totalRowsCount = data.pagedModuleViewModels.totalItems;\n\n      this.pageCnt = data.pagedModuleViewModels.totalPages;\n      this.rows.forEach(e => {\n        e.operations = [\n          {\n            name: AppSettings.EDIT_OPERATION,\n            icon: AppSettings.EDIT,\n            operationName: AppSettings.EDIT\n          }\n        ];\n      });\n    }\n    if (data.pagedModuleViewModels) {\n      this.gridView.pageNumber = data.pagedModuleViewModels.pageNumber;\n    }\n    this.tableSettings = {\n      model: this.gridView,\n      rows: this.rows,\n      columns: this.columns,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      tablename: 'Modules',\n      componentName: this.currentComponent,\n      filtersList: [],\n      isPaginationRequired: true,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: 'Add Module'\n        }\n      }\n    };\n  }\n\n  tableData(_event: ModuleGridView): void {\n    this.gridView = _event;\n    this.getModuleGrid();\n  }\n\n  openForm(): void {\n    this.initializeForm();\n    this.closeForm = false;\n  }\n\n  onCancel(): void {\n    this.closeForm = true;\n    this.showCreateBtn = true;\n    this.myModuleForm.resetForm();\n    this.initializeForm();\n  }\n\n  createOrUpdateClass(form: any): void {\n    if (!form.id && this.moduleForm.status === AppSettings.VALID) {\n      this.moduleService.createModule(form)\n        .subscribe((res: ValidationMessageView) => {\n          if (res.statusCode === HttpStatus.OK) {\n            this.dialogMethod(res.messages.ResultMessage, true, AppSettings.OK);\n            this.getModuleGrid();\n            this.onCancel();\n          }\n          else {\n            this.dialogMethod(res.messages.ResultMessage, true, AppSettings.OK);\n            this.closeForm = false;\n          }\n        });\n    } else if (this.moduleForm.valid) {\n      this.moduleService.updateModule(form)\n        .subscribe((res: ValidationMessageView) => {\n          if (res.statusCode === HttpStatus.OK) {\n            this.dialogMethod(res.messages.ResultMessage, true, AppSettings.OK);\n            this.getModuleGrid();\n            this.onCancel();\n          }\n          else {\n            this.dialogMethod(res.messages.ResultMessage, true, AppSettings.OK);\n            this.closeForm = false;\n          }\n        });\n    }\n  }\n\n  actions(operationData: any): void {\n    if (operationData.operation === AppSettings.EDIT.toLowerCase()) {\n      this.showCreateBtn = false;\n      this.closeForm = false;\n      this.moduleForm.patchValue(operationData.clickedRow);\n    }\n  }\n\n  dialogMethod(dialogData: any, disableClose: boolean, button1Text: string, button2Text?: string): any {\n    return this.dialogRef.open(CustomDialogComponent, {\n      disableClose: disableClose,\n      data: { text: this.commonService.getTranslation(dialogData), action: true, btn1Text: button1Text, btn2Text: button2Text },\n    });\n  }\n}\n","module.exports = \"<app-table [settings]=\\\"tableSettings\\\" [closeRowForm]=closeForm [templateRef]=\\\"addPageInfo\\\"\\n  (getTableData)='tableData($event)' (openAddForm)='openForm()' (rowBasedAction)='actions($event)'>\\n</app-table>\\n\\n<ng-template #addPageInfo>\\n  <form [formGroup]=\\\"pageInfoForm\\\" (ngSubmit)=\\\"savePageInfoForm(pageInfoForm.value)\\\" #pageInfo=\\\"ngForm\\\">\\n    \\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pt-24\\\">\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\" mr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"35\\\" fxFlex=\\\"100\\\">\\n        <mat-label translate #key>Key</mat-label>\\n        <input matInput formControlName=\\\"key\\\" autocomplete=\\\"off\\\" (keyup)=\\\"preventSpace($event,'pageInfoForm','key')\\\" (blur)=\\\"trimTextBoxSpaces('pageInfoForm','key')\\\" required>\\n        <mat-error>\\n          <app-validation [labelName]=\\\"key.innerText\\\" [validationControl]=\\\"pageInfoForm.controls.key\\\"\\n            [doValidate]=\\\"isFormSubmitted\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\" mr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"35\\\" fxFlex=\\\"100\\\">\\n        <mat-label translate #culture>Calture/Language</mat-label>\\n        <mat-select required formControlName=\\\"culture\\\" >\\n          <mat-option *ngFor=\\\"let language of languages\\\" [value]=\\\"language.value\\\" >\\n            {{language.label}}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          <app-validation [labelName]=\\\"culture.innerText\\\" [validationControl]=\\\"pageInfoForm.controls.culture\\\"\\n            [doValidate]=\\\"isFormSubmitted\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n      \\n      \\n      <ckeditor required formControlName=\\\"value\\\"\\n      [(ngModel)]=\\\"value\\\"\\n      [readonly]=\\\"false\\\"\\n      (change)=\\\"onChange($event)\\\"\\n      (editorChange)=\\\"onEditorChange($event)\\\"\\n      debounce=\\\"500\\\">\\n  </ckeditor>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-32 pt-24\\\">\\n      <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"reset\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n      <button *ngIf=\\\"showCreateBtn\\\" mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\"\\n        color=\\\"accent\\\">Create</button>\\n      <button *ngIf=\\\"!showCreateBtn\\\" mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\"\\n        color=\\\"accent\\\">Update</button>\\n    </div>\\n  </form>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlLXJvbGUtcmlnaHQvcGFnZS1pbmZvcm1hdGlvbi9wYWdlLWluZm9ybWF0aW9uLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport * as HttpStatus from 'http-status-codes';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\nimport { LocalizationService } from '../service/localization.service';\nimport { AppSettings } from 'app/app.constants';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { PageInfoGridView, PageInfoResultView, ValidationMessageView } from '../model/page-info-grid-view';\n\n@Component({\n  selector: 'app-page-information',\n  templateUrl: './page-information.component.html',\n  styleUrls: ['./page-information.component.scss'],\n  providers: [LocalizationService],\n})\nexport class PageInformationComponent extends CommonComponent implements OnInit {\n  columns: any[];\n  currentComponent: any = 'PageInformationComponent';\n  rows: any[];\n  totalRowsCount: number;\n  pageCnt: number;\n  tableSettings: {\n    model: PageInfoGridView; rows: any[];\n    columns: any; totalRowsCount?: number; pageCnt?: number;\n    tablename: string; componentName: any; visibleSelectAll?: boolean;\n    isSelectRowRequired?: boolean; isPaginationRequired?: boolean; filtersList?: any[]; headerOperations?: {}; rowGroupingColumns?: any[];\n  };\n  isFormSubmitted = true;\n  closeForm: boolean;\n  showCreateBtn = true;\n  gridView: PageInfoGridView;\n  pageInfoForm: any;\n  ckeditorContent: string;\n  selectedLanguage: string;\n  languages: Array<any> = [];\n\n  @ViewChild('pageInfo') _pageInformationForm;\n  constructor(public dialogRef: MatDialog,\n    public commonService: CommonService, private localizationService: LocalizationService, public snackBar: MatSnackBar) {\n    super();\n\n    this.initializeFilterView();\n    this.initializeTableSettings();\n    this.setColumnHeaders();\n    this.initializeForm();\n  }\n\n  ngOnInit(): void {\n    this.loadlanguages();\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.gridView = modelTableComponent;\n    }\n    this.getTableData();\n  }\n\n  setColumnHeaders(): void {\n    this.columns = [\n      { field: 'key', header: 'Key', sort: true },\n      { field: 'value', header: 'Value', sort: true, innerHTML: true },\n      { field: 'culture', header: 'Culture/Language', sort: true },\n      { field: 'actions', header: 'Actions ', sort: false }\n    ];\n  }\n\n  initializeFilterView(): void {\n    this.gridView = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n  }\n\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.columns,\n      tablename: 'Page Information',\n      componentName: this.currentComponent,\n      model: this.gridView\n    };\n  }\n\n  initializeForm(): void {\n    this.pageInfoForm = new FormGroup({\n      id: new FormControl(''),\n      key: new FormControl('', [Validators.required, Validators.maxLength(45)]),\n      value: new FormControl('', [Validators.required, Validators.maxLength(4500)]),\n      culture: new FormControl('', [Validators.required, Validators.maxLength(3)]),\n    });\n  }\n\n  tableData(_event: PageInfoGridView): void {\n    this.gridView = _event;\n    this.getTableData();\n  }\n\n  getTableData(): void {\n    this.localizationService.FetchPageInformationList(this.gridView.key, this.gridView.value, this.gridView.culture,\n      this.gridView.sortBy, this.gridView.sortOrder, this.gridView.pageNumber, this.gridView.pageSize).subscribe(res => {\n        if (res) {\n          this.bindResult(res);\n        }\n      });\n  }\n\n  bindResult(data: PageInfoResultView): any {\n    if (!data.pageInformationList) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n    } else {\n      this.rows = data.pageInformationList.list;\n      this.totalRowsCount = data.pageInformationList.totalItems;\n\n      this.pageCnt = data.pageInformationList.totalPages;\n      this.rows.forEach(e => {\n        e.operations = [\n          {\n            name: AppSettings.EDIT_OPERATION,\n            icon: AppSettings.EDIT,\n            operationName: AppSettings.EDIT\n          },\n          {\n            name: AppSettings.DELETE_OPERATION,\n            icon: AppSettings.DELETE,\n            operationName: AppSettings.DELETE\n          },\n          {\n            name: AppSettings.VIEW_OPERATION,\n            icon: AppSettings.DETAILS_ICON,\n            operationName: AppSettings.VIEW\n          }\n        ];\n      });\n    }\n    if (data.pageInformationList) {\n      this.gridView.pageNumber = data.pageInformationList.pageNumber;\n    }\n    this.tableSettings = {\n      model: this.gridView,\n      rows: this.rows,\n      columns: this.columns,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      tablename: 'Page Information',\n      componentName: this.currentComponent,\n      filtersList: data.filters,\n      rowGroupingColumns: ['key'],\n      isPaginationRequired: true,\n      headerOperations: {\n        infoButton: {\n          required: true,\n          text: 'Page Information'\n          },\n        addingForm: {\n          required: true,\n          btnName: 'Add'\n        }\n      }\n    };\n  }\n\n\n  openForm(): void {\n    this.initializeForm();\n    // this.isFormSubmitted = false;\n    this.closeForm = false;\n  }\n\n  onCancel(): void {\n    this.closeForm = true;\n    // this.isFormSubmitted = false;\n    this.showCreateBtn = true;\n    this._pageInformationForm.resetForm();\n    this._pageInformationForm.submitted = false;\n    this.pageInfoForm.reset();\n    this.initializeForm();\n  }\n\n  actions(operationData: any): void {\n    if (operationData.operation === AppSettings.EDIT.toLowerCase()) {\n      this.isFormSubmitted = false;\n      this.showCreateBtn = false;\n      this.closeForm = false;\n      this.pageInfoForm.patchValue(operationData.clickedRow);\n    }\n    else if (operationData.operation === AppSettings.DELETE.toLocaleLowerCase()) {\n      const dialogValue = this.commonService.dialog(AppSettings.WARNING_ON_SINGLE_DELETE, true, AppSettings.NO, AppSettings.YES);\n      dialogValue.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          const infoId: string = operationData.clickedRow.id;\n          this.localizationService.deletePageInformation(infoId).subscribe(response => {\n            this.commonService.dialog(response.messages.ResultMessage, true, AppSettings.OK);\n            this.getTableData();\n          }, error => {\n            this.errorResponse(error);\n          });\n        }\n      });\n\n    }\n    else if (operationData.operation === AppSettings.VIEW_OPERATION.toLocaleLowerCase()) {\n      this.getPageInformation(operationData.clickedRow.id);\n    }\n  }\n\n  dialogMethod(dialogData: any, disableClose: boolean, button1Text: string, button2Text?: string): any {\n    return this.dialogRef.open(CustomDialogComponent, {\n      disableClose: disableClose,\n      data: { text: this.commonService.getTranslation(dialogData), action: true, btn1Text: button1Text, btn2Text: button2Text },\n    });\n  }\n\n  getPageInformation(event): void {\n    this.localizationService.getPageInformationById(event).subscribe(\n      res => {\n        this.dialogRef.open(CustomDialogComponent, {\n          width: '400px',\n          data: {\n            title: res.pageInformationViewModel.key,\n            tableInformation: this.commonService.getTranslation(res.pageInformationViewModel.value), action: true, btn1Text: AppSettings.Ok\n          },\n        });\n\n      }\n    );\n  }\n\n  savePageInfoForm(form): void {\n    this.isFormSubmitted = true;\n    if (!form.id && this.pageInfoForm.status === AppSettings.VALID) {\n      this.localizationService.createPageinformation(form)\n        .subscribe((res: ValidationMessageView) => {\n          if (res.statusCode === HttpStatus.OK) {\n            this.dialogMethod(res.messages.ResultMessage, true, AppSettings.OK);\n            this.getTableData();\n            this.onCancel();\n          }\n          else {\n            this.dialogMethod(res.messages.ResultMessage, true, AppSettings.OK);\n            this.closeForm = false;\n          }\n        });\n    } else if (this.pageInfoForm.valid) {\n      this.localizationService.updatePageInformation(form)\n        .subscribe((res: ValidationMessageView) => {\n          if (res.statusCode === HttpStatus.OK) {\n            this.dialogMethod(res.messages.ResultMessage, true, AppSettings.OK);\n            this.getTableData();\n            this.onCancel();\n          }\n          else {\n            this.dialogMethod(res.messages.ResultMessage, true, AppSettings.OK);\n            this.closeForm = false;\n          }\n        });\n    }\n  }\n\n\n  onChange(event): void {\n    this.ckeditorContent = event;\n  }\n  onEditorChange(event): void {\n    this.ckeditorContent = event;\n  }\n\n  loadlanguages(): void {\n    // read list of launguages from json file\n    this.commonService.getLaunguage().subscribe(res => {\n      if (res !== undefined && res.languages) {\n        res.languages.forEach(element => {\n          this.languages.push({\n            label: element.title,\n            value: element.id\n          });\n        });\n      }\n\n    });\n  }\n\n  getHelpText(event): string {\n    let helptext: string;\n    this.selectedLanguage = localStorage.getItem('_l');\n    if (this.selectedLanguage === null || this.selectedLanguage === undefined) {\n      this.selectedLanguage = 'en';\n    }\n\n    this.localizationService.getPageInformationByKeyandCulture('event', this.selectedLanguage).subscribe(\n      res => {\n        if (res.pageInformationViewModel !== null) {\n          helptext = res.pageInformationViewModel.value;\n        }\n        else {\n          helptext = res.pageInformationViewModel;\n        }\n      }\n    );\n    return helptext;\n  }\n}\n\n","module.exports = \"<app-table [settings]=\\\"tableSettings\\\" [closeRowForm]=closeForm [templateRef]=\\\"newRight\\\"\\n  (getTableData)='tableData($event)' (openAddForm)='openForm()' (rowBasedAction)='actions($event)'>\\n</app-table>\\n\\n\\n<ng-template #newRight>\\n  <form [formGroup]=\\\"rightForm\\\" (ngSubmit)=\\\"createOrUpdateRight(rightForm.value)\\\" #right=\\\"ngForm\\\">\\n\\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex.gt-sm=\\\"35\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"pr-sm-20\\\"\\n        fxLayout=\\\"column\\\">\\n        <mat-label translate #module>Module</mat-label>\\n        <mat-select required placeholder=\\\"Module\\\" formControlName=\\\"moduleId\\\">\\n          <mat-option *ngFor=\\\"let module of modules\\\" [value]=\\\"module.value\\\">\\n            {{ module.label }}</mat-option>\\n        </mat-select>\\n        <mat-error>\\n          <app-validation [labelName]=\\\"module.innerText\\\" [validationControl]=\\\"rightForm.controls.moduleId\\\"\\n            [doValidate]=\\\"isFormSubmitted\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex.gt-sm=\\\"35\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"pr-sm-20\\\"\\n        fxLayout=\\\"column\\\">\\n        <mat-label translate #role>Role</mat-label>\\n        <mat-select required placeholder=\\\"Role\\\" formControlName=\\\"roleId\\\">\\n          <mat-option *ngFor=\\\"let role of roles\\\" [value]=\\\"role.value\\\">\\n            {{ role.label }}</mat-option>\\n        </mat-select>\\n        <mat-error>\\n          <app-validation [labelName]=\\\"role.innerText\\\" [validationControl]=\\\"rightForm.controls.roleId\\\"\\n            [doValidate]=\\\"isFormSubmitted\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex.gt-sm=\\\"35\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"pr-sm-20\\\"\\n        fxLayout=\\\"column\\\">\\n        <mat-label translate #parentRight>Parent Right</mat-label>\\n        <mat-select required placeholder=\\\"Parent Right\\\" formControlName=\\\"parentRightId\\\">\\n          <mat-option *ngFor=\\\"let parentRight of parentRights\\\" [value]=\\\"parentRight.value\\\">\\n            {{ parentRight.label }}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"35\\\" fxFlex=\\\"100\\\">\\n        <mat-label translate #menuName>Menu Name</mat-label>\\n        <input required matInput formControlName=\\\"name\\\" autocomplete=\\\"off\\\" (keyup)=\\\"preventSpace($event,'rightForm','name')\\\" (blur)=\\\"trimTextBoxSpaces('rightForm','name')\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"menuName.innerText\\\" [validationControl]=\\\"rightForm.controls.name\\\"\\n            [doValidate]=\\\"isFormSubmitted\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"35\\\" fxFlex=\\\"100\\\">\\n        <mat-label translate #url>Url</mat-label>\\n        <input matInput formControlName=\\\"url\\\" autocomplete=\\\"off\\\" (keyup)=\\\"preventSpace($event,'rightForm','url')\\\" (blur)=\\\"trimTextBoxSpaces('rightForm','url')\\\">\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"35\\\" fxFlex=\\\"100\\\">\\n        <mat-label translate #displayOrder>Display Order</mat-label>\\n        <input required matInput formControlName=\\\"displayOrder\\\" autocomplete=\\\"off\\\" (keyup)=\\\"preventSpace($event,'rightForm','displayOrder')\\\" (blur)=\\\"trimTextBoxSpaces('rightForm','displayOrder')\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"displayOrder.innerText\\\" [validationControl]=\\\"rightForm.controls.displayOrder\\\"\\n            [doValidate]=\\\"isFormSubmitted\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-form-field appearance=\\\"outline\\\" fxFlex.gt-sm=\\\"35\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"pr-sm-20\\\"\\n        fxLayout=\\\"column\\\">\\n        <mat-label translate #isMenu>Is Menu</mat-label>\\n        <mat-select placeholder=\\\"IsMenu\\\" formControlName=\\\"isMenu\\\">\\n          <mat-option *ngFor=\\\"let isMenu of isMenus\\\" [value]=\\\"isMenu.value\\\">\\n            {{ isMenu.label }}</mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\" pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"35\\\" fxFlex=\\\"100\\\">\\n        <mat-label translate #icon>Icon</mat-label>\\n        <input matInput formControlName=\\\"icon\\\" autocomplete=\\\"off\\\" (keyup)=\\\"preventSpace($event,'rightForm','icon')\\\" (blur)=\\\"trimTextBoxSpaces('rightForm','icon')\\\">\\n      </mat-form-field>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n      <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n      <button *ngIf=\\\"showCreateBtn\\\" mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\"\\n        color=\\\"accent\\\">Create</button>\\n      <button *ngIf=\\\"!showCreateBtn\\\" mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\"\\n        color=\\\"accent\\\">Update</button>\\n    </div>\\n  </form>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlLXJvbGUtcmlnaHQvcmlnaHQvcmlnaHQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, ViewChild, OnInit } from '@angular/core';\nimport { AppSettings, Pattern } from 'app/app.constants';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { RightService, RoleService, ModuleService } from '../service/api';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { RightGridView, RightResultView, ValidationMessageView } from '../model/right-grid-view';\nimport * as HttpStatus from 'http-status-codes';\n\n@Component({ \n  selector: 'app-right',\n  templateUrl: './right.component.html',\n  styleUrls: ['./right.component.scss'],\n  providers: [RightService, RoleService, ModuleService]\n})\nexport class RightComponent extends CommonComponent implements OnInit {\n  columns: any[];\n  currentComponent: any = 'RightComponent';\n  gridView: RightGridView;\n  rows: any[];\n  totalRowsCount: number;\n  pageCnt: number;\n  tableSettings: { };\n  rightForm: any;\n  isFormSubmitted = true;\n  closeForm: boolean;\n  showCreateBtn = true;\n\n  @ViewChild('right') myRightForm;\n  modules: any[] = [];\n  roles: any[] = [];\n  parentRights: any[] = [];\n  isMenus: any[] = [];\n\n  constructor(private rightService: RightService, public dialogRef: MatDialog, \n  public commonService: CommonService, private roleService: RoleService, private moduleService: ModuleService, public snackBar: MatSnackBar) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.initializeFilterView();\n    this.setColumnHeaders();\n    this.initializeForm();\n    this.initializeTableSettings();\n\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.gridView = modelTableComponent;\n    }\n    this.roleService.roles().subscribe(data => {\n      data.roleView.forEach(element =>\n        this.roles.push({ label: element.roleName, value: element.id })\n      );\n    });\n\n    this.moduleService.modules().subscribe(data => {\n      data.forEach(element =>\n        this.modules.push({ label: element.name, value: element.id })\n      );\n    });\n    this.getRights();\n    this.isMenus = [{ label: 'Yes', value: 1 }, { label: 'No', value: 0}];\n    this.getModuleGrid();\n  }\n\n  getRights(): void{\n    this.rightService.rights().subscribe(data => {\n      data.forEach(element =>\n        this.parentRights.push({ label: element.name, value: element.id })\n      );\n    });\n  }\n\n  initializeForm(): void {\n    this.rightForm = new FormGroup({\n      id: new FormControl(''),\n      moduleId: new FormControl('', [Validators.required]),\n      roleId: new FormControl('', [Validators.required]),\n      url: new FormControl(''),\n      isMenu: new FormControl(''),\n      displayOrder: new FormControl('', [Validators.required, Validators.pattern(Pattern.NUMBER_PATTERN)]),\n      parentRightId: new FormControl(''),\n      icon: new FormControl(''),\n      name: new FormControl('', [Validators.required, Validators.maxLength(30)]),\n    });\n  }\n\n  setColumnHeaders(): void {\n    this.columns = [\n      { field: 'name', header: 'Right Name', sort: true },\n      { field: 'parentRightName', header: 'Parent Right Name', sort: true },\n      { field: 'moduleName', header: 'Module Name', sort: true },\n      { field: 'roleName', header: 'Role Name', sort: true },\n      { field: 'url', header: 'Url', sort: true },\n      { field: 'isMenu', header: 'IsMenu', sort: true },\n      { field: 'displayOrder', header: 'Display Order', sort: true },\n      { field: 'icon', header: 'Icon', sort: true },\n      { field: 'actions', header: 'Actions ', sort: false }\n    ];\n  }\n\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.columns,\n      tablename: 'Rights',\n      componentName: this.currentComponent,\n      model: this.gridView\n    };\n  }\n\n  initializeFilterView(): void {\n    this.gridView = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n  }\n\n  getModuleGrid(): void {\n    this.rightService.rightGrid(this.gridView.sortOrder, this.gridView.sortBy, this.gridView.pageNumber, this.gridView.pageSize).subscribe(res => {\n      if (res) {\n        this.bindResult(res);\n      }\n    });\n  }\n\n  bindResult(data: RightResultView): any {\n    if (!data.pagedRightViewModels) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n    } else {\n      this.rows = data.pagedRightViewModels.list;\n      this.totalRowsCount = data.pagedRightViewModels.totalItems;\n\n      this.pageCnt = data.pagedRightViewModels.totalPages;\n      this.rows.forEach(e => {\n       if (e.isMenu === 1){\n         e.isMenu = this.commonService.getTranslation(AppSettings.Yes);\n       }else if (e.isMenu === 0){\n        e.isMenu = this.commonService.getTranslation(AppSettings.No);\n       }\n        e.operations = [\n          {\n            name: AppSettings.EDIT_OPERATION,\n            icon: AppSettings.EDIT,\n            operationName: AppSettings.EDIT\n          }\n        ];\n      });\n    }\n    if (data.pagedRightViewModels) {\n      this.gridView.pageNumber = data.pagedRightViewModels.pageNumber;\n    }\n    this.tableSettings = {\n      model: this.gridView,\n      rows: this.rows,\n      columns: this.columns,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      tablename: 'Rights',\n      componentName: this.currentComponent,\n      isPaginationRequired: true,\n      filtersList: [],\n      headerOperations: {\n        infoButton: {\n          required: true,\n          text: 'Page Information'\n          },\n        addingForm: {\n          required: true,\n          btnName: 'Add'\n        }\n      }\n    };\n  }\n\n  tableData(_event: RightGridView): void {\n    this.gridView = _event;\n    this.getModuleGrid();\n  }\n\n  openForm(): void {\n    this.initializeForm();\n    this.closeForm = false;\n  }\n\n  onCancel(): void {\n    this.closeForm = true;\n    this.showCreateBtn = true;\n    this.myRightForm.resetForm();\n    this.initializeForm();\n  }\n\n  createOrUpdateRight(form: any): void {\n    if (!form.id && this.rightForm.status === AppSettings.VALID) {\n      this.rightService.createMenuRight(form)\n        .subscribe((res: ValidationMessageView) => {\n          if (res.statusCode === HttpStatus.OK) {\n            this.dialogMethod(res.messages.ResultMessage, true, AppSettings.OK);\n            this.getModuleGrid();\n            this.getRights();\n            this.onCancel();\n          }\n          else {\n            this.dialogMethod(res.messages.ResultMessage, true, AppSettings.OK);\n            this.closeForm = false;\n          }\n        });\n    } else if (this.rightForm.valid) {\n      this.rightService.updateRight(form)\n        .subscribe((res: ValidationMessageView) => {\n          if (res.statusCode === HttpStatus.OK) {\n            this.openSnackBar(res.messages.ResultMessage);\n            this.getModuleGrid();\n            this.getRights();\n            this.onCancel();\n          }\n          else {\n            this.openSnackBar(res.messages.ResultMessage, true);\n            this.closeForm = false;\n          }\n        });\n    }\n  }\n\n  actions(operationData: any): void {\n    if (operationData.operation === AppSettings.EDIT.toLowerCase()) {\n        if (operationData.clickedRow.isMenu === AppSettings.YES){\n          operationData.clickedRow.isMenu = 1;\n        }else if (operationData.clickedRow.isMenu === AppSettings.NO){\n          operationData.clickedRow.isMenu = 0;\n        }\n      this.isFormSubmitted = false;\n      this.showCreateBtn = false;\n      this.closeForm = false;\n      this.rightForm.patchValue(operationData.clickedRow);\n    }\n  }\n\n  dialogMethod(dialogData: any, disableClose: boolean, button1Text: string, button2Text?: string): any {\n    return this.dialogRef.open(CustomDialogComponent, {\n      disableClose: disableClose,\n      data: { text: this.commonService.getTranslation(dialogData), action: true, btn1Text: button1Text, btn2Text: button2Text },\n    });\n  }\n\n}\n","module.exports = \"<app-table  [settings]=\\\"tableSettings\\\" [closeRowForm]=closeForm \\n[templateRef]=\\\"newRole\\\" (getTableData)='tableData($event)'\\n(openAddForm)='openForm()' (rowBasedAction)='actions($event)'>\\n</app-table>\\n\\n<ng-template #newRole>\\n  <form [formGroup]=\\\"roleForm\\\" (ngSubmit)=\\\"createOrUpdateClass(roleForm.value)\\\" #role=\\\"ngForm\\\">\\n\\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" class=\\\"pt-24\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-form-field appearance=\\\"outline\\\"  class=\\\" mr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"35\\\"\\n        fxFlex=\\\"100\\\">\\n        <mat-label #roleName translate>Role Name</mat-label>\\n        <input required matInput autocomplete=\\\"off\\\" (keyup)=\\\"preventSpace($event,'roleForm','roleName')\\\" (blur)=\\\"trimTextBoxSpaces('roleForm','roleName')\\\" formControlName=\\\"roleName\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"roleName.innerText\\\" [validationControl]=\\\"roleForm.controls.roleName\\\"\\n            [doValidate]=\\\"isFormSubmitted\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n      <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\"  (click)=\\\"onCancel()\\\">Cancel</button>\\n      <button *ngIf=\\\"showCreateBtn\\\" mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\">Create</button>\\n      <button *ngIf=\\\"!showCreateBtn\\\" mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\">Update</button>\\n    </div>\\n  </form>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvbWFuYWdlLXJvbGUtcmlnaHQvcm9sZS9yb2xlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { RoleService } from '../service/api';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { CommonService } from 'app/service/common.service';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppSettings } from 'app/app.constants';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { RoleGridView, RoleResultView, ValidationMessageView } from '../model/role-grid-view';\nimport * as HttpStatus from 'http-status-codes';\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.scss'],\n  providers: [RoleService]\n})\nexport class RoleComponent extends CommonComponent implements OnInit {\n  columns: any[];\n  currentComponent: any = 'RoleComponent';\n  gridView: RoleGridView;\n  rows: any[];\n  totalRowsCount: number;\n  pageCnt: number;\n  tableSettings: { model: RoleGridView; rows: any[];\n  columns: any; totalRowsCount?: number; pageCnt?: number;\n  tablename: string; componentName: any; visibleSelectAll?: boolean; \n  isSelectRowRequired?: boolean; isPaginationRequired?: boolean; filtersList?: any[]; headerOperations?: { }; };\n  roleForm: any;\n  isFormSubmitted = true;\n  closeForm: boolean;\n  showCreateBtn = true;\n\n  @ViewChild('role') myRoleForm;\n\n  constructor(private roleService: RoleService, public dialogRef: MatDialog, public commonService: CommonService, private commonComponent: CommonComponent,\n     public snackBar: MatSnackBar) {\n    super(); \n    this.initializeFilterView();\n    this.initializeTableSettings();\n    this.setColumnHeaders();\n    this.initializeForm();\n   }\n\n  ngOnInit(): void {\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.gridView = modelTableComponent;\n    }\n    this.getRoleGrid();\n  }\n\n  initializeForm(): void {\n    this.roleForm = new FormGroup({\n      id: new FormControl(''),\n      roleName: new FormControl('', [Validators.required, Validators.maxLength(15)]),\n    });\n  }\n\n  setColumnHeaders(): void {\n    this.columns = [\n      { field: 'roleName', header: 'Role Name', sort: true },\n      { field: 'actions', header: 'Actions ', sort: false }\n    ];\n  }\n\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.columns,\n      tablename: 'Roles',\n      componentName: this.currentComponent,\n      model: this.gridView\n    };\n  }\n\n  initializeFilterView(): void {\n    this.gridView = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n  }\n\n  getRoleGrid(): void {\n    this.roleService.roleGrid(this.gridView.sortOrder, this.gridView.sortBy, this.gridView.pageNumber, this.gridView.pageSize).subscribe(res => {\n      if (res){\n        this.bindResult(res);\n      }\n    });\n  }\n\n  bindResult(data: RoleResultView): any {\n    if (!data.pagedRoleViewModels) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n    } else {\n      this.rows = data.pagedRoleViewModels.list;\n      this.totalRowsCount = data.pagedRoleViewModels.totalItems;\n\n      this.pageCnt = data.pagedRoleViewModels.totalPages;\n      this.rows.forEach(e => {\n        e.operations = [\n          {\n            name: AppSettings.EDIT_OPERATION,\n            icon: AppSettings.EDIT,\n            operationName: AppSettings.EDIT\n          }\n        ];\n      });\n    }\n    if (data.pagedRoleViewModels) {\n      this.gridView.pageNumber = data.pagedRoleViewModels.pageNumber;\n    }\n    this.tableSettings = {\n      model: this.gridView,\n      rows: this.rows,\n      columns: this.columns,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      tablename: 'Roles',\n      componentName: this.currentComponent,\n      filtersList: [],\n      isPaginationRequired: true,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: 'Add Role'\n        }\n      }\n    };\n  }\n\n  tableData(_event: RoleGridView): void {\n    this.gridView = _event;\n    this.getRoleGrid();\n  }\n\n  openForm(): void {\n    this.initializeForm();\n    this.closeForm = false;\n  }\n\n  onCancel(): void {\n    this.closeForm = true;\n    this.showCreateBtn = true;\n    this.myRoleForm.resetForm();\n    this.initializeForm();\n  }\n\n  createOrUpdateClass(form: any): void {\n      if (!form.id && this.roleForm.status === AppSettings.VALID) {\n        this.roleService.createRole(form)\n        .subscribe((res: ValidationMessageView) => {\n          if (res.statusCode === HttpStatus.OK) { \n            this.openSnackBar(res.messages.ResultMessage);\n            this.getRoleGrid();\n            this.onCancel();\n          }\n          else {\n            this.openSnackBar(res.messages.ResultMessage, true);\n            this.closeForm = false;\n          }\n        });\n    }else if (this.roleForm.valid){\n      this.roleService.updateRole(form)\n      .subscribe((res: ValidationMessageView) => {\n        if (res.statusCode === HttpStatus.OK) { \n          this.openSnackBar(res.messages.ResultMessage);\n          this.getRoleGrid();\n          this.onCancel();\n        }\n        else { \n          this.openSnackBar(res.messages.ResultMessage, true);\n          this.closeForm = false;\n        }\n      });\n    }\n  }\n\n  actions(operationData: any): void {\n    if (operationData.operation === AppSettings.EDIT.toLowerCase()) {\n      this.showCreateBtn = false;\n      this.closeForm = false;\n      this.roleForm.patchValue(operationData.clickedRow);\n    }\n  }\n\n  dialogMethod(dialogData: any, disableClose: boolean, button1Text: string, button2Text?: string): any {\n    return this.dialogRef.open(CustomDialogComponent, {\n      disableClose: disableClose,\n      data: { text: this.commonService.getTranslation(dialogData), action: true, btn1Text: button1Text, btn2Text: button2Text },\n    });\n  }\n\n}\n","\nexport * from './module.service';\nimport { ModuleService } from './module.service';\nexport * from './right.service';\nimport { RightService } from './right.service';\nexport * from './role.service';\nimport { RoleService } from './role.service';\nexport * from './localization.service';\nimport { LocalizationService } from './localization.service';\nexport const APIS = [ ModuleService, RightService, RoleService, LocalizationService];\n","/**\n * UserManagement\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Configuration } from 'app/service/base/configuration';\nimport { BASE_PATH } from 'app/service/base/variables';\nimport { CustomHttpUrlEncodingCodec } from 'app/service/base/encoder';\nimport { NameViewModel } from '../model/name-view-model';\nimport { BaseModuleConfig, BaseUrlConfig, ModuleConfig } from 'app/url.config';\nimport { NameIdViewModel } from '../model/nameid-view-model';\nimport { CommonComponent } from 'app/shared/common/common.component';\n\n\n@Injectable()\nexport class ModuleService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.UserManagment;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, \n    @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration, private commonComponent: CommonComponent) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    public canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * creation of module\n     * \n     * @param authorization access token\n     * @param nameViewModel \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createModule(nameViewModel?: NameViewModel, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createModule(nameViewModel?: NameViewModel, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createModule(nameViewModel?: NameViewModel, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createModule(nameViewModel?: NameViewModel, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/Module/create-module`,\n            nameViewModel,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * returns all modules\n     * \n     * @param authorization access token\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public modules(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public modules(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public modules(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public modules(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/Module/get-all-modules`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * returns module in the form of grid\n     * \n     * @param authorization access token\n     * @param sortOrder Gets or Sets SortColumn\n     * @param sortBy Gets or Sets SortBy- \\&quot;Module\\&quot;\n     * @param pageNumber \n     * @param pageSize \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public modulesGrid(sortOrder?: 0 | 1 | -1, sortBy?: string, pageNumber?: number, pageSize?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public modulesGrid(sortOrder?: 0 | 1 | -1, sortBy?: string, pageNumber?: number, pageSize?: number, \n        observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public modulesGrid(sortOrder?: 0 | 1 | -1, sortBy?: string, pageNumber?: number, pageSize?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public modulesGrid(sortOrder?: 0 | 1 | -1, sortBy?: string, pageNumber?: number, pageSize?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/Module/module-grid`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update Particular module Details\n     * \n     * @param authorization access token\n     * @param model \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateModule(model?: NameIdViewModel, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateModule(model?: NameIdViewModel, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateModule(model?: NameIdViewModel, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateModule(model?: NameIdViewModel, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}/Module/module`,\n            model,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * UserManagement\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Configuration } from 'app/service/base/configuration';\nimport { BASE_PATH } from 'app/service/base/variables';\nimport { CustomHttpUrlEncodingCodec } from 'app/service/base/encoder';\nimport { RightsView } from '../model/rights-view';\nimport { BaseModuleConfig, BaseUrlConfig, ModuleConfig } from 'app/url.config';\nimport { RightDetailsView } from '../model/right-details-view';\nimport { CommonComponent } from 'app/shared/common/common.component';\n\n\n\n@Injectable()\nexport class RightService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.UserManagment;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient,\n         @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration, private commonComponent: CommonComponent) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    public canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * returns all rights\n     * \n     * @param authorization access token\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public allRights(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public allRights(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public allRights(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public allRights(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n\n        return this.httpClient.get<any>(`${this.basePath}/Right/all-rights`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * right creation\n     * \n     * @param authorization access token\n     * @param rightsView \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createMenuRight(rightsView?: RightsView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createMenuRight(rightsView?: RightsView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createMenuRight(rightsView?: RightsView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createMenuRight(rightsView?: RightsView, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/Right/create-right`,\n            rightsView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param authorization access token\n     * @param userAccessId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public menus(userAccessId?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public menus(userAccessId?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public menus(userAccessId?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public menus(userAccessId?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        queryParameters = this.commonComponent.setQueryParams(userAccessId, 'userAccessId', queryParameters);\n        \n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/Right/user-menus`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * returns rights in the form of grid\n     * \n     * @param authorization access token\n     * @param sortOrder Gets or Sets SortColumn\n     * @param sortBy Gets or Sets SortBy- \\&quot;Module\\&quot;\n     * @param pageNumber \n     * @param pageSize \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public rightGrid(sortOrder?: 0 | 1 | -1, sortBy?: string, pageNumber?: number, pageSize?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public rightGrid(sortOrder?: 0 | 1 | -1, sortBy?: string, pageNumber?: number, pageSize?: number, \n        observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public rightGrid(sortOrder?: 0 | 1 | -1, sortBy?: string, pageNumber?: number, pageSize?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public rightGrid(sortOrder?: 0 | 1 | -1, sortBy?: string, pageNumber?: number, pageSize?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        \n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n\n        return this.httpClient.get<any>(`${this.basePath}/Right/right-grid`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * \n     * \n     * @param authorization access token\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public rights(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public rights(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public rights(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public rights(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/Right/get-all-rights`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update Particular role Details\n     * \n     * @param authorization access token\n     * @param rightDetailsView \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateRight(rightDetailsView?: RightDetailsView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateRight(rightDetailsView?: RightDetailsView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateRight(rightDetailsView?: RightDetailsView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateRight(rightDetailsView?: RightDetailsView, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}/Right/right`,\n            rightDetailsView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * UserManagement\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Configuration } from 'app/service/base/configuration';\nimport { BASE_PATH } from 'app/service/base/variables';\nimport { CustomHttpUrlEncodingCodec } from 'app/service/base/encoder';\nimport { RoleViewModel } from '../model/role-view-model';\nimport { RoleView } from '../model/role-view';\nimport { BaseUrlConfig, ModuleConfig } from 'app/url.config';\nimport { CommonComponent } from 'app/shared/common/common.component';\n\n@Injectable()\nexport class RoleService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.UserManagment;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, \n        @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration, private commonComponent: CommonComponent) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Role Creation\n     * \n     * @param authorization access token\n     * @param roleViewModel \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createRole(roleViewModel?: RoleViewModel, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createRole(roleViewModel?: RoleViewModel, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createRole(roleViewModel?: RoleViewModel, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createRole(roleViewModel?: RoleViewModel, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/Role/create-role`,\n            roleViewModel,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * returns role in the form of grid\n     * \n     * @param authorization access token\n     * @param sortOrder Gets or Sets SortColumn\n     * @param sortBy Gets or Sets SortBy- \\&quot;Module\\&quot;\n     * @param pageNumber \n     * @param pageSize \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public roleGrid(sortOrder?: 0 | 1 | -1, sortBy?: string, pageNumber?: number, pageSize?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public roleGrid(sortOrder?: 0 | 1 | -1, sortBy?: string, pageNumber?: number, pageSize?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public roleGrid(sortOrder?: 0 | 1 | -1, sortBy?: string, pageNumber?: number, pageSize?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public roleGrid(sortOrder?: 0 | 1 | -1, sortBy?: string, pageNumber?: number, pageSize?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        \n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/Role/role-grid`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * List of roles\n     * \n     * @param authorization access token\n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public roles(id?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public roles(id?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public roles(id?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public roles(id?: number, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/Role/get-all-roles`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n     /**\n     * Update Particular role Details\n     * \n     * @param authorization access token\n     * @param model \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateRole(model?: RoleView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateRole(model?: RoleView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateRole(model?: RoleView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateRole(model?: RoleView, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n        \n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}/Role/role`,\n            model,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n"],"sourceRoot":""}