{"version":3,"sources":["webpack:///./src/app/modules/finance/invoice/generate-invoice/generate-invoice.component.html","webpack:///./src/app/modules/finance/invoice/generate-invoice/generate-invoice.component.scss","webpack:///./src/app/modules/finance/invoice/generate-invoice/generate-invoice.component.ts","webpack:///./src/app/modules/finance/invoice/invoice-routing.module.ts","webpack:///./src/app/modules/finance/invoice/invoice-search-details/invoice-search-details.component.html","webpack:///./src/app/modules/finance/invoice/invoice-search-details/invoice-search-details.component.scss","webpack:///./src/app/modules/finance/invoice/invoice-search-details/invoice-search-details.component.ts","webpack:///./src/app/modules/finance/invoice/invoice.module.ts"],"names":[],"mappings":"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","file":"app-modules-finance-invoice-invoice-module.js","sourcesContent":["module.exports = \"<div class=\\\"p-sm-40\\\" fxLayout=\\\"column\\\">\\n  <div class=\\\"px-16 font-size-18 text-uppercase\\\"><span translate>Invoice Generation</span></div>\\n  <div class=\\\"mat-elevation-z8 simple-table-container radius-t-20\\\">\\n    <div fxLayoutAlign=\\\"end center\\\" class=\\\"border-bottom p-20\\\">\\n        <button (click)=\\\"getHelpText('Invoice generation')\\\" mat-button>\\n            <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n          </button>\\n    </div>  \\n    <form [formGroup]=\\\"generateInvoiceFormGroup\\\" fxLayout=\\\"column\\\" #invoiceForm=\\\"ngForm\\\"\\n      (ngSubmit)=\\\"submitForm(generateInvoiceFormGroup.value)\\\" autocomplete=\\\"off\\\" #form=\\\"ngForm\\\" class=\\\"p-20\\\">\\n      <div fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\" class=\\\"pt-12\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\"\\n          class=\\\"pr-sm-20\\\">\\n          <mat-label translate #term>Fee Term</mat-label>\\n          <mat-select required name=\\\"feeTermId\\\" formControlName=\\\"feeTermId\\\">\\n            <mat-option *ngFor=\\\"let feeTerm of feeTermsList\\\" [value]=\\\"feeTerm.value\\\">\\n              {{feeTerm.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"term.innerText\\\"\\n              [validationControl]=\\\"generateInvoiceFormGroup.controls.feeTermId\\\" [doValidate]=\\\"doValidate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\"\\n          fxFlexFil>\\n          <mat-label #board translate>Board</mat-label>\\n          <mat-select formControlName=\\\"boardId\\\" (selectionChange)=\\\"onBoardSelect($event)\\\">\\n            <mat-option></mat-option>\\n            <mat-option *ngFor=\\\"let board of availableSchoolBoards\\\" [value]=\\\"board.value\\\">\\n              {{board.label}}\\n            </mat-option>\\n          </mat-select>\\n\\n        </mat-form-field>\\n\\n\\n\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\"\\n          fxFlexFil>\\n          <mat-label #class translate>Class</mat-label>\\n          <mat-select formControlName=\\\"classId\\\" (selectionChange)=\\\"onClassChange($event.value)\\\">\\n            <mat-option *ngIf=\\\"availableClasses?.length\\\"></mat-option>\\n            <mat-option [style.display]=\\\"generateInvoiceFormGroup.value.boardId ? 'block': 'none'\\\" *ngFor=\\\"let availableClass of availableClasses\\\" [value]=\\\"availableClass.value\\\">\\n              {{availableClass.label}}\\n            </mat-option>\\n          </mat-select>\\n\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\"\\n          fxFlexFil>\\n          <mat-label #section translate>Section</mat-label>\\n          <mat-select formControlName=\\\"sectionId\\\" (selectionChange)=\\\"onSectionChange($event.value)\\\">\\n            <mat-option *ngIf=\\\"availableSections?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let availableSection of availableSections\\\" [value]=\\\"availableSection.value\\\">\\n              {{availableSection.label}}\\n            </mat-option>\\n          </mat-select>\\n\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n          <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\" (click)=\\\"onClearClick()\\\">{{'Clear' | translate}}</button>\\n        <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\">{{'Generate' | translate}}</button>\\n      </div>\\n    </form>\\n  </div>\\n\\n\\n  <div class=\\\"mat-elevation-z8 simple-table-container mt-32 p-40\\\" *ngIf=\\\"resultData.length\\\">\\n    <mat-list *ngFor=\\\"let data of resultData\\\" fxLayout.gt-xs=\\\"row wrap\\\" fxFlex.gt-xs=\\\"80\\\" fxFlex=\\\"100\\\"\\n      fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-0 border m-auto confirm-table\\\">\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"80\\\"><span translate>{{data.label}}</span>\\n      </mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"20\\\">\\n        {{data.value}}\\n      </mat-list-item>\\n    </mat-list>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZmluYW5jZS9pbnZvaWNlL2dlbmVyYXRlLWludm9pY2UvZ2VuZXJhdGUtaW52b2ljZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { FeeTypeService } from 'app/service/configuration/finance/api/fee-type.service';\nimport { InvoiceCriteriaViewModel } from 'app/models/invoice/invoice-criteria-view-model';\nimport { AppSettings } from 'app/app.constants';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { InvoiceService } from 'app/service/invoice/invoice.service';\nimport { CommonService } from 'app/service/common.service';\nimport { MatDialog, MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-generate-invoice',\n  templateUrl: './generate-invoice.component.html',\n  styleUrls: ['./generate-invoice.component.scss']\n})\nexport class GenerateInvoiceComponent extends CommonComponent implements OnInit {\n  generateInvoiceFormGroup: FormGroup;\n  @ViewChild('invoiceForm') invoiceFrom;\n  boardId: number;\n  schoolBoardsList: Array<any> = [];\n  feeTermsList: Array<any> = [];\n  isSchoolBoard: boolean;\n  classDisabled: boolean;\n  sectionShow: boolean;\n  // variables declarations\n  classNames: Array<any> = [];\n  sectionNames: Array<any> = [];\n  classId: number;\n  sectionId: number;\n  sectionDisabled: boolean;\n  doValidate = true;\n  httpStatus: any;\n  resultData: Array<any> = [];\n  constructor(public commonService: CommonService, private _invoiceService: InvoiceService,\n    private feeTypeService: FeeTypeService,\n    public dialog: MatDialog, public snackBar: MatSnackBar) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.httpStatus = require('http-status-codes');\n    this.generateInvoiceFormGroup = new FormGroup({\n      feeTermId: new FormControl('', [Validators.required]),\n      boardId: new FormControl(''),\n      classId: new FormControl(''),\n      sectionId: new FormControl(''),\n    });\n    this.getFeeTerms();\n    if (this.getTokenParam('_as')) {\n      this.getAvailableSchoolBoards();\n    }\n\n  }\n\n  onBoardSelect(event): void {\n    if (event.value != null) {\n      this.getAvailableClasses(event.value);\n    }\n    else {      \n      this.availableClasses = [];\n      this.availableSections = [];\n      this.generateInvoiceFormGroup.patchValue({\n        classIds: null,\n        sectionIds: null\n      });\n    }\n  }\n\n  onClassChange(classId): void {\n    if (classId != null) {\n      this.generateInvoiceFormGroup.controls['sectionId'].setValue(null);\n      this.getAvailableSections(this.generateInvoiceFormGroup.value.schoolBoardId, classId);\n    }\n    else {\n      this.availableSections = [];\n      this.generateInvoiceFormGroup.patchValue({\n        sectionIds: null\n      });\n    }\n  }\n\n  onSectionChange(data: any): void {\n    this.doValidate = true;\n    if (data){\n     this.sectionId = data.value;\n    }\n  }\n\n  // getting feeTerms\n  getFeeTerms(): void {\n    this.feeTypeService.getFeeTerms().subscribe(\n      response => {\n        if (response.commonViewModel != null) {\n          if (response.commonViewModel.length) {\n            response.commonViewModel.forEach(element => {\n              this.feeTermsList.push({\n                label: element.name,\n                value: element.id\n              });\n            });\n          }\n        }\n      },\n      error => {\n        this.errorResponse(error);\n      }\n    );\n  }\n\n  // End\n\n  submitForm(data: InvoiceCriteriaViewModel): void {\n    if (this.generateInvoiceFormGroup.status === AppSettings.VALID) {\n      this.generateInvoice(data);\n    }\n    else {\n      this.doValidate = true;\n    }\n  }\n\n  onClearClick(): void {\n    this.generateInvoiceFormGroup.reset();\n    this.invoiceFrom.resetForm();\n    this.resultData = [];\n  }\n\n  generateInvoice(data: InvoiceCriteriaViewModel): void {\n    this._invoiceService.generateInvoice(data).subscribe(res => {\n\n      if (res !== null) {\n        this.resultData = [];\n        this.resultData.push(\n          { label: AppSettings.OLD_INVOICES, value: res.existingInvoicesCount },\n          { label: AppSettings.NEW_INVOICES, value: res.newInvoiceCount }\n        );\n      }\n\n      if (res.statusCode === this.httpStatus.OK) {\n        this.openSnackBar(res.messages.ResultMessage);\n      } else {\n        this.openSnackBar(res.messages.ResultMessage, true);\n      }\n    }, error => {\n      this.errorResponse(error);\n      this.resultData = [];\n    });\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GenerateInvoiceComponent } from './generate-invoice/generate-invoice.component';\nimport { StudentBasicSearchComponent } from 'app/shared/student-basic-search/student-basic-search.component';\nimport { InvoiceDetailsComponent } from './invoice-details/invoice-details.component';\nimport { InvoiceSearchDetailsComponent } from './invoice-search-details/invoice-search-details.component';\n\n\nconst routes: Routes = [\n  { path: 'generate-invoice', component: GenerateInvoiceComponent,  data: {title: 'Generate Invoice'} },\n  { path: 'fee-assignment', component: StudentBasicSearchComponent,  data: {title: 'Fee Assignment'} },\n  { path: 'invoice-search', component: InvoiceSearchDetailsComponent,  data: {title: 'Invoice Search'} }, \n  { path: 'invoice-search/invoice-details/:id', component: InvoiceDetailsComponent,  data: {title: 'Invoice Details'} },\n\n];\n@NgModule({\n  declarations: [],\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n\n})\nexport class InvoiceRoutingModule { }\n","module.exports = \"<!-- fee invoice search -->\\n\\n<div class=\\\"px-sm-40 pt-sm-28\\\">\\n  <div class=\\\"py-8 px-20 font-size-18 text-uppercase\\\" translate>Fee Invoice Search</div>\\n  <div class=\\\"w-100-p mat-elevation-z3 simple-table-container radius-t-20\\\">\\n    <div fxLayoutAlign=\\\"end center\\\" class=\\\"p-16 border-bottom\\\">\\n        <button mat-button (click)=\\\"getHelpText('Fee Invoices')\\\">\\n            <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n          </button>\\n    </div>\\n      \\n    <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch(searchForm.value)\\\" class=\\\"p-24\\\">\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\">\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"24\\\"\\n          fxFlexFil>\\n          <mat-label #academicSession translate>Academic Session</mat-label>\\n          <mat-select formControlName=\\\"schoolAcademicSessionId\\\" [(ngModel)]=\\\"currentAcademicSessionId\\\"\\n            (selectionChange)=\\\"onAcademicSessions($event)\\\" required>\\n            <mat-option *ngFor=\\\"let academicSession of academicSessions\\\" [value]=\\\"academicSession.value\\\">\\n              {{academicSession.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"academicSession.innerText\\\"\\n              [validationControl]=\\\"searchForm.controls.schoolAcademicSessionId\\\" [doValidate]=\\\"doValidate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"19\\\"\\n          class=\\\"pr-sm-20\\\">\\n          <mat-label translate #feeTerm>Fee Term</mat-label>\\n          <mat-select name=\\\"feeTermId\\\" formControlName=\\\"feeTerms\\\">\\n            <mat-option *ngIf=\\\"feeTermsList?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let feeTerm of feeTermsList\\\" [value]=\\\"feeTerm.value\\\">\\n              {{feeTerm.label}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"19\\\"\\n          fxFlexFil>\\n          <mat-label #board translate>Board</mat-label>\\n          <mat-select formControlName=\\\"board\\\" (selectionChange)=\\\"onBoardSelect($event)\\\">\\n            <mat-option *ngIf=\\\"schoolBoardsList?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let board of schoolBoardsList\\\" [value]=\\\"board.value\\\">\\n              {{board.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"board.innerText\\\" [validationControl]=\\\"searchForm.controls.boardId\\\"\\n              [doValidate]=\\\"doValidate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"19\\\"\\n          class=\\\"pr-sm-20\\\">\\n          <mat-label translate #class>Class</mat-label>\\n          <mat-select name=\\\"classId\\\" formControlName=\\\"classes\\\" (selectionChange)=\\\"onClassSelect($event)\\\">\\n            <mat-option *ngIf=\\\"classNames?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let class of classNames\\\" [value]=\\\"class.value\\\">\\n              {{class.label}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"19\\\">\\n          <mat-label translate #section>Section</mat-label>\\n          <mat-select name=\\\"sectionId\\\" formControlName=\\\"sections\\\">\\n            <mat-option *ngIf=\\\"sectionNames?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let section of sectionNames\\\" [value]=\\\"section.value\\\">\\n              {{section.label}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n      </div>\\n\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-12\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"43\\\" fxFlex=\\\"100\\\" class=\\\"pr-sm-20\\\">\\n          <mat-label #studentId translate>Search Student Name</mat-label>\\n          <input #studentName matInput placeholder=\\\"Search Students\\\" formControlName=\\\"studentName\\\"\\n          (keyup)=\\\"preventSpace($event,'searchForm','studentName')\\\" \\n          (blur)=\\\"trimTextBoxSpaces('searchForm','studentName')\\\"\\n            aria-label=\\\"StudentName\\\" matInput [matAutocomplete]=\\\"studentNameSearch\\\">\\n          <mat-icon class=\\\"grey-400-fg\\\" matSuffix>search</mat-icon>\\n          <mat-autocomplete #studentNameSearch=\\\"matAutocomplete\\\"\\n            (optionSelected)='getSelectedStudent($event.option.value)'>\\n            <mat-option *ngFor=\\\"let option of filterdStudents\\\" [value]=\\\"option\\\">\\n              {{option.studentName}}\\n              <span class=\\\"grey-400-fg\\\"> {{option.currentClassName}} {{option.currentSectionName}}</span>\\n            </mat-option>\\n          </mat-autocomplete>\\n        </mat-form-field>\\n\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\"\\n          fxFlex.gt-sm=\\\"19\\\">\\n          <mat-label translate #feeType>FeeType</mat-label>\\n          <mat-select name=\\\"feeTypeId\\\" formControlName=\\\"feeType\\\">\\n            <mat-option *ngIf=\\\"feeTypes?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let item of feeTypes\\\" [value]=\\\"item.value\\\">\\n              {{item.label}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"19\\\"\\n          class=\\\"pr-sm-20\\\">\\n          <mat-label translate #invoiceNumber>Invoice Number</mat-label>\\n          <input (keyup)=\\\"preventSpace($event,'searchForm','invoiceNumber')\\\" matInput formControlName=\\\"invoiceNumber\\\" (blur)=\\\"trimTextBoxSpaces('searchForm','invoiceNumber')\\\">\\n        </mat-form-field>\\n        <!--To do-->\\n        <!-- <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"19\\\">\\n          <mat-label translate #recieptNumber>Receipt Number</mat-label>\\n          <input (keyup)=\\\"preventSpace($event)\\\" matInput formControlName=\\\"receiptNumber\\\" (blur)=\\\"trimTextBoxSpaces('searchForm','receiptNumber')\\\">\\n        </mat-form-field> -->\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"my-20\\\">\\n        <mat-checkbox class=\\\"mr-20\\\" [checked] = \\\"true\\\" (change)=\\\"changeValue($event)\\\" formControlName=\\\"isCancel\\\"><span translate>Hide Cancelled Invoice</span></mat-checkbox>\\n        <button mat-raised-button type=\\\"reset\\\" class=\\\"text-uppercase mr-12\\\" (click)=\\\"onClear()\\\">\\n          {{'Reset' | translate}}\\n        </button>\\n        <button mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n          {{'Search' | translate}}\\n        </button>\\n      </div>\\n    </form>\\n  </div>\\n\\n\\n  <div class=\\\"mat-elevation-z3 simple-table-container mt-20 radius-5\\\">\\n    <div fxLayoutAlign=\\\"end center\\\" class=\\\"px-24 py-12\\\" *ngIf=\\\"invoiceSummaryHeadders\\\">\\n      <button mat-mini-fab color=\\\"accent\\\" aria-label=\\\"More\\\" [matMenuTriggerFor]=\\\"menu\\\">\\n        <mat-icon>more_vert</mat-icon>\\n      </button>\\n    </div>\\n    <div>\\n    <mat-accordion>\\n       \\n      <mat-expansion-panel class=\\\"radius-t-20\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title class=\\\"font-size-18\\\" fxLayoutAlign=\\\"space-between center\\\">\\n            <span translate>Result Summary</span>          \\n          </mat-panel-title>\\n        </mat-expansion-panel-header>\\n     \\n        <mat-list class=\\\"pt-0 confirm-table border my-16 mx-sm-auto\\\" *ngIf=\\\"invoiceSummaryHeadders\\\" fxLayout=\\\"row wrap\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"69\\\"\\n          fxLayoutAlign=\\\"center center\\\">\\n          <ng-container *ngFor=\\\"let header of invoiceSummaryHeadders\\\">\\n\\n            <mat-list-item fxLayout=\\\"row\\\" fxFlex.gt-sm=\\\"75\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"start center\\\"\\n              class=\\\"text-font-weight-600\\\">\\n              {{header | translate}}\\n            </mat-list-item>\\n\\n            <mat-list-item fxLayout=\\\"row\\\" fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"end center\\\">\\n              {{invoiceSummary[header] ? invoiceSummary[header] : 0 }}\\n            </mat-list-item>\\n\\n          </ng-container>\\n        </mat-list>\\n        <div class=\\\"text-center w-100-p font-size-18\\\" *ngIf=\\\"!invoiceSummaryHeadders\\\" translate>No Data Found</div>\\n      </mat-expansion-panel>\\n    </mat-accordion> \\n    </div>  \\n  </div>\\n</div>\\n\\n<ng-template #isCancel>\\n    <form [formGroup]=\\\"cancellationForm\\\" (ngSubmit)=\\\"InvoiceCancel(cancellationForm)\\\" #appForm=\\\"ngForm\\\">\\n      <div  fxLayout=\\\"column\\\">\\n          <div class=\\\"pb-16\\\" translate>\\n              Please Confirm the Cancellation of this invoice by including the Reason for Cancellation.\\n          </div>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n        \\n          <mat-label #cancelledReason translate>Reason For Cancellation</mat-label>\\n          <input autocomplete=\\\"off\\\" matInput formControlName=\\\"cancelledReason\\\" required\\n            (keypress)=\\\"preventSpaces($event)\\\" (blur)=\\\"trimTextBoxSpaces('cancellationForm','cancelledReason')\\\">\\n\\n          <mat-error>\\n            <app-validation [labelName]=\\\"cancelledReason.innerText\\\"\\n              [validationControl]=\\\"cancellationForm.controls.cancelledReason\\\"\\n              class=\\\"error-msg messages text-left text-danger\\\" [doValidate]=\\\"validateForm\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n        <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\" (click)=\\\"closeForm()\\\">{{'Cancel' | translate}}</button>\\n        <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button color=\\\"accent\\\">{{'Submit' | translate}}</button>\\n      </div>\\n    </form>\\n</ng-template>\\n\\n<ng-template #invoiceAction>\\n  <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\">\\n    <mat-form-field class=\\\"px-20\\\">\\n      <mat-label #actionId translate>Invoice Actions</mat-label>\\n      <mat-select placeholder=\\\"Invoice Actions\\\"  (selectionChange)=\\\"invoiceActionSelect($event.value)\\\" [formControl]=\\\"option\\\">\\n        <mat-option *ngFor=\\\"let action of invoiceActions\\\" [value]=\\\"action.id\\\">\\n          {{ action.name | translate }}</mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <div fxLayout=\\\"column\\\">\\n      <button [disabled]=\\\"!(option.value)\\\" type=\\\"submit\\\" mat-raised-button class=\\\"text-uppercase mr-8\\\" translate color=\\\"accent\\\"\\n        (click)=\\\"paymentActionRedirection()\\\">\\n        {{'Go' | translate}}\\n      </button>\\n    </div>\\n  </div>\\n</ng-template>\\n\\n<div *ngIf=\\\"showPayments\\\" class=\\\"py-12\\\">\\n  <app-af-payments [inputData]=\\\"feeAccount\\\" [paymentMessage]=\\\"paymentMessage\\\" (outPutValue)='savePayment($event)' [isRefNumberRequired]=\\\"true\\\"></app-af-payments>\\n</div>\\n\\n<app-table *ngIf=\\\"onSearchHeader\\\" [massActionTemplateRef]=\\\"invoiceAction\\\" [templateRef]=\\\"isCancel\\\" [settings]='invoiceSettings' (getTableData)='getTableData($event)'\\n  [closeRowForm]='closeAddPanel' (selectedRows)='selectAllForInvoice($event)' (rowBasedAction)='rowWiseActions($event)' id=\\\"invoice-grid\\\"\\n  >\\n</app-table>\\n<app-custom-card *ngIf=\\\"!onSearchHeader\\\" [title]=customCardDetails.title [inputMessage]=customCardDetails.message>\\n</app-custom-card>\\n\\n<mat-menu #menu=\\\"matMenu\\\">\\n    <ng-container *ngFor=\\\"let item of operationsForSummary\\\">\\n      <button mat-menu-item (click)=\\\"onSelectAction(item)\\\">{{item.name | translate}}</button>\\n    </ng-container>\\n</mat-menu>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZmluYW5jZS9pbnZvaWNlL2ludm9pY2Utc2VhcmNoLWRldGFpbHMvaW52b2ljZS1zZWFyY2gtZGV0YWlscy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild, TemplateRef, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { AppSettings } from 'app/app.constants';\nimport { FeeTypeService } from 'app/service/configuration/finance/api/fee-type.service';\nimport { StudentDBService } from 'app/service/student-information-system/student-db.service';\nimport { MatAutocompleteTrigger, MatDialog, MatSnackBar } from '@angular/material';\nimport { AcademicSessionService } from 'app/service/academic-service';\nimport { ManageFeeTypeTranchesService } from 'app/service/configuration/finance/api/manage-fee-type-tranches.service';\nimport { ClassesConfigService } from 'app/service/general/api/classes-config.service';\nimport { Router } from '@angular/router';\nimport { FeeModuleConfig } from 'app/url.config';\nimport { InvoiceFilterView } from '../../../invoice/models/invoice-filter-view-model';\nimport { CommonService } from 'app/service/common.service';\nimport { InvoiceService } from 'app/service/invoice/invoice.service';\nimport { InvoiceSearchCriteriaView } from 'app/models/invoice/invoice-search-criteria-view';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport * as HttpStatus from 'http-status-codes';\nimport { FeeTermsService } from 'app/service/configuration/finance/api/fee-terms.service';\nimport { PaymentCorrectionService } from 'app/service/payments/payment-correction.service';\nimport { PaymentViewModel } from 'app/models/invoice/payment-view-model';\nimport { Subscription } from 'rxjs';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ZipViewModel } from 'app/service/file-management/model/zip-view-model';\nimport { StudentDatabaseService } from 'app/service/academic-service/api/student-database.service';\n\n\n@Component({\n  selector: 'app-invoice-search-details',\n  templateUrl: './invoice-search-details.component.html',\n  styleUrls: ['./invoice-search-details.component.scss']\n})\nexport class InvoiceSearchDetailsComponent extends CommonComponent implements OnInit {\n  @ViewChild('isCancel') customTemplate: TemplateRef<any>;\n  @ViewChild('appForm') aForm;\n  @ViewChild('studentName') studentNameAutoInput: any;\n  zipViewModel: ZipViewModel;\n  searchForm: FormGroup;\n  isSchoolBoards: boolean;\n  schoolBoardsList: any = [];\n  boardId: number;\n  classNames: any[] = [];\n  classId: number;\n  sectionNames: any[] = [];\n  feeTermsList: any[];\n  filterdStudents: any[];\n  @ViewChild(MatAutocompleteTrigger) _auto: MatAutocompleteTrigger;\n  academicSessions: any[];\n  activeAcademicSession: any = [];\n  currentAcademicSessionId: any;\n  feeTypes: any = [];\n  schoolAcademicSessionId: number;\n  invoiceCols: {}[];\n  invoiceSettings: {};\n  currentComponent = 'InvoiceSearchDetailsComponent';\n  closeAddPanel: boolean;\n  vehicleInsuranceSearchView: {};\n  invoiceSearchView: InvoiceFilterView;\n  invoiceData = [];\n  totalItems: any;\n  isCancel: boolean;\n  cancellationForm: FormGroup;\n  invoiceCriteriaViewModel: InvoiceSearchCriteriaView;\n  HttpStatus: any;\n  invoiceId: any = [];\n  fileNames: any = [];\n  validateForm: boolean;\n  doValidate: boolean;\n  openAddPanel: boolean;\n  invoiceSummary: any;\n  invoiceSummaryHeadders: any;\n  invoiceActions: any = [];\n  actionValue: number;\n  studentId: string;\n  errorMessage = true;\n  customCardDetails: { title: string, message: string } = { title: 'Invoice Search', message: 'Search Invoice' };\n  showCustomCard = true;\n  showPayments: boolean;\n  paymentViewModel: PaymentViewModel;\n  feeAccount: {};\n  clearSubscription: Subscription;\n  searchDetails: any;\n  nameImgProp: any;\n  ReturnFileName: any;\n  operationsForSummary: any[] = [];\n  invList: any[];\n  onSearchHeader = false;\n  paymentMessage: string;\n  selectedInvoices: any[] = [];\n  option = new FormControl('');\n  constructor(public dialogRef: MatDialog, public manageFeeTypeTranchesService: ManageFeeTypeTranchesService,\n    private academicSessionService: AcademicSessionService, private feeTypeService: FeeTypeService\n    , private studentDbService: StudentDBService, private router: Router\n    , private classesConfigService: ClassesConfigService, public commonService: CommonService\n    , private invoiceService: InvoiceService, public dialog: MatDialog, private studentService: StudentDatabaseService\n    , private feetermService: FeeTermsService, private paymentCorrectionService: PaymentCorrectionService, public snackBar: MatSnackBar, private storeService: StoreService,\n    private sanitizer: DomSanitizer, private cd: ChangeDetectorRef) {\n    super();\n    this.clearSubscription = this.commonService.isCorrectionClear().subscribe(res => {\n      if (!res.isClear) {\n        this.showPayments = res.isClear;\n      }\n    });\n    this.initializeModel();\n    this.zipViewModel = {\n      fileNames: [],\n      returnFileName: ''\n    };\n  }\n  initializeModel(): void {\n    this.invoiceSearchView = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n      studentIds: [],\n      schoolAcademicSessionId: 0,\n      feeTerms: [],\n      board: [],\n      studentName: [],\n      classes: [],\n      sections: [],\n      invoiceNumber: [],\n      receiptNumber: [],\n      feeType: [],\n      invoiceDateBegin: null,\n      invoiceDateEnd: null,\n      issueDateBegin: null,\n      issueDateEnd: null,\n      dueDateBegin: null,\n      dueDateEnd: null,\n      invoiceAmount: [],\n      adjustmentAmount: [],\n      dueAmount: [],\n      penaltyAmount: [],\n      realizedAmount: [],\n      balanceAmount: [],\n      invoiceStatus: [],\n      isCancel: true,\n    };\n  }\n  ngOnInit(): void {\n    this.initializeForm();\n    this.invoiceActions = [\n      { id: 1, name: 'Payment' },\n      { id: 2, name: 'Cancel' },\n      { id: 3, name: 'Download Invoices' }\n    ];\n    this.HttpStatus = require('http-status-codes');\n    this.onClear(true);\n    this.showCustomCard = true;\n    this.prepareInvoiceTable(this.invoiceData, false);\n\n    this.searchForm.controls['studentName'].valueChanges.debounceTime(200).subscribe((name) => {\n      name = typeof (name) === 'string' ? name.trim() : name;\n      if (name !== null && name.length >= 3) {\n        this.studentService.studentNamesBaseOnAcademicSession(this.searchForm.controls['schoolAcademicSessionId'].value, this.searchForm.controls['board'].value,\n          this.searchForm.controls['classes'].value, this.searchForm.controls['sections'].value, name).subscribe((res) => {\n            this.filterdStudents = (res.studentsList.length > 0) ? res.studentsList : [];\n            this.cd.detectChanges();\n          });\n      }\n      else {\n        this.filterdStudents = [];\n      }\n    });\n    this.cancellationForm = new FormGroup({\n      cancelledReason: new FormControl('', [Validators.required, Validators.maxLength(180)]),\n      id: new FormControl(''),\n    });\n    this.invoiceCriteriaViewModel = {\n      ids: [],\n      cancelledReason: ''\n    };\n    this.operationMethods();\n\n    this.clearFilterData();\n    // get storage if any\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.invoiceSearchView = modelTableComponent;\n      this.searchForm.patchValue(modelTableComponent);\n      this.currentAcademicSessionId = modelTableComponent.schoolAcademicSessionId;\n      if (modelTableComponent.board){\n        this.boardId = modelTableComponent.board;\n        this.getAcademicSession(true);\n      }else if (modelTableComponent.schoolAcademicSessionId){\n        this.getAcademicSession(true);\n      } else{\n        this.getAcademicSession(false);\n      }\n      this.getClassesList(true);\n      this.onClassSelect({ value: modelTableComponent.classes }, true);\n      this.invoiceFilter(this.invoiceSearchView);\n    }\n    else {\n      this.getAcademicSession(false);\n      this.searchForm.controls['isCancel'].setValue(true);\n    }\n  }\n\n  initializeForm(): void {\n    this.searchForm = new FormGroup({\n      schoolAcademicSessionId: new FormControl(''),\n      feeTerms: new FormControl(''),\n      board: new FormControl(''),\n      classes: new FormControl(''),\n      sections: new FormControl(''),\n      studentName: new FormControl(''),\n      invoiceNumber: new FormControl(''),\n      receiptNumber: new FormControl(''),\n      feeType: new FormControl(''),\n      isCancel: new FormControl(true)\n    });\n  }\n\n  rowWiseActions(event: any): void {\n    if (event.operation === AppSettings.VIEW.toLowerCase()) {\n      this.router.navigate([FeeModuleConfig._Invoice_Details + event.clickedRow.id, { academicSessionId: this.currentAcademicSessionId }]);\n    }\n    else if (event.operation === AppSettings.CANCEL.toLowerCase()) {\n      this.isCancel = true;\n      this.closeAddPanel = false;\n      this.openAddPanel = true;\n      this.invoiceId = [];\n      this.invoiceId.push(event.clickedRow.id);\n      this.CancelForm();\n    }\n    else if (event.operation === AppSettings.DOWNLOAD_INVOICE.toLowerCase()) {\n      if (event.clickedRow.attachmentName != null) {\n        this.ReturnFileName = 'Invoice_' + event.clickedRow.invoiceNumber + '_' + event.clickedRow.studentName + '_' + new Date().toLocaleDateString() + '.pdf';\n        this.DownloadDoc(event.clickedRow.attachmentName);\n      }\n      else {\n        this.openSnackBar(AppSettings.NO_ATTACHMENTS_FOUND, true);\n        return;\n      }\n    }\n  }\n\n  async DownloadDoc(data): Promise<void> {\n    if (data !== null) {\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.storeService.getFilePath(data));\n      const a = document.createElement('a');\n      const response = await fetch(this.storeService.getFilePath(data));\n      const responseData = await response.blob();\n      const file = new Blob([responseData], { type: 'application/octet-stream' });\n      a.href = URL.createObjectURL(file);\n      a.download = this.ReturnFileName.replace(' ', '_');\n      a.click();\n    }\n  }\n\n\n  fieldRest(): void {\n\n    this.feeTermsList = [];\n    this.schoolBoardsList = [];\n    this.classNames = [];\n    this.sectionNames = [];\n    this.feeTypes = [];\n    this.searchForm.controls.feeTerms.patchValue('');\n    this.searchForm.controls.board.patchValue('');\n    this.searchForm.controls.classes.patchValue('');\n    this.searchForm.controls.sections.patchValue('');\n    this.searchForm.controls.feeType.patchValue('');\n  }\n\n  getAcademicSession(setDefalutBoard = true): void {\n\n    this.academicSessionService.getAcademicSessionsBySchoolId()\n      .subscribe(\n        response => {\n          if (response.academicSessionDataView.length) {\n            this.academicSessions = [];\n            response.academicSessionDataView.forEach(element => {\n              this.academicSessions.push({\n                value: element.id,\n                label: element.displayName,\n                code: element.statusCode\n              });\n\n              if (element.statusCode === AppSettings.ACADEMICSESSION_ACTIVE) {\n                this.activeAcademicSession.push({\n                  value: element.id,\n                  label: element.displayName,\n                  startDate: element.startDate,\n                  endDate: element.endDate\n                });\n                this.currentAcademicSessionId = this.searchForm.value.schoolAcademicSessionId ? this.searchForm.value.schoolAcademicSessionId : element.id;\n              }\n            });\n            this.currentAcademicSessionId = this.currentAcademicSessionId ? this.currentAcademicSessionId : this.academicSessions[0].value;\n            this.getFeeTerms();\n            this.getSchoolBoardsList(setDefalutBoard);\n            this.fetchFeeTypes();\n          }\n        });\n  }\n\n  // get the list school boards\n  getSchoolBoardsList(isManual = false): void {\n    this.schoolBoardsList = [];\n    this.classesConfigService.boardsBasedOnAcademicSession(this.currentAcademicSessionId).subscribe(res => {\n      if (res.listViews !== undefined && res.listViews.length) {\n        this.isSchoolBoards = true;\n        res.listViews.forEach(element => {\n          this.schoolBoardsList.push({\n            label: element.name,\n            value: element.id\n          });\n          if (!isManual){\n            this.searchForm.controls['board'].setValue(this.schoolBoardsList[0].value);\n          }\n          if (this.searchForm.value.board){\n            this.boardId = this.searchForm.value.board;\n            this.getClassesList();\n          }\n        });\n      } else {\n        this.isSchoolBoards = false;\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n  onAcademicSessions(data: any): void {\n    this.fieldRest();\n    this.currentAcademicSessionId = data.value;\n    this.getFeeTerms();\n    this.getSchoolBoardsList(true);\n    this.fetchFeeTypes();\n  }\n\n  onBoardSelect(data: any): void {\n    this.classNames = [];\n    this.sectionNames = [];\n    this.boardId = data.value;\n    this.searchForm.controls.classes.reset();\n    this.searchForm.controls.sections.reset();\n    this.getClassesList();\n  }\n\n  // Get Classes to filter table data\n  getClassesList(onManualChange = false): void {\n    this.classNames = [];\n    if (!onManualChange) {\n      this.sectionNames = [];\n    }\n    if (!(this.boardId && this.currentAcademicSessionId)) {\n      return;\n    }\n    this.classesConfigService.classesBasedOnAcademicSession(this.currentAcademicSessionId, this.boardId).subscribe(\n      response => {\n        this.classNames = [];\n        if (response.listViews != null) {\n          if (response.listViews.length) {\n            response.listViews.forEach(element => {\n              this.classNames.push({\n                label: element.name,\n                value: element.id\n              });\n            });\n          }\n        } else {\n          this.openSnackBar(AppSettings.SCHOOL_BOARD_HAS_CLASSES, true);\n        }\n      },\n      error => {\n        this.errorResponse(error);\n      }\n    );\n  }\n  // End\n\n  onClassSelect(data: any, onManualChange = false): void {\n    if (!onManualChange) {\n      this.searchForm.controls.sections.reset();\n    }\n    this.classId = data.value;\n    this.sections();\n  }\n\n  CancelForm(): void {\n    this.showPayments = false;\n    this.dialogRef.open(CustomDialogComponent, {\n      data: { template: this.customTemplate }\n    });\n  }\n\n  // on selection of class\n  sections(): void {\n    this.sectionNames = [];\n    if (!(this.boardId && this.classId && this.currentAcademicSessionId)) {\n      return;\n    }\n    this.classesConfigService.sectionsBasedOnAcademicSession(this.currentAcademicSessionId, this.boardId, this.classId).subscribe(response => {\n      if (response.listViews.length) {\n        response.listViews.forEach(element => {\n          this.sectionNames.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  // End\n\n  // getting feeTerms\n  getFeeTerms(): void {\n    this.feeTermsList = [];\n    this.feetermService.getFeeTerms_1(this.currentAcademicSessionId).subscribe(\n      response => {\n        if (response.listViews != null && response.listViews.length > 0) {\n          response.listViews.forEach(element => {\n            this.feeTermsList.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n        }\n      },\n      error => {\n        this.errorResponse(error);\n      }\n    );\n  }\n  // End\n\n  fetchFeeTypes(): void {\n    this.feeTypes = [];\n    this.feeTypeService.getFeeTypesBasedOnAcademicSession(this.currentAcademicSessionId).subscribe(res => {\n      if (res.listViews) {\n        res.listViews.forEach(element => {\n          this.feeTypes.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n      }\n    });\n  }\n\n  getSelectedStudent(value: any): void {\n    if (value) {\n      this.invoiceSearchView.studentName = value.studentName;\n      this.invoiceSearchView.studentIds = value.id;\n      this.searchForm.controls['studentName'].setValue(value.studentName);\n    }\n  }\n\n  getAllFilteredStudents(): void {\n    if (this.searchForm === undefined) {\n      return;\n    }\n  }\n\n  onClear(onManualChange = false): void {\n    this.searchForm.reset();\n    this.fieldRest();\n    this.currentAcademicSessionId = null;\n    this.invoiceSummaryHeadders = null;\n    this.showCustomCard = false;\n    this.classNames = [];\n    this.sectionNames = [];\n    this.schoolBoardsList = [];\n    if (!onManualChange) {\n      this.clearStorageComponent(this.currentComponent);\n      this.initializeModel();\n      this.onSearchHeader = false;\n      this.invoiceSettings['rows'] = [];\n    }\n  }\n  getTableData(event): any {\n    this.invoiceSearchView = event;\n    Object.assign(this.invoiceSearchView, this.searchForm.value);\n    this.invoiceFilter(this.invoiceSearchView);\n  }\n  onSearch(data: any): void {\n    if (!this.searchForm.invalid) {\n      this.invoiceSearchView['pageNumber'] = AppSettings.PAGENUMBER;\n      this.invoiceFilter(data);\n    }\n    else {\n      this.doValidate = true;\n    }\n  }\n\n  invoiceFilter(data: any): void {\n    this.invoiceSettings = {};\n    this.onSearchHeader = false;\n    this.invoiceSettings['rows'] = [];\n\n    this.invoiceSearchView.isCancel = this.searchForm.value.isCancel;\n    this.invoiceSearchView.feeType = data.feeType;\n\n    const searchData = this.prepareModel(this.invoiceSearchView, data);\n    if (!this.searchForm.controls['studentName'].value) {\n      searchData.studentIds = null;\n    }\n    searchData.schoolAcademicSessionId = this.currentAcademicSessionId;\n    this.setModelDataTableComponent(this.currentComponent, this.invoiceSearchView);\n    this.studentDbService.invoiceList(searchData).subscribe((res: any) => this.invoiceResult(res), error => {\n      this.errorResponse(error);\n    });\n  }\n\n  clearFilterData(): void {\n    this.invoiceSearchView.adjustmentAmount = [];\n    this.invoiceSearchView.balanceAmount = [];\n    this.invoiceSearchView.dueAmount = [];\n    this.invoiceSearchView.dueDateBegin = null;\n    this.invoiceSearchView.dueDateEnd = null;\n    this.invoiceSearchView.invoiceAmount = [];\n    this.invoiceSearchView.invoiceDateBegin = null;\n    this.invoiceSearchView.invoiceDateEnd = null;\n    this.invoiceSearchView.invoiceStatus = [];\n    this.invoiceSearchView.issueDateBegin = null;\n    this.invoiceSearchView.issueDateEnd = null;\n    this.invoiceSearchView.penaltyAmount = [];\n    this.invoiceSearchView.realizedAmount = [];\n    this.invoiceSearchView.receiptNumber = [];\n  }\n\n  invoiceResult(data: any): void {\n    this.showCustomCard = false;\n    this.invoiceData = [];\n    if (data.resultList != null) {\n      this.invoiceData = this.setDateFormat(data.resultList.list);\n      this.invoiceData.forEach(e => {\n        e.invoiceAmount = e.invoiceAmount !== 0 ? this.getFormattedCurrency(e.invoiceAmount) : e.invoiceAmount;\n        e.adjustmentAmount = e.adjustmentAmount !== 0 ? this.getFormattedCurrency(e.adjustmentAmount) : e.adjustmentAmount;\n        e.realizedAmount = e.realizedAmount !== 0 ? this.getFormattedCurrency(e.realizedAmount) : e.realizedAmount;\n        e.balanceAmount = e.balanceAmount !== 0 ? this.getFormattedCurrency(e.balanceAmount) : e.balanceAmount;\n        e.operations = [\n          {\n            name: AppSettings.VIEW,\n            icon: AppSettings.DETAILS_ICON,\n          },\n          {\n\n            icon: AppSettings.MARKS_ICON,\n            name: AppSettings.DOWNLOAD_INVOICE,\n          }\n        ];\n      });\n      this.invoiceSearchView.pageNumber = data.pageNumber;\n      this.totalItems = data.totalItems;\n    }\n    else {\n      this.invoiceSummaryHeadders = null;\n    }\n    if (data.dataModel != null) {\n      this.invoiceSummaryHeadders = Object.keys(data.dataModel);\n      this.invoiceSummary = data.dataModel;\n    }\n    this.prepareInvoiceTable(data.filters, false);\n    this.onSearchHeader = true;\n    // this.invoiceId.length === 0 ? this.showPayments = false : this.CancelForm();\n  }\n\n  prepareInvoiceTable(data: Array<any>, buttonRequired: boolean): void {\n    this.invoiceCols = [\n      { field: 'invoiceNumber', header: 'Invoice Number', sort: true },\n      { field: 'feeTerm', header: 'Fee Term', sort: true },\n      { field: 'studentName', header: 'Student Name', sort: true },\n      { field: 'classSection', header: 'Class-Section', sort: true },\n      { field: 'invoiceDate', header: 'Invoice Date', sort: true },\n      { field: 'issueDate', header: 'Issue Date', sort: true },\n      { field: 'dueDate', header: 'Due Date', sort: true },\n      { field: 'invoiceAmount', header: 'Invoice Amount', sort: true },\n      { field: 'adjustmentAmount', header: 'Adjustment Amount', sort: true },\n      { field: 'realizedAmount', header: 'Realized Amount', sort: true },\n      { field: 'balanceAmount', header: 'Balance Amount', sort: true },\n      { field: 'status', header: 'Status', sort: true },\n      { field: 'actions', header: 'Actions', sort: false }\n    ];\n    // To-do\n    // if (this.invoiceSearchView.isCancel) {\n    //   data.map(e => {\n    //     if (e.name === 'invoiceStatus') {\n    //       e.options = e.options.filter(ele => ele.label !== 'Cancelled');\n    //     }\n    //   });\n    // }\n    this.invoiceSettings = {\n      rows: this.invoiceData,\n      columns: this.invoiceCols,\n      isSelectRowRequired: true,\n      componentName: this.currentComponent,\n      visibleSelectAll: true,\n      totalRowsCount: this.totalItems,\n      isPaginationRequired: true,\n      isMultiDeleteRequired: false,\n      model: this.invoiceSearchView,\n      tableName: 'Payments',\n      headerOperations: {\n        addingForm: {\n          required: buttonRequired,\n          btnName: 'New Payment'\n        }\n      },\n      filtersList: data,\n    };\n    this.scrollIntoViewById('invoice-grid');\n  }\n\n  InvoiceCancel(cancellationForm: any): void {\n    this.validateForm = true;\n    if (this.cancellationForm.invalid) {\n      return;\n    }\n    else {\n      this.invoiceCriteriaViewModel.ids = this.invoiceId;\n      this.invoiceCriteriaViewModel.cancelledReason = cancellationForm.value.cancelledReason;\n      this.invoiceService.feeInvoice(this.invoiceCriteriaViewModel).subscribe(res => this.response(res), error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n\n  // response\n  response(data: any): void {\n    this.validateForm = false;\n    if (data.statusCode === this.HttpStatus.OK) {\n      this.dialog.closeAll();\n      this.cancellationForm.reset();\n      this.aForm.resetForm();\n      this.closeAddPanel = true;\n      this.invoiceFilter(this.invoiceSearchView);\n      this.option.reset();\n    }\n    else {\n      this.closeAddPanel = false;\n    }\n    this.openSnackBar(data.messages.ResultMessage);\n  }\n  // method for when click cancel panel it will open\n  closeForm(): void {\n    this.validateForm = false;\n    this.dialogRef.closeAll();\n    this.aForm.resetForm();\n    this.closeAddPanel = true;\n  }\n\n  // method for prevent spaces and allow only single  at the middle of the string\n  preventSpaces(event: any): void {\n    this.preventSpace(event);\n  }\n\n  selectAllForInvoice(data): void {\n    this.selectedInvoices = data;\n    if (!data.length) {\n      this.errorMessage = true;\n      this.option.reset();\n    }\n    this.invoiceId = [];\n    this.fileNames = [];\n    this.studentId = null;\n    if (data.length > 0) {\n      for (let index = 0; index < data.length; index++) {\n        this.invoiceId.push(data[index].id);\n        this.studentId = data[0].studentId;\n        if (data[index].attachmentName != null) {\n          this.fileNames.push(data[index].attachmentName);\n        }\n      }\n    }\n    else {\n      this.invoiceId = [];\n      this.showPayments = false;\n    }\n  }\n\n  changeValue(data: any): void {\n    this.searchForm.controls['isCancel'].setValue(data.checked);\n  }\n\n\n  invoiceActionSelect(data): void {\n    this.errorMessage = false;\n    this.actionValue = data;\n  }\n  paymentActionRedirection(): void {\n    const noInvoiceAmountsList = this.selectedInvoices.filter(x => x.invoiceAmount === 0 || x.balanceAmount === 0);\n    if (noInvoiceAmountsList && noInvoiceAmountsList.length) {\n      this.openSnackBar('Some selected invoices has no balance amount', true);\n      return;\n    }\n    if (this.actionValue === undefined) {\n      this.errorMessage = true;\n      return;\n    }\n    if (this.actionValue === 3) {\n      this.fileNames.forEach(element => {\n        this.zipViewModel.returnFileName = 'Invoice';\n        this.zipViewModel.fileNames.push(element);\n      });\n      this.zipFilesDownload();\n    }\n    else {\n      this.invoiceService.checkInvoices(this.invoiceId).subscribe(data => {\n        if (data.statusCode === HttpStatus.BAD_REQUEST) {\n          this.openSnackBar(data.messages.ResultMessage, true);\n          this.showPayments = false;\n        }\n        else {\n          this.feeAccount = {\n            feeAccountId: data.feeAccountId,\n            correctionDate: new Date()\n          };\n\n          this.actionValue === 1 ? (this.showPayments = true, this.paymentText()) : this.CancelForm();\n        }\n      });\n    }\n  }\n  paymentText(): void {\n    if (this.invoiceId.length > 1) {\n      this.paymentMessage = 'Payment Amount will be processed towards the selected multiple invoices in the order in which the invoices are generated.';\n    }\n    else {\n      this.paymentMessage = '';\n    }\n  }\n\n  zipFilesDownload(): void {\n    if (this.zipViewModel.fileNames.length > 0) {\n      this.storeService.storeZipPut(this.zipViewModel).subscribe(res => this.resFiles(res));\n    }\n    else {\n      this.openSnackBar(AppSettings.NO_ATTACHMENTS_FOUND, true);\n    }\n    this.option.reset();\n  }\n\n  resFiles(data: any): void {\n    this.ReturnFileName = data.extension;\n    this.DownloadDoc(data.extension);\n    this.fileNames = [];\n    this.invoiceId = [];\n    this.invoiceFilter(this.invoiceSearchView);\n  }\n\n  operationMethods(): void {\n    this.operationsForSummary = [\n      {\n        name: AppSettings.DOWNLOAD_ALL_INVOICES,\n        icon: AppSettings.VIEW,\n        operationName: AppSettings.VIEW_OPERATION,\n      },\n      {\n        name: AppSettings.DOWNLOAD_PENDING_INVOICES,\n        icon: AppSettings.VIEW,\n        operationName: AppSettings.VIEW\n      },\n      {\n        name: AppSettings.DOWNLOAD_CANCELLED_INVOICES,\n        icon: AppSettings.VIEW,\n        operationName: AppSettings.VIEW_OPERATION\n      }\n    ];\n  }\n\n  onSelectAction(item): void {\n    if (this.invoiceData.length > 0) {\n      this.invList = [];\n      switch (true) {\n        case item.name === AppSettings.DOWNLOAD_ALL_INVOICES:\n          this.invList = this.invoiceData.filter(x => x.attachmentName != null);\n          this.zipViewModel.returnFileName = AppSettings.INVOICES;\n          this.setViewModel();\n          break;\n        case item.name === AppSettings.DOWNLOAD_PENDING_INVOICES:\n          this.invList = this.invoiceData.filter(x => x.status === AppSettings.PENDING && x.attachmentName != null);\n          this.zipViewModel.returnFileName = AppSettings.INVOICES_PENDING;\n          this.setViewModel();\n          break;\n        case item.name === AppSettings.DOWNLOAD_CANCELLED_INVOICES:\n          this.invList = this.invoiceData.filter(x => x.status === AppSettings.CANCELLED && x.attachmentName != null);\n          this.zipViewModel.returnFileName = AppSettings.INVOICES_CANCELLED;\n          this.setViewModel();\n          break;\n      }\n    }\n    else {\n      this.openSnackBar(AppSettings.NODATA_FOUND, true);\n    }\n  }\n\n  setViewModel(): void {\n    this.zipViewModel.fileNames = [];\n    if (this.invList.length > 0) {\n      this.invList.forEach(element => {\n        this.zipViewModel.fileNames.push(element.attachmentName);\n      });\n      this.zipFilesDownload();\n    }\n    else {\n      this.openSnackBar(AppSettings.NO_ATTACHMENTS_FOUND, true);\n    }\n  }\n\n  savePayment(paymentForm: any): void {\n    this.invoiceService.checkInvoices(this.invoiceId).subscribe(data => {\n      if (data.statusCode === HttpStatus.BAD_REQUEST) {\n        this.openSnackBar(data.messages.ResultMessage, true);\n        this.showPayments = false;\n      }\n      else {\n        paymentForm.studentId = this.studentId;\n        paymentForm.invoiceIds = this.invoiceId;\n        paymentForm.schoolAcademicSessionId = this.currentAcademicSessionId;\n        this.paymentViewModel = paymentForm;\n        this.invoiceService.createPayment(this.paymentViewModel).subscribe(element => {\n          if (element.statusCode === HttpStatus.OK) {\n            this.showPayments = false;\n            this.invoiceFilter(this.invoiceSearchView);\n            this.option.reset();\n          }\n          else {\n            this.showPayments = true;\n          }\n          this.openSnackBar(element.messages.ResultMessage);\n          this.paymentCorrectionService.setCorrectionResponse(true);\n        });\n      }\n    });\n\n  }\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatcomponentsModule } from 'app/main/matcomponents.module';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedManagementModule } from 'app/shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from 'app/interceptors/token-interceptor';\nimport { GenerateInvoiceComponent } from './generate-invoice/generate-invoice.component';\nimport { StudentDBService } from 'app/service/student-information-system/student-db.service';\nimport { ManageFeeTypeTranchesService } from 'app/service/configuration/finance/api/manage-fee-type-tranches.service';\nimport { InvoiceRoutingModule } from './invoice-routing.module';\nimport { ClassesConfigService } from 'app/service/general/api/classes-config.service';\nimport { FeeTermsService } from 'app/service/configuration/finance/api/fee-terms.service';\nimport { InvoiceDetailsComponent } from './invoice-details/invoice-details.component';\nimport { InvoiceSearchDetailsComponent } from './invoice-search-details/invoice-search-details.component';\nimport { PaymentsModule } from '../payments/payments.module';\nimport { PaymentCorrectionService } from 'app/service/payments/payment-correction.service';\n\n\n\n@NgModule({\n  declarations: [\n  GenerateInvoiceComponent,\n  InvoiceDetailsComponent,\n  InvoiceSearchDetailsComponent,\n  ],\n\n\n  imports: [\n    CommonModule,\n    InvoiceRoutingModule,\n    MatcomponentsModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedManagementModule,\n    TranslateModule,\n    FuseSharedModule,\n    Ng2TelInputModule,\n    PaymentsModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }, StudentDBService, ManageFeeTypeTranchesService, ClassesConfigService, FeeTermsService , PaymentCorrectionService\n  ],\n  exports: [],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class InvoiceModule { }\n"],"sourceRoot":""}