{"version":3,"sources":["webpack:///./src/app/modules/configuration/finance/fee-accounts/fee-accounts.component.html","webpack:///./src/app/modules/configuration/finance/fee-accounts/fee-accounts.component.scss","webpack:///./src/app/modules/configuration/finance/fee-accounts/fee-accounts.component.ts","webpack:///./src/app/modules/configuration/finance/fee-concession-group/fee-concession-group.component.html","webpack:///./src/app/modules/configuration/finance/fee-concession-group/fee-concession-group.component.scss","webpack:///./src/app/modules/configuration/finance/fee-concession-group/fee-concession-group.component.ts","webpack:///./src/app/modules/configuration/finance/fee-terms/fee-terms.component.html","webpack:///./src/app/modules/configuration/finance/fee-terms/fee-terms.component.scss","webpack:///./src/app/modules/configuration/finance/fee-terms/fee-terms.component.ts","webpack:///./src/app/modules/configuration/finance/fee-type-tranches/fee-type-tranches.component.html","webpack:///./src/app/modules/configuration/finance/fee-type-tranches/fee-type-tranches.component.scss","webpack:///./src/app/modules/configuration/finance/fee-type-tranches/fee-type-tranches.component.ts","webpack:///./src/app/modules/configuration/finance/fee-type/fee-type.component.html","webpack:///./src/app/modules/configuration/finance/fee-type/fee-type.component.scss","webpack:///./src/app/modules/configuration/finance/fee-type/fee-type.component.ts","webpack:///./src/app/modules/configuration/finance/finance-routing.module.ts","webpack:///./src/app/modules/configuration/finance/finance.component.html","webpack:///./src/app/modules/configuration/finance/finance.component.scss","webpack:///./src/app/modules/configuration/finance/finance.component.ts","webpack:///./src/app/modules/configuration/finance/finance.module.ts","webpack:///./src/app/modules/configuration/finance/invoice-adjustment-type/invoice-adjustment-type.component.html","webpack:///./src/app/modules/configuration/finance/invoice-adjustment-type/invoice-adjustment-type.component.scss","webpack:///./src/app/modules/configuration/finance/invoice-adjustment-type/invoice-adjustment-type.component.ts","webpack:///./src/app/modules/configuration/finance/late-fee-rules/late-fee-rules.component.html","webpack:///./src/app/modules/configuration/finance/late-fee-rules/late-fee-rules.component.scss","webpack:///./src/app/modules/configuration/finance/late-fee-rules/late-fee-rules.component.ts","webpack:///./src/app/modules/configuration/finance/manage-fee-tranches/manage-fee-tranches.component.html","webpack:///./src/app/modules/configuration/finance/manage-fee-tranches/manage-fee-tranches.component.scss","webpack:///./src/app/modules/configuration/finance/manage-fee-tranches/manage-fee-tranches.component.ts","webpack:///./src/app/modules/configuration/finance/manage-fees/manage-fees.component.html","webpack:///./src/app/modules/configuration/finance/manage-fees/manage-fees.component.scss","webpack:///./src/app/modules/configuration/finance/manage-fees/manage-fees.component.ts","webpack:///./src/app/service/configuration/finance/api/api.ts","webpack:///./src/app/service/configuration/finance/api/fee-account.service.ts","webpack:///./src/app/service/configuration/finance/api/fee-type-tranches.service.ts","webpack:///./src/app/service/configuration/finance/api/invoice-adjustment-type.service.ts","webpack:///./src/app/service/configuration/finance/api/late-fee-rules.service.ts","webpack:///./src/app/service/configuration/finance/api/manage-fee-configuration.service.ts"],"names":[],"mappings":"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","file":"default~app-modules-configuration-finance-finance-module~app-shared-wizard-wizard-module.js","sourcesContent":["module.exports = \"<app-table *ngIf=\\\"dataLoaded | async\\\" [settings]=\\\"tabSettings\\\" (rowBasedAction)='rowActions($event)'\\n  (openAddForm)=\\\"openFeeAccountForm()\\\" [closeRowForm]='closeAddPanel' [templateRef]=\\\"feeAccountTemplate\\\"\\n  (getTableData)='getAllFeeAccounts($event)' [showSelectAll]=\\\"selectAll\\\" (deleteAllRows)=\\\"deleteAll()\\\"\\n  (selectedRows)='selectedRows($event)'>\\n</app-table>\\n\\n<ng-template #feeAccountTemplate>\\n  <form [formGroup]=\\\"feeAccountForm\\\" (ngSubmit)=\\\"addOrUpdateFeeAccount(feeAccountForm)\\\" #feeAccountDataForm=\\\"ngForm\\\">\\n\\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" class=\\\"pt-24\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"32\\\">\\n        <mat-label #accountName translate>accountname</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'feeAccountForm','accountName')\\\" matInput autocomplete=\\\"off\\\" (blur)=\\\"trimTextBoxSpaces('feeAccountForm','accountName')\\\" formControlName=\\\"accountName\\\"\\n          required>\\n        <mat-error>\\n          <app-validation [labelName]=\\\"accountName.innerText\\\" [validationControl]=\\\"feeAccountForm.controls.accountName\\\"\\n            [doValidate]=\\\"validate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"36\\\"\\n        class=\\\"px-sm-20\\\">\\n        <mat-label #code translate>Code</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'feeAccountForm','code')\\\" matInput autocomplete=\\\"off\\\" (blur)=\\\"trimTextBoxSpaces('feeAccountForm','code')\\\" formControlName=\\\"code\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"code.innerText\\\" [validationControl]=\\\"feeAccountForm.controls.code\\\"\\n            [doValidate]=\\\"validate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"32\\\">\\n        <mat-label #displayName translate>displayname</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'feeAccountForm','displayName')\\\" matInput autocomplete=\\\"off\\\" (blur)=\\\"trimTextBoxSpaces('feeAccountForm','displayName')\\\" formControlName=\\\"displayName\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"displayName.innerText\\\" [validationControl]=\\\"feeAccountForm.controls.displayName\\\"\\n            [doValidate]=\\\"validate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"pt-12\\\">\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"100\\\">\\n        <mat-label #description translate>description</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'feeAccountForm','description')\\\" matInput autocomplete=\\\"off\\\" (blur)=\\\"trimTextBoxSpaces('feeAccountForm','description')\\\" formControlName=\\\"description\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"description.innerText\\\" [validationControl]=\\\"feeAccountForm.controls.description\\\"\\n            [doValidate]=\\\"validate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"pt-16 pb-8\\\">\\n      <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\" (click)=\\\"cancel()\\\">\\n        {{'Cancel' | translate}}</button>\\n\\n      <button [disabled]=\\\"disableSubmitBtn\\\" mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\"\\n        mat-button>{{this.buttonName | translate}}</button>\\n    </div>\\n  </form>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9maW5hbmNlL2ZlZS1hY2NvdW50cy9mZWUtYWNjb3VudHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { FeeAccountsSearchView } from '../models/fee-acccounts-search-view';\nimport { AppSettings } from 'app/app.constants';\nimport { FeeAccountService } from 'app/service/configuration/finance/api/api';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { FeeAccountDataView } from '../models/fee-account-data-view';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\n\n@Component({\n  selector: 'app-fee-accounts',\n  templateUrl: './fee-accounts.component.html',\n  styleUrls: ['./fee-accounts.component.scss']\n})\nexport class FeeAccountsComponent extends CommonComponent implements OnInit {\n\n  // refernces for smart table\n  rows: Array<any> = [];\n  cols: any[];\n  pageCnt: number;\n  totalItems: number;\n  custRowsPerPageOptions: Array<number> = [];\n  tabSettings: {};\n  currentComponent = 'FeeAccountsComponent';\n  feeAccountIds: any[];\n\n\n  // references for add and update fee accounts page\n  @ViewChild('feeAccountTemplate') feeAccountTemplate;\n  @ViewChild('feeAccountDataForm') feeAccountDataForm;\n  feeAccountsSearchView: FeeAccountsSearchView;\n  updateFeeAccountView: FeeAccountDataView;\n  feeAccountForm: FormGroup;\n  closeAddPanel: boolean;\n  validate = true;\n  HttpStatus: any;\n  filterDetails: any = [];\n  isUpdate: boolean;\n  dataLoaded = Promise.resolve(false);\n  disableSubmitBtn = false;\n  buttonName: any;\n\n  constructor(public dialogRef: MatDialog, public commonService: CommonService, private feeAccountService: FeeAccountService, public snackBar: MatSnackBar) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.HttpStatus = require('http-status-codes');\n    this.feeAccountsSearchView = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n      failedRecords: [],\n      displayName: [],\n      accountName: [],\n      code: [],\n      description: []\n    };\n    this.feeAccountForm = new FormGroup({\n      accountName: new FormControl('', [Validators.required, Validators.maxLength(45)]),\n      displayName: new FormControl('', [Validators.maxLength(45)]),\n      code: new FormControl('', [Validators.maxLength(6)]),\n      description: new FormControl('', [Validators.maxLength(135)]),\n      id: new FormControl(''),\n    });\n\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.feeAccountsSearchView = modelTableComponent;\n    }\n    this.getAllFeeAccounts(this.feeAccountsSearchView);\n    // fee account table Colums\n    this.cols = [\n      { field: 'accountName', header: 'accountname', sort: true },\n      { field: 'displayName', header: 'displayname', sort: true },\n      { field: 'code', header: 'Code', sort: true },\n      { field: 'description', header: 'description', sort: true },\n      { field: 'actions', header: 'Actions' },\n    ];\n\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.feeAccountsSearchView,\n      tablename: 'FeeAccounts',\n      componentName: this.currentComponent,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      pageCnt: this.pageCnt,\n    };\n  }\n\n  // get all fee accounts list method\n  getAllFeeAccounts(_searchFeeAccounts: FeeAccountsSearchView): void {\n    this.feeAccountsSearchView = _searchFeeAccounts;\n    this.feeAccountService.feeAccountDetails(_searchFeeAccounts.sortBy, _searchFeeAccounts.accountName,\n      _searchFeeAccounts.code, _searchFeeAccounts.displayName, _searchFeeAccounts.description,\n      _searchFeeAccounts.sortOrder, _searchFeeAccounts.failedRecords, _searchFeeAccounts.pageNumber,\n      _searchFeeAccounts.pageSize).subscribe(res => { this.feeAccountsResponse(res); this.dataLoaded = Promise.resolve(true); }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  feeAccountsResponse(res: any): void {\n    if (!res.feeAccountsView) {\n      this.rows = [];\n    } else {\n      this.rows = res.feeAccountsView.list;\n      this.totalItems = res.feeAccountsView.totalItems;\n    }\n    const sectionOperations = [\n      {\n        name: AppSettings.EDIT_OPERATION,\n        icon: AppSettings.EDIT_ICON\n\n      },\n      {\n        name: AppSettings.DELETE_OPERATION,\n        icon: AppSettings.DELETE_ICON,\n      },\n    ];\n    this.rows.forEach(e => {\n      e.operations = sectionOperations;\n    });\n    if (res.feeAccountsView) {\n      this.feeAccountsSearchView.pageNumber = res.feeAccountsView.pageNumber;\n    }\n    this.filterDetails = res.filters;\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.feeAccountsSearchView,\n      rows: this.rows,\n      tablename: 'Fee Accounts',\n      componentName: this.currentComponent,\n      visibleSelectAll: true,\n      isSelectRowRequired: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      pageCnt: this.pageCnt,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: 'new'\n        },\n        infoButton: {\n          required: true,\n          text: 'Fee Accounts'\n        }\n      },\n      filtersList: res.filters,\n    };\n  }\n  // End\n\n  // to open new section page\n  openFeeAccountForm(): void {\n    this.closeAddPanel = false;\n    this.feeAccountDataForm.resetForm();\n    this.isUpdate = false;\n    this.validate = true;\n    this.buttonName = AppSettings.SUBMIT;\n  }\n\n  // to add or update fee account  details method\n  addOrUpdateFeeAccount(feeAccountForm: any): void {\n    this.validate = true;\n    if (this.feeAccountForm.invalid) {\n      return;\n    }\n    else {\n      this.disableSubmitBtn = true;\n      if (this.isUpdate) {\n        this.buttonName = AppSettings.UPDATE;\n        this.updateFeeAccountView = feeAccountForm.value;\n        this.feeAccountService.updateFeeAccountDetails(this.updateFeeAccountView).subscribe(res => this.feeAccountResponse(res), error => {\n          this.disableSubmitBtn = false;\n          this.errorResponse(error);\n        });\n      }\n      else {\n        this.buttonName = AppSettings.SUBMIT;\n        this.feeAccountService.createFeeAccountDetails(feeAccountForm.value).subscribe(res => this.feeAccountResponse(res), error => {\n          this.disableSubmitBtn = false;\n          this.errorResponse(error);\n        });\n      }\n    }\n  }\n\n  // fee account response based on request\n  feeAccountResponse(res: any): void {\n    if (res.statusCode === this.HttpStatus.OK) {\n      this.dialogRef.closeAll();\n      this.closeAddPanel = true;\n      this.feeAccountIds = [];\n      this.feeAccountsSearchView.failedRecords = [];\n      this.disableSubmitBtn = false;\n      this.getAllFeeAccounts(this.feeAccountsSearchView);\n      this.openSnackBar(res.messages.ResultMessage);\n    }\n    else {\n      this.closeAddPanel = false;\n      this.openSnackBar(res.messages.ResultMessage, true);\n    }\n  }\n\n  selectedRows(data: any): void {\n    this.feeAccountIds = [];\n    for (let index = 0; index < data.length; index++) {\n      this.feeAccountIds.push(data[index].id);\n    }\n  }\n\n  // when click the cancel button closed the fee account form\n  cancel(): void {\n    this.closeAddPanel = true;\n  }\n\n  // fee account table row actions for edit and delete operations\n  rowActions(response: any): void {\n    if (response.operation === AppSettings.EDIT) {\n      this.buttonName = AppSettings.UPDATE;\n      this.feeAccountForm.controls['accountName'].setValue(response.clickedRow.accountName);\n      this.feeAccountForm.controls['id'].setValue(response.clickedRow.id);\n      this.feeAccountForm.controls['displayName'].setValue(response.clickedRow.displayName);\n      this.feeAccountForm.controls['code'].setValue(response.clickedRow.code);\n      this.feeAccountForm.controls['description'].setValue(response.clickedRow.description);\n      this.closeAddPanel = false;\n      this.isUpdate = true;\n    }\n    if (response.operation === AppSettings.DELETE) {\n      this.feeAccountIds = [];\n      this.feeAccountIds.push(response.clickedRow.id);\n      const dialogRef = this.dialogRef.open(CustomDialogComponent, {\n        disableClose: true,\n        data: { text: this.commonService.getTranslation(AppSettings.WARNING_ON_SINGLE_DELETE, ''), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n      });\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.feeAccountService.deleteFeeAccountDetails(this.feeAccountIds).subscribe(res => this.deleteResponse(res), error => {\n            this.errorResponse(error);\n          });\n        }\n      });\n    }\n  }\n\n  // multi delete functionalities from fee account table\n  deleteAll(): void {\n    const dialogRef = this.dialogRef.open(CustomDialogComponent, {\n      disableClose: true,\n      data: { text: this.commonService.getTranslation(AppSettings.WARNING_ON_MULTI_DELETE, ''), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n    });\n    dialogRef.afterClosed().subscribe(action => {\n      if (action === AppSettings.YES) {\n        this.feeAccountService.deleteFeeAccountDetails(this.feeAccountIds).subscribe(res => this.deleteResponse(res), error => {\n          if (error.error.failedRecords !== undefined && error.error.failedRecords.length > 0) {\n            this.feeAccountsSearchView.failedRecords = error.error.failedRecords;\n          }\n          this.getAllFeeAccounts(this.feeAccountsSearchView);\n          this.errorResponse(error);\n        });\n      }\n    });\n  }\n\n  deleteResponse(response: any): void {\n    this.feeAccountsSearchView.failedRecords = response.failedRecords;\n    this.getAllFeeAccounts(this.feeAccountsSearchView);\n    this.openSnackBar(response.messages.ResultMessage);\n\n  }\n}\n","module.exports = \"<app-table [settings]=\\\"tabSettings\\\" (getTableData)='concessionGroupTableData($event)'\\n  [templateRef]=\\\"feeConcessionGroupTemplate\\\" (rowBasedAction)='rowActions($event)' [closeRowForm]='closeAddPanel'\\n  (openAddForm)=\\\"openForm()\\\">\\n</app-table>\\n\\n<ng-template #feeConcessionGroupTemplate>\\n  <form *ngIf=\\\"((dataLoaded && typeLoaded) || isUpdate)\\\" fxLayout=\\\"column\\\" [formGroup]=\\\"feeConcessionGroupForm\\\" id=\\\"add-update-form\\\"\\n    (ngSubmit)=\\\"save(feeConcessionGroupForm)\\\" #feeConcessionForm=\\\"ngForm\\\">\\n    <div formArrayName=\\\"feeConcessionGroupArray\\\"\\n      *ngFor=\\\"let itemrow of feeConcessionGroupForm?.get('feeConcessionGroupArray')?.controls; let i=index\\\">\\n      <div [formGroupName]=\\\"i\\\">\\n        <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" class=\\\"py-24\\\" fxLayoutAlign=\\\"center center\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\"  fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"25\\\">\\n            <mat-label #groupname translate>Concession Group</mat-label>\\n            <input  (keyup)=\\\"preventSpaceForArray($event,feeConcessionGroupForm?.controls.feeConcessionGroupArray?.controls[i].controls.groupName)\\\" (blur)=\\\"trimTextBoxSpaces('groupName','feeConcessionGroupForm')\\\" id =\\\"groupName\\\"\\n              matInput required autocomplete=\\\"off\\\" formControlName=\\\"groupName\\\">\\n            <mat-error>\\n              <app-validation [labelName]='groupname.innerText'\\n                [validationControl]=\\\"feeConcessionGroupForm?.controls.feeConcessionGroupArray?.controls[i].controls.groupName\\\"\\n                [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" class=\\\"px-sm-20\\\" fxFlex=\\\"100\\\"\\n            fxFlex.gt-xs=\\\"25\\\">\\n            <mat-label #code translate>Code</mat-label>\\n            <input matInput (keyup)=\\\"preventSpaceForArray($event,feeConcessionGroupForm?.controls.feeConcessionGroupArray?.controls[i].controls.code)\\\"  (blur)=\\\"trimTextBoxSpaces('code','feeConcessionGroupForm')\\\"\\n              autocomplete=\\\"off\\\" formControlName=\\\"code\\\">\\n            <mat-error>\\n              <app-validation [labelName]='code.innerText'\\n                [validationControl]=\\\"feeConcessionGroupForm?.controls.feeConcessionGroupArray?.controls[i].controls.code\\\"\\n                [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"50\\\">\\n            <mat-label #description translate>Description</mat-label>\\n            <input matInput (keyup)=\\\"preventSpaceForArray($event,feeConcessionGroupForm?.controls.feeConcessionGroupArray?.controls[i].controls.description)\\\" \\n              (blur)=\\\"trimTextBoxSpaces('description','feeConcessionGroupForm')\\\" autocomplete=\\\"off\\\"\\n              formControlName=\\\"description\\\">\\n            <mat-error>\\n              <app-validation [labelName]='description.innerText'\\n                [validationControl]=\\\"feeConcessionGroupForm?.controls.feeConcessionGroupArray?.controls[i].controls.description\\\"\\n                [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n\\n        <div fxFlexFill fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center start\\\" class=\\\"mb-24\\\">\\n          <div fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"20\\\" translate>Fee Type</div>\\n          <div fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"20\\\" class=\\\"px-20\\\" translate>Concession Type</div>\\n          <div fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"20\\\" translate>Term</div>\\n          <div fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"40\\\" class=\\\"pl-20\\\" translate>Concession</div>\\n        </div>\\n\\n\\n        <div formArrayName=\\\"feeConcessionFeeType\\\" *ngFor=\\\"let itemrow1 of feeConcession(itemrow).controls; let j=index\\\">\\n          <div [formGroupName]=\\\"j\\\" fxFlexFill fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\n            <div fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"20\\\" id=\\\"feeTypeId\\\">\\n              {{itemrow1?.controls['feeTypeName']?.value}}</div>\\n\\n            <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"20\\\" class=\\\"px-20\\\">\\n              <mat-label #concessiontypetext translate>Concession Type</mat-label>\\n              <mat-select name=\\\"concessiontypeId\\\" formControlName=\\\"concessionTypeId\\\"\\n                (selectionChange)=\\\"onSelectConcessionType($event,itemrow1?.controls['feeTypeId'],j,itemrow)\\\">\\n                <mat-option *ngIf=\\\"concessionTypes?.length\\\"></mat-option>\\n                <mat-option *ngFor=\\\"let concessiontype of concessionTypes\\\" [value]=\\\"concessiontype.value\\\">\\n                  {{concessiontype.label}}\\n                </mat-option>\\n              </mat-select>\\n\\n            </mat-form-field>\\n            <div *ngIf=\\\"getValue(itemrow,j)==true && feeConcessionGroupForm?.controls.feeConcessionGroupArray?.controls[i].controls.feeConcessionFeeType?.controls[j].controls.dropDownData.value == null\\\">The selected Fee Type does not have Fee Terms to offer Discount By Term.</div>\\n\\n            <div *ngIf=\\\"getValue(itemrow,j)==false\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex.gt-xs=\\\"20\\\">\\n              <p #each translate>Each</p>\\n            </div>\\n\\n            <div *ngIf=\\\"getValue(itemrow,j)==false\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"40\\\">\\n              <mat-form-field form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"40\\\"\\n                class=\\\"w-148 formfield-pb-0\\\">\\n                <mat-label #discount translate>Discount</mat-label>\\n                <input (keyup)=\\\"preventSpaceForArray($event,itemrow1.controls.discount)\\\" matInput autocomplete=\\\"off\\\" numbersOnly\\n                  formControlName=\\\"discount\\\">\\n              </mat-form-field>\\n              <mat-error>\\n                <app-validation [isTollTip] = \\\"true\\\" [labelName]='discount.innerText'\\n                  [validationControl]=\\\"feeConcessionGroupForm?.controls.feeConcessionGroupArray?.controls[i].controls.feeConcessionFeeType?.controls[j].controls.discount\\\"\\n                  [doValidate]=\\\"true\\\">\\n                </app-validation>\\n              </mat-error>\\n            </div>\\n\\n            <div *ngIf=\\\"getValue(itemrow,j)==true && dropDownLoaded | async\\\" fxLayout=\\\"column\\\" fxFlexFill\\n              fxFlex.gt-xs=\\\"20\\\">\\n              <app-custom-dropdown\\n                *ngIf=\\\"feeConcessionGroupForm?.controls.feeConcessionGroupArray?.controls[i].controls.feeConcessionFeeType?.controls[j].controls.dropDownData.value\\\"\\n                formControlName=\\\"feeTypeForFeeTermIdMulti\\\" class=\\\"pr-20\\\"\\n                (selectedData)=\\\"onSelectFeeTerm($event,j,itemrow1)\\\" (change)=\\\"ontestSeclect()\\\"\\n                [dropDownConf]=\\\"feeConcessionGroupForm?.controls.feeConcessionGroupArray?.controls[i].controls.feeConcessionFeeType?.controls[j].controls.dropDownData.value\\\"\\n                ngDefaultControl [disable]=\\\"disabled\\\">\\n              </app-custom-dropdown>\\n            </div>\\n\\n            <div\\n              *ngIf=\\\"getValue(itemrow,j)==true && feeConcessionGroupForm?.controls.feeConcessionGroupArray?.controls[i].controls.feeConcessionFeeType?.controls[j].controls.feeTypeForFeeTermIdMulti.value.length>0\\\"\\n              fxLayout=\\\" column\\\" fxFlexFill fxFlex=\\\"40\\\">\\n              <div #terms fxLayout=\\\"row wrap\\\" fxFlex=\\\"100\\\">\\n                <div formArrayName=\\\"feeConcessionFeeTerm\\\"\\n                  *ngFor=\\\"let feeTerm of itemrow1.get('feeConcessionFeeTerm').controls; let h=index\\\">\\n                  <div [formGroupName]=\\\"h\\\" class=\\\"pb-12\\\">\\n                    <mat-form-field form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"30\\\"\\n                      class=\\\"w-148  pr-12 formfield-pb-0\\\">\\n                      <mat-label #termConcessionAmt translate>{{feeTerm?.controls['feeTermName']?.value}}</mat-label>\\n                      <input (keyup)=\\\"preventSpaceForArray($event,feeTerm.controls.termConcessionAmt)\\\" matInput autocomplete=\\\"off\\\" numbersOnly\\n                        formControlName=\\\"termConcessionAmt\\\">\\n                      <mat-error class=\\\"pt-8 text-center\\\">\\n                        <app-validation  [isTollTip] = \\\"true\\\"  [labelName]='termConcessionAmt.innerText'\\n                          [validationControl]=\\\"feeTerm.controls.termConcessionAmt\\\"\\n                          [doValidate]=\\\"true\\\">\\n                        </app-validation>\\n                      </mat-error>\\n                    </mat-form-field>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mt-20\\\">\\n      <button mat-raised-button type=\\\"reset\\\" (click)=\\\"onCancelClick()\\\"\\n        class=\\\"text-uppercase mr-12\\\">{{'Cancel' | translate}}</button>\\n      <button [disabled]=\\\"disbleSubmitBtn\\\" mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\"\\n        mat-button>{{(isUpdate ? 'Update':'Submit') | translate}}</button>\\n    </div>\\n  </form>\\n</ng-template>\\n\"","module.exports = \".bottom-10 {\\n  bottom: 10px;\\n  font-size: 22px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9maW5hbmNlL2ZlZS1jb25jZXNzaW9uLWdyb3VwL2ZlZS1jb25jZXNzaW9uLWdyb3VwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBVztFQUNYLGVBQWUsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9maW5hbmNlL2ZlZS1jb25jZXNzaW9uLWdyb3VwL2ZlZS1jb25jZXNzaW9uLWdyb3VwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJvdHRvbS0xMHtcbiAgICBib3R0b206MTBweDtcbiAgICBmb250LXNpemU6IDIycHg7XG59Il19 */\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { FeeConcessionGroupListView } from '../models/fee-concession-group-list-view';\nimport { FeeConcessionGroupTermViewModel } from '../models/fee-concession-group-term-viewmodel';\nimport { FeeConcessionGroupViewModel } from '../models/fee-concession-group-viewmodel';\nimport { Pattern, AppSettings } from 'app/app.constants';\nimport { FeeConcessionGroupService } from 'app/service/configuration/finance/api/fee-concession-group.service';\nimport { MatDialog, MatDialogRef, MatSnackBar } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { DropDownConfModel } from 'app/models/drop-down-conf-view';\nimport { FormGroup, Validators, FormBuilder, FormArray, FormControl } from '@angular/forms';\nimport { FeeConcessionGroupsDataView } from '../models/fee-concession-group-data-view';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-fee-concession-group',\n  templateUrl: './fee-concession-group.component.html',\n  styleUrls: ['./fee-concession-group.component.scss']\n})\n\nexport class FeeConcessionGroupComponent extends CommonComponent implements OnInit {\n  @ViewChild('feeConcessionGroupTemplate') addFeeConcessiongroupTemplate;\n  @ViewChild('feeConcessionForm') feeConcessionForm;\n  @ViewChild('input1') inputEl: ElementRef;\n  tableData: Array<any> = [];\n  rows: Array<any>;\n  cols: any[];\n  pageCnt: number;\n  totalItems: number;\n  custRowsPerPageOptions: Array<number> = [];\n  tabSettings: {};\n  filterRowData: any = [];\n  gridName = 'feeconcessionghroupconfiguration';\n  closeAddPanel = true;\n  m_feeConcessionGroupListView: FeeConcessionGroupListView;\n  currentComponentName: 'feeconcessionghroupconfiguration';\n  feeConcessionGroupTermView: FeeConcessionGroupTermViewModel;\n  feeConcessionGroupTermViewModel: Array<FeeConcessionGroupTermViewModel>;\n  feeConcessionGroupViewModel: FeeConcessionGroupViewModel;\n\n  modelname: any;\n  concessionTypes: Array<any> = [];\n  feeTypes: Array<any> = [];\n  feeTerms: Array<any> = [];\n  dropDownData: DropDownConfModel;\n  dropDownLoaded = Promise.resolve(false);\n  feeConcessionGroupForm: FormGroup;\n  feeConcessionFeeType: FormArray;\n  feeConcessionGroupArray: FormArray;\n  feeConcessionFeeTerm: FormArray;\n  dataLoaded: Boolean = false;\n  typeLoaded: Boolean = false;\n  validate: Boolean = false;\n  error: Array<any> = [];\n  buttonName: any;\n  disbleSubmitBtn = false;\n  isUpdate: boolean;\n  feeConfigurationId: string;\n\n  constructor(private _fb: FormBuilder, public commonService: CommonService,\n    public dialog: MatDialog, private commonComponent: CommonComponent,\n    private _feeConcessionGroupService: FeeConcessionGroupService, public snackBar: MatSnackBar) {\n    super();\n\n    this.m_feeConcessionGroupListView = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n      name: [],\n      code: [],\n      description: [],\n      feeTypeIds: [],\n      concession: [],\n      concessionType: [],\n      feeTermIds: [],\n    };\n\n    this.feeConcessionGroupViewModel = {\n      groupName: '',\n      code: '',\n      description: '',\n      feeConcessionGroupFeeTypeViewModel: []\n    };\n  }\n\n  ngOnInit(): void {\n    this.getFeeTypes();\n    this.getFeeConcessionTypes();\n\n    this.cols = [\n      { field: 'name', header: 'Concession Group' },\n      { field: 'code', header: 'Code' },\n      { field: 'description', header: 'Description' },\n      { field: 'feeType', header: 'Fee Type' },\n      { field: 'concessionType', header: 'Concession Type' },\n      { field: 'term', header: 'Fee Term' },\n      { field: 'concession', header: 'Concession Amount' },\n      { field: 'actions', header: 'Actions' },\n    ];\n\n    const modelTableComponent = this.getModelComponent(this.currentComponentName);\n    if (modelTableComponent) {\n      this.m_feeConcessionGroupListView = modelTableComponent;\n    }\n\n    // initializing table settings /\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.m_feeConcessionGroupListView,\n      tablename: 'Fee Concession Groups',\n      componentName: this.currentComponentName,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n    };\n    this.loadConcessionGroupdata();\n  }\n\n  createFeeConcessionGroupItem(groupName: any = '', code: any = '', description: any = ''): FormGroup {\n    return this._fb.group({\n      groupName: [groupName, Validators.maxLength(45)],\n      code: [code, Validators.maxLength(6)],\n      description: [description, Validators.maxLength(135)],\n      feeConcessionFeeType: this.createFeeConcessionTypeArray(),\n    });\n  }\n\n  createFeeConcessionTypeArray(): FormArray {\n    const arr = new FormArray([]);\n    if (this.feeTypes.length > 0) {\n      this.feeTypes.forEach((element) => {\n        arr.push(this.createFeeType(element.label, element.value));\n      });\n    }\n    else {\n      this.createFeeType('', '');\n    }\n    return arr;\n  }\n\n  createFeeType(feeTypeName: any = '', feeTypeId = ''): FormGroup {\n    return this._fb.group({\n      feeTypeName: feeTypeName,\n      feeTypeId: feeTypeId,\n      concessionTypeId: '',\n      isfeeterms: false,\n      feeTypeForFeeTermIdMulti: '',\n      feeTerms: '',\n      discount: new FormControl('', [Validators.min(1), Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS), Validators.max(99999999)]),\n      dropDownData: '',\n      feeConcessionFeeTerm: this.createFeeterm(),\n    });\n  }\n\n  createFeeterm(): FormArray {\n    this.dataLoaded = true;\n    const arr = new FormArray([]);\n    return arr;\n  }\n\n  createFeeConcessionFeeTermArray(): FormGroup {\n\n    return this._fb.group({\n      feeTypeForTermId: '',\n      feeTermName: '',\n      termConcessionAmt: new FormControl('', [Validators.min(1), Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS), Validators.max(99999999)]),\n    });\n  }\n\n  getValue(form, i: any): void {\n    return form.controls.feeConcessionFeeType.controls[i].controls.isfeeterms.value;\n  }\n\n  feeConcession(form): FormArray {\n    return <FormArray>form.get('feeConcessionFeeType');\n  }\n\n  openForm(): void {\n    this.closeAddPanel = false;\n    this.buttonName = AppSettings.SUBMIT;\n    this.feeConcessionGroupForm = this._fb.group({\n      feeConcessionGroupArray: this._fb.array([this.createFeeConcessionGroupItem()])\n    });\n    this.valueChangesInfeeConcessionGroupArray();\n  }\n\n\n  // row-wise actions of the table(edit/delete)\n  rowActions(event: any): void {\n    if (event.operation === AppSettings.DELETE) {\n      const dialogRef = this.dialog.open(CustomDialogComponent, {\n        disableClose: true,\n        data: { text: this.commonService.getTranslation(AppSettings.DELETE_CONFORMATION), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n      });\n\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this._feeConcessionGroupService.deleteFeeConcessionGroup(event.clickedRow.id).subscribe(res => this.deleteResponse(res), error => {\n            this.errorResponse(error);\n          });\n        }\n      });\n    }\n    else if (event.operation === AppSettings.EDIT) {\n      this.feeConfigurationId = event.clickedRow.id;\n      this._feeConcessionGroupService.fetchConcessionGroupById(event.clickedRow.id).subscribe(res => this.getConcessionDetails(res), error => {\n        this.errorResponse(error);\n      });\n    }\n\n  }\n\n  // response after delete operation\n  deleteResponse(deleteResponse: any): void {\n    this.loadConcessionGroupdata();\n    this.openSnackBar(deleteResponse.messages.ResultMessage);\n  }\n\n  concessionGroupTableData(_event: FeeConcessionGroupListView): void {\n    this.m_feeConcessionGroupListView = _event;\n    this.loadConcessionGroupdata();\n  }\n\n  loadConcessionGroupdata(): void {\n    this._feeConcessionGroupService.fetchFeeConcessionGroup(this.m_feeConcessionGroupListView.sortBy, this.m_feeConcessionGroupListView.sortOrder,\n      this.m_feeConcessionGroupListView.name, this.m_feeConcessionGroupListView.code, this.m_feeConcessionGroupListView.description,\n      this.m_feeConcessionGroupListView.feeTypeIds, this.m_feeConcessionGroupListView.concessionType,\n      this.m_feeConcessionGroupListView.concession, this.m_feeConcessionGroupListView.feeTermIds, this.m_feeConcessionGroupListView.pageNumber,\n      this.m_feeConcessionGroupListView.pageSize).subscribe(data => this.response(data), error => {\n        this.errorResponse(error);\n      });\n  }\n\n  response(data: any): void {\n    if (localStorage.getItem(this.currentComponentName)) {\n      this.modelname = JSON.parse(localStorage.getItem(this.currentComponentName));\n    }\n    this.rows = [];\n    if (data.feeConcessionGroupDataViewList) {\n      this.rows = data.feeConcessionGroupDataViewList.list;\n      this.totalItems = data.feeConcessionGroupDataViewList.totalItems;\n    } else {\n      this.rows = [];\n    }\n    const gridOperations = [\n      {\n        name: AppSettings.EDIT_OPERATION,\n        icon: AppSettings.EDIT\n      },\n      {\n        name: AppSettings.DELETE_OPERATION,\n        icon: AppSettings.DELETE,\n      },\n    ];\n    this.filterRowData = this.rows;\n    const x = [];\n\n    this.filterRowData.forEach(elnt => {\n      if (x.length === 0) {\n        x.push(elnt);\n      }\n      else {\n        this.filterRowData.forEach((element: any) => {\n\n          const foundIndex = x.findIndex((value: any) => {\n            if (value.name === element.name && value.id === element.id) {\n              return value;\n            }\n          });\n          if (foundIndex === -1) {\n            x.push(element);\n          }\n        });\n      }\n    });\n    this.filterRowData = x;\n    if (this.filterRowData.length > 0) {\n      // apply edit and delete\n      this.filterRowData.forEach(element => {\n        this.rows.forEach(element1 => {\n          if (element.name === element1.name && element.id === element1.id && element.feeType === element1.feeType\n            && element.concessionType === element1.concessionType && element.term === element1.term) {\n            element1.operations = gridOperations;\n          }\n        });\n      });\n\n      this.rows.forEach(ele => {\n        if (ele.concessionType !== AppSettings.DISCOUT_PERCENT) {\n          ele.concession = ele.concession > 0\n            ? this.getFormattedCurrency(ele.concession) : ele.concession;\n        }\n      });\n    }\n\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.m_feeConcessionGroupListView,\n      rows: this.rows,\n      tablename: 'Fee Concession Groups',\n      componentName: this.currentComponentName,\n      isSelectRowRequired: false,\n      visibleSelectAll: false,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      filtersList: data.filters,\n      rowGroupingColumns: ['name', 'code', 'description', 'feeType', 'concessionType'],\n      headerOperations: {\n        infoButton: {\n          required: true,\n          text: 'Fee Concession Groups'\n        },\n        addingForm: {\n          required: true,\n          btnName: AppSettings.BUTTON_NAME\n        }\n      }\n    };\n\n    this.filterRowData = this.rows;\n  }\n\n  getFeeTypes(): void {\n    this.feeTypes = [];\n    this._feeConcessionGroupService.fetchfeeTypes(null).subscribe(response => {\n      if (response.listViews.length) {\n\n        response.listViews.forEach(element => {\n          this.feeTypes.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n  getFeeConcessionTypes(): void {\n    this.concessionTypes = [];\n    this._feeConcessionGroupService.fetchConcessionTypes(null).subscribe(response => {\n      if (response.listViews.length) {\n        response.listViews.forEach(element => {\n\n          this.concessionTypes.push({\n            label: element.name,\n            value: element.id,\n            code: element.code\n          });\n        });\n        this.typeLoaded = true;\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n\n  }\n\n  onSelectConcessionType(data: any, data1: any, i = 0, form): void {\n    this.feeConcessionFeeType = form.controls.feeConcessionFeeType as FormArray;\n    this.feeConcessionFeeType.controls[i].patchValue({ concessionTypeId: data.value ? data.value : null });\n    form.controls.feeConcessionFeeType.controls[i].controls.discount.patchValue(null);\n    this.feeTerms = [];\n    form.controls.feeConcessionFeeType.controls[i].controls.feeTypeForFeeTermIdMulti.value = [];\n    if (!data.value) {\n      this.feeConcessionFeeType.controls[i].patchValue({ isfeeterms: false });\n      form.controls.feeConcessionFeeType.controls[i].controls.feeConcessionFeeTerm = new FormArray([]);\n      return;\n    }\n    if (this.concessionTypes.find(x => x.value === data.value).code === AppSettings.FCT_DISCOUNT_CODE\n      || this.concessionTypes.find(x => x.value === data.value).code === AppSettings.FCT_TERMDISCOUNT_CODE) {\n      this.feeConcessionFeeType.controls[i].patchValue({ isfeeterms: false });\n      form.controls.feeConcessionFeeType.controls[i].controls.feeConcessionFeeTerm = new FormArray([]);\n    }\n    else {\n      form.controls.feeConcessionFeeType.controls[i].controls.discount.patchValue(null);\n      this.feeConcessionFeeType.controls[i].patchValue({ isfeeterms: true });\n\n      this._feeConcessionGroupService.fetchFeeTerms(data1.value).subscribe(response => {\n        if (response.listViews.length) {\n\n          response.listViews.forEach(element => {\n            this.feeTerms.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n          this.dropDownLoaded = Promise.resolve(true);\n\n          this.dropDownData = { multiSelect: true, placeholder: 'Fee Terms', data: this.feeTerms, noEntryFoundLabel: AppSettings.NODATA_FOUND, isRequired: false };\n          this.feeConcessionFeeType.controls[i].patchValue({ dropDownData: this.dropDownData });\n        }\n        else {\n          this.feeConcessionFeeType.controls[i].patchValue({ dropDownData: null });\n        }\n      }, error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n\n  onSelectFeeTerm(data: any, i = 0, form): void {\n    let existingfeeTermArray = [];\n    const dataArray = [];\n    if (data.length > 0) {\n\n      data.forEach(element => {\n        this.feeConcessionFeeTerm = <FormArray>form.get('feeConcessionFeeTerm');\n        dataArray.push(element.value);\n        let isTermExist = false;\n        if (this.feeConcessionFeeTerm.controls.length > 0) {\n          existingfeeTermArray = [];\n          form.controls.feeConcessionFeeTerm.controls.forEach(ele => {\n            existingfeeTermArray.push(ele.controls.feeTypeForTermId.value);\n            if (ele.controls.feeTypeForTermId.value === element.value) {\n              isTermExist = true;\n            }\n          });\n        }\n        if (isTermExist === false) {\n          this.feeConcessionFeeTerm.push(this.createFeeTerm(element.label, element.value));\n        }\n      });\n\n      const removableFeeTermId = existingfeeTermArray.filter(function (item): boolean {\n        return !dataArray.includes(item);\n      });\n      if (removableFeeTermId.length > 0) {\n        this.feeConcessionFeeTerm.removeAt(form.controls.feeConcessionFeeTerm.controls.findIndex(x => x.controls.feeTypeForTermId.value === removableFeeTermId[0]));\n      }\n    } else {\n      const clearFormArray = <FormArray>form.get('feeConcessionFeeTerm');\n      while (clearFormArray.length !== 0) {\n        clearFormArray.removeAt(0);\n      }\n    }\n  }\n\n  createFeeTerm(FeeTermName: any = '', FeeTypeForFeeTermId = 0): FormGroup {\n\n    return this._fb.group({\n      feeTypeForTermId: FeeTypeForFeeTermId,\n      feeTermName: FeeTermName,\n      termConcessionAmt: new FormControl('', [Validators.min(1), Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS), Validators.max(99999999)])\n    });\n  }\n\n  onCancelClick(): void {\n    this.scrollIntoView('app-table');\n    this.feeConcessionGroupForm.reset();\n    this.feeConcessionForm.resetForm();\n    this.closeAddPanel = true;\n    this.validate = false;\n    this.isUpdate = false;\n    this.getFeeTypes();\n    this.loadConcessionGroupdata();\n  }\n\n  ValidateForm(form: any): void {\n    this.error = [];\n    const concessionTypeId = form.controls.feeConcessionGroupArray.controls[0].controls.feeConcessionFeeType.controls.reduce(function (tot, record): void {\n      return tot + record.controls.concessionTypeId.value;\n    }, 0);\n    if (concessionTypeId === '0' || concessionTypeId === 0) {\n      this.error.push({\n        errorMessage: AppSettings.FEE_TYPE_REQUIRED,\n        isValid: false\n      });\n      return;\n    }\n\n    form.controls.feeConcessionGroupArray.controls[0].controls.feeConcessionFeeType.controls.forEach(element => {\n      if (element.controls.discount.status === AppSettings.INVALID) {\n        // this.error = [];\n        return;\n      }\n      if (element.controls.concessionTypeId.value > 0\n        && element.controls.isfeeterms.value === false\n        && (element.controls.discount.value === 0\n          || element.controls.discount.value === '' || element.controls.discount.value === null)) {\n\n        this.error.push({\n          errorMessage: AppSettings.FEE_DISCOUNT_REQUIRED,\n          isValid: false\n        });\n\n        return;\n      }\n\n      if (element.controls.concessionTypeId.value > 0 &&\n        element.controls.isfeeterms.value === true && element.controls.feeTypeForFeeTermIdMulti.value.length === 0) {\n        if (element.controls.dropDownData.value) {\n          this.error.push({\n            errorMessage: AppSettings.FEE_TERMS_REQUIRED,\n            isValid: false\n          });\n        } else {\n          this.error.push({\n            errorMessage: AppSettings.NO_FEE_TERMS,\n            isValid: false\n          });\n        }\n\n        return;\n      }\n\n      if (element.controls.concessionTypeId.value > 0 && element.controls.isfeeterms.value === true && element.controls.feeTypeForFeeTermIdMulti.value.length > 0) {\n\n        element.controls.feeConcessionFeeTerm.controls.forEach(term => {\n          if (term.controls.termConcessionAmt.status === AppSettings.INVALID) {\n            // this.error = [];\n            return false;\n          }\n          if (term.controls.termConcessionAmt.value === 0 || term.controls.termConcessionAmt.value === '') {\n            this.error.push({\n              errorMessage: AppSettings.FEETERM_CONCESSION_REQUIRED,\n              isValid: false\n            });\n\n            return;\n          }\n        });\n      }\n    });\n  }\n\n  dialogMethod(dialogData: any, disableClose: boolean, button1Text: string, button2Text?: string): MatDialogRef<CustomDialogComponent, any> {\n    return this.dialog.open(CustomDialogComponent, {\n      disableClose: disableClose,\n      data: { text: this.commonService.getTranslation(dialogData), action: true, btn1Text: button1Text, btn2Text: button2Text },\n    });\n  }\n\n  save(form: any): void {\n    this.feeConcessionGroupTermViewModel = [];\n    if (this.feeConcessionGroupForm.status === AppSettings.INVALID) {\n      document.getElementById('groupName').focus();\n      return;\n    }\n    if (this.feeConcessionGroupForm.status === AppSettings.VALID) {\n      // if (this.feeConcessionFeeTerm && this.feeConcessionFeeTerm.status === AppSettings.INVALID) {\n      //   return;\n      // }\n      this.ValidateForm(form);\n      if (this.error.length > 0) {\n        this.openSnackBar(this.error[0].errorMessage, true);\n        this.scrollIntoViewById('add-update-form');\n      }\n      else {\n\n        if (this.isUpdate) {\n          this.validate = false;\n          let updateModel: FeeConcessionGroupsDataView;\n          updateModel = {\n            id: '',\n            feeConcessionGroupViewModel: this.feeConcessionGroupViewModel\n          };\n\n          this.prepareUpdateData(form);\n          updateModel.id = this.feeConfigurationId;\n          updateModel.feeConcessionGroupViewModel = this.feeConcessionGroupViewModel;\n\n\n          this._feeConcessionGroupService.updateFeeConcessionGroup(updateModel)\n            .subscribe(res => this.addResponse(res), error => {\n              this.errorResponse(error);\n            });\n        }\n        else {\n          this.validate = false;\n          this.feeConcessionGroupViewModel.groupName = form.controls.feeConcessionGroupArray.controls[0].controls['groupName'].value;\n          this.feeConcessionGroupViewModel.code = form.controls.feeConcessionGroupArray.controls[0].controls.code.value;\n          this.feeConcessionGroupViewModel.description = form.controls.feeConcessionGroupArray.controls[0].controls.description.value;\n          this.feeConcessionGroupViewModel.feeConcessionGroupFeeTypeViewModel = [];\n          form.controls.feeConcessionGroupArray.controls[0].controls.feeConcessionFeeType.controls.forEach(element => {\n            this.feeConcessionGroupTermViewModel = [];\n            //// Array For FeeTerms////\n            if (element.controls.concessionTypeId.value > 0) {\n              element.controls.feeConcessionFeeTerm.controls.forEach(item => {\n                this.feeConcessionGroupTermViewModel.push({\n                  feeTypeForTermId: item.controls.feeTypeForTermId.value,\n                  termConcessionAmt: item.controls.termConcessionAmt.value\n                });\n              });\n\n              /// Array For FeeTypes///\n              this.feeConcessionGroupViewModel.feeConcessionGroupFeeTypeViewModel.push({\n                feeTypeId: element.controls.feeTypeId.value,\n                concessionTypeId: element.controls.concessionTypeId.value,\n                discount: element.controls.discount.value,\n                feeConcessionGroupTermViewModel: this.feeConcessionGroupTermViewModel\n              });\n            }\n          });\n          this._feeConcessionGroupService.createFeeConcessionGroup(this.feeConcessionGroupViewModel)\n            .subscribe(res => this.addResponse(res), error => {\n              this.errorResponse(error);\n            });\n        }\n      }\n    } else {\n      this.ValidateForm(form);\n    }\n  }\n\n  prepareUpdateData(form: any): void {\n    this.feeConcessionGroupViewModel.groupName = form.controls.feeConcessionGroupArray.controls[0].controls['groupName'].value;\n    this.feeConcessionGroupViewModel.code = form.controls.feeConcessionGroupArray.controls[0].controls.code.value;\n    this.feeConcessionGroupViewModel.description = form.controls.feeConcessionGroupArray.controls[0].controls.description.value;\n    this.feeConcessionGroupViewModel.feeConcessionGroupFeeTypeViewModel = [];\n\n    form.controls.feeConcessionGroupArray.controls[0].controls.feeConcessionFeeType.controls.forEach(element => {\n      this.feeConcessionGroupTermViewModel = [];\n      //// Array For FeeTerms////\n      if (element.controls.concessionTypeId.value > 0) {\n        element.controls.feeConcessionFeeTerm.controls.forEach(item => {\n          this.feeConcessionGroupTermViewModel.push({\n            feeTypeForTermId: item.controls.feeTypeForTermId.value,\n            termConcessionAmt: item.controls.termConcessionAmt.value\n          });\n        });\n\n        /// Array For FeeTypes///\n        this.feeConcessionGroupViewModel.feeConcessionGroupFeeTypeViewModel.push({\n          feeTypeId: element.controls.feeTypeId.value,\n          concessionTypeId: element.controls.concessionTypeId.value,\n          discount: element.controls.discount.value,\n          feeConcessionGroupTermViewModel: this.feeConcessionGroupTermViewModel\n        });\n\n      }\n    });\n  }\n\n  addResponse(response: any): void {\n    this.onCancelClick();\n    this.openSnackBar(response.messages.ResultMessage);\n  }\n\n  ontestSeclect(): void {\n\n    this.valueChangesInfeeConcessionGroupArray();\n  }\n\n  valueChangesInfeeConcessionGroupArray(): void {\n    this.feeConcessionGroupForm.controls['feeConcessionGroupArray'].valueChanges.pipe(distinctUntilChanged()).subscribe((formArray) => {\n      formArray[0].feeConcessionFeeType.forEach((element, j) => {\n        const validators = [];\n        if (element.concessionTypeId === 125) {\n          // tslint:disable-next-line: max-line-length\n          validators.push(Validators.min(1), Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS), Validators.max(99999999));\n        }\n        else if (element.concessionTypeId === 126) {\n          // tslint:disable-next-line: max-line-length\n          validators.push(Validators.min(1), Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS), Validators.max(99999999));\n        }\n        else {\n          if (!element.concessionTypeId) {\n            // tslint:disable-next-line: max-line-length\n            (<FormArray>(<FormArray>this.feeConcessionGroupForm.get('feeConcessionGroupArray')).controls[0].get('feeConcessionFeeType')).controls[j].get('discount').patchValue(null, { emitEvent: false });\n          }\n          validators.push(Validators.min(1), Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS), Validators.max(99999999));\n        }\n\n        // tslint:disable-next-line: max-line-length\n        (<FormArray>(<FormArray>this.feeConcessionGroupForm.get('feeConcessionGroupArray')).controls[0].get('feeConcessionFeeType')).controls[j].get('discount').setValidators(validators);\n\n        // tslint:disable-next-line: max-line-length\n        (<FormArray>(<FormArray>this.feeConcessionGroupForm.get('feeConcessionGroupArray')).controls[0].get('feeConcessionFeeType')).controls[j].get('discount').updateValueAndValidity({ emitEvent: false });\n\n        if (element.feeConcessionFeeTerm.length) {\n          element.feeConcessionFeeTerm.forEach((element1, r) => {\n            (<FormArray>(<FormArray>(<FormArray>this.feeConcessionGroupForm.get('feeConcessionGroupArray')).controls[0].\n              get('feeConcessionFeeType')).controls[j].get('feeConcessionFeeTerm')).controls[r].get('termConcessionAmt').setValidators(validators);\n            (<FormArray>(<FormArray>(<FormArray>this.feeConcessionGroupForm.get('feeConcessionGroupArray')).controls[0].\n              get('feeConcessionFeeType')).controls[j].get('feeConcessionFeeTerm')).controls[r].get('termConcessionAmt').updateValueAndValidity({ emitEvent: false });\n          });\n        }\n      });\n    });\n  }\n\n\n  getConcessionDetails(data: any): void {\n\n    this.isUpdate = true;\n    this.feeConcessionGroupViewModel = data.feeConcessionGroupDataViewModel;\n\n    this.feeConcessionGroupForm = this._fb.group({\n      feeConcessionGroupArray: this._fb.array([this.createFeeConcessionGroupItem()])\n    });\n    // this.feeConcessionGroupForm?.controls.feeConcessionGroupArray?.controls[i].controls.feeConcessionFeeType?.controls[j].controls.discount \n\n    this.valueChangesInfeeConcessionGroupArray();\n\n    if (this.feeConcessionGroupViewModel != null) {\n      const dataArray = [];\n      const innerArray = [];\n      let feeConcessionGroupArrayData: any;\n\n      dataArray.push(this.feeConcessionGroupViewModel);\n      innerArray.push(dataArray[0].feeConcessionGroupDiscountDataViewModel);\n\n      feeConcessionGroupArrayData = this.feeConcessionGroupForm.get('feeConcessionGroupArray');\n      const feeConcessionFeeTypeData = feeConcessionGroupArrayData.controls[0].get('feeConcessionFeeType');\n      feeConcessionGroupArrayData.patchValue(dataArray);\n\n      innerArray[0].forEach(dataItem => {\n        this.UpdateData(dataItem, feeConcessionFeeTypeData);\n      });\n\n    } else {\n      this.openSnackBar(data.messages.ResultMessage);\n    }\n\n  }\n\n  createTermConcessionAmt(): FormGroup {\n    return this._fb.group({\n      feeTypeForTermId: '',\n      feeTermName: '',\n      termConcessionAmt: new FormControl('', [Validators.min(1), Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS), Validators.max(99999999)]),\n    });\n  }\n\n  UpdateData(ParentDataItem: any, form): void {\n    const that = this;\n\n    // tslint:disable-next-line:no-shadowed-variable\n    form.controls.forEach(function (element, i): void {\n      if (element.value.feeTypeId === ParentDataItem.feeTypeId) {\n\n        form.controls[i].patchValue({ concessionTypeId: ParentDataItem.concessionTypeId });\n        form.controls[i].patchValue({ discount: ParentDataItem.discount });\n\n        if (that.concessionTypes.find(x => x.value === ParentDataItem.concessionTypeId).code\n          === AppSettings.FCT_DISCOUNT_CODE || that.concessionTypes.find(x => x.value === ParentDataItem.concessionTypeId).code === AppSettings.FCT_TERMDISCOUNT_CODE) {\n          form.controls[i].patchValue({ isfeeterms: false });\n        } else {\n          that.feeTerms = [];\n          let selectedArray = [];\n          form.controls[i].patchValue({ isfeeterms: true });\n\n          that._feeConcessionGroupService.fetchFeeTerms(element.value.feeTypeId).subscribe(response => {\n            if (response.listViews.length) {\n\n              that.feeTerms = [];\n              selectedArray = [];\n              const feeTypeForFeeTermIds = [];\n\n              response.listViews.forEach(data => {\n                that.feeTerms.push({\n                  label: data.name,\n                  value: data.id\n                });\n              });\n\n              that.dropDownLoaded = Promise.resolve(true);\n              that.dropDownData = { multiSelect: true, placeholder: 'Fee Terms', data: that.feeTerms, noEntryFoundLabel: AppSettings.NODATA_FOUND, isRequired: false };\n              form.controls[i].patchValue({ dropDownData: that.dropDownData });\n\n              ParentDataItem.feeConcessionGroupTermDiscountDataViewModel.forEach(function (dataItem, p): void {\n\n                feeTypeForFeeTermIds.push(dataItem.feeTypeForFeeTermId);\n                that.feeConcessionFeeTerm = <FormArray>form.controls[i].get('feeConcessionFeeTerm');\n                that.feeConcessionFeeTerm.push(that.createTermConcessionAmt());\n                form.controls[i].get('feeConcessionFeeTerm').controls[p].patchValue({ feeTypeForTermId: dataItem.feeTypeForFeeTermId });\n                form.controls[i].get('feeConcessionFeeTerm').controls[p].patchValue({ termConcessionAmt: dataItem.termConcessionAmt });\n                form.controls[i].get('feeConcessionFeeTerm').controls[p].patchValue({ feeTermName: dataItem.feeTermName });\n                // feeTermName\n              });\n\n              feeTypeForFeeTermIds.forEach(id => {\n                that.feeTerms.map(item => {\n                  if (item.value === id) {\n                    selectedArray.push(item);\n                  }\n                });\n              });\n\n              form.controls[i].patchValue({ feeTypeForFeeTermIdMulti: selectedArray });\n            }\n            else{\n                form.controls[i].patchValue({ dropDownData: null });\n            }\n          }, error => {\n            that.errorResponse(error);\n          });\n        }\n      }\n    });\n\n  }\n\n  trimTextBoxSpaces(key: string, form: any): void {\n    this.feeConcessionGroupForm.get('feeConcessionGroupArray')['controls'].forEach(controlElt => {\n\n      if (controlElt.controls[key] !== null && controlElt.controls[key] !== undefined) {\n        if (typeof controlElt.controls[key].value === 'object' && controlElt.controls[key].value !== null) {\n        } else {\n          controlElt.controls[key].setValue(this.commonService.trimSpaces(controlElt.controls[key].value));\n        }\n      }\n    });\n  }\n}\n\n\n","module.exports = \"<app-table [settings]=\\\"tabSettings\\\" (getTableData)='getFeeTermsTableDetails($event)' (openAddForm)=\\\"onAddFormClick()\\\"\\n[closeAddForm]=\\\"closeAddPanel\\\" (rowBasedAction)=\\\"rowWiseActions($event)\\\" [newFilterbuttonsDisable]=\\\"buttonDisable\\\" [closeRowForm]='closeAddPanel' [templateRef]=\\\"addFeeTermsRef\\\"></app-table>\\n\\n<ng-template #addFeeTermsRef>\\n  <mat-vertical-stepper [linear]=\\\"true\\\" #stepper (selectionChange)=\\\"OnSelectionChange($event)\\\" (animationDone)=\\\"onStepperAnimationDone(stepper.selectedIndex)\\\">\\n    <mat-step [stepControl]=\\\"feeTermForm\\\">\\n      <form  [formGroup]=\\\"feeTermForm\\\" fxLayout=\\\"column\\\" (ngSubmit)=\\\"feeTermDetails(feeTermForm)\\\" #FeeTermForm=\\\"ngForm\\\">\\n        <ng-template matStepLabel><span translate>Fee Term Details</span></ng-template>\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-24\\\" fxLayout.gt-xs=\\\"row\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"mr-sm-20\\\">\\n            <mat-label #shortName translate>name</mat-label>\\n            <input (keyup)=\\\"preventSpace($event,'feeTermForm','name')\\\" matInput [readonly]=\\\"feeTermsDet.isInvoiceGenerated\\\"  formControlName=\\\"name\\\" (blur)=\\\"trimTextBoxSpaces('feeTermForm','name')\\\" autocomplete=\\\"off\\\" required>\\n            <mat-error>\\n              <app-validation [labelName]='shortName.innerText' [validationControl]=\\\"feeTermForm.controls.name\\\" [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"40\\\" class=\\\"mr-sm-20\\\">\\n            <mat-label #displayName translate>Display Name</mat-label>\\n            <input (keyup)=\\\"preventSpace($event,'feeTermForm','displayName')\\\" matInput [readonly]=\\\"feeTermsDet.isInvoiceGenerated\\\"  formControlName=\\\"displayName\\\" (blur)=\\\"trimTextBoxSpaces('feeTermForm','displayName')\\\" autocomplete=\\\"off\\\">\\n            <mat-error>\\n              <app-validation [labelName]='displayName.innerText' [validationControl]=\\\"feeTermForm.controls.displayName\\\" [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"20\\\">\\n            <mat-label #code translate>Code</mat-label>\\n            <input (keyup)=\\\"preventSpace($event,'feeTermForm','code')\\\" matInput [readonly]=\\\"feeTermsDet.isInvoiceGenerated\\\"  formControlName=\\\"code\\\" autocomplete=\\\"off\\\" (blur)=\\\"trimTextBoxSpaces('feeTermForm','code')\\\">\\n            <mat-error>\\n              <app-validation [labelName]='code.innerText' [validationControl]=\\\"feeTermForm.controls.code\\\" [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxFlexFill fxLayout=\\\"row\\\" class=\\\"pt-12\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\">\\n            <mat-label #description translate>Description</mat-label>\\n            <textarea matInput [readonly]=\\\"feeTermsDet.isInvoiceGenerated\\\"  formControlName=\\\"description\\\" (blur)=\\\"trimTextBoxSpaces('description')\\\" autocomplete=\\\"off\\\"></textarea>\\n            <mat-error>\\n              <app-validation [labelName]='description.innerText' [validationControl]=\\\"feeTermForm.controls.description\\\" [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-12\\\">\\n          <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"reset\\\" (click)=\\\"cancel()\\\">{{'Cancel' | translate}}</button>\\n          <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">{{'Next' | translate}}</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <mat-step [stepControl]=\\\"durationForm\\\">\\n      <form [formGroup]=\\\"durationForm\\\" fxLayout=\\\"column\\\" (ngSubmit)=\\\"durationDetails(durationForm)\\\"  #DurationForm=\\\"ngForm\\\">\\n        <ng-template matStepLabel><span translate>Duration</span></ng-template>\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-24\\\" fxLayout.gt-xs=\\\"row\\\">\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"mr-sm-20 icon-center\\\" fxFlexFill fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\n            <mat-label #startDate translate>Start Date</mat-label>\\n            <input matInput (keyup)=\\\"forceValidation('startDate',durationForm)\\\" [matDatepicker]=\\\"startDatePicker\\\" [min]=\\\"academicSessionMinDate\\\" [max]=\\\"academicSessionMaxDate\\\" [readonly]=\\\"feeTermsDet.isInvoiceGenerated\\\"  formControlName=\\\"startDate\\\" required>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\" *ngIf=\\\"feeTermsDet.isInvoiceGenerated==false\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #startDatePicker></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]='startDate.innerText' [validationControl]=\\\"durationForm.controls.startDate\\\"\\n                [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"icon-center\\\" fxFlexFill fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\n            <mat-label #endDate translate>End Date</mat-label>\\n            <input matInput  (keyup)=\\\"forceValidation('endDate',durationForm)\\\" [matDatepicker]=\\\"endDatePicker\\\" [min]=\\\"durationForm.controls.startDate.value\\\"\\n              [readonly]=\\\"feeTermsDet.isInvoiceGenerated\\\"  formControlName=\\\"endDate\\\" [max]=\\\"academicSessionMaxDate\\\" required>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\" *ngIf=\\\"feeTermsDet.isInvoiceGenerated==false\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #endDatePicker [startAt]=\\\"durationForm.value.startDate\\\"></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]='endDate.innerText' [validationControl]=\\\"durationForm.controls.endDate\\\"\\n                [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-12\\\">\\n          <button class=\\\"mr-8 text-uppercase\\\" mat-raised-button matStepperPrevious type=\\\"button\\\">{{'Previous' | translate}}</button>\\n          <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">{{'Next' | translate}}</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <mat-step [stepControl]=\\\"invoiceSettingsForm\\\" >\\n      <form [formGroup]=\\\"invoiceSettingsForm\\\" fxLayout=\\\"column\\\" (ngSubmit)=\\\"invoiceDetails(invoiceSettingsForm)\\\" #InvoiceSettingsForm=\\\"ngForm\\\">\\n        <ng-template matStepLabel><span translate>Invoice Settings</span></ng-template>\\n        <div class=\\\"font-size-16 accent-fg\\\" translate>Based on the selections in this section, the system will be able to generate Fee Invoices to Students of Classes associated with this Fee Term\\n          Invoice Generation Option will be a Required if you want to generate invoices for this Fee Term</div>\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-24\\\" fxLayout.gt-xs=\\\"row\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"64\\\" fxLayout=\\\"column\\\">\\n          <mat-label #invoiceGenerationOptionTypeId translate>Select Invoice Generation Option</mat-label>\\n          <mat-select [disabled]=\\\"feeTermsDet.isInvoiceGenerated\\\"  formControlName=\\\"invoiceGenerationOptionTypeId\\\" [required]=\\\"invoiceSettingsForm.value.invoiceGenerationDate\\\">\\n            <mat-option *ngIf=\\\"generateInvOptions?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let generateInv of generateInvOptions\\\" [value]=\\\"generateInv.id\\\" ngDefaultControl>\\n              {{ generateInv.name }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='invoiceGenerationOptionTypeId.innerText' [validationControl]=\\\"invoiceSettingsForm.controls.invoiceGenerationOptionTypeId\\\"\\n              [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        </div>\\n        <div fxFlexFill fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-12\\\" fxLayout.gt-xs=\\\"row\\\">\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"mr-sm-20 icon-center\\\" fxFlexFill fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\n            <mat-label #invoiceGenerationDate translate>Invoice Generation Date</mat-label>\\n            <input matInput  (keyup)=\\\"forceValidation('invoiceGenerationDate',invoiceSettingsForm)\\\" [matDatepicker]=\\\"invGenDatePicker\\\" [readonly]=\\\"feeTermsDet.isInvoiceGenerated\\\"  formControlName=\\\"invoiceGenerationDate\\\" >\\n            <mat-datepicker-toggle matSuffix [for]=\\\"invGenDatePicker\\\" *ngIf=\\\"feeTermsDet.isInvoiceGenerated==false\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #invGenDatePicker></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]='invoiceGenerationDate.innerText' [validationControl]=\\\"invoiceSettingsForm.controls.invoiceGenerationDate\\\"\\n                [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"mr-sm-20 icon-center\\\" fxFlexFill fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\n            <mat-label #invoiceIssueDate translate>Invoice Issue Date</mat-label>\\n            <input matInput (keyup)=\\\"forceValidation('invoiceIssueDate',invoiceSettingsForm)\\\" [matDatepicker]=\\\"invIssueDatePicker\\\" [min]=\\\"invoiceSettingsForm.controls.invoiceGenerationDate.value\\\"\\n               [readonly]=\\\"feeTermsDet.isInvoiceGenerated\\\"  formControlName=\\\"invoiceIssueDate\\\" >\\n            <mat-datepicker-toggle matSuffix [for]=\\\"invIssueDatePicker\\\" *ngIf=\\\"feeTermsDet.isInvoiceGenerated==false\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #invIssueDatePicker></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]='invoiceIssueDate.innerText' [validationControl]=\\\"invoiceSettingsForm.controls.invoiceIssueDate\\\"\\n                [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"mr-sm-20 icon-center\\\" fxFlexFill fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\n            <mat-label #invoiceDueDate translate>Invoice Due Date</mat-label>\\n            <input matInput (keyup)=\\\"forceValidation('invoiceDueDate',invoiceSettingsForm)\\\" [matDatepicker]=\\\"invDueDatePicker\\\" [min]=\\\"invoiceSettingsForm.controls.invoiceIssueDate.value\\\"\\n               [readonly]=\\\"feeTermsDet.isInvoiceGenerated\\\"  formControlName=\\\"invoiceDueDate\\\" >\\n            <mat-datepicker-toggle matSuffix [for]=\\\"invDueDatePicker\\\" *ngIf=\\\"feeTermsDet.isInvoiceGenerated==false\\\"></mat-datepicker-toggle>\\n            <mat-datepicker #invDueDatePicker></mat-datepicker>\\n            <mat-error>\\n              <app-validation [labelName]='invoiceDueDate.innerText' [validationControl]=\\\"invoiceSettingsForm.controls.invoiceDueDate\\\"\\n                [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-12\\\">\\n          <button class=\\\"mr-8 text-uppercase\\\" mat-raised-button matStepperPrevious type=\\\"button\\\">{{'Previous' | translate}}</button>\\n          <button mat-raised-button matStepperNext type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">{{'Next' | translate}}</button>\\n        </div>\\n      </form>\\n    </mat-step>\\n    <mat-step class=\\\"form-status\\\">\\n      <ng-template matStepLabel><span translate>Done</span></ng-template>\\n      <div fxFlex=\\\"100\\\" class=\\\"text-center font-size-18 pb-20 pt-8\\\" translate>Please verify the entered information before your final submit</div>\\n      \\n      <mat-list fxLayout.gt-xs=\\\"row wrap\\\"  fxFlex=\\\"100\\\" fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-0 border m-auto confirm-table\\\">\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"feeTermsDataViewModel.shortName!='' && feeTermsDataViewModel.shortName!=null\\\">\\n      <div fxLayout=\\\"row\\\"><strong translate class=\\\"pr-4\\\">Name</strong> :<span class=\\\"pl-8\\\">{{feeTermsDataViewModel.shortName}}</span></div>\\n      </mat-list-item>\\n      \\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"feeTermsDataViewModel.displayName!='' && feeTermsDataViewModel.displayName!=null\\\">\\n      <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\"><strong translate class=\\\"pr-4\\\">Display Name</strong> :<span class=\\\"pl-8\\\">{{feeTermsDataViewModel.displayName}}</span></div>\\n      </mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"feeTermsDataViewModel.code!='' && feeTermsDataViewModel.code!=null\\\">\\n      <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\"><strong translate class=\\\"pr-4\\\">Code</strong> :<span class=\\\"pl-8\\\">{{feeTermsDataViewModel.code}}</span></div>\\n      </mat-list-item>\\n      \\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"feeTermsDataViewModel.description!='' && feeTermsDataViewModel.description!=null\\\">\\n      <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\"><strong translate class=\\\"pr-4\\\">Description</strong> :<span class=\\\"pl-8\\\">{{feeTermsDataViewModel.description}} </span></div>\\n      </mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"feeTermsDataViewModel.startDate!='' && feeTermsDataViewModel.startDate!=null\\\">\\n      <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\"><strong translate class=\\\"pr-4\\\">Start Date</strong> :<span class=\\\"pl-8\\\">{{feeTermsDataViewModel.startDate}}</span></div>\\n      </mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"feeTermsDataViewModel.endDate!='' && feeTermsDataViewModel.endDate!=null\\\">\\n      <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\"><strong translate class=\\\"pr-4\\\">End Date</strong> :<span class=\\\"pl-8\\\">{{feeTermsDataViewModel.endDate}}</span></div>\\n      </mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"feeTermsDataViewModel.invoiceGenerationDate!='' && feeTermsDataViewModel.invoiceGenerationDate!=null\\\">\\n      <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\"><strong translate class=\\\"pr-4\\\">Invoice Generation Date</strong> :<span class=\\\"pl-8\\\">{{feeTermsDataViewModel.invoiceGenerationDate}}</span></div>\\n      </mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"feeTermsDataViewModel.invoiceIssueDate!='' && feeTermsDataViewModel.invoiceIssueDate!=null\\\">\\n      <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\"><strong translate class=\\\"pr-4\\\">Invoice Issue Date</strong> :<span class=\\\"pl-8\\\">{{feeTermsDataViewModel.invoiceIssueDate}}</span></div>\\n      </mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"feeTermsDataViewModel.invoiceDueDate!='' && feeTermsDataViewModel.invoiceDueDate!=null\\\">\\n      <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\"><strong translate class=\\\"pr-4\\\">Invoice Due Date</strong> :<span class=\\\"pl-8\\\">{{feeTermsDataViewModel.invoiceDueDate}}</span></div>\\n      </mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" *ngIf=\\\"selectionNameInvType!='' && selectionNameInvType!=null\\\">\\n      <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\"><strong translate class=\\\"pr-4\\\">Invoice Generation Option</strong> :<span class=\\\"pl-8\\\">{{selectionNameInvType}} </span></div>\\n      </mat-list-item>\\n      </mat-list>\\n      \\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mt-12 pt-24\\\">\\n      <button class=\\\"mr-8 text-uppercase\\\" mat-raised-button matStepperPrevious type=\\\"button\\\">{{'Previous' | translate}}</button>\\n      <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" [disabled]=\\\"disbleSubmitBtn\\\" color=\\\"accent\\\" *ngIf=\\\"isCreate\\\" (click)=\\\"onSubmitForm()\\\">{{'submit' | translate}}</button>\\n      <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" [disabled]=\\\"disbleUpdateBtn\\\" color=\\\"accent\\\" *ngIf=\\\"isUpdate\\\" (click)=\\\"onSubmitForm()\\\">{{'update' | translate}}</button>\\n      </div>\\n      </mat-step>\\n  </mat-vertical-stepper>\\n</ng-template>\\n\"","module.exports = \".confirm-table strong {\\n  white-space: nowrap; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9maW5hbmNlL2ZlZS10ZXJtcy9mZWUtdGVybXMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFBc0IsbUJBQW1CLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2NvbmZpZ3VyYXRpb24vZmluYW5jZS9mZWUtdGVybXMvZmVlLXRlcm1zLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbmZpcm0tdGFibGUgc3Ryb25ne3doaXRlLXNwYWNlOiBub3dyYXA7fSJdfQ== */\"","import { Component, ViewChild, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { TypeService } from 'app/service/academic-service/api/type.service';\nimport { AppSettings } from 'app/app.constants';\nimport { SearchFeeTermsView } from '../models/fee-term-view';\nimport { CommonService } from 'app/service/common.service';\nimport { FeeTermsService } from 'app/service/configuration/finance/api/fee-terms.service';\n\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { FeeTermsDataViewModel } from '../models/fee-terms-data-view-model';\nimport { FeeTermsViewModel } from '../models/fee-terms-view-model';\nimport { fuseAnimations } from '@fuse/animations';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-fee-terms',\n  templateUrl: './fee-terms.component.html',\n  styleUrls: ['./fee-terms.component.scss'],\n  animations: fuseAnimations,\n})\nexport class FeeTermsComponent extends CommonComponent implements OnInit {\n\n  @ViewChild('stepper') stepper;\n  @ViewChild('FeeTermForm') _feeTermForm;\n  @ViewChild('DurationForm') _durationForm;\n  @ViewChild('InvoiceSettingsForm') _invoiceSettingsForm;\n\n  // model declarations\n  searchFeeTermsView: SearchFeeTermsView;\n  feeTermsDataViewModel: FeeTermsDataViewModel;\n  feeTermsViewModel: FeeTermsViewModel;\n\n  // variable declarations\n  feeTermForm: FormGroup;\n  durationForm: FormGroup;\n  invoiceSettingsForm: FormGroup;\n\n  isEdit = false;\n  closeAddPanel: boolean;\n  isCreate: boolean;\n  isUpdate: boolean;\n  disbleSubmitBtn = false;\n  disbleUpdateBtn = false;\n  buttonDisable = false;\n  isValidInvoice = false;\n  interactedStepperIndex: Number = 0;\n\n  feeTermsDet: any;\n  selectionNameInvType: any;\n\n  generateInvOptions: Array<any> = [];\n  httpStatus: any;\n\n  // Table Variables \n  tableData: Array<any> = [];\n  rows: Array<any>;\n  cols: any[];\n  pageCnt: number;\n  totalItems: number;\n  custRowsPerPageOptions: Array<number> = [];\n  tabSettings: {};\n  currentComponent = 'FeeTermsComponent';\n\n  constructor(private _fb: FormBuilder, public dialog: MatDialog, public commonService: CommonService, private typeService: TypeService,\n    private feeTermsService: FeeTermsService, public snackBar: MatSnackBar, private changeDetector: ChangeDetectorRef) {\n    super();\n\n    this.feeTermsDataViewModel = {\n      shortName: '',\n      displayName: null,\n      code: '',\n      description: '',\n      startDate: '',\n      endDate: '',\n      invoiceGenerationDate: '',\n      invoiceIssueDate: '',\n      invoiceDueDate: '',\n      invoiceGenerationOptionTypeId: null,\n    };\n\n    this.feeTermsDet = {\n      isInvoiceGenerated: false\n    };\n\n    this.feeTermsViewModel = {};\n    this.searchFeeTermsView = {\n      sortBy: '',\n      sortOrder: AppSettings.SORT_ORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n  }\n\n  ngOnInit(): void {\n    this.httpStatus = require('http-status-codes');\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.searchFeeTermsView = modelTableComponent;\n    }\n\n    // Table Colums\n    this.cols = [\n      { field: 'shortName', header: 'Name', sort: true },\n      { field: 'displayName', header: 'Display Name', sort: true },\n      { field: 'code', header: 'Code', sort: true },\n      { field: 'description', header: 'Description', sort: true },\n      { field: 'startDate', header: 'Start Date', sort: true },\n      { field: 'endDate', header: 'End Date', sort: true },\n      { field: 'invoiceGenerationDate', header: 'Invoice Generation Date', sort: true },\n      { field: 'invoiceIssueDate', header: 'Invoice Issue Date', sort: true },\n      { field: 'invoiceDueDate', header: 'Invoice Due Date', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      tablename: 'Fee Terms',\n      componentName: this.currentComponent,\n    };\n\n    this.feeTermForm = this._fb.group({\n      name: new FormControl(null, [Validators.required, Validators.maxLength(15)]),\n      displayName: new FormControl(null, [Validators.maxLength(45)]),\n      code: new FormControl(null, [Validators.maxLength(6)]),\n      description: new FormControl(null, [Validators.maxLength(135)]),\n    });\n\n    this.durationForm = this._fb.group({\n      startDate: new FormControl(null, [Validators.required]),\n      endDate: new FormControl(null, [Validators.required])\n    });\n\n    // validating form based on selection\n    this.invoiceValidDetails();\n\n    this.feeTermsViewModel = {};\n    this.generateInvDetails();\n    this.getFeeTermsTableDetails(this.searchFeeTermsView);\n  }\n\n  // validating form\n  invoiceValidDetails(): void {\n    this.invoiceSettingsForm = this._fb.group({\n      invoiceGenerationDate: new FormControl(''),\n      invoiceIssueDate: new FormControl(''),\n      invoiceDueDate: new FormControl(''),\n      invoiceGenerationOptionTypeId: new FormControl('')\n    });\n  }\n\n  // get list based on type category\n  generateInvDetails(): void {\n    this.typeService.typesByTypeCategoryCode('IGOT').subscribe(res => this.generateInvOptions = res.types);\n  }\n\n  // get all assessment categories based on schoolId\n  getFeeTermsTableDetails(data: any): void {\n    /*if (localStorage.getItem(this.currentComponent)) {\n      this.searchFeeTermsView = JSON.parse(localStorage.getItem((this.currentComponent)));\n    }*/\n\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.searchFeeTermsView = modelTableComponent;\n    }\n\n    this.feeTermsService.feeTerms(data.shortName, data.displayName, data.code, data.description, data.sortBy, data.sortOrder,\n      data.startDate, data.startDateBegin, data.startDateEnd, data.endDate, data.endDateBegin, data.endDateEnd, data.invoiceGenerationDate,\n      data.invoiceGenerationDateBegin, data.invoiceGenerationDateEnd, data.invoiceIssueDate, data.invoiceIssueDateBegin, data.invoiceIssueDateEnd,\n      data.invoiceDueDate, data.invoiceDueDateBegin, data.invoiceDueDateEnd, data.pageNumber, data.pageSize).subscribe(res => this.resFeeTermDetails(res), error => {\n        this.disbleSubmitBtn = false;\n        this.errorResponse(error);\n      });\n  }\n\n  // return response grid table\n  resFeeTermDetails(data: any): void {\n    this.custRowsPerPageOptions = [];\n    if (!data.feeTermsViewModel) {\n      this.rows = [];\n      this.totalItems = 0;\n      this.pageCnt = 0;\n    }\n    else {\n      this.rows = data.feeTermsViewModel.list;\n      this.totalItems = data.feeTermsViewModel.totalItems;\n      this.pageCnt = data.feeTermsViewModel.totalPages;\n\n      const feeTermOperations = [\n        {\n          name: AppSettings.EDIT_OPERATION,\n          icon: AppSettings.EDIT\n        },\n        {\n          name: AppSettings.DELETE_OPERATION,\n          icon: AppSettings.DELETE,\n        },\n\n      ];\n\n      // date format for table inputs\n      this.rows.forEach(e => {\n        e.operations = feeTermOperations;\n        e.startDate = this.commonService.customDateFormat(e.startDate, this.getSchoolDateFormat()).date;\n        e.endDate = this.commonService.customDateFormat(e.endDate, this.getSchoolDateFormat()).date;\n        e.invoiceGenerationDate = e.invoiceGenerationDate ===\n          null ? '' : this.commonService.customDateFormat(e.invoiceGenerationDate, this.getSchoolDateFormat()).date;\n        e.invoiceDueDate = e.invoiceDueDate ===\n          null ? '' : this.commonService.customDateFormat(e.invoiceDueDate, this.getSchoolDateFormat()).date;\n        e.invoiceIssueDate = e.invoiceIssueDate ===\n          null ? '' : this.commonService.customDateFormat(e.invoiceIssueDate, this.getSchoolDateFormat()).date;\n      });\n    }\n    if (data.feeTermsViewModel) {\n      this.searchFeeTermsView.pageNumber = data.feeTermsViewModel.pageNumber;\n    }\n\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.searchFeeTermsView,\n      rows: this.rows,\n      tablename: 'Fee Terms',\n      componentName: this.currentComponent,\n      isNewStudentCourseSelectionRequired: true,\n      visibleSelectAll: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      pageCnt: this.pageCnt,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      filtersList: data.filters,\n      headerOperations: {\n        infoButton: {\n          required: true,\n          text: 'Fee Terms'\n        },\n        addingForm: {\n          required: true,\n          btnName: AppSettings.NEW\n        }\n      },\n    };\n  }\n\n  // feeterm form details\n  feeTermDetails(feeTermForm: any): void {\n    if (feeTermForm.status === AppSettings.VALID) {\n      this.feeTermsDataViewModel.shortName = feeTermForm.value.name;\n      this.feeTermsDataViewModel.displayName = feeTermForm.value.displayName;\n      this.feeTermsDataViewModel.code = feeTermForm.value.code;\n      this.feeTermsDataViewModel.description = feeTermForm.value.description;\n    }\n  }\n\n  // duration form details\n  durationDetails(durationForm: any): void {\n    if (durationForm.status === AppSettings.VALID) {\n      this.feeTermsDataViewModel.startDate = this.commonService.customDateFormat(durationForm.value.startDate, this.getSchoolDateFormat()).date;\n      this.feeTermsDataViewModel.endDate = this.commonService.customDateFormat(durationForm.value.endDate, this.getSchoolDateFormat()).date;\n    }\n  }\n\n  // invoice details form\n  invoiceDetails(invoiceSettingsForm: any): void {\n    if (invoiceSettingsForm.value.invoiceIssueDate == null) {\n      invoiceSettingsForm.value.invoiceIssueDate = '';\n    }\n    else {\n      this.feeTermsDataViewModel.invoiceGenerationDate = this.commonService.customDateFormat(invoiceSettingsForm.value.invoiceGenerationDate, this.getSchoolDateFormat()).date;\n      this.feeTermsDataViewModel.invoiceDueDate = this.commonService.customDateFormat(invoiceSettingsForm.value.invoiceDueDate, this.getSchoolDateFormat()).date;\n      this.feeTermsDataViewModel.invoiceIssueDate = this.commonService.customDateFormat(invoiceSettingsForm.value.invoiceIssueDate, this.getSchoolDateFormat()).date;\n      this.generateInvOptions.forEach(element => {\n        if (element.id === invoiceSettingsForm.value.invoiceGenerationOptionTypeId) {\n          this.selectionNameInvType = element.name;\n        }\n      });\n    }\n  }\n\n  // Cancel Button\n  cancel(): void {\n    this.invoiceValidDetails();\n    this._durationForm.resetForm();\n    this._feeTermForm.resetForm();\n    this._invoiceSettingsForm.resetForm();\n    this.isValidInvoice = false;\n    this.closeAddPanel = true;\n    this.buttonDisable = false;\n    this.selectionNameInvType = '';\n    this.stepper.reset();\n  }\n\n  // add new form for assessment categories\n  onAddFormClick(): void {\n    this.interactedStepperIndex = 0;\n    this.closeAddPanel = false;\n    this.isValidInvoice = false;\n    this.stepper.reset();\n    this.isCreate = true;\n    this.isUpdate = false;\n    this.commonService.setOverlay(AppSettings.SHOW);\n    this.feeTermsDet = {\n      isInvoiceGenerated: false\n    };\n  }\n\n  // on Submit for based on request\n  onSubmitForm(): void {\n    if (!this.isEdit) {\n      if (this.feeTermForm.status === AppSettings.VALID && this.durationForm.status === AppSettings.VALID) {\n        this.feeTermsDataViewModel.shortName = this.feeTermForm.value.name;\n        this.feeTermsDataViewModel.displayName = this.feeTermForm.value.displayName;\n        this.feeTermsDataViewModel.code = this.feeTermForm.value.code;\n        this.feeTermsDataViewModel.description = this.feeTermForm.value.description;\n        this.feeTermsDataViewModel.startDate = this.durationForm.value.startDate;\n        this.feeTermsDataViewModel.endDate = this.durationForm.value.endDate;\n        this.feeTermsDataViewModel.invoiceGenerationDate = this.invoiceSettingsForm.value.invoiceGenerationDate;\n        this.feeTermsDataViewModel.invoiceIssueDate = this.invoiceSettingsForm.value.invoiceIssueDate;\n        this.feeTermsDataViewModel.invoiceDueDate = this.invoiceSettingsForm.value.invoiceDueDate;\n        this.feeTermsDataViewModel.invoiceGenerationOptionTypeId = this.invoiceSettingsForm.value.invoiceGenerationOptionTypeId;\n        this.disbleSubmitBtn = true;\n        this.feeTermsService.addFeeTerms(this.feeTermsDataViewModel).subscribe(res => {\n          if (res.statusCode === this.httpStatus.OK) {\n            this.disbleSubmitBtn = false;\n            this.formAddUpdate();\n            this.openSnackBar(res.messages.ResultMessage);\n            this.scrollIntoView('app-table');\n          }\n          else {\n            this.disbleSubmitBtn = false;\n            this.openSnackBar(res.messages.ResultMessage);\n          }\n        }, error => {\n          this.disbleSubmitBtn = false;\n          this.errorResponse(error);\n          this.updateForm();\n        });\n      }\n    }\n    else {\n      if (this.feeTermForm.status === AppSettings.VALID && this.durationForm.status === AppSettings.VALID) {\n        this.feeTermsViewModel.id = this.feeTermsDet.id;\n        this.feeTermsViewModel.shortName = this.feeTermForm.value.name;\n        this.feeTermsViewModel.displayName = this.feeTermForm.value.displayName;\n        this.feeTermsViewModel.code = this.feeTermForm.value.code;\n        this.feeTermsViewModel.description = this.feeTermForm.value.description;\n        this.feeTermsViewModel.startDate = this.durationForm.value.startDate;\n        this.feeTermsViewModel.endDate = this.durationForm.value.endDate;\n        this.feeTermsViewModel.invoiceGenerationDate = this.invoiceSettingsForm.value.invoiceGenerationDate;\n        this.feeTermsViewModel.invoiceIssueDate = this.invoiceSettingsForm.value.invoiceIssueDate;\n        this.feeTermsViewModel.invoiceDueDate = this.invoiceSettingsForm.value.invoiceDueDate;\n        this.feeTermsViewModel.invoiceGenerationOptionTypeId = this.invoiceSettingsForm.value.invoiceGenerationOptionTypeId;\n        this.disbleUpdateBtn = true;\n        this.feeTermsService.editFeeTerms(this.feeTermsViewModel).subscribe(res => {\n          if (res.statusCode === this.httpStatus.OK) {\n            this.isEdit = false;\n            this.disbleUpdateBtn = false;\n            this.formAddUpdate();\n            this.openSnackBar(res.messages.ResultMessage);\n            this.scrollIntoView('app-table');\n          }\n          else {\n            this.disbleUpdateBtn = false;\n            this.openSnackBar(res.messages.ResultMessage);\n          }\n        }, error => {\n          this.disbleUpdateBtn = false;\n          this.errorResponse(error);\n          this.updateForm();\n        });\n      }\n    }\n  }\n\n  // common for Add and Update\n  formAddUpdate(): void {\n    this.invoiceValidDetails();\n    this.closeAddPanel = true;\n    this.feeTermsDataViewModel = {};\n    this.selectionNameInvType = '';\n    this.onAddFormClick();\n    this._durationForm.resetForm();\n    this._feeTermForm.resetForm();\n    this._invoiceSettingsForm.resetForm();\n    this.stepper.selectedIndex = 0;\n    this.getFeeTermsTableDetails(this.searchFeeTermsView);\n  }\n\n  updateForm(): void {\n    this.feeTermsDataViewModel.shortName = this.feeTermForm.value.name;\n    this.feeTermsDataViewModel.displayName = this.feeTermForm.value.displayName;\n    this.feeTermsDataViewModel.code = this.feeTermForm.value.code;\n    this.feeTermsDataViewModel.description = this.feeTermForm.value.description;\n    if (this.durationForm.value.startDate != null) {\n      this.feeTermsDataViewModel.startDate = this.commonService.customDateFormat(this.durationForm.value.startDate, this.getSchoolDateFormat()).date;\n      this.feeTermsDataViewModel.endDate = this.commonService.customDateFormat(this.durationForm.value.endDate, this.getSchoolDateFormat()).date;\n    }\n\n    this.feeTermsDataViewModel.invoiceGenerationDate = this.invoiceSettingsForm.value.invoiceGenerationDate ===\n      null ? '' : this.commonService.customDateFormat(this.invoiceSettingsForm.value.invoiceGenerationDate, this.getSchoolDateFormat()).date;\n    this.feeTermsDataViewModel.invoiceDueDate = this.invoiceSettingsForm.value.invoiceDueDate ===\n      null ? '' : this.commonService.customDateFormat(this.invoiceSettingsForm.value.invoiceDueDate, this.getSchoolDateFormat()).date;\n    this.feeTermsDataViewModel.invoiceIssueDate = this.invoiceSettingsForm.value.invoiceIssueDate ===\n      null ? '' : this.commonService.customDateFormat(this.invoiceSettingsForm.value.invoiceIssueDate, this.getSchoolDateFormat()).date;\n    if (this.invoiceSettingsForm.value.invoiceGenerationOptionTypeId != null\n        && this.generateInvOptions.find(x => x.id === this.invoiceSettingsForm.value.invoiceGenerationOptionTypeId) !== undefined) {\n      const generationOptionName = this.generateInvOptions.find(x => x.id === this.invoiceSettingsForm.value.invoiceGenerationOptionTypeId).name;\n      this.selectionNameInvType = generationOptionName;\n    }\n    else {\n      this.selectionNameInvType = '';\n    }\n  }\n\n  // updating forms \n  OnSelectionChange(event: any): void {\n    this.updateForm();\n    if (event.selectedIndex > this.interactedStepperIndex) {\n      this.interactedStepperIndex = event.selectedIndex;\n    } else {\n      this.stepper._steps._results.forEach((x, i) => {\n        x.interacted = i < this.interactedStepperIndex ? true : false;\n      });\n    }\n    if (event.selectedIndex === 2) {\n      event.selectedStep.interacted = false;\n      (<any>Object).values(this.invoiceSettingsForm.controls).forEach((control: FormControl) => {\n        control.markAsUntouched();\n      });\n    }    \n  }\n\n  // rowwise actions\n  rowWiseActions(event: any): void {\n    if (event.operation === AppSettings.DELETE) {\n      const dialogRef = this.dialog.open(CustomDialogComponent, {\n        disableClose: true,\n        data: { text: this.commonService.getTranslation(AppSettings.DELETE_CONFORMATION, ''), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n      });\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.feeTermsService.dropFeeTerms(event.clickedRow.id).subscribe(res => this.deleteResponse(res), error => {\n            this.errorResponse(error);\n          });\n        }\n        if (action === AppSettings.NO) {\n          this.dialog.closeAll();\n        }\n      });\n    }\n    else {\n      this.isEdit = true;\n      this.closeAddPanel = false;\n      this.isCreate = false;\n      this.isUpdate = true;\n      this.feeTermsService.feeTermById(event.clickedRow.id).subscribe(res => this.retFeeTermsById(res));\n    }\n  }\n\n  // delete return response after click\n  deleteResponse(response: any): void {\n    this.getFeeTermsTableDetails(this.searchFeeTermsView);\n    this.openSnackBar(response.messages.ResultMessage);\n  }\n\n  // fetching feeterm details based on Id\n  retFeeTermsById(data: any): void {\n    if (data.statusCode === this.httpStatus.OK) {\n      this.isEdit = true;\n      this.closeAddPanel = false;\n      this.feeTermsDet = data.feeTermIdViewModel;\n      this.feeTermForm.controls['name'].setValue(data.feeTermIdViewModel.shortName);\n      this.feeTermForm.controls['displayName'].setValue(data.feeTermIdViewModel.displayName);\n      this.feeTermForm.controls['code'].setValue(data.feeTermIdViewModel.code);\n      this.feeTermForm.controls['description'].setValue(data.feeTermIdViewModel.description);\n\n      this.durationForm.controls['startDate'].setValue(data.feeTermIdViewModel.startDate);\n      this.durationForm.controls['endDate'].setValue(data.feeTermIdViewModel.endDate);\n\n      this.invoiceSettingsForm.controls['invoiceGenerationDate'].setValue(data.feeTermIdViewModel.invoiceGenerationDate);\n      this.invoiceSettingsForm.controls['invoiceIssueDate'].setValue(data.feeTermIdViewModel.invoiceIssueDate);\n      this.invoiceSettingsForm.controls['invoiceDueDate'].setValue(data.feeTermIdViewModel.invoiceDueDate);\n      this.invoiceSettingsForm.controls['invoiceGenerationOptionTypeId'].setValue(data.feeTermIdViewModel.invoiceGenerationOptionTypeId);\n    }\n    else {\n      this.openSnackBar(data.messages.ResultMessage, true);\n    }\n    this.stepper._steps._results.forEach((x) => {\n      x.interacted = true;\n    });\n    this.interactedStepperIndex = this.stepper._steps._results.length;\n    this.customSteperLabelChange();\n  }\n\n  isNestedObjectEmpty(obj, checkKey: any = false): boolean {\n    let isEmpty = true;\n    for (const key in obj) {\n      if (checkKey && key === checkKey) {\n        continue;\n      }\n      if (obj[key] !== null && obj[key] !== '') {\n        if (typeof (obj[key]) === 'object') {\n          isEmpty = this.isNestedObjectEmpty(obj[key]);\n        } else {\n          return false;\n        }\n      }\n    }\n    return isEmpty;\n  }\n}\n","module.exports = \"<app-table [settings]=\\\"tabSettings\\\" (getTableData)='getFeeTypeTrancheDetails($event)' (rowBasedAction)='rowActions($event)'\\n   [templateRef]=\\\"addFeeTypeTrancheRef\\\" [closeRowForm]='closeAddPanel' (openAddForm)=\\\"onAddFormClick()\\\"></app-table>\\n\\n<ng-template #addFeeTypeTrancheRef>\\n   <form [formGroup]=\\\"feeTypeTranchesForm\\\" (ngSubmit)=\\\"onSubmit(feeTypeTranchesForm)\\\" #trancheForm=\\\"ngForm\\\">\\n      <div fxFlexFill fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" class=\\\"pt-24\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n         <mat-form-field fxFlexFill appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n            <mat-label #feeTypeId translate>Fee Type</mat-label>\\n            <mat-select formControlName=\\\"feeTypeId\\\" required>\\n               <mat-option *ngFor=\\\"let feeTypes of feeTypesList\\\" [value]=\\\"feeTypes.id\\\">\\n                  {{feeTypes.name}}\\n               </mat-option>\\n            </mat-select>\\n            <mat-error>\\n               <app-validation [labelName]='feeTypeId.innerText' [validationControl]=\\\"feeTypeTranchesForm.controls.feeTypeId\\\"\\n                  [doValidate]=\\\"doValidate\\\">\\n               </app-validation>\\n            </mat-error>\\n         </mat-form-field>\\n\\n         <mat-form-field fxFlexFill appearance=\\\"outline\\\" class=\\\"pl-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n            <mat-label #name translate>Tranche Name</mat-label>\\n            <input matInput formControlName=\\\"name\\\" autocomplete=\\\"off\\\" required (keyup)=\\\"preventSpace($event,'feeTypeTranchesForm','name')\\\" (blur)=\\\"trimTextBoxSpaces('feeTypeTranchesForm','name')\\\">\\n            <mat-error>\\n               <app-validation [labelName]='name.innerText' [validationControl]=\\\"feeTypeTranchesForm.controls.name\\\"\\n                  [doValidate]=\\\"doValidate\\\">\\n               </app-validation>\\n            </mat-error>\\n         </mat-form-field>\\n      </div>\\n      <div fxFlexFill fxLayout=\\\"row\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n\\n         <mat-form-field fxFlexFill appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\">\\n            <mat-label #code translate>Tranche Code</mat-label>\\n            <input matInput formControlName=\\\"code\\\" autocomplete=\\\"off\\\" (keyup)=\\\"preventSpace($event,'feeTypeTranchesForm','code')\\\" (blur)=\\\"trimTextBoxSpaces('feeTypeTranchesForm','code')\\\">\\n            <mat-error>\\n               <app-validation [labelName]='code.innerText' [validationControl]=\\\"feeTypeTranchesForm.controls.code\\\"\\n                  [doValidate]=\\\"doValidate\\\">\\n               </app-validation>\\n            </mat-error>\\n         </mat-form-field>\\n\\n         <mat-form-field fxFlexFill appearance=\\\"outline\\\" class=\\\"pl-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"70\\\">\\n            <mat-label #description translate>Tranche Description</mat-label>\\n            <textarea matInput formControlName=\\\"description\\\" autocomplete=\\\"off\\\" (keyup)=\\\"preventSpace($event,'feeTypeTranchesForm','description')\\\" (blur)=\\\"trimTextBoxSpaces('feeTypeTranchesForm','description')\\\"></textarea>\\n            <mat-error>\\n               <app-validation [labelName]='description.innerText' [validationControl]=\\\"feeTypeTranchesForm.controls.description\\\"\\n                  [doValidate]=\\\"doValidate\\\">\\n               </app-validation>\\n            </mat-error>\\n         </mat-form-field>\\n      </div>\\n\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutAlign.gt-xs=\\\"end center\\\" class=\\\"py-16\\\">\\n         <button class=\\\"mr-12 text-uppercase\\\" type=\\\"button\\\" mat-raised-button (click)=\\\"closeAddForm()\\\">\\n            {{'Cancel' | translate}}</button>\\n            <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\" [disabled]=\\\"disableSubmitBtn\\\">{{(updateButtonShow ? 'Update':'Create') | translate}}</button>\\n      </div>\\n   </form>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9maW5hbmNlL2ZlZS10eXBlLXRyYW5jaGVzL2ZlZS10eXBlLXRyYW5jaGVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as HttpStatus from 'http-status-codes';\n\nimport { FeeTypeTranchesService } from 'app/service/configuration/finance/api/fee-type-tranches.service';\nimport { FeeTypeTrancheSearchView } from '../models/fee-type-tranche-filter-view';\nimport { AppSettings } from 'app/app.constants';\nimport { CommonService } from 'app/service/common.service';\nimport { FeeTypeTrancheView } from '../models/fee-type-tranche-view';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { FeeTypeTranchesView } from '../models/fee-type-tranches-view';\n\n@Component({\n  selector: 'app-fee-type-tranches',\n  templateUrl: './fee-type-tranches.component.html',\n  styleUrls: ['./fee-type-tranches.component.scss'],\n  providers: [\n    FeeTypeTranchesService\n  ]\n})\nexport class FeeTypeTranchesComponent extends CommonComponent implements OnInit {\n  @ViewChild('addFeeTypeTrancheRef') addFeeTypeTrancheRef;\n  @ViewChild('trancheForm') trancheForm;\n\n  // model declaration\n  feeTypeTrancheSearchView: FeeTypeTrancheSearchView;\n  feeTypeTrancheView: FeeTypeTrancheView;\n  updateTrancheView: FeeTypeTranchesView;\n\n  // variable declaration\n  coloumns: any[];\n  tabSettings: any;\n  feeTypeTranchesForm: any;\n  feeTranchesDetails: Array<any> = [];\n  totalItems: any;\n  pageCount: any;\n  rows: any[];\n  feeTypesList: any[];\n  closeAddPanel: boolean;\n  doValidate = true;\n  trancheId: any;\n  updateButtonShow: boolean;\n  updateTranchesView: any;\n  currentComponent = 'FeeTypeTranchesComponent';\n  disableSubmitBtn: boolean;\n\n\n  constructor(private feeTypeTranchesService: FeeTypeTranchesService,\n    public commonService: CommonService, public dialog: MatDialog,\n    private common: CommonComponent, public snackBar: MatSnackBar) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.feeTypeTranchesForm = new FormGroup({\n      id: new FormControl(''),\n      feeTypeId: new FormControl(0, [Validators.required]),\n      name: new FormControl('', [Validators.maxLength(45), Validators.required]),\n      code: new FormControl('', [Validators.maxLength(6)]),\n      description: new FormControl('', [Validators.maxLength(135)]),\n    });\n\n    this.feeTypeTrancheSearchView = {\n      feeTypeIds: [],\n      names: [],\n      codes: [],\n      descriptions: [],\n      sortBy: '',\n      sortOrder: AppSettings.SORTORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n\n    this.feeTypeTrancheView = {\n      feeTypeId: 0,\n      name: '',\n      code: '',\n      description: ''\n    };\n    this.updateTrancheView = {\n      id: '',\n      feeTypeId: 0,\n      name: '',\n      code: '',\n      description: ''\n    };\n    // Table Colums\n    this.coloumns = [\n      { field: 'feeTypeName', header: this.commonService.getTranslation(AppSettings.FEE_TYPE_NAME), sort: false },\n      { field: 'name', header: this.commonService.getTranslation(AppSettings.FEE_TRANCHE_NAME), sort: false },\n      { field: 'code', header: this.commonService.getTranslation(AppSettings.FEE_TRANCHE_CODE), sort: false },\n      { field: 'description', header: this.commonService.getTranslation(AppSettings.FEE_TRANCHE_DESCRIPTION), sort: false },\n      { field: 'actions', header: this.commonService.getTranslation(AppSettings.ACTION), sort: false },\n    ];\n\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.feeTypeTrancheSearchView = modelTableComponent;\n    }\n\n    this.tabSettings = {\n      rows: this.feeTranchesDetails,\n      columns: this.coloumns,\n      model: this.feeTypeTrancheSearchView,\n      tablename: 'Fee Type Tranches',\n      componentName: this.currentComponent,\n    };\n    this.feeTypes();\n    this.getFeeTypeTrancheDetails(this.feeTypeTrancheSearchView);\n  }\n\n  // method for get all fee type tranches\n  getFeeTypeTrancheDetails(feeTypeTrancheSearchView: FeeTypeTrancheSearchView): void {\n    this.feeTypeTrancheSearchView = feeTypeTrancheSearchView;\n    this.feeTypeTranchesService.getAllFeeTypeTranches(this.feeTypeTrancheSearchView.feeTypeIds,\n      this.feeTypeTrancheSearchView.names, this.feeTypeTrancheSearchView.codes,\n      this.feeTypeTrancheSearchView.descriptions, this.feeTypeTrancheSearchView.sortBy,\n      this.feeTypeTrancheSearchView.sortOrder, this.feeTypeTrancheSearchView.pageNumber,\n      this.feeTypeTrancheSearchView.pageSize).subscribe(res => this.feeTypeTrancheDetails(res), error => {\n        this.disableSubmitBtn = false;\n        this.errorResponse(error);\n      });\n  }\n\n  // method for get all fee type tranches response\n  feeTypeTrancheDetails(data: any): void {\n    this.feeTranchesDetails = [];\n    if (data.pagedFeeTypeTranchesView == null) {\n      this.rows = [];\n    }\n    else {\n      this.feeTranchesDetails = data.pagedFeeTypeTranchesView.list;\n      this.totalItems = data.pagedFeeTypeTranchesView.totalItems;\n      this.feeTranchesDetails.forEach(e => {\n        e.operations = [\n          {\n            name: this.commonService.getTranslation(AppSettings.EDIT_OPERATION),\n            icon: AppSettings.EDIT,\n            operationName: this.commonService.getTranslation(AppSettings.EDIT)\n\n          }, {\n            name: this.commonService.getTranslation(AppSettings.DELETE_OPERATION),\n            icon: AppSettings.DELETE,\n            operationName: AppSettings.DELETE\n          }\n        ];\n      });\n    }\n    if (data.pagedFeeTypeTranchesView) {\n      this.feeTypeTrancheSearchView.pageNumber = data.pagedFeeTypeTranchesView.pageNumber;\n    }\n    this.tabSettings = {\n      columns: this.coloumns,\n      model: this.feeTypeTrancheSearchView,\n      rows: this.feeTranchesDetails,\n      tablename: 'Fee Type Tranches',\n      componentName: this.currentComponent,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      pageCnt: this.pageCount,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: AppSettings.NEW\n        },\n        infoButton: {\n          required: true,\n          text: 'Fee Type Tranches'\n        }\n      },\n      filtersList: data.filters,\n      rowGroupingColumns: ['feeTypeName']\n    };\n  }\n\n  // method for get all fee types\n  feeTypes(): void {\n    this.feeTypeTranchesService.getAllFeeTypes().subscribe(res =>\n      this.feeTypesResponse(res),\n       error => {\n        this.disableSubmitBtn = false;\n        this.errorResponse(error);\n    });\n  }\n\n  // method for fee types response\n  feeTypesResponse(data: any): boolean {\n    if (data.statusCode === HttpStatus.OK) {\n      this.feeTypesList = data.feeTypesView;\n    }\n    else {\n      return false;\n    }\n  }\n\n  // method for add and update fee typr tranche\n  onSubmit(feeTypeTranchesForm: any): void {\n    this.doValidate = true;\n    if (this.feeTypeTranchesForm.invalid) {\n      return;\n    }\n    else {\n      this.disableSubmitBtn = true;\n    }\n    if (feeTypeTranchesForm.status === AppSettings.VALID) {\n      if (!feeTypeTranchesForm.value.id) {\n        this.feeTypeTrancheView.feeTypeId = feeTypeTranchesForm.value.feeTypeId;\n        this.feeTypeTrancheView.name = feeTypeTranchesForm.value.name;\n        this.feeTypeTrancheView.code = feeTypeTranchesForm.value.code;\n        this.feeTypeTrancheView.description = feeTypeTranchesForm.value.description;\n        this.feeTypeTranchesService.createFeeTypeTranche(this.feeTypeTrancheView).subscribe(res => this.feeTrancheresponse(res), error => {\n          this.disableSubmitBtn = false;\n          this.errorResponse(error);\n        });\n      }\n      else {\n        this.updateTrancheView = this.feeTypeTranchesForm.value;\n        this.feeTypeTranchesService.updateFeeTypeTranche(this.updateTrancheView).subscribe(res => this.feeTrancheresponse(res), error => {\n          this.disableSubmitBtn = false;\n          this.errorResponse(error);\n        });\n      }\n    }\n  }\n\n  // method for add and update response\n  feeTrancheresponse(data: any): void {\n    this.disableSubmitBtn = false;\n    if (data.statusCode === HttpStatus.OK) {\n          this.feeTypeTranchesForm.reset();\n          this.trancheForm.resetForm();\n          this.closeAddPanel = true;\n          this.doValidate = false;\n          this.getFeeTypeTrancheDetails(this.feeTypeTrancheSearchView);\n          this.openSnackBar(data.messages.ResultMessage);\n    }\n    else {\n          this.closeAddPanel = false;\n    }\n  }\n\n  // method for row action for displayed fee type tranches based on the action to perform the opertion like edit,delete\n  rowActions(data: any): void {\n    this.trancheId = [];\n    this.trancheId.push(data.clickedRow.id);\n    if (data.operation === AppSettings.DELETE) {\n      const dialogRef = this.dialog.open(CustomDialogComponent, {\n        disableClose: true,\n        data: {\n          text: this.commonService.getTranslation(AppSettings.WARNING_ON_SINGLE_DELETE),\n          action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES\n        },\n      });\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.feeTypeTranchesService.deleteFeeTypeTranches(this.trancheId).\n            subscribe(res => this.deleteTrancheResponse(res), error => {\n              this.disableSubmitBtn = false;\n              this.errorResponse(error);\n            });\n        }\n      });\n    }\n    else if (data.operation === AppSettings.EDIT) {\n      this.updateButtonShow = true;\n      this.closeAddPanel = false;\n      this.trancheId = data.clickedRow.id;\n      this.feeTypeTranchesService.getFeeTypeTrancheById(this.trancheId).subscribe(res => this.getTrancheResponse(res));\n    }\n  }\n\n  // method for delete response\n  deleteTrancheResponse(data: any): void {\n    this.closeAddPanel = true;\n    this.getFeeTypeTrancheDetails(this.feeTypeTrancheSearchView);\n    this.openSnackBar(data.messages.ResultMessage);\n  }\n\n  // methode for get single fee type tranche response\n  getTrancheResponse(data: any): void {\n    this.updateTranchesView = data.feeTypeTranchesViewModel;\n    this.feeTypeTranchesForm.controls['feeTypeId'].setValue(this.updateTranchesView.feeTypeId);\n    this.feeTypeTranchesForm.controls['name'].setValue(this.updateTranchesView.name);\n    this.feeTypeTranchesForm.controls['code'].setValue(this.updateTranchesView.code);\n    this.feeTypeTranchesForm.controls['description'].setValue(this.updateTranchesView.description);\n    this.feeTypeTranchesForm.controls['id'].setValue(this.updateTranchesView.id);\n  }\n  // method for open the panel\n  onAddFormClick(): void {\n    this.trancheForm.resetForm();\n    this.closeAddPanel = false;\n    this.updateButtonShow = false;\n  }\n\n  // method for close the panel\n  closeAddForm(): void {\n    this.feeTypeTranchesForm.reset();\n    this.closeAddPanel = true;\n    this.doValidate = false;\n    this.trancheForm.resetForm();\n    this.disableSubmitBtn = false;\n  }\n}\n","module.exports = \"<app-table [settings]=\\\"tabSettings\\\" (getTableData)='getAllFeeTypes($event)' (rowBasedAction)='rowWiseActions($event)'\\n    (openAddForm)=\\\"addForm()\\\" [closeRowForm]='closeAddPanel' [templateRef]=\\\"addFeeTypes\\\"></app-table>\\n\\n<ng-template #addFeeTypes>\\n    <form [formGroup]=\\\"feetypeForm\\\" (ngSubmit)=\\\"addUpdateFeeType(feetypeForm)\\\" #feeTypeForm=\\\"ngForm\\\">\\n        <div fxFlexFill fxLayout=\\\"column\\\" class=\\\"pt-24\\\" fxLayout.gt-sm=\\\"row\\\">\\n            <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"pr-sm-20\\\"\\n                fxFlex.gt-xs=\\\"32\\\">\\n                <mat-label #feeTypeCategoryId translate>Fee Type Category</mat-label>\\n                <mat-select formControlName=\\\"feeTypeCategoryId\\\" (selectionChange)=\\\"checkFeeTypeCategory($event.value)\\\"\\n                    required>\\n                    <mat-option *ngFor=\\\"let feeTypeCategory of feeTypeCategoryDropDown\\\" [value]=\\\"feeTypeCategory.value\\\">\\n                        {{feeTypeCategory.label}}\\n                    </mat-option>\\n                </mat-select>\\n                <mat-error>\\n                    <app-validation [labelName]='feeTypeCategoryId.innerText'\\n                        [validationControl]=\\\"feetypeForm.controls.feeTypeCategoryId\\\"\\n                        [doValidate]=\\\"feeTypeFormSubmitted\\\">\\n                    </app-validation>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"100\\\"\\n                fxFlex.gt-xs=\\\"36\\\">\\n                <mat-label #name translate>Name</mat-label>\\n                <input matInput formControlName=\\\"name\\\" required (keyup)=\\\"preventSpace($event,'feetypeForm','name')\\\" autocomplete=\\\"off\\\" (blur)=\\\"trimTextBoxSpaces('feetypeForm','name')\\\">\\n                <mat-error>\\n                    <app-validation [labelName]='name.innerText' [validationControl]=\\\"feetypeForm.controls.name\\\"\\n                        [doValidate]=\\\"feeTypeFormSubmitted\\\">\\n                    </app-validation>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"32\\\">\\n                <mat-label #displayName translate>displayname</mat-label>\\n                <input matInput formControlName=\\\"displayName\\\" (keyup)=\\\"preventSpace($event,'feetypeForm','displayName')\\\" (blur)=\\\"trimTextBoxSpaces('feetypeForm','displayName')\\\"  autocomplete=\\\"off\\\">\\n                <mat-error>\\n                    <app-validation [labelName]='displayName.innerText' [validationControl]=\\\"feetypeForm.controls.displayName\\\"\\n                        [doValidate]=\\\"feeTypeFormSubmitted\\\">\\n                    </app-validation>\\n                </mat-error>\\n            </mat-form-field>\\n        </div>\\n\\n        <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row wrap\\\">\\n            <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" class=\\\"pr-sm-20\\\" fxFlexFill fxFlex=\\\"100\\\"\\n                fxFlex.gt-xs=\\\"32\\\">\\n                <mat-label #code translate>Code</mat-label>\\n                <input matInput formControlName=\\\"code\\\" (keyup)=\\\"preventSpace($event,'feetypeForm','code')\\\" (blur)=\\\"trimTextBoxSpaces('feetypeForm','code')\\\" autocomplete=\\\"off\\\">\\n                <mat-error>\\n                    <app-validation [labelName]='code.innerText' [validationControl]=\\\"feetypeForm.controls.code\\\"\\n                        [doValidate]=\\\"feeTypeFormSubmitted\\\">\\n                    </app-validation>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"100\\\"\\n                fxFlex.gt-xs=\\\"36\\\">\\n                <mat-label #feeAccountId translate>Fee Account</mat-label>\\n                <mat-select formControlName=\\\"feeAccountId\\\" required>\\n                    <mat-option *ngFor=\\\"let feeAccount of feeAccountDropDown\\\" [value]=\\\"feeAccount.value\\\">\\n                        {{feeAccount.label}}\\n                    </mat-option>\\n                </mat-select>\\n                <mat-error>\\n                    <app-validation [labelName]='feeAccountId.innerText'\\n                        [validationControl]=\\\"feetypeForm.controls.feeAccountId\\\" [doValidate]=\\\"feeTypeFormSubmitted\\\">\\n                    </app-validation>\\n                </mat-error>\\n            </mat-form-field>\\n            <div *ngIf=\\\"showFeeterm\\\" fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"32\\\">\\n                <app-custom-dropdown *ngIf=\\\" dataLoaded | async\\\" formControlName=\\\"feeTermId\\\"\\n                    [dropDownConf]=\\\"feeTermMulticheck\\\" ngDefaultControl [errorCheck]=\\\"feetypeForm.controls.feeTermId\\\"\\n                    (selectedData)=\\\"onSelect($event)\\\">\\n                </app-custom-dropdown>\\n            </div>\\n\\n            <mat-form-field fxFlexFill appearance=\\\"outline\\\" [ngClass]=\\\"showFeeterm ? 'pr-sm-20': '' \\\"  fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"32\\\"\\n                fxFlex=\\\"100\\\">\\n                <mat-label #feeDescription translate>Fee Description</mat-label>\\n                <input matInput formControlName=\\\"feeDescription\\\" (keyup)=\\\"preventSpace($event,'feetypeForm','feeDescription')\\\" autocomplete=\\\"off\\\" (blur)=\\\"trimTextBoxSpaces('feetypeForm','feeDescription')\\\">\\n                <mat-error>\\n                    <app-validation [labelName]='feeDescription.innerText'\\n                        [validationControl]=\\\"feetypeForm.controls.feeDescription\\\" [doValidate]=\\\"feeTypeFormSubmitted\\\">\\n                    </app-validation>\\n                </mat-error>\\n            </mat-form-field>\\n            <mat-form-field *ngIf='isSchoolFacility' fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"36\\\"\\n                class=\\\"pr-sm-20\\\">\\n                <mat-label #schoolFacilityId translate>School Facility</mat-label>\\n                <mat-select formControlName=\\\"schoolFacilityId\\\" required={{schoolFacilityRequired}}>\\n                    <mat-option *ngFor=\\\"let facility of facilityDropDown\\\" [value]=\\\"facility.value\\\">\\n                        {{facility.label}}\\n                    </mat-option>\\n                </mat-select>\\n                <mat-error>\\n                    <app-validation [labelName]='schoolFacilityId.innerText'\\n                        [validationControl]=\\\"feetypeForm.controls.schoolFacilityId\\\" [doValidate]=\\\"feeTypeFormSubmitted\\\">\\n                    </app-validation>\\n                </mat-error>\\n            </mat-form-field>\\n\\n            <div *ngIf='isSameForEntireClass' fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"32\\\" class=\\\"pb-20\\\"\\n                fxLayoutAlign=\\\"center start\\\">\\n                <mat-checkbox formControlName=\\\"isSameForEntireClass\\\" translate [disabled]=\\\"isDisabled\\\">{{'Is Same For Entire Class' | translate}}</mat-checkbox>\\n            </div>\\n\\n        </div>\\n        <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\">\\n\\n\\n\\n\\n\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"pt-16\\\">\\n            <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\"\\n                (click)=\\\"onCancelClick()\\\">{{'Cancel' | translate}}</button>\\n            <button [disabled]=\\\"disbleSubmitBtn\\\" mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\"\\n                class=\\\"text-uppercase mr-12\\\" mat-button>{{this.buttonName | translate}}</button>\\n        </div>\\n    </form>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9maW5hbmNlL2ZlZS10eXBlL2ZlZS10eXBlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, forwardRef } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder, NG_VALUE_ACCESSOR, FormGroupDirective } from '@angular/forms';\nimport { MatDialog, MatSnackBar } from '@angular/material';\n\nimport { fuseAnimations } from '@fuse/animations';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { AppSettings } from 'app/app.constants';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\n\nimport * as HttpStatus from 'http-status-codes';\nimport { FeeTypeDataView } from '../models/fee-type-data-view';\nimport { FeeTypeViewModel } from '../models/fee-type-view-model';\nimport { SearchFeeTypeView } from '../models/search-fee-type-view';\n\nimport { SchoolFacilityService } from 'app/service/general/api/school-facility.service';\nimport { CommonService } from 'app/service/common.service';\nimport { FeeTypeService } from 'app/service/configuration/finance/api/fee-type.service';\nimport { DropDownConfModel } from 'app/models/drop-down-conf-view';\n\n@Component({\n  selector: 'app-fee-type',\n  templateUrl: './fee-type.component.html',\n  styleUrls: ['./fee-type.component.scss'],\n  providers: [FeeTypeService, SchoolFacilityService],\n  animations: fuseAnimations,\n})\nexport class FeeTypeComponent extends CommonComponent implements OnInit {\n\n  searchFeeTypeView: SearchFeeTypeView;\n  @ViewChild('addFeeTypes') addSchoolFacilities;\n  @ViewChild('feeTypeForm') feeTypeForm;\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n\n  // viewmodel declaration variables\n  feeTypeView: FeeTypeDataView;\n  feeTypeViewModel: FeeTypeViewModel;\n\n  // Array variable declarations\n  facilityOptionsSelect: Array<any> = [];\n  facilityDropDown: Array<any> = [];\n  feeAccountOptionsSelect: Array<any> = [];\n  feeAccountDropDown: Array<any> = [];\n  feeTermOptionsSelect: Array<any> = [];\n  feeTermDropDown: Array<any> = [];\n  feeTypeCategoriesSelect: Array<any> = [];\n  feeTypeCategoryDropDown: Array<any> = [];\n  feeTermsIds: Array<any> = [];\n  filterRowData: any = [];\n  cols: { field: string; header: string; sort: boolean; }[];\n\n  // variable declarations\n  currentComponent = 'FeeTypeComponent';\n  HttpStatus: any;\n  feeDetails: any;\n\n  // formGroup Declaration variables\n  feetypeForm: FormGroup;\n\n  // table variables\n  tabSettings: {};\n  rows: Array<any> = [];\n  pageCnt: number;\n  totalItems: number;\n  custRowsPerPageOptions: Array<number> = [];\n\n  // boolean variable declarations\n  disbleSubmitBtn = false;\n  feeTypeFormSubmitted = false;\n  updateShow = false;\n  isEdit: boolean;\n  closeAddPanel = false;\n  isSchoolFacility = true;\n  buttonName: any;\n  feeTermMulticheck: DropDownConfModel;\n  feeTermsToCheck: any = [];\n  feeTypeCategoryData: any;\n  showFeeterm = true;\n  dataLoaded = Promise.resolve(false);\n  isSameForEntireClass = true;\n  code: any;\n  schoolFacilityRequired = false;\n  isDisabled: boolean;\n\n  constructor(private fb: FormBuilder, private feeTypeService: FeeTypeService, public dialogRef: MatDialog, public commonService: CommonService, public snackBar: MatSnackBar) {\n    super();\n    this.searchFeeTypeView = {\n      sortBy: '',\n      sortOrder: AppSettings.SORTORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n    this.feetypeForm = this.fb.group({\n      id: new FormControl(),\n      name: new FormControl('', [Validators.required, Validators.maxLength(45)]),\n      displayName: new FormControl('', [Validators.maxLength(45)]),\n      code: new FormControl('', [Validators.maxLength(6)]),\n      feeDescription: new FormControl('', [Validators.maxLength(135)]),\n      isSameForEntireClass: new FormControl(false),\n      schoolFacilityId: new FormControl(''),\n      feeTypeCategoryId: new FormControl('', [Validators.required]),\n      feeAccountId: new FormControl('', [Validators.required]),\n      feeTermId: new FormControl('', [Validators.required])\n    });\n  }\n\n  ngOnInit(): void {\n    this.feeTypeViewModel = {\n      feeTermIds: [],\n      name: '',\n      isSameForEntireClass: 0,\n      feeTypeCategoryId: 0,\n      feeAccountId: 0\n    };\n    this.feeTypeView = {\n      feeTermIds: [],\n      name: '',\n      isSameForEntireClass: 0,\n      feeTypeCategoryId: 0,\n      feeAccountId: 0\n    };\n    this.feeTermCheck(false);\n    this.searchFeeTypeView = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.searchFeeTypeView = modelTableComponent;\n    }\n    // table columns\n    this.cols = [\n      { field: 'name', header: 'Name', sort: false },\n      { field: 'displayName', header: 'displayname', sort: false },\n      { field: 'code', header: 'Code', sort: false },\n      { field: 'feeDescription', header: 'Description', sort: false },\n      { field: 'feeTypeCategoryName', header: 'Fee Type Category', sort: false },\n      { field: 'feeAccountDisplayName', header: 'Fee Account', sort: false },\n      { field: 'schoolFacilitiyName', header: 'School Facility', sort: false },\n      { field: 'isSameForEntireClass', header: 'Is Same For Entire Class', sort: false },\n      { field: 'feeTermName', header: 'Fee Term', sort: false },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.searchFeeTypeView,\n      tablename: 'Fee Types',\n      componentName: this.currentComponent\n    };\n\n    if (this.getTokenParam('_as')) {\n      this.getAllFeeTypes(this.searchFeeTypeView);\n      this.getFacilities();\n      this.getFeeAccounts();\n      this.getFeeTypeCategories();\n      this.getFeeTerms();\n    }else{\n      setTimeout(() => {\n        this.openSnackBar(AppSettings.SCHOOLACADEMIC_SESSION_REQUIRED, true);\n      });\n      this.tabSettings['headerOperations'] = {\n        addingForm: {\n          required: false\n        }\n      };\n    } \n  }\n\n  // getting facility names\n  getFacilities(): void {\n    this.feeTypeService.facilities().subscribe((res: any) => this.facilityGet(res), error => {\n      this.errorResponse(error);\n    });\n  }\n  facilityGet(data: any): void {\n    this.facilityOptionsSelect = [];\n    for (let i = 0; i < data.schoolFacilityDataViewModel.length; i++) {\n      this.facilityOptionsSelect.push\n        ({ value: data.schoolFacilityDataViewModel[i].id, label: data.schoolFacilityDataViewModel[i].facilityName });\n      this.facilityDropDown = this.facilityOptionsSelect;\n    }\n  }\n  // End\n\n  // getting feeAccounts\n  getFeeAccounts(): void {\n    this.feeTypeService.getFeeAccounts().subscribe((res: any) => this.feeAccountsGet(res), error => {\n      this.errorResponse(error);\n    });\n  }\n  feeAccountsGet(data: any): void {\n    this.feeAccountOptionsSelect = [];\n    if (!data.commonViewModel){\n      return;\n    }\n    for (let i = 0; i < data.commonViewModel.length; i++) {\n      this.feeAccountOptionsSelect.push\n        ({ value: data.commonViewModel[i].id, label: data.commonViewModel[i].name });\n      this.feeAccountDropDown = this.feeAccountOptionsSelect;\n\n    }\n  }\n  // End\n\n  // getting feeTerms\n  getFeeTerms(): void {\n    this.feeTypeService.getFeeTerms().subscribe((res: any) => {\n      this.feeTermsGet(res);\n      this.dataLoaded = Promise.resolve(true);\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  feeTermsGet(data: any): void {\n    this.feeTermOptionsSelect = [];\n    if (data.commonViewModel) {\n      for (let i = 0; i < data.commonViewModel.length; i++) {\n        this.feeTermOptionsSelect.push\n          ({ value: data.commonViewModel[i].id, label: data.commonViewModel[i].name });\n        this.feeTermDropDown = this.feeTermOptionsSelect;\n      }\n      if (this.feeTermDropDown) {\n        this.feeTermCheck(true);\n      }\n    }\n  }\n  // End\n\n  // getting feeAccounts\n  getFeeTypeCategories(): void {\n    this.feeTypeService.getFeeTypeCategories().subscribe((res: any) => this.feeTypeCategoriesGet(res), error => {\n      this.errorResponse(error);\n    });\n  }\n  feeTypeCategoriesGet(data: any): void {\n    this.feeTypeCategoryData = data.commonViewModel;\n    this.feeTypeCategoriesSelect = [];\n    for (let i = 0; i < data.commonViewModel.length; i++) {\n      this.feeTypeCategoriesSelect.push\n        ({ value: data.commonViewModel[i].id, label: data.commonViewModel[i].name });\n      this.feeTypeCategoryDropDown = this.feeTypeCategoriesSelect;\n    }\n  }\n  // End\n\n  // get all feetypes\n  getAllFeeTypes(searchFeeTypeDataView: SearchFeeTypeView): void {\n    this.searchFeeTypeView = searchFeeTypeDataView;\n    this.feeTypeService.fetchingFeeTypes(this.searchFeeTypeView.Name,\n      this.searchFeeTypeView.displayName, this.searchFeeTypeView.schoolFacilityName,\n      this.searchFeeTypeView.feeTypeCategoryName,\n      this.searchFeeTypeView.feeAccountName,\n      this.searchFeeTypeView.feeTermName,\n      this.searchFeeTypeView.Code,\n      this.searchFeeTypeView.description, this.searchFeeTypeView.SchoolFacilityId, this.searchFeeTypeView.FeeTermId,\n      this.searchFeeTypeView.FeeTypeCategoryId, this.searchFeeTypeView.FeeAccountId,\n      this.searchFeeTypeView.IsSameForEntireClass, this.searchFeeTypeView.sortBy, this.searchFeeTypeView.sortOrder,\n      this.searchFeeTypeView.pageNumber, this.searchFeeTypeView.pageSize).subscribe(res => this.getAllResponse(res), error => {\n        this.disbleSubmitBtn = false;\n        this.errorResponse(error);\n      });\n  }\n\n  getAllResponse(feeData: any): void {\n    if (feeData.feetypes == null) {\n      this.rows = [];\n    } else {\n      this.rows = feeData.feetypes.list;\n      this.totalItems = feeData.feetypes.totalItems;\n    }\n\n    const feeTypeOperations = [\n      {\n        name: AppSettings.EDIT_OPERATION,\n        icon: AppSettings.EDIT\n      },\n      {\n        name: AppSettings.DELETE_OPERATION,\n        icon: AppSettings.DELETE,\n      },\n    ];\n\n    this.filterRowData = [];\n    if (feeData.feetypes) {\n      this.searchFeeTypeView.pageNumber = feeData.feetypes.pageNumber;\n    }\n\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.searchFeeTypeView,\n      rows: this.rows,\n      tablename: 'Fee Types',\n      componentName: this.currentComponent,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      rowGroupingColumns: ['name', 'displayName', 'code', 'feeDescription', 'feeTypeCategoryName', 'feeAccountDisplayName', 'schoolFacilitiyName', 'isSameForEntireClass'],\n      headerOperations: {\n        infoButton: {\n          required: true,\n          text: 'Fee Types'\n        },\n        addingForm: {\n          required: true,\n          btnName: AppSettings.NEW\n        },\n        navigateComponent: {\n          name: '',\n          btnName: ''\n        }\n      },\n      filtersList: feeData.filters\n    };\n    this.filterRowData = this.rows;\n\n    // filtering row group data\n    const x = [];\n    this.filterRowData.forEach(elnt => {\n      if (x.length === 0) {\n        x.push(elnt);\n      }\n      else {\n        this.filterRowData.forEach((element: any) => {\n          const foundIndex = x.findIndex((value: any) => {\n            return value.name === element.name;\n          });\n          if (foundIndex === -1) {\n            x.push(element);\n          }\n        });\n      }\n    });\n    this.filterRowData = x;\n    // apply edit and delete\n    this.filterRowData.forEach(element => {\n      this.rows.forEach(element1 => {\n        if (element.name === element1.name &&\n          element.id === element1.id &&\n          element.feeTermName === element1.feeTermName) {\n          element1.operations = [\n            {\n              name: AppSettings.EDIT_OPERATION,\n              icon: AppSettings.EDIT_ICON,\n              operationName: AppSettings.EDIT\n            },\n            {\n              name: AppSettings.DELETE_OPERATION,\n              icon: AppSettings.DELETE_ICON,\n              operationName: AppSettings.DELETE\n            },\n          ];\n        }\n      });\n    });\n    this.rows.forEach(element1 => {\n      element1.isSameForEntireClass === 1 ? \n      element1.isSameForEntireClass = AppSettings.YES : element1.isSameForEntireClass === 0 ? element1.isSameForEntireClass = AppSettings.NO : element1.isSameForEntireClass = null;\n    });\n  }\n  // End\n\n  // Add and update fee type functionalities\n  addUpdateFeeType(feetypeForm: any): void {\n    this.feeTermsIds = [];\n    this.feeTypeFormSubmitted = true;\n    if (feetypeForm.controls.isSameForEntireClass.value) {\n      feetypeForm.value.isSameForEntireClass = 1;\n      feetypeForm.controls.isSameForEntireClass.value = 1;\n    }\n    else if (feetypeForm.controls.isSameForEntireClass.value === null) {\n      feetypeForm.value.isSameForEntireClass = null;\n      feetypeForm.controls.isSameForEntireClass.value = null;\n    }\n    else{\n      feetypeForm.value.isSameForEntireClass = 0;\n      feetypeForm.controls.isSameForEntireClass.value = 0;\n    }\n    if (feetypeForm.status === AppSettings.VALID) {\n      this.disbleSubmitBtn = true;\n      if (feetypeForm.value.feeTermId != null) {\n        feetypeForm.value.feeTermId.forEach(element => {\n          this.feeTermsIds.push(element.value);\n        });\n      }\n      if (!this.isEdit) {\n        this.buttonName = AppSettings.SUBMIT;\n        this.feeTypeViewModel = feetypeForm.value;\n        this.feeTypeViewModel.feeTermIds = this.feeTermsIds;\n\n        this.feeTypeService.createFeeTypes(this.feeTypeViewModel).subscribe(res => this.addUpdateResponse(res), error => {\n          this.disbleSubmitBtn = false;\n          this.errorResponse(error);\n        });\n      }\n      else {\n        this.buttonName = AppSettings.UPDATE;\n        this.feeTypeView = feetypeForm.value;\n        this.feeTypeView.feeTermIds = this.feeTermsIds;\n\n        this.feeTypeService.updateFeeTypes(this.feeTypeView).subscribe(res => this.addUpdateResponse(res), error => {\n          this.disbleSubmitBtn = false;\n          this.errorResponse(error);\n        });\n      }\n    }\n  }\n\n  // response after add and update data of fee types\n  addUpdateResponse(response: any): void {\n    this.disbleSubmitBtn = false;\n    if (response.statusCode === HttpStatus.OK || response.statusCode === HttpStatus.BAD_REQUEST || response.statusCode === HttpStatus.CONFLICT) {\n      if (response.statusCode === HttpStatus.BAD_REQUEST || response.statusCode === HttpStatus.CONFLICT) {\n        this.closeAddPanel = false;\n      } else {\n        this.feeTypeFormSubmitted = false;\n        this.closeAddPanel = true;\n        this.feeTypeForm.resetForm();\n        this.disbleSubmitBtn = false;\n        this.getAllFeeTypes(this.searchFeeTypeView);\n      }\n      this.openSnackBar(response.messages.ResultMessage);\n    } else {\n      this.closeAddPanel = false;\n    }\n  }\n\n  // grid rowwise actions opearations\n  rowWiseActions(event: any): void {\n    if (event.operation === AppSettings.EDIT) {\n      this.buttonName = AppSettings.UPDATE;\n      this.isEdit = true;\n      this.updateShow = true;\n      this.closeAddPanel = false;\n      this.disbleSubmitBtn = false;\n      this.feeTypeService.getFeeTypeById(event.clickedRow.id).subscribe(res => this.singleFeeDetails(res), error => {\n        this.errorResponse(error);\n      });\n\n    }\n    if (event.operation === AppSettings.DELETE) {\n      const dialogRef = this.dialogRef.open(CustomDialogComponent, {\n        disableClose: true,\n        data: { text: this.commonService.getTranslation(AppSettings.WARNING_ON_SINGLE_DELETE, ''), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n      });\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.feeTypeService.deleteFeeType(event.clickedRow.id).subscribe(res => this.deleteResponse(res), error => {\n            this.errorResponse(error);\n          });\n        }\n      });\n    }\n  }\n\n  // response after delete operation\n  deleteResponse(deleteResponse: any): void {\n    this.getAllFeeTypes(this.searchFeeTypeView);\n    this.openSnackBar(deleteResponse.messages.ResultMessage);\n  }\n  // End\n\n  // Cancel button click\n  onCancelClick(): void {\n    this.feetypeForm.reset();\n    this.closeAddPanel = true;\n    this.updateShow = false;\n    this.disbleSubmitBtn = false;\n    this.feeTypeForm.resetForm();\n    this.feetypeForm.controls['feeTermId'].patchValue(this.compareArrayData(this.feeTermDropDown, []));\n    this.formDirective.resetForm();\n  }\n\n  // New button click opeartions\n  addForm(): void {\n    this.isEdit = false;\n    this.feetypeForm.reset();\n    this.closeAddPanel = false;\n    this.updateShow = false;\n    this.disbleSubmitBtn = false;\n    this.feeTypeForm.resetForm();\n    this.isSchoolFacility = false;\n    this.isSameForEntireClass = false;\n    this.buttonName = AppSettings.SUBMIT;\n  }\n\n\n  feeTermCheck(required: any): void {\n    this.feeTermMulticheck = { multiSelect: true, placeholder: 'Fee Term', data: this.feeTermDropDown, noEntryFoundLabel: 'No Data Found', isRequired: required };\n  }\n  // checking fee type category dependencies\n  checkFeeTypeCategory(feeTypeId: any): void {\n    this.feeTypeCategoryData.forEach(element => {\n      if (element.id === feeTypeId) {\n        this.code = element.code;\n      }\n    });\n    if (this.code === AppSettings.SCHOOL_ENROLLMENT) {\n      this.clearSchoolFeeValidation();\n      this.feetypeForm.get('feeTermId').setValidators(Validators.required);\n      this.feetypeForm.controls['feeTermId'].updateValueAndValidity();\n      this.feetypeForm.get('isSameForEntireClass').setValue(true);\n      this.feeTermCheck(true);\n      this.isSchoolFacility = false;\n      this.isSameForEntireClass = true;\n      this.isDisabled = true;\n      this.showFeeterm = true;\n    } else if (this.code === AppSettings.LATE_FEE) {\n      this.clearSchoolFeeValidation();\n      this.isSchoolFacility = false;\n      this.isSameForEntireClass = false;\n      this.showFeeterm = false;     \n      this.feetypeForm.get('feeTermId').clearValidators();\n      this.feetypeForm.controls['feeTermId'].updateValueAndValidity();\n      this.feetypeForm.controls['feeTermId'].setValue(null);\n      this.feetypeForm.controls['isSameForEntireClass'].setValue(null);\n      this.feetypeForm.controls['schoolFacilityId'].setValue(null);\n      this.feeTermCheck(false);\n    }\n    else if (this.code === AppSettings.TRANSPORT_FEE) {\n      this.isDisabled = false;\n      this.validateControls();\n      this.addSchoolFeeValidation();\n    }\n    else {\n      if (this.feetypeForm.value.feeTermId != null && this.feetypeForm.value.feeTermId.length > 0) {\n        this.addSchoolFeeValidation();\n        this.schoolFacilityRequired = true;\n      }\n      else { \n        this.clearSchoolFeeValidation();\n      }\n      this.isDisabled = false;\n      this.validateControls();\n    }\n  }\n  clearSchoolFeeValidation(): any {\n    this.schoolFacilityRequired = false;\n    this.feetypeForm.get('schoolFacilityId').clearValidators();\n    // this.feetypeForm.controls['schoolFacilityId'].setValue('');\n    this.feetypeForm.controls['schoolFacilityId'].updateValueAndValidity();\n  }\n  addSchoolFeeValidation(): any {\n    this.schoolFacilityRequired = true;\n    this.feetypeForm.get('schoolFacilityId').setValidators(Validators.required);\n    this.feetypeForm.controls['schoolFacilityId'].updateValueAndValidity();\n  }\n  validateControls(): any {\n    this.feetypeForm.get('isSameForEntireClass').setValue(true);\n    this.feetypeForm.get('feeTermId').clearValidators();\n    this.feetypeForm.controls['feeTermId'].updateValueAndValidity();\n    this.feeTermCheck(false);\n    this.isSchoolFacility = true;\n    this.isSameForEntireClass = true;\n    this.showFeeterm = true;\n  }\n\n  // binding fee type deatils for update \n  singleFeeDetails(data: any): void {\n    this.checkFeeTypeCategory(data.feeTypeViewModel.feeTypeCategoryId);\n    this.feeTermsToCheck = [];\n    if (data.feeTypeViewModel != null) {\n      this.feetypeForm.patchValue(data.feeTypeViewModel);\n      if (data.feeTypeViewModel.feeTypesForFeeTerms) {\n        data.feeTypeViewModel.feeTypesForFeeTerms.forEach(element => {\n          this.feeTermsToCheck.push({ label: element.feeTermName, value: element.feeTermId });\n        });\n        this.onSelect(data.feeTypeViewModel.feeTypesForFeeTerms);\n      }\n      this.feetypeForm.controls['feeTermId'].patchValue(this.compareArrayData(this.feeTermDropDown, this.feeTermsToCheck));\n    }\n\n  }\n\n  onSelect(data: any): void {\n    if (data.length > 0 && this.code === AppSettings.OTHER_FEE){\n      this.addSchoolFeeValidation();\n    }\n    else if (this.code !== AppSettings.TRANSPORT_FEE){\n      this.clearSchoolFeeValidation();\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FinanceComponent } from './finance.component';\nimport { InvoiceAdjustmentTypeComponent } from './invoice-adjustment-type/invoice-adjustment-type.component';\nimport { FeeTypeComponent } from './fee-type/fee-type.component';\nimport { LateFeeRulesComponent } from './late-fee-rules/late-fee-rules.component';\nimport { FeeAccountsComponent } from './fee-accounts/fee-accounts.component';\nimport { FeeTermsComponent } from './fee-terms/fee-terms.component';\nimport { FeeTypeTranchesComponent } from './fee-type-tranches/fee-type-tranches.component';\nimport { ManageFeesComponent } from './manage-fees/manage-fees.component';\nimport { FeeConcessionGroupComponent } from './fee-concession-group/fee-concession-group.component';\nimport { ManageFeeTranchesComponent } from './manage-fee-tranches/manage-fee-tranches.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: FinanceComponent,\n    children: [\n    { path: '', pathMatch: 'full', redirectTo: 'invoice-adjustment-types' },\n    { path: 'invoice-adjustment-types', component: InvoiceAdjustmentTypeComponent, data: {title: 'Invoice Adjustment Types'} },\n    { path: 'late-fee-rules', component: LateFeeRulesComponent, data: {title: 'Late Fee Rules'} },        \n    { path: 'invoice-adjustment-types', component: InvoiceAdjustmentTypeComponent , data: {title: 'Invoice Adjustment Types'}}, \n    { path: 'fee-accounts', component: FeeAccountsComponent, data: {title: 'Fee Accounts'} },  \n    { path: 'fee-type-tranches', component: FeeTypeTranchesComponent, data: {title: 'Fee Type Tranches'} },   \n    { path: 'invoice-adjustment-types', component: InvoiceAdjustmentTypeComponent , data: {title: 'Invoice Adjustment Types'}},     \n    { path: 'fee-terms', component: FeeTermsComponent, data: {title: 'Fee Terms'} },   \n    { path: 'fee-types', component: FeeTypeComponent, data: {title: 'Fee Types'} },\n    { path: 'manage-fees', component: ManageFeesComponent, data: {title: 'Manage Fees'} },     \n    { path: 'fee-concession-group', component: FeeConcessionGroupComponent, data: {title: 'Fee Concession Group'} },\n    { path: 'manage-fee-tranches', component: ManageFeeTranchesComponent, data: {title: 'Manage-Fee-Tranches'} },     \n    ]\n  },\n];\n@NgModule({\n  declarations: [],\n  imports: [\n    \n    RouterModule.forChild(routes),\n    CommonModule\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class FinanceRoutingModule { }\n","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9maW5hbmNlL2ZpbmFuY2UuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-finance',\n  templateUrl: './finance.component.html',\n  styleUrls: ['./finance.component.scss']\n})\nexport class FinanceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from 'app/interceptors/token-interceptor';\nimport { InvoiceAdjustmentTypeComponent } from './invoice-adjustment-type/invoice-adjustment-type.component';\nimport { FinanceRoutingModule } from './finance-routing.module';\nimport { SharedManagementModule } from 'app/shared/shared.module';\nimport { FinanceComponent } from './finance.component';\nimport { MatcomponentsModule } from 'app/main/matcomponents.module';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FeeTypeComponent } from './fee-type/fee-type.component';\nimport { LateFeeRulesComponent } from './late-fee-rules/late-fee-rules.component';\nimport { LateFeeRulesService } from 'app/service/configuration/finance/api/late-fee-rules.service';\nimport { FeeAccountsComponent } from './fee-accounts/fee-accounts.component';\nimport { FeeTypeTranchesComponent } from './fee-type-tranches/fee-type-tranches.component';\nimport { FeeTermsComponent } from './fee-terms/fee-terms.component';\nimport { FeeAccountService } from 'app/service/configuration/finance/api/api';\nimport { TypeService } from 'app/service/academic-service/api/type.service';\nimport { FeeTermsService } from 'app/service/configuration/finance/api/fee-terms.service';\nimport { ManageFeesComponent } from './manage-fees/manage-fees.component';\nimport { FuseWidgetModule } from '@fuse/components';\nimport { ManageFeeConfigurationService } from 'app/service/configuration/finance/api/manage-fee-configuration.service';\nimport { FeeConcessionGroupComponent } from './fee-concession-group/fee-concession-group.component';\nimport { FeeConcessionGroupService } from 'app/service/configuration/finance/api/fee-concession-group.service';\nimport { ManageFeeTranchesComponent } from './manage-fee-tranches/manage-fee-tranches.component';\nimport { ManageFeeTypeTranchesService } from 'app/service/configuration/finance/api/manage-fee-type-tranches.service';\n\n\n@NgModule({\n  declarations: [FinanceComponent, \n    InvoiceAdjustmentTypeComponent,\n    FeeAccountsComponent, \n    FeeTypeComponent, \n    FeeTypeTranchesComponent, \n    FeeTermsComponent, \n    LateFeeRulesComponent,\n    FeeConcessionGroupComponent, \n    ManageFeesComponent, \n    ManageFeeTranchesComponent],\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedManagementModule,\n    FinanceRoutingModule,\n    MatcomponentsModule,\n    FuseSharedModule,\n    TranslateModule,\n    FuseWidgetModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n    FeeAccountService, LateFeeRulesService, TypeService, FeeTermsService, ManageFeeConfigurationService, FeeConcessionGroupService, ManageFeeTypeTranchesService\n  ],\n  schemas: [NO_ERRORS_SCHEMA],\n})\nexport class FinanceModule { }\n","module.exports = \"<app-table [settings]=\\\"settingTableData\\\" (getTableData)='tableData($event)'\\n   (rowBasedAction)='onRowActions($event)' (openAddForm)='openInvoiceAdjTypeForm()' [closeRowForm]='isInvoiceAdjTypeFormClosed'\\n   [templateRef]=\\\"newTemplate\\\">\\n</app-table>\\n\\n<ng-template #newTemplate>\\n   <form [formGroup]=\\\"invoiceAdjustmentTypeForm\\\"\\n      (ngSubmit)=\\\"createOrUpdateInvoiceAdjustmentType(invoiceAdjustmentTypeForm.value)\\\" #invoiceAdjustmentType=\\\"ngForm\\\">\\n      <div fxFlexFill fxLayout=\\\"row\\\" class=\\\"pt-24\\\" fxLayoutAlign=\\\"center center\\\">\\n         <mat-form-field appearance=\\\"outline\\\" class=\\\"example-full-width\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\"\\n            fxFlex=\\\"100\\\">\\n            <mat-label #invoiceAdjTypeName translate>Invoice Adjustment Type Name</mat-label>\\n            <input matInput formControlName=\\\"name\\\"  (blur)=\\\"trimTextBoxSpaces('invoiceAdjustmentTypeForm','name')\\\" (keyup)=\\\"preventSpace($event,'invoiceAdjustmentTypeForm','name')\\\" required>\\n            <mat-error>\\n               <app-validation [labelName]=\\\"invoiceAdjTypeName.innerText\\\"\\n                  [validationControl]=\\\"invoiceAdjustmentTypeForm.controls.name\\\" [doValidate]=\\\"invoiceAdjTypeFormSubmitted\\\">\\n               </app-validation>\\n            </mat-error>\\n         </mat-form-field>\\n\\n      </div>\\n      <div fxFlexFill fxLayout=\\\"column\\\" class=\\\"pt-16\\\">\\n         <div fxFlexFill fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"mb-12 fuse-black-500-fg\\\"><span #isPositiveAdj translate>Is Positive Adjustment</span> <span>*</span>\\n            </div>\\n         <mat-radio-group class=\\\"grey-500-fg text-semibold\\\" aria-label=\\\"Select an option\\\" fxFlexFill fxLayout=\\\"row\\\"\\n            fxLayoutAlign=\\\"center center\\\" formControlName=\\\"isPositiveAdjustment\\\">\\n            <mat-radio-button class=\\\"ml-24\\\" *ngFor=\\\"let radio of YesOrNo\\\" [value]=\\\"radio.value\\\">{{radio.label | translate}}</mat-radio-button>\\n         </mat-radio-group>\\n         <mat-error fxFlexFill fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n            <app-validation [labelName]=\\\"isPositiveAdj.innerText\\\"\\n               [validationControl]=\\\"invoiceAdjustmentTypeForm.controls.isPositiveAdjustment\\\"\\n               [doValidate]=\\\"invoiceAdjTypeFormSubmitted\\\">\\n            </app-validation>\\n         </mat-error>\\n      </div>\\n      <div fxLayout=\\\"row\\\"  fxLayoutAlign.gt-xs=\\\"end center\\\" class=\\\"pb-8\\\">\\n         <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"reset\\\" (click)=\\\"closeForm()\\\">{{'Cancel' | translate}}</button>\\n            <button class=\\\"text-uppercase\\\" mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\" [disabled] = \\\"disbleSubmitBtn\\\">\\n               {{(isSubmitButtonEnabled ? 'Create':'Update') | translate}}</button>\\n      </div>\\n   </form>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9maW5hbmNlL2ludm9pY2UtYWRqdXN0bWVudC10eXBlL2ludm9pY2UtYWRqdXN0bWVudC10eXBlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { InvoiceAdjustmentTypeService } from 'app/service/configuration/finance/api/api';\nimport { CommonService } from 'app/service/common.service';\nimport { InvoiceAdjustmentFilterView } from '../models/invoice-adjustment-filter-view';\nimport { InvoiceAdjustmentTypeStatusView } from '../models/invoice-adjustment-type-status-view';\nimport { AppSettings } from 'app/app.constants';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { InvoiceAdjustmentTypeUpdateView } from '../models/invoice-adjustment-type-update-view';\nimport * as HttpStatus from 'http-status-codes';\nimport { YesNo } from 'app/models/yes-no-view';\nimport { CommonComponent } from 'app/shared/common/common.component';\n\n@Component({\n  selector: 'app-invoice-adjustment-type',\n  templateUrl: './invoice-adjustment-type.component.html',\n  styleUrls: ['./invoice-adjustment-type.component.scss'],\n  providers: [\n    InvoiceAdjustmentTypeService\n  ]\n})\nexport class InvoiceAdjustmentTypeComponent extends CommonComponent implements OnInit {\n  @ViewChild('invoiceAdjustmentType') invoiceAdjTypeForm;\n  filterViewModel: InvoiceAdjustmentFilterView;\n  schoolId: string;\n  disbleSubmitBtn = false;\n  // table variables\n  settingTableData: {};\n  rows: Array<any>;\n  columns: any[];\n  pageCnt = 0;\n  totalRowsCount = 0;\n  custRowsPerPageOptions: Array<number> = [];\n  rowBasedAction: Array<any> = [];\n  isInvoiceAdjTypeFormClosed: boolean;\n  invoiceAdjTypeFormSubmitted = false;\n  isSubmitButtonEnabled = true;\n  YesOrNo: Array<any> = YesNo.values;\n  currentComponent = 'InvoiceAdjustmentTypeComponent';\n\n  invoiceAdjustmentTypeForm: FormGroup;\n\n  constructor(public commonService: CommonService,\n    private invoiceAdjustmentTypeService: InvoiceAdjustmentTypeService,\n    public dialogRef: MatDialog, public snackBar: MatSnackBar) {\n    super();\n    this.initializeFilterView();\n    this.initializeInvoiceAdjustmentTypeForm();\n    this.tableColumns();\n    this.tabSettings();\n    this.commonService.getTableLSObj(this.settingTableData);\n  }\n\n  ngOnInit(): void {\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.filterViewModel = modelTableComponent;\n    }\n    // if (localStorage.getItem('_s')) {\n      this.fetchInvoiceAdjustmentTypes();\n    // }\n  }\n\n  /**\n  * intializes formGroup for InitializeInvoiceAdjustmentType\n  */\n  initializeInvoiceAdjustmentTypeForm(): void {\n    this.invoiceAdjustmentTypeForm = new FormGroup({\n      id: new FormControl(),\n      name: new FormControl('', [Validators.required,\n      Validators.maxLength(45)]),\n      isPositiveAdjustment: new FormControl('', Validators.required),\n    });\n  }\n\n  /**\n  * table columns\n  */\n  tableColumns(): void {\n    this.columns = [\n      { field: 'name', header: 'Name', sort: true },\n      { field: 'isPositiveAdjustment', header: 'Is Positive Adjustment', sort: true },\n      { field: 'isInactive', header: 'Active', sort: true },\n      { field: 'inactiveDate', header: 'Inactive Date', sort: true },\n      { field: 'actions', header: 'Actions', sort: false }\n    ];\n  }\n\n  /**\n  * initial table settings\n  */\n  tabSettings(): void {\n    this.settingTableData = {\n      rows: [],\n      columns: this.columns,\n      tablename: 'Invoice Adjustment Types',\n      componentName: this.currentComponent,\n      model: this.filterViewModel\n    };\n  }\n\n  /**\n  * initializing filterViewModel\n  */\n  initializeFilterView(): void {\n    this.filterViewModel = {\n      sortBy: '',\n      sortOrder: AppSettings.SORT_ORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE\n    };\n  }\n\n  /**\n  * api call to get all invoice adjustment types\n  */\n  fetchInvoiceAdjustmentTypes(): void {\n    this.invoiceAdjustmentTypeService.invoiceAdjustmentTypesList(this.filterViewModel.names, this.filterViewModel.isPositiveAdjustments,\n      this.filterViewModel.inActives, this.filterViewModel.inactiveDate, this.filterViewModel.inactiveDateBegin,\n      this.filterViewModel.inactiveDateEnd, this.filterViewModel.sortBy, this.filterViewModel.sortOrder, \n      this.filterViewModel.pageNumber, this.filterViewModel.pageSize).subscribe(res => {\n        this.invoiceAdjustmentTypesListResult(res);\n      }, error => {\n        this.disbleSubmitBtn = false;\n        this.errorResponse(error);\n      });\n  }\n\n  /**\n  * manipulate response data and sets to app-table\n  * @param invoiceAdjList \n  */\n  invoiceAdjustmentTypesListResult(invoiceAdjList: any): void {\n    this.custRowsPerPageOptions = [];\n    if (!invoiceAdjList.invoiceAdjustmentTypeList) {\n      this.rows = [];\n    } else {\n      this.rows = invoiceAdjList.invoiceAdjustmentTypeList.list;\n      this.totalRowsCount = invoiceAdjList.invoiceAdjustmentTypeList.totalItems;\n      this.pageCnt = invoiceAdjList.invoiceAdjustmentTypeList.totalPages;\n      this.rows.forEach((element: any) => {\n        element.operations = [\n          {\n            name: AppSettings.EDIT_OPERATION,\n            icon: AppSettings.EDIT\n\n          }, {\n            name: AppSettings.DELETE_OPERATION,\n            icon: AppSettings.DELETE\n          }];\n\n        // tslint:disable-next-line:no-unused-expression\n        (element.isInactive === 1) ? [element.isInactive = AppSettings.NO, element.operations.push({\n          name: AppSettings.ACTIVE_OPERATION,\n          icon: AppSettings.ACTIVE_ICON,\n        })] : [element.isInactive = AppSettings.YES, element.operations.push({\n          name: AppSettings.INACTIVE_OPERATION,\n          icon: AppSettings.INACTIVE_ICON,\n        })];\n        element.isPositiveAdjustment = (element.isPositiveAdjustment === 1) ?\n          AppSettings.YES : AppSettings.NO;\n        element.inactiveDate = (element.inactiveDate == null) ? null : this.commonService.customDateFormat(element.inactiveDate, this.getSchoolDateFormat()).date;\n      });\n    }\n    if (invoiceAdjList.invoiceAdjustmentTypeList) {\n      this.filterViewModel.pageNumber = invoiceAdjList.invoiceAdjustmentTypeList.pageNumber;\n    }\n\n    /**\n    * sets data to app-table component\n    */\n    this.settingTableData = {\n      model: this.filterViewModel,\n      rows: this.rows,\n      columns: this.columns,\n      totalRowsCount: this.totalRowsCount,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      tablename: 'Invoice Adjustment Types',\n      componentName: this.currentComponent,\n      isAddRowEventRequired: true,\n      isPaginationRequired: true,\n      filtersList: invoiceAdjList.filters,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          btnName: 'new'\n        }, navigateComponent: {\n          name: '',\n          btnName: ''\n        },\n        infoButton: {\n          required: true,\n          text: 'Invoice Adjustment Types'\n        }\n      }\n\n    };\n  }\n\n  /**\n  * gets the data to bind table on filter/pagination\n  * @param _filterViewModel \n  */\n  tableData(_filterViewModel: InvoiceAdjustmentFilterView): void {\n    this.filterViewModel = _filterViewModel;\n    this.fetchInvoiceAdjustmentTypes();\n  }\n\n  openInvoiceAdjTypeForm(): void {\n    this.invoiceAdjTypeFormSubmitted = false;\n    this.isInvoiceAdjTypeFormClosed = false;\n    this.invoiceAdjTypeForm.resetForm();\n    this.isSubmitButtonEnabled = true;\n  }\n\n  /**\n  * close the panel and initialize form on close\n  */\n  closeForm(): void {\n    this.invoiceAdjTypeForm.resetForm();\n    this.isInvoiceAdjTypeFormClosed = true;\n    this.invoiceAdjTypeFormSubmitted = false;\n  }\n\n  createOrUpdateInvoiceAdjustmentType(invoiceAdjustmentType: InvoiceAdjustmentTypeUpdateView): void {\n    this.invoiceAdjTypeFormSubmitted = true;\n    if (invoiceAdjustmentType.id == null && this.invoiceAdjustmentTypeForm.valid) {\n      this.invoiceAdjustmentTypeService.createInvoiceAdjustmentType(invoiceAdjustmentType).subscribe(response => {\n        this.openSnackBar(response.messages.ResultMessage);\n        if (response.statusCode === HttpStatus.OK) {\n          this.fetchInvoiceAdjustmentTypes();\n          this.closeForm();\n        }\n        else {\n          this.isInvoiceAdjTypeFormClosed = false;\n        }\n\n      }, error => {\n        this.disbleSubmitBtn = false;\n        this.errorResponse(error);\n      });\n      this.disbleSubmitBtn = false;\n    }\n    else if (this.invoiceAdjustmentTypeForm.valid) {\n      this.invoiceAdjustmentTypeService.updateInvoiceAdjustmentType(invoiceAdjustmentType).subscribe(response => {\n        this.openSnackBar(response.messages.ResultMessage);\n        if (response.statusCode === HttpStatus.OK) {\n          this.fetchInvoiceAdjustmentTypes();\n          this.closeForm();\n        }\n        else {\n          this.isInvoiceAdjTypeFormClosed = false;\n        }\n      }, error => {\n        this.disbleSubmitBtn = false;\n        this.errorResponse(error);\n      });\n      this.disbleSubmitBtn = false;\n    }\n\n  }\n\n  onRowActions(operationData: any): void {\n    if (operationData.operation === AppSettings.EDIT.toLowerCase()) {\n      this.invoiceAdjTypeFormSubmitted = false;\n      this.isSubmitButtonEnabled = false;\n      const isPositiveAdjustment = (operationData.clickedRow.isPositiveAdjustment === AppSettings.YES) ?\n        1 : 0;\n      this.isInvoiceAdjTypeFormClosed = false;\n      this.invoiceAdjustmentTypeForm.controls['id'].setValue(operationData.clickedRow.id);\n      this.invoiceAdjustmentTypeForm.controls['name'].setValue(operationData.clickedRow.name);\n      this.invoiceAdjustmentTypeForm.controls['isPositiveAdjustment'].setValue(isPositiveAdjustment);\n    }\n\n    if (operationData.operation === AppSettings.DELETE.toLowerCase()) {\n      const dialogValue = this.commonService.dialog(AppSettings.WARNING_ON_SINGLE_DELETE, true, AppSettings.NO, AppSettings.YES);\n      dialogValue.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          const invoiceAdjustmentTypeId: string = operationData.clickedRow.id;\n          this.deleteInvoiceAdjustmentTypes(invoiceAdjustmentTypeId);\n        }\n      });\n\n    }\n\n    /**check status based on */\n    if (operationData.operation === AppSettings.ACTIVE_OPERATION.toLowerCase() || operationData.operation === AppSettings.INACTIVE_OPERATION.toLowerCase()) {\n      const warningMessage = (operationData.operation === AppSettings.ACTIVE_OPERATION.toLowerCase()) ? AppSettings.WARNING_ON_ACTIVATE : AppSettings.WARNING_ON_INACTIVATE;\n      const dialogValue = this.commonService.dialog(warningMessage, true, AppSettings.NO, AppSettings.YES);\n      dialogValue.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          let isInActive: number;\n          (operationData.clickedRow.isInactive === AppSettings.YES) ? isInActive = 1 : isInActive = 0;\n          let invoiceAdjustmentTypeStatus: InvoiceAdjustmentTypeStatusView;\n          invoiceAdjustmentTypeStatus = {\n            id: operationData.clickedRow.id,\n            isInActive: isInActive\n          };\n          this.changeInvoiceAdjustmentStatus(invoiceAdjustmentTypeStatus);\n        }\n      });\n    }\n  }\n\n  deleteInvoiceAdjustmentTypes(invoiceAdjustmentTypeId: string): void {\n    this.invoiceAdjustmentTypeService.deleteInvoiceAdjustmentType(invoiceAdjustmentTypeId).subscribe(response => {\n      this.openSnackBar(response.messages.ResultMessage); \n      this.fetchInvoiceAdjustmentTypes();\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n  /**\n  * changes the status of invoice adjustment\n  * @param invoiceAdjustmentTypeStatus \n  */\n  changeInvoiceAdjustmentStatus(invoiceAdjustmentTypeStatus: InvoiceAdjustmentTypeStatusView): void {\n    this.invoiceAdjustmentTypeService.updateInvoiceAdjustmentTypeStatus(invoiceAdjustmentTypeStatus)\n      .subscribe(response => {\n        this.openSnackBar(response.messages.ResultMessage); \n        if (response.statusCode === HttpStatus.OK) {\n          this.fetchInvoiceAdjustmentTypes();\n        }\n      }, error => {\n        this.disbleSubmitBtn = false;\n        this.errorResponse(error);\n      });\n  }\n\n}\n","module.exports = \"<app-table [settings]=\\\"tabSettings\\\" (getTableData)='getTableData($event)' (rowBasedAction)='onTableSelect($event)'\\n  [templateRef]='addLateFeeRuleTemplate' (deleteAllRows)=\\\"deleteAll()\\\" [closeRowForm]='closeAddPanel' (openAddForm)='addRow()'\\n (selectedRows)='selectedRows($event)' ></app-table>\\n<ng-template #addLateFeeRuleTemplate>\\n  <form [formGroup]=\\\"lateFeeRuleForm\\\" (ngSubmit)=\\\"onSubmitLateFeeRule(lateFeeRuleForm)\\\" #userLateFeeRuleForm=\\\"ngForm\\\">\\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxLayout.gt-xs=\\\"row\\\" class=\\\"pt-24\\\">\\n\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\">\\n        <mat-label #paymentDelayFromCount translate>Payment Delay From(Day Count)</mat-label>\\n        <input required matInput formControlName=\\\"delayFromDayCount\\\" (keyup)=\\\"preventSpace($event,'lateFeeRuleForm','delayFromDayCount')\\\" (blur)=\\\"trimTextBoxSpaces('lateFeeRuleForm','delayFromDayCount')\\\" autocomplete=\\\"off\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"paymentDelayFromCount.innerText\\\"\\n            [validationControl]=\\\"lateFeeRuleForm.controls.delayFromDayCount\\\" [doValidate]=\\\"isValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" class=\\\"px-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"34\\\">\\n        <mat-label #paymentDelayToCount translate>Payment Delay To(Day Count)</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'lateFeeRuleForm','delayToDayCount')\\\" (blur)=\\\"trimTextBoxSpaces('lateFeeRuleForm','delayToDayCount')\\\" required matInput formControlName=\\\"delayToDayCount\\\" autocomplete=\\\"off\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"paymentDelayToCount.innerText\\\"\\n            [validationControl]=\\\"lateFeeRuleForm.controls.delayToDayCount\\\" [doValidate]=\\\"isValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxFlex.gt-xs=\\\"35\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\"\\n        fxLayout=\\\"column\\\">\\n        <mat-label translate #lateFeePenaltyType>Late Fee Penalty Type</mat-label>\\n        <mat-select required formControlName=\\\"lateFeePenaltyTypeId\\\"\\n          (selectionChange)=\\\"lateFeePenaltyTypeChange($event)\\\">\\n          <mat-option *ngFor=\\\"let lateFeePenaltyType of lateFeePenaltyTypes\\\" [value]=\\\"lateFeePenaltyType.value\\\">\\n            {{ lateFeePenaltyType.label }}</mat-option>\\n        </mat-select>\\n        <mat-error>\\n          <app-validation [labelName]=\\\"lateFeePenaltyType.innerText\\\"\\n            [validationControl]=\\\"lateFeeRuleForm.controls.lateFeePenaltyTypeId\\\" [doValidate]=\\\"isValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-xs=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"pt-12\\\">\\n\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"33\\\">\\n        <mat-label #penaltyAmount translate>Penalty Amount</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'lateFeeRuleForm','penaltyAmount')\\\" (blur)=\\\"trimTextBoxSpaces('lateFeeRuleForm','penaltyAmount')\\\" required matInput formControlName=\\\"penaltyAmount\\\" autocomplete=\\\"off\\\">\\n        <mat-error>\\n          <app-validation [labelName]=\\\"penaltyAmount.innerText\\\"\\n            [validationControl]=\\\"lateFeeRuleForm.controls.penaltyAmount\\\" [doValidate]=\\\"isValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <div *ngIf=\\\"isPenaltyExist\\\" fxFlexFill fxLayout=\\\"column\\\" class=\\\"pt-8 pb-20 px-20\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\"\\n        fxLayoutAlign=\\\"center srart\\\">\\n        <label fxFlexFill fxLayout=\\\"row\\\" class=\\\"primary-300-fg pb-8 ml-24\\\"><span #isPenaltyFromDueDate translate>Is Penalty From Due Date</span>\\n            <span>*</span></label>\\n        <mat-radio-group class=\\\"grey-500-fg text-semibold\\\" aria-label=\\\"Select an option\\\" fxFlexFill fxLayout=\\\"row\\\"\\n          formControlName=\\\"isPenaltyFromDueDate\\\">\\n          <mat-radio-button class=\\\"ml-24\\\" *ngFor=\\\"let radio of YesOrNo\\\" [value]=\\\"radio.value\\\">\\n            {{radio.label | translate}}\\n          </mat-radio-button>\\n        </mat-radio-group>\\n        <mat-error fxFlexFill fxLayout=\\\"row\\\" class=\\\"ml-16 pt-4 font-size-12\\\">\\n          <app-validation [labelName]=\\\"isPenaltyFromDueDate.innerText\\\"\\n            [validationControl]=\\\"lateFeeRuleForm.controls.isPenaltyFromDueDate\\\" [doValidate]=\\\"isValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </div>\\n\\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"py-16\\\">\\n      <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\" (click)=\\\"closePanel()\\\" translate>\\n        {{'Cancel' | translate}}\\n      </button>\\n      <button [disabled]=\\\"disbleSubmitBtn\\\" mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\">{{(isUpdate ? 'Update':'Create') | translate}}</button>\\n    </div>\\n  </form>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9maW5hbmNlL2xhdGUtZmVlLXJ1bGVzL2xhdGUtZmVlLXJ1bGVzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { LateFeeViewModel } from '../models/late-fee-viewmodel';\nimport { LateFeeView } from '../models/late-fee-view';\nimport { LateFeeRuleFilterView } from '../models/late-fee-rule-filter-view';\nimport { AppSettings, Pattern } from 'app/app.constants';\nimport { CommonService } from 'app/service/common.service';\nimport { LateFeeRulesService } from 'app/service/configuration/finance/api/late-fee-rules.service';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport * as HttpStatus from 'http-status-codes';\nimport { DropDownModel } from 'app/models/drop-down-view';\nimport { YesNo } from 'app/models/yes-no-view';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { Event } from '@angular/router';\n\n@Component({\n  selector: 'app-late-fee-rules',\n  templateUrl: './late-fee-rules.component.html',\n  styleUrls: ['./late-fee-rules.component.scss']\n})\nexport class LateFeeRulesComponent extends CommonComponent implements OnInit {\n  lateFeeRuleForm: FormGroup;\n  lateFeeViewModel: LateFeeViewModel;\n  lateFeeView: LateFeeView;\n  lateFeeRuleFilterView: LateFeeRuleFilterView;\n  cols: any[];\n  tabSettings: {};\n  currentComponent = 'LateFeeRulesComponent';\n  failedRecords: string[];\n  custRowsPerPageOptions: Array<number> = [];\n  rows: Array<any>;\n  totalItems: number;\n  pageCnt: number;\n  @ViewChild('addLateFeeRuleTemplate') addLateFeeRuleTemplate;\n  @ViewChild('userLateFeeRuleForm') userLateFeeRuleForm;\n  isValidate: boolean;\n  closeAddPanel: boolean;\n  isUpdate = false;\n  lateFeePenaltyTypes: Array<DropDownModel> = [];\n  YesOrNo: Array<any> = YesNo.values;\n  disbleSubmitBtn = false;\n  errorMessages: any;\n  errorsList: Array<any> = [];\n  isPenaltyExist = false;\n  lateFeeRuleIds: Array<string> = [];\n  constructor(public commonService: CommonService, private lateFeeRulesService: LateFeeRulesService, public dialog: MatDialog, public snackBar: MatSnackBar) {\n    super();\n    this.lateFeeRuleFilterView = {\n      sortBy: '',\n      sortOrder: AppSettings.DEFAULT_SORTORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n  }\n\n  ngOnInit(): void {\n    /**\n       * table columns\n       */\n    this.cols = [\n      { field: 'delayFromDayCount', header: 'Payment Delay From(Days)', sort: true },\n      { field: 'delayToDayCount', header: 'Payment Delay To(Days)', sort: true },\n      { field: 'lateFeePenaltyTypeName', header: 'Penalty Type', sort: true },\n      { field: 'penaltyAmount', header: 'Penalty Amount', sort: true },\n      { field: 'isPenaltyFromDueDate', header: 'Is Penalty From Due Date', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n    /**\n       * intializes formGroup for TestType\n       */\n    this.lateFeeRuleForm = new FormGroup({\n      id: new FormControl(''),\n      delayFromDayCount: new FormControl('', [Validators.required, Validators.pattern(Pattern.NUMBER_PATTERN), Validators.max(365), Validators.min(1)]),\n      delayToDayCount: new FormControl('', [Validators.required, Validators.pattern(Pattern.NUMBER_PATTERN), Validators.max(365), Validators.min(1)]),\n      lateFeePenaltyTypeId: new FormControl('', [Validators.required]),\n      penaltyAmount: new FormControl('', [Validators.required, Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS), Validators.max(99999.99), Validators.min(1)]),\n      isPenaltyFromDueDate: new FormControl('', [Validators.required])\n    });\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.lateFeeRuleFilterView,\n      tablename: 'Late Fee Rules',\n      componentName: this.currentComponent,\n    };\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.lateFeeRuleFilterView = modelTableComponent;\n    }\n    if (this.getTokenParam('_as')) {\n      this.fetchTableData();\n    } else {\n      setTimeout(() => {\n        this.openSnackBar(AppSettings.SCHOOLACADEMIC_SESSION_REQUIRED, true);\n      });\n    }\n    this.fetchLateFeePenaltyTypes();\n  }\n  getTableData(lateFeeRuleFilterView: LateFeeRuleFilterView): void {\n    this.lateFeeRuleFilterView = lateFeeRuleFilterView;\n    this.fetchTableData();\n  }\n  fetchTableData(): void {\n    this.lateFeeRulesService.getAllDetails(this.lateFeeRuleFilterView.delayFromDaysCount, this.lateFeeRuleFilterView.delayToDaysCount,\n      this.lateFeeRuleFilterView.lateFeePenaltyTypeIds, this.lateFeeRuleFilterView.penaltyAmounts, this.lateFeeRuleFilterView.isPenaltyFromDueDates,\n      this.lateFeeRuleFilterView.sortBy, this.lateFeeRuleFilterView.sortOrder, this.failedRecords, this.lateFeeRuleFilterView.pageNumber,\n      this.lateFeeRuleFilterView.pageSize).subscribe((res: any) => { this.getAllLateFeeRules(res); }, error => {\n        this.errorResponse(error);\n      });\n  }\n  getAllLateFeeRules(lateFeeRolesList: any): void {\n    this.custRowsPerPageOptions = [];\n    if (!lateFeeRolesList.lateFeeRuleListViewModel) {\n      this.rows = [];\n    } else {\n      this.rows = lateFeeRolesList.lateFeeRuleListViewModel.list;\n      this.totalItems = lateFeeRolesList.lateFeeRuleListViewModel.totalItems;\n    }\n    const testoperations = [\n      {\n        name: AppSettings.EDIT_OPERATION,\n        icon: AppSettings.EDIT_ICON\n\n      },\n      {\n        name: AppSettings.DELETE_OPERATION,\n        icon: AppSettings.DELETE_ICON\n      },\n    ];\n    this.rows.forEach(e => {\n      e.penaltyAmount = this.getFormattedCurrency(e.penaltyAmount);\n      e.operations = testoperations;\n      e.isPenaltyFromDueDate = (e.isPenaltyFromDueDate === 1) ? AppSettings.YES : ((e.isPenaltyFromDueDate === 0) ? AppSettings.NO : null);\n    });\n    if (lateFeeRolesList.lateFeeRuleListViewModel) {\n      this.lateFeeRuleFilterView.pageNumber = lateFeeRolesList.lateFeeRuleListViewModel.pageNumber;\n    }\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.lateFeeRuleFilterView,\n      rows: this.rows,\n      tablename: 'Late Fee Rules',\n      componentName: this.currentComponent,\n      isNewStudentCourseSelectionRequired: true,\n      isSelectRowRequired: true,\n      visibleSelectAll: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          name: this.addLateFeeRuleTemplate,\n          btnName: 'add'\n        }, infoButton: {\n          required: true,\n          text: 'Late Fee Rules'\n        }\n      },\n      filtersList: lateFeeRolesList.filters\n    };\n  }\n  fetchLateFeePenaltyTypes(): void {\n\n    this.lateFeePenaltyTypes = [];\n    this.lateFeeRulesService.getLateFeePenaltyTypes()\n      .subscribe((data: Array<{ id: string | number, name: string }>) =>\n        data.forEach(element =>\n          this.lateFeePenaltyTypes.push({ label: element.name, value: element.id })\n        ));\n  }\n  addRow(): void {\n    this.lateFeeRulesService.isExistLateFeeCategeory().subscribe(res => {\n      if (res.statusCode !== HttpStatus.OK) {\n        this.closeAddPanel = true;\n        this.openSnackBar(res.messages.ResultMessage);\n      }\n    });\n    this.isValidate = false;\n    this.lateFeeRuleForm.reset();\n    this.userLateFeeRuleForm.resetForm();\n    this.closeAddPanel = false;\n    this.isUpdate = false;\n    this.disbleSubmitBtn = false;\n  }\n  /**\n    * close the panel and initialize form on close\n    */\n\n  closePanel(): void {\n    this.closeAddPanel = true;\n    this.isValidate = false;\n    this.lateFeeRuleForm.reset();\n    this.userLateFeeRuleForm.resetForm();\n  }\n  /**\n    * Api call for Add or updating the latefeerule based on condition\n    * @param lateFeeView \n    */\n  onSubmitLateFeeRule(lateFeeView: any): void {\n    this.isValidate = true;\n    if (lateFeeView.status === AppSettings.VALID) {\n      this.disbleSubmitBtn = true;\n      if (lateFeeView.value.id == null) {\n        this.lateFeeViewModel = lateFeeView.value;\n        this.lateFeeRulesService.createLateFeeRule(this.lateFeeViewModel).subscribe(res => this.addUpdateResponce(res), error => {\n          this.disbleSubmitBtn = false;\n          this.errorResponse(error);\n        });\n      }\n      else {\n        this.lateFeeView = lateFeeView.value;\n        this.lateFeeRulesService.updateLateFeeRule(this.lateFeeView).subscribe(res => this.addUpdateResponce(res), error => {\n          this.disbleSubmitBtn = false;\n          this.errorResponse(error);\n        });\n      }\n    }\n  }\n  /**\n      * Responce for Add or update\n      * @param testTypeView \n      */\n  addUpdateResponce(testTypeView: any): void {\n    this.disbleSubmitBtn = false;\n    this.openSnackBar(testTypeView.messages.ResultMessage);\n    if (testTypeView.statusCode === HttpStatus.OK) {\n      this.closeAddPanel = true;\n      this.fetchTableData();\n      this.isPenaltyExist = false;\n    }\n    else { this.closeAddPanel = false; }\n  }\n  lateFeePenaltyTypeChange(data: any): void {\n    const lateFeeType = this.lateFeePenaltyTypes.filter(x => x.value === data.value);\n    if (lateFeeType[0].label.toLowerCase() === AppSettings.FIXED.toLowerCase()) {\n      this.isPenaltyExist = false;\n      this.lateFeeRuleForm.get('isPenaltyFromDueDate').clearValidators();\n      this.lateFeeRuleForm.controls['isPenaltyFromDueDate'].updateValueAndValidity();\n      this.lateFeeRuleForm.controls['isPenaltyFromDueDate'].setValue(null);\n    }\n    else {\n      this.isPenaltyExist = true;\n      this.lateFeeRuleForm.get('isPenaltyFromDueDate').setValidators([Validators.required]);\n      this.lateFeeRuleForm.controls['isPenaltyFromDueDate'].updateValueAndValidity();\n    }\n  }\n  onTableSelect(data: any): void {\n    if (data.operation === AppSettings.DELETE) {\n      const dialogRef = this.commonService.dialog(AppSettings.WARNING_ON_SINGLE_DELETE, true, AppSettings.NO, AppSettings.YES);\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          const lateFeeRuleIds: Array<string> = [data.clickedRow.id];\n          this.deleteLateFeeRules(lateFeeRuleIds, false);\n        }\n      });\n    }\n    if (data.operation === AppSettings.EDIT) {\n\n      this.isUpdate = true;\n      this.closeAddPanel = false;\n      this.lateFeeRulesService.lateFeeDetails(data.clickedRow.id).subscribe(res => {\n        this.lateFeeRuleForm.patchValue(res.lateFeeView);\n        res.lateFeeView.isPenaltyFromDueDate == null ? this.isPenaltyExist = false : this.isPenaltyExist = true;\n      }, error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n  /**\n      * Deleteting the testtypes\n      * @param testTypeIds \n      * @param isMultiSelect \n      */\n  deleteLateFeeRules(testTypeIds: any, isMultiSelect: any): void {\n    if (testTypeIds.length > 0) {\n      this.lateFeeRulesService.deleteAll(testTypeIds).subscribe(res => {\n        if (res.statusCode = HttpStatus.OK) {\n          this.openSnackBar(res.messages.ResultMessage);\n        }\n        this.fetchTableData();\n      }, error => {\n        if (isMultiSelect && error.error.failedRecords !== undefined && error.error.failedRecords.length > 0) {\n          this.failedRecords = (error.error.failedRecords);\n        }\n        this.errorResponse(error);\n        this.fetchTableData();\n      });\n    }\n  }\n  /**\n   * warns on delete then call deleteLateFeeRules method on yes\n   */\n\n  deleteAll(): void {\n    const dialogRef = this.commonService.dialog(AppSettings.WARNING_ON_MULTI_DELETE, true, AppSettings.NO, AppSettings.YES);\n    dialogRef.afterClosed().subscribe(action => {\n      if (action === AppSettings.YES) {\n        this.deleteLateFeeRules(this.lateFeeRuleIds, true);\n      }\n    });\n  }\n  selectedRows(data: any): void {\n    this.lateFeeRuleIds = [];\n    for (let index = 0; index < data.length; index++) {\n      this.lateFeeRuleIds.push(data[index].id);\n    }\n  }\n}\n","module.exports = \"<div class=\\\"px-sm-40 py-20\\\">\\n  <div class=\\\"p-12 font-size-18 text-uppercase\\\" translate>Manage Tranche Fees</div>\\n  <form [formGroup]=\\\"manageFeeTranchesForm\\\" #userManageFeeTranchesForm=\\\"ngForm\\\">\\n    <div class=\\\"mat-elevation-z8 radius-20 simple-table-container\\\" fxLayout=\\\"column\\\">\\n      <div fxFlexFill fxLayoutAlign=\\\"start center\\\" fxLayout.gt-xs=\\\"row\\\" fxLayout=\\\"column\\\" class=\\\"px-16 pt-20\\\">\\n\\n        <mat-form-field *ngIf=\\\"isSchoolBoard\\\" fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"20\\\"\\n          fxFlex=\\\"100\\\">\\n          <mat-label translate #schoolBoard>School Board</mat-label>\\n          <mat-select required formControlName=\\\"schoolBoardId\\\" (selectionChange)=\\\"fetchClasses($event.value)\\\">\\n            <mat-option *ngFor=\\\"let schoolBoard of schoolBoards\\\" [value]=\\\"schoolBoard.value\\\">\\n              {{schoolBoard.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"schoolBoard.innerText\\\"\\n              [validationControl]=\\\"manageFeeTranchesForm.controls.schoolBoardId\\\" [doValidate]=\\\"isValidate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"25\\\" fxFlex=\\\"100\\\"\\n          class=\\\"px-sm-20\\\">\\n          <mat-label translate #feeType>Fee Type</mat-label>\\n          <mat-select required formControlName=\\\"feeTypeId\\\" (selectionChange)=\\\"getAllFeeTranches($event.value)\\\">\\n            <mat-option *ngFor=\\\"let feeType of feeTypes\\\" [value]=\\\"feeType.value\\\">\\n              {{ feeType.label }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"feeType.innerText\\\"\\n              [validationControl]=\\\"manageFeeTranchesForm.controls.feeTypeId\\\" [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"25\\\" fxFlex=\\\"100\\\"\\n          class=\\\"px-sm-20\\\">\\n          <mat-label translate #class>Class</mat-label>\\n          <mat-select formControlName=\\\"classId\\\" (selectionChange)=\\\"classSelect($event.value)\\\">\\n            <mat-option *ngIf=\\\"classes?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let class of classes\\\" [value]=\\\"class.value\\\">\\n              {{ class.label }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"class.innerText\\\" [validationControl]=\\\"manageFeeTranchesForm.controls.classId\\\"\\n              [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <div fxFlexFill fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"55\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"end\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mb-24\\\">\\n            <button *ngIf=\\\"isAddButton\\\" type=\\\"button\\\" [disabled]=\\\"isDisabled\\\" mat-raised-button\\n              class=\\\"text-uppercase mx-8\\\" color=\\\"accent\\\" (click)=\\\"addClick()\\\">{{'Add' | translate}}</button>\\n            <button *ngIf=\\\"isUpdateButton\\\" type=\\\"button\\\" [disabled]=\\\"isDisabled\\\" mat-raised-button\\n              class=\\\"text-uppercase mr-8\\\" color=\\\"primary\\\" (click)=\\\"editClick()\\\">{{'Edit' | translate}}</button>\\n            <button mat-button type=\\\"button\\\" (click)=\\\"getHelpText('Manage Tranche Fees')\\\" [disabled]=\\\"isDisabled\\\">\\n              <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <mat-divider></mat-divider>\\n      <div *ngIf=\\\"isErrorMessage\\\" class=\\\"p-sm-40 text-center\\\">{{errorMessage|translate}}</div>\\n\\n\\n\\n      <!-- ADD -->\\n      <h1 *ngIf=\\\"isCreate || isEdit\\\" class=\\\"mb-0 pl-32 pt-24\\\">{{feeTypeName}}</h1>\\n      <div *ngIf=\\\"isInvoiceError\\\" class=\\\"pl-32 pt-12 message-box error\\\">{{invoiceError}}</div>\\n      <div class=\\\"px-20 pb-20\\\" fxLayout=\\\"row wrap\\\" *ngIf=\\\"isCreate || isEdit\\\">\\n        <fuse-widget formArrayName=\\\"feeTypeTranches\\\" class=\\\"widget\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\"\\n          *ngFor=\\\"let control of manageFeeTranchesForm.controls['feeTypeTranches']?.controls;let i=index;\\\">\\n          <div [formGroupName]=\\\"i\\\" class=\\\"fuse-widget-front mat-elevation-z\\\">\\n            <div>\\n              <div class=\\\"p-20 border-bottom\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                <div class=\\\"h2\\\">{{control?.controls['feeTypeTrancheName']?.value}}</div>\\n              </div>\\n            </div>\\n            <div class=\\\"h-300 scroll-y-auto\\\">\\n              <div class=\\\"px-20\\\" fxLayout=\\\"row\\\" formArrayName=\\\"schoolFeeAssignments\\\"\\n                *ngFor=\\\"let feeTranchControl of control?.controls['schoolFeeAssignments']?.controls; let j=index\\\">\\n                <div [formGroupName]=\\\"j\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"w-100-p feetype-Error\\\">\\n                  <div class=\\\"h3 break-word pr-12\\\">{{feeTranchControl?.controls['shortName']?.value}}</div>\\n                  <mat-form-field fxLayout=\\\"column\\\" fxFlex=\\\"0 1 auto\\\">\\n                    <input matInput formControlName=\\\"feeAmount\\\" (keypress)=\\\"numberOnly($event)\\\"\\n                      [value]=\\\"feeTranchControl?.controls['feeAmount']?.value\\\">\\n                  </mat-form-field>\\n                  <mat-error>\\n                    <app-validation [labelName]=\\\"'Amount'|translate\\\"\\n                      [validationControl]=\\\"feeTranchControl?.controls?.feeAmount\\\" [doValidate]=\\\"isValidate\\\">\\n                    </app-validation>\\n                  </mat-error>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"py-16 px-20 font-weight-600 font-size-18 feetype-Error\\\" fxLayout=\\\"row\\\"\\n              fxLayoutAlign=\\\"space-between center\\\">\\n              <div>Total Amount</div>\\n              <mat-form-field fxLayout=\\\"column\\\" fxFlex=\\\"0 1 auto\\\">\\n                <input matInput formControlName=\\\"feeAmount\\\" (keypress)=\\\"numberOnly($event)\\\" [disable]=\\\"'true'\\\" [value]=\\\"getTotalAmount(control)\\\">\\n              </mat-form-field>\\n              <mat-error class=\\\"mt-12\\\">\\n                <app-validation [labelName]=\\\"'Total Amount'|translate\\\"\\n                  [validationControl]=\\\"control?.controls?.feeAmount\\\" [doValidate]=\\\"isValidate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </div>\\n          </div>\\n        </fuse-widget>\\n      </div>\\n      <!-- ADD -->\\n\\n\\n      <h1 *ngIf=\\\"isDisplay\\\" class=\\\"mb-0 pl-16 pt-24\\\">{{feeTypeName}}</h1>\\n      <div class=\\\"p-20\\\" fxLayout=\\\"row wrap\\\" *ngIf=\\\"isDisplay\\\">\\n        <fuse-widget class=\\\"widget\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\"\\n          *ngFor=\\\"let feeTypeTranche of feeTypeTranches;\\\">\\n          <div class=\\\"fuse-widget-front mat-elevation-z\\\">\\n            <div class=\\\"p-20 border-bottom\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n              <div class=\\\"h2\\\">{{feeTypeTranche.feeTypeTrancheName}} </div>\\n              <button type=\\\"button\\\" (click)=delete(feeTypeTranche.schoolFeeId) mat-icon-button>\\n                <mat-icon class=\\\"red-fg\\\">delete</mat-icon>\\n              </button>\\n            </div>\\n            <div class=\\\"h-300 scroll-y-auto\\\">\\n              <div class=\\\"px-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\"\\n                *ngFor=\\\"let schoolFeeAssignment of feeTypeTranche.schoolFeeAssignments;\\\">\\n                <div class=\\\"h3 break-word pr-12\\\">{{schoolFeeAssignment.shortName}}</div>\\n                <mat-form-field fxLayout=\\\"column\\\" fxFlex=\\\"0 1 auto\\\">\\n                  <input matInput value={{schoolFeeAssignment.feeAmount}} [disabled]=\\\"true\\\">\\n                </mat-form-field>\\n              </div>\\n            </div>\\n            <div class=\\\"py-16 px-20 font-weight-600 font-size-18\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n              <div>Total Amount</div>\\n              <div fxLayout=\\\"column\\\" fxFlex=\\\"0 1 auto\\\" class=\\\"border-top text-right\\\">{{feeTypeTranche.feeAmount}}</div>\\n            </div>\\n          </div>\\n        </fuse-widget>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"pb-16 m-16\\\">\\n        <button *ngIf=\\\"isCreate || isEdit\\\" class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\"\\n          (click)=\\\"closePanel()\\\">{{'Cancel' | translate}}</button>\\n        <button [disabled]=\\\"disbleSubmitBtn\\\" *ngIf=\\\"isCreate\\\" mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\"\\n          class=\\\"text-uppercase mr-12\\\" mat-button\\n          (click)=\\\"onSubmitManageFeeTranches(manageFeeTranchesForm)\\\">{{'Create' | translate}}</button>\\n        <button [disabled]=\\\"disbleSubmitBtn\\\" *ngIf=\\\"isEdit\\\" mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\"\\n          class=\\\"text-uppercase mr-12\\\" mat-button\\n          (click)=\\\"onUpdateManageFees(manageFeeTranchesForm)\\\">{{'Update' | translate}}</button>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","module.exports = \".feetype-Error {\\n  position: relative; }\\n  .feetype-Error .mat-error {\\n    position: absolute;\\n    right: 0px;\\n    top: 48px;\\n    font-size: 13px; }\\n  .scroll-y-auto {\\n  overflow-y: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9maW5hbmNlL21hbmFnZS1mZWUtdHJhbmNoZXMvbWFuYWdlLWZlZS10cmFuY2hlcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFrQixFQUFBO0VBRHRCO0lBR1Esa0JBQWtCO0lBQ2xCLFVBQVU7SUFDVixTQUFTO0lBQ1QsZUFBZSxFQUFBO0VBR3ZCO0VBQWUsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2NvbmZpZ3VyYXRpb24vZmluYW5jZS9tYW5hZ2UtZmVlLXRyYW5jaGVzL21hbmFnZS1mZWUtdHJhbmNoZXMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZmVldHlwZS1FcnJvcntcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgLm1hdC1lcnJvcntcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICByaWdodDogMHB4O1xuICAgICAgICB0b3A6IDQ4cHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICB9XG59XG4uc2Nyb2xsLXktYXV0b3tvdmVyZmxvdy15OiBhdXRvfSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { FormGroup, FormControl, Validators, FormBuilder, FormArray } from '@angular/forms';\nimport { ClassSectionService } from 'app/service/academic-service/api/class-section.service';\nimport { AppSettings, Pattern } from 'app/app.constants';\nimport { ManageFeeTypeTranchesService } from 'app/service/configuration/finance/api/manage-fee-type-tranches.service';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\nimport { FeeTypeTranchesDataView } from '../models/fee-type-tranches-data-view';\nimport * as HttpStatus from 'http-status-codes';\nimport { ManageFeeConfigurationService } from 'app/service/configuration/finance/api/manage-fee-configuration.service';\nimport { SchoolFeeTranchView } from '../models/school-fee-tranch-view';\n\n@Component({\n  selector: 'app-manage-fee-tranches',\n  templateUrl: './manage-fee-tranches.component.html',\n  styleUrls: ['./manage-fee-tranches.component.scss']\n})\nexport class ManageFeeTranchesComponent extends CommonComponent implements OnInit {\n  manageFeeTranchesForm: FormGroup;\n  schoolBoards: any[] = [];\n  schoolBoardId: number;\n  classes: any[] = [];\n  errorMessage: any = AppSettings.SELECT_SCHOOLBOARD_OR_CLASSID_AND_FEETYPE;\n  isErrorMessage = true;\n  feeTypes: any[] = [];\n  classId: any;\n  feeTypeId: number;\n  feeTypeTranches: any;\n  feeTypeName: any;\n  isDisplay: boolean;\n  isUpdateButton: boolean;\n  isAddButton: boolean;\n  isSchoolBoard: boolean;\n  schoolFeeTranches: any[] = [];\n  feeTranchForm: FormGroup;\n  formArrayList: FormArray;\n  isCreate: boolean;\n  isValidate: boolean;\n  disbleSubmitBtn: boolean;\n  feeTypeTranchesDataView: FeeTypeTranchesDataView;\n  schoolFeeTranchView: SchoolFeeTranchView;\n  isEdit: boolean;\n  isDisabled: boolean;\n  invoiceError: string;\n  isInvoiceError: boolean;\n\n  constructor(\n    private _fb: FormBuilder,\n    public commonService: CommonService,\n    public classSectionService: ClassSectionService,\n    public manageFeeTypeTranchesService: ManageFeeTypeTranchesService,\n    public dialog: MatDialog,\n    public manageFeeConfigurationService: ManageFeeConfigurationService,\n    public snackBar: MatSnackBar\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.feeTypeTranchesDataView = {\n      feeTypeId: 0,\n      classId: 0,\n      schoolBoardId: 0\n    };\n    this.manageFeeTranchesForm = new FormGroup({\n      schoolBoardId: new FormControl('', [Validators.required]),\n      classId: new FormControl({ value: '', disabled: true }),\n      feeTypeId: new FormControl('', [Validators.required]),\n      feeTypeTranches: this._fb.array([]),\n    });\n    this.fetchSchoolBoards();\n    this.fetchFeeTypes();\n  }\n  fetchSchoolBoards(): void {\n    this.schoolBoards = [];\n    this.isSchoolBoard = true;\n    this.commonService.schoolAcademicBoards()\n      .subscribe(res => {\n        this.schoolBoardDetails(res);\n      });\n  }\n  schoolBoardDetails(data: any): void {\n    if (data.listViews) {\n      data.listViews.forEach(element => {\n        this.schoolBoards.push({\n          label: element.name,\n          value: element.id\n        });\n      });\n    }\n    if (!this.schoolBoards.length) {\n      this.isSchoolBoard = false;\n      this.fetchClasses(null);\n      this.manageFeeTranchesForm.get('schoolBoardId').clearValidators();\n      this.manageFeeTranchesForm.controls['schoolBoardId'].updateValueAndValidity();\n    }\n    else {\n      this.manageFeeTranchesForm.controls['feeTypeId'].disable();\n      this.setDefaultBoard();\n    }\n  }\n  fetchClasses(data: any): void {\n    this.errorMessage = AppSettings.SELECT_SCHOOLBOARD_OR_CLASSID_AND_FEETYPE;\n    this.manageFeeTranchesForm.controls['feeTypeId'].enable();\n    this.manageFeeTranchesForm.controls['classId'].disable();\n    this.classes = [];\n    this.schoolBoardId = data;\n    this.classSectionService.schoolAcademicClasses(data)\n      .subscribe(res => {\n        if (res.listViews) {\n          res.listViews.forEach(element => {\n            this.classes.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n        }\n      }, error => {\n        this.errorResponse(error);\n      });\n    this.manageFeeTranchesForm.get('classId').setValue('');\n    this.manageFeeTranchesForm.get('feeTypeId').setValue('');\n    this.classId = '';\n    this.feeTypeTranches = [];\n    this.isDisplay = false;\n    this.isErrorMessage = true;\n    this.isUpdateButton = false;\n    this.isAddButton = false;\n  }\n  fetchFeeTypes(): void {\n    this.manageFeeTypeTranchesService.feeTypeTranches().subscribe(res => {\n      if (res.commonViewModels) {\n        res.commonViewModels.forEach(element => {\n          this.feeTypes.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n      }\n    });\n  }\n  classSelect(classId: any): void {\n    this.classId = classId;\n    this.manageFeeTypeTranchesService.getSchoolFeeTranches(this.schoolBoardId, this.classId, this.feeTypeId).subscribe(res => {\n      this.getFeeTranchDetails(res);\n    });\n  }\n  getAllFeeTranches(feeTypeId: number): void {\n    this.isInvoiceError = false;\n    this.feeTypeId = feeTypeId;\n    this.manageFeeTranchesForm.controls['classId'].enable();\n    this.manageFeeTypeTranchesService.getSchoolFeeTranches(this.schoolBoardId, this.classId, this.feeTypeId).subscribe(res => {\n      this.getFeeTranchDetails(res);\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  getFeeTranchDetails(data: any): void {\n    this.invoiceError = '';\n    this.isDisabled = false;\n    this.feeTypeTranches = [];\n    this.feeTypeName = '';\n    if (data.schoolFeeTranches) {\n      data.schoolFeeTranches.feeTypeTranches.forEach(x => {\n        x.feeAmount = this.getFormattedCurrency(x.feeAmount);\n        x.schoolFeeAssignments.forEach(element => {\n          element.feeAmount = this.getFormattedCurrency(element.feeAmount);\n        });\n      });\n      this.feeTypeName = data.schoolFeeTranches.feeTypeName;\n      this.feeTypeTranches = data.schoolFeeTranches.feeTypeTranches;\n    }\n    if (!this.feeTypeTranches.length) {\n      this.errorMessage = AppSettings.MANAGE_FEE_TRANCH_ADD_ERROR;\n      this.isAddButton = true;\n      this.isErrorMessage = true;\n      this.isUpdateButton = false;\n      this.isDisplay = false;\n    }\n    else {\n      this.isDisplay = true;\n      this.isCreate = false;\n      this.isErrorMessage = false;\n      this.isUpdateButton = true;\n      this.isAddButton = false;\n    }\n  }\n  addClick(): void {\n    this.isValidate = false;\n    this.isErrorMessage = false;\n    this.isCreate = true;\n    this.isEdit = false;\n    this.disableControls();\n    this.isDisabled = true;\n    this.manageFeeTypeTranchesService.getTranchesTermsByFeeType(this.feeTypeId).subscribe(res => {\n      this.getAllTranchDetails(res);\n    });\n  }\n  editClick(): void {\n    this.feeTypeName = '';\n    this.isValidate = false;\n    this.isEdit = true;\n    this.isCreate = false;\n    this.disableControls();\n    this.isDisabled = true;\n    this.manageFeeTypeTranchesService.getAllSchoolFeeTrancheTerms(this.schoolBoardId, this.classId, this.feeTypeId).subscribe(res => {\n      this.getAllTranchDetails(res);\n    });\n  }\n  getAllTranchDetails(data: any): void {\n    this.isInvoiceError = false;\n    this.invoiceError = '';\n    this.removeItems();\n    this.isErrorMessage = false;\n    this.schoolFeeTranches = [];\n    this.schoolFeeTranches = data.schoolFeeTranches.feeTypeTranches;\n    if (this.schoolFeeTranches) {\n      this.feeTypeName = data.schoolFeeTranches.feeTypeName;\n    }\n    this.schoolFeeTranches.forEach((element, i) => {\n      if (element.isInvoiceGeneratedForFeeType) {\n        this.isInvoiceError = true;\n        this.invoiceError = AppSettings.INVOICE_ERROR;\n      }\n      const control = <FormArray>this.manageFeeTranchesForm.get('feeTypeTranches');\n      if (element.schoolFeeAssignments.length) {\n        control.push(this.setFeeTranchList(element));\n      } else {\n        control.push(this.setFeeTranchList(element, false));\n      }\n    });\n    this.isDisplay = false;\n  }\n  setFeeTranchList(data, setDisable = true): FormGroup {\n    this.feeTranchForm = this._fb.group({\n      schoolFeeId: new FormControl(data.schoolFeeId),\n      feeTypeTranchesId: new FormControl(data.feeTypeTranchesId),\n      feeTypeTrancheName: new FormControl(data.feeTypeTrancheName),\n      feeAmount: new FormControl({ value: data.feeAmount, disabled: setDisable || data.isInvoiceGeneratedForFeeType },\n        [Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS), Validators.min(0), Validators.max(99999999.99)]),\n      schoolFeeAssignments: this.setSchoolFeeAssignments(data),\n    });\n    return this.feeTranchForm;\n  }\n  setSchoolFeeAssignments(parent): FormArray {\n    this.formArrayList = new FormArray([]);\n    parent.schoolFeeAssignments.forEach(child => {\n      if (child.isInvoiceGeneratedForFeeTerm) {\n        this.invoiceError = AppSettings.INVOICE_ERROR;\n        this.isInvoiceError = true;\n      }\n      this.formArrayList.push(this._fb.group({\n        id: new FormControl(child.id),\n        shortName: new FormControl(child.shortName),\n        displayName: new FormControl(child.displayName),\n        feeTypeTranchesId: new FormControl(child.feeTypeTranchesId),\n        feeTypesForFeeTermId: new FormControl(child.feeTypesForFeeTermId),\n        feeAmount: new FormControl({ value: child.feeAmount, disabled: child.isInvoiceGeneratedForFeeTerm },\n          [Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS), Validators.min(0), Validators.max(9999999.99)]),\n      }));\n    });\n    return this.formArrayList;\n  }\n  getTotalAmount(control): number | string {\n    let sum = null;\n    if (control.getRawValue().schoolFeeAssignments.length && control.valid) {\n      control.getRawValue().schoolFeeAssignments.forEach(element => {\n        if (element.feeAmount !== null && element.feeAmount !== '') {\n          sum = parseFloat((sum + Number(element.feeAmount)).toFixed(2));\n        }\n      });\n    }\n    else {\n      sum = control.getRawValue().feeAmount;\n    }\n    const sumValue = sum;\n    control.controls['feeAmount'].setValue(sumValue);\n    return sumValue;\n  }\n  manageFeTrancheData(manageFeesForm): any {\n    manageFeesForm.feeTypeTranches.forEach(element => {\n      element.schoolFeeAssignments = element.schoolFeeAssignments.filter(child =>\n        child.feeAmount >= 0 && child.feeAmount != null && child.feeAmount !== ''\n      );\n    });\n    manageFeesForm.feeTypeTranches = manageFeesForm.feeTypeTranches.filter(element =>\n      element.feeAmount >= 0 && element.feeAmount !== null && element.feeAmount !== ''\n    );\n    return manageFeesForm;\n  }\n  onSubmitManageFeeTranches(ManageFeeTrancheForm: any): void {\n    const data = ManageFeeTrancheForm.getRawValue();\n    this.isValidate = true;\n    this.isValidate = true;\n    if (ManageFeeTrancheForm.status === AppSettings.VALID) {\n      this.disbleSubmitBtn = true;\n      this.feeTypeTranchesDataView = this.manageFeTrancheData(data);\n      if (this.feeTypeTranchesDataView.feeTypeTranches.length) {\n        this.feeTypeTranchesDataView.feeTypeId = this.feeTypeId;\n        this.feeTypeTranchesDataView.classId = this.classId;\n        this.feeTypeTranchesDataView.schoolBoardId = this.schoolBoardId;\n        this.manageFeeTypeTranchesService.schoolFeeTrancheConfiguration(this.feeTypeTranchesDataView).subscribe(res => this.addUpdateResponce(res), error => {\n          this.errorResponse(error);\n        });\n        this.disbleSubmitBtn = false;\n      }\n      else {\n        this.disbleSubmitBtn = false;\n        this.openSnackBar(AppSettings.FEE_AMOUNT_ERROR, true);\n      }\n    }\n  }\n  onUpdateManageFees(manageFeeTranchesForm): void {\n    this.isValidate = true;\n    const data = manageFeeTranchesForm.getRawValue();\n    if (manageFeeTranchesForm.status === AppSettings.VALID) {\n      this.disbleSubmitBtn = true;\n      this.schoolFeeTranchView = this.manageFeTrancheData(data);\n      this.schoolFeeTranchView.feeTypeId = this.feeTypeId;\n      this.schoolFeeTranchView.classId = this.classId ? this.classId : null;\n      this.schoolFeeTranchView.schoolBoardId = this.schoolBoardId;\n      if (this.schoolFeeTranchView.feeTypeTranches.length === 0) {\n        this.manageFeeTypeTranchesService.deleteAllSchoolFeeTranches(this.schoolFeeTranchView.schoolBoardId, this.schoolFeeTranchView.classId, this.schoolFeeTranchView.feeTypeId)\n          .subscribe(res => this.addUpdateResponce(res), error => {\n            this.errorResponse(error);\n          });\n      }\n      else {\n        this.manageFeeTypeTranchesService.updateSchoolFeeTranchesConfiguration(this.schoolFeeTranchView).subscribe(res => this.addUpdateResponce(res), error => {\n          this.errorResponse(error);\n        });\n      }\n      this.disbleSubmitBtn = false;\n    }\n  }\n  addUpdateResponce(manageView: any): void {\n    this.openSnackBar(manageView.messages.ResultMessage);\n    if (manageView.statusCode === HttpStatus.OK) {\n      this.disbleSubmitBtn = false;\n      this.isAddButton = false;\n      this.getAllFeeTranches(this.feeTypeId);\n      this.isCreate = false;\n      this.isEdit = false;\n      this.enableControls();\n      this.isDisabled = false;\n    }\n  }\n  delete(id: any): void {\n    const dialogRef = this.commonService.dialog(AppSettings.WARNING_ON_SINGLE_DELETE, true, AppSettings.NO, AppSettings.YES);\n    dialogRef.afterClosed().subscribe(action => {\n      if (action === AppSettings.YES) {\n        this.manageFeeConfigurationService.deleteSchoolFee(id).subscribe(res => {\n          if (res.statusCode = HttpStatus.OK) {\n            this.openSnackBar(res.messages.ResultMessage);\n          }\n          this.getAllFeeTranches(this.feeTypeId);\n        }, error => {\n          this.errorResponse(error);\n        });\n      }\n    });\n  }\n  closePanel(): void {\n    this.getAllFeeTranches(this.feeTypeId);\n    this.isCreate = false;\n    this.isEdit = false;\n    this.enableControls();\n    this.isDisabled = false;\n  }\n  disableControls(): void {\n    this.manageFeeTranchesForm.controls['classId'].disable({ onlySelf: true });\n    this.manageFeeTranchesForm.controls['schoolBoardId'].disable({ onlySelf: true });\n    this.manageFeeTranchesForm.controls['feeTypeId'].disable({ onlySelf: true });\n  }\n  enableControls(): void {\n    this.manageFeeTranchesForm.controls['classId'].enable({ onlySelf: true });\n    this.manageFeeTranchesForm.controls['schoolBoardId'].enable({ onlySelf: true });\n    this.manageFeeTranchesForm.controls['feeTypeId'].enable({ onlySelf: true });\n  }\n  removeItems(): void {\n    const control = <FormArray>this.manageFeeTranchesForm.controls['feeTypeTranches'];\n    for (let i = control.length - 1; i >= 0; i--) {\n      control.removeAt(i);\n    }\n  }\n\n  setDefaultBoard(): void {\n    this.setFormControl('manageFeeTranchesForm', 'schoolBoardId', this.schoolBoards[0].value);\n    this.fetchClasses(this.schoolBoards[0].value);\n  }\n}\n","module.exports = \"<div class=\\\"px-sm-40 py-20\\\">\\n  <div class=\\\"p-12 font-size-18 text-uppercase\\\" id=\\\"manage-fee-header\\\" translate>Manage Fee</div>\\n  <div class=\\\"mat-elevation-z8 radius-20 simple-table-container\\\">\\n    <form [formGroup]=\\\"manageFeesForm\\\" #userManageFeesForm=\\\"ngForm\\\" fxLayout=\\\"column\\\">\\n      <div fxFlexFill fxLayoutAlign=\\\"start center\\\" fxLayout.gt-xs=\\\"row\\\" fxLayout=\\\"column\\\" class=\\\"px-16 pt-20\\\">\\n        <mat-form-field *ngIf=\\\"isSchoolBoard\\\" fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"20\\\"\\n          fxFlex=\\\"100\\\">\\n          <mat-label translate #schoolBoard>School Board</mat-label>\\n          <mat-select required formControlName=\\\"schoolBoardId\\\" (selectionChange)=\\\"fetchClasses($event.value)\\\">\\n            <mat-option *ngFor=\\\"let schoolBoard of schoolBoards\\\" [value]=\\\"schoolBoard.value\\\">\\n              {{schoolBoard.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"schoolBoard.innerText\\\"\\n              [validationControl]=\\\"manageFeesForm.controls.schoolBoardId\\\" [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"25\\\" fxFlex=\\\"100\\\"\\n          class=\\\"px-sm-20\\\">\\n          <mat-label translate #class>Class</mat-label>\\n          <mat-select required formControlName=\\\"classId\\\" (selectionChange)=\\\"getAll($event.value)\\\">\\n            <mat-option *ngFor=\\\"let class of classes\\\" [value]=\\\"class.value\\\">\\n              {{ class.label }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"class.innerText\\\" [validationControl]=\\\"manageFeesForm.controls.classId\\\"\\n              [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <div fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"end\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mb-24\\\">\\n            <button *ngIf=\\\"isAddButton\\\" type=\\\"button\\\" [disabled]=\\\"isDisabled\\\" mat-raised-button\\n              class=\\\"text-uppercase mx-8\\\" color=\\\"accent\\\" (click)=\\\"addClick()\\\"><span translate>Add</span></button>\\n            <button *ngIf=\\\"isUpdateButton\\\" type=\\\"button\\\" [disabled]=\\\"isDisabled\\\" (click)=\\\"cloneClick()\\\"\\n              mat-raised-button class=\\\"text-uppercase mr-8\\\" color=\\\"primary\\\">\\n              <mat-icon class=\\\"mr-4 font-size-16 pt-4\\\">filter_none</mat-icon><span translate>Clone</span>\\n            </button>\\n            <button *ngIf=\\\"isUpdateButton\\\" type=\\\"button\\\" [disabled]=\\\"isDisabled\\\" mat-raised-button\\n              class=\\\"text-uppercase mr-8\\\" color=\\\"accent\\\" (click)=\\\"editClick()\\\"><span translate>Edit</span></button>\\n            <button (click)=\\\"getHelpText('Manage Fees')\\\" mat-button type=\\\"button\\\">\\n              <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n      <mat-divider></mat-divider>\\n      <div *ngIf=\\\"isErrorMessage\\\" class=\\\"p-sm-40 text-center\\\">{{errorMessage|translate}}</div>\\n\\n      <!--ADD-->\\n      <app-custom-dropdown *ngIf=\\\"isFeeType\\\" class=\\\"mx-24 mt-24 w-50-p\\\" formControlName=\\\"feeTypeId\\\" appearance=\\\"outline\\\"\\n        fxLayout=\\\"column\\\" [dropDownConf]=\\\"feeTypeMulticheck\\\" (selectedData)=\\\"onSelectFeeType($event)\\\"\\n        [errorCheck]=\\\"manageFeesForm.controls.feeTypeId\\\" ngDefaultControl>\\n      </app-custom-dropdown>\\n      <div *ngIf=\\\"isInvoiceError\\\" class=\\\"pl-32 pt-12 message-box error\\\" translate>{{invoiceError}}</div>\\n      <div class=\\\"p-20\\\" fxLayout=\\\"row wrap\\\" *ngIf=\\\"!isDisplay\\\">\\n        <fuse-widget formArrayName=\\\"schoolFees\\\" class=\\\"widget manage-fee\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\"\\n          fxFlex=\\\"100\\\" *ngFor=\\\"let control of manageFeesForm.controls['schoolFees']?.controls;let i=index;\\\">\\n          <div [formGroupName]=\\\"i\\\" class=\\\"fuse-widget-front mat-elevation-z\\\">\\n            <div>\\n              <div class=\\\"p-20 border-bottom\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n                <div class=\\\"h2\\\">{{control?.controls['feeTypeName']?.value}}</div>\\n              </div>\\n            </div>\\n            <!--Content-->\\n            <div class=\\\"h-300 scroll-y-auto\\\">\\n              <div class=\\\"px-20\\\" fxLayout=\\\"row\\\" formArrayName=\\\"schoolFeeAssignments\\\"\\n                *ngFor=\\\"let feeTermControl of control?.controls['schoolFeeAssignments']?.controls; let j=index\\\">\\n                <div [formGroupName]=\\\"j\\\" fxLayoutAlign=\\\"space-between center\\\" class=\\\"w-100-p feetype-Error\\\">\\n                  <div class=\\\"h3 break-word pr-12\\\">{{feeTermControl?.controls['feeTermName']?.value}}</div>\\n                  <mat-form-field fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"30\\\">\\n                    <input matInput formControlName=\\\"feeAmount\\\" (keypress)=\\\"numberOnly($event)\\\" [value]=\\\"feeTermControl?.controls['feeAmount']?.value\\\">\\n                  </mat-form-field>\\n                  <mat-error *ngIf=\\\"!feeTermControl?.controls?.feeAmount.valid && feeTermControl?.controls?.feeAmount.touched\\\">\\n                    <app-validation [labelName]=\\\"'Amount'|translate\\\"\\n                      [validationControl]=\\\"feeTermControl?.controls?.feeAmount\\\" [doValidate]=\\\"true\\\">\\n                    </app-validation>\\n                  </mat-error>\\n                </div>\\n              </div>\\n            </div>\\n            <!--Footer-->\\n            <div class=\\\"py-16 px-20 font-weight-600 font-size-18 feetype-Error\\\" fxLayout=\\\"row\\\"\\n              fxLayoutAlign=\\\"space-between center\\\">\\n              <div>Total Amount</div>\\n              <mat-form-field fxLayout=\\\"column\\\" fxFlex=\\\"0 1 auto\\\" class=\\\"mw-120\\\">\\n                <input matInput formControlName=\\\"feeAmount\\\" (keypress)=\\\"numberOnly($event)\\\" [disable]=\\\"'true'\\\" [value]=\\\"getTotalAmount(control)\\\">\\n              </mat-form-field>\\n              <mat-error class=\\\"mt-12\\\">\\n                <app-validation [labelName]=\\\"'Total Amount'|translate\\\"\\n                  [validationControl]=\\\"control?.controls?.feeAmount\\\" [doValidate]=\\\"isValidate\\\">\\n                </app-validation>\\n              </mat-error>\\n            </div>\\n          </div>\\n        </fuse-widget>\\n      </div>\\n      <!--ADD-->  \\n\\n      <!--display-->\\n      <div class=\\\"p-20 g\\\" fxLayout=\\\"row wrap\\\"  *ngIf=\\\"isDisplay\\\">\\n        <fuse-widget class=\\\"widget manage-fee\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\"\\n          *ngFor=\\\"let feeType of schoolFees;\\\">\\n          <div id=\\\"feeType.schoolFeeId\\\" class=\\\"fuse-widget-front mat-elevation-z\\\">\\n            <div class=\\\"p-20 border-bottom\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n              <div class=\\\"h2\\\">{{feeType.name}} </div>\\n              <button type=\\\"button\\\" (click)=delete(feeType.schoolFeeId) mat-icon-button>\\n                <mat-icon class=\\\"red-fg\\\">delete</mat-icon>\\n              </button>\\n            </div>\\n            <!--Content-->\\n            <div class=\\\"h-300 scroll-y-auto\\\">\\n              <div class=\\\"px-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\"\\n                *ngFor=\\\"let feeTerm of feeType.schoolFeeAssignments;\\\">\\n                <div class=\\\"h3 break-word pr-12\\\">{{feeTerm.shortName}}</div>\\n                <mat-form-field fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"30\\\">\\n                  <input matInput value={{feeTerm.feeAmount}} [disabled]=\\\"true\\\">\\n                </mat-form-field>\\n              </div>\\n            </div>\\n            <!--Footer-->\\n            <div class=\\\"py-16 px-20 font-weight-600 font-size-18\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n              <div>Total Amount</div>\\n              <div fxLayout=\\\"column\\\" fxFlex=\\\"0 1 auto\\\" class=\\\"border-top mw-120\\\">{{feeType.feeAmount}}</div>\\n            </div>\\n          </div>\\n        </fuse-widget>\\n      </div>\\n      <!--display-->\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"pb-16 m-16\\\">\\n        <button *ngIf=\\\"isCreate || isEdit\\\" class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\"\\n          (click)=\\\"closePanel()\\\">{{'Cancel' | translate}}</button>\\n        <button [disabled]=\\\"disbleSubmitBtn\\\" *ngIf=\\\"isCreate\\\" mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\"\\n          class=\\\"text-uppercase mr-12\\\" mat-button (click)=\\\"onSubmitManageFees(manageFeesForm)\\\">{{'Create' | translate}}</button>\\n        <button [disabled]=\\\"disbleSubmitBtn\\\" *ngIf=\\\"isEdit\\\" mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\"\\n          class=\\\"text-uppercase mr-12\\\" mat-button (click)=\\\"onUpdateManageFees(manageFeesForm)\\\">{{'Update' | translate}}</button>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n<!--clone-->\\n<ng-template #myTemplate>\\n  <form [formGroup]=\\\"cloneManageFeesForm\\\" (ngSubmit)=\\\"onSubmitCloneManageFees(cloneManageFeesForm)\\\" fxLayout=\\\"column\\\">\\n    <mat-form-field *ngIf=\\\"isSchoolBoard\\\" appearance=\\\"outline\\\" fxLayout=\\\"column\\\">\\n      <mat-label translate #schoolBoard>School Board</mat-label>\\n      <mat-select required placeholder=\\\"School Board\\\" formControlName=\\\"schoolBoardId\\\"\\n        (selectionChange)=\\\"schoolBoardChange($event.value)\\\">\\n        <mat-option *ngFor=\\\"let schoolBoard of schoolBoards\\\" [value]=\\\"schoolBoard.value\\\">\\n          {{schoolBoard.label}}\\n        </mat-option>\\n      </mat-select>\\n      <mat-error>\\n        <app-validation [labelName]=\\\"schoolBoard.innerText\\\"\\n          [validationControl]=\\\"cloneManageFeesForm.controls.schoolBoardId\\\" [doValidate]=\\\"true\\\">\\n        </app-validation>\\n      </mat-error>\\n    </mat-form-field>\\n    <app-custom-dropdown *ngIf=\\\"cloneClasses.length\\\" formControlName=\\\"classIds\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\"\\n      appearance=\\\"outline\\\" [dropDownConf]=\\\"classMultiCheck\\\" [errorCheck]=\\\"cloneManageFeesForm.controls.classIds\\\"\\n      ngDefaultControl>\\n    </app-custom-dropdown>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"pt-20\\\">\\n      <div fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n          <button type=\\\"button\\\" mat-raised-button class=\\\"mr-16\\\" type=\\\"button\\\" (click)=\\\"closeCloneDialog()\\\">{{'Cancel' | translate}}</button>\\n          <button *ngIf=\\\"cloneClasses.length\\\" type=\\\"submit\\\" mat-raised-button color=\\\"accent\\\" translate>{{'Submit' | translate}}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n</ng-template>\\n<!--clone-->\"","module.exports = \".feetype-Error {\\n  position: relative; }\\n  .feetype-Error .mat-error {\\n    position: absolute;\\n    right: 0px;\\n    top: 48px;\\n    font-size: 13px; }\\n  .scroll-y-auto {\\n  overflow-y: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9maW5hbmNlL21hbmFnZS1mZWVzL21hbmFnZS1mZWVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1BO0VBQ0ksa0JBQWtCLEVBQUE7RUFEdEI7SUFHUSxrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLFNBQVM7SUFDVCxlQUFlLEVBQUE7RUFHdkI7RUFBZSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvY29uZmlndXJhdGlvbi9maW5hbmNlL21hbmFnZS1mZWVzL21hbmFnZS1mZWVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4vLyAubWFuYWdlLWZlZXtcbi8vICAgICAubWF0LWZvcm0tZmllbGQsIC5tdy0xMjB7XG4vLyAgICAgICAgIG1heC13aWR0aDogMTIwcHggIWltcG9ydGFudDtcbi8vICAgICB9XG4vLyB9XG4uZmVldHlwZS1FcnJvcntcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgLm1hdC1lcnJvcntcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICByaWdodDogMHB4O1xuICAgICAgICB0b3A6IDQ4cHg7XG4gICAgICAgIGZvbnQtc2l6ZTogMTNweDtcbiAgICB9XG59XG4uc2Nyb2xsLXktYXV0b3tvdmVyZmxvdy15OiBhdXRvfVxuIl19 */\"","import { Component, OnInit, ViewChild, TemplateRef, ChangeDetectorRef, HostListener } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder, FormArray, FormGroupDirective } from '@angular/forms';\nimport { Pattern, AppSettings } from 'app/app.constants';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { fuseAnimations } from '@fuse/animations';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { ClassSectionService } from 'app/service/academic-service/api/class-section.service';\nimport { DropDownConfModel } from 'app/models/drop-down-conf-view';\nimport { ManageFeeConfigurationService } from 'app/service/configuration/finance/api/manage-fee-configuration.service';\nimport { ManageFeeConfigurationView } from '../models/manage-fee-configuration-view';\nimport * as HttpStatus from 'http-status-codes';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { CloneSchoolFeeView } from '../models/clone-school-fee-view';\nimport { CommonService } from 'app/service/common.service';\nimport { SchoolFeeViewModel } from '../models/school-fee-view-model';\n\n@Component({\n  selector: 'app-manage-fees',\n  templateUrl: './manage-fees.component.html',\n  styleUrls: ['./manage-fees.component.scss'],\n  animations: fuseAnimations\n})\nexport class ManageFeesComponent extends CommonComponent implements OnInit {\n  @ViewChild('myTemplate') customTemplate: TemplateRef<any>;\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\n  @ViewChild('userManageFeesForm') userManageFeesForm;\n  manageFeesForm: FormGroup;\n  cloneManageFeesForm: FormGroup;\n  feeTypeForm: FormGroup;\n  feeTypeObject: Array<any>;\n  manageFeeConfigurationView: ManageFeeConfigurationView;\n  cloneSchoolFeeView: CloneSchoolFeeView;\n  schoolFeeViewModel: SchoolFeeViewModel[];\n  coustomDialog: any;\n  schoolBoards: any[];\n  classes: any[];\n  feeTypeMulticheck: DropDownConfModel;\n  schoolFees: Array<any> = [];\n  feeTypes: any;\n  errorMessage: any = AppSettings.SELECT_SCHOOLBOARD_OR_CLASSID;\n  isErrorMessage = true;\n  isAddButton: boolean;\n  isUpdateButton: boolean;\n  isValidate = false;\n  feeTypeIds: Array<number> = [];\n  formArrayList: FormArray;\n  feeTypeList: Array<any>;\n  schoolBoardId: any;\n  classId: any;\n  isRequired = true;\n  classMultiCheck: DropDownConfModel;\n  isCloneValidate: boolean;\n  cloneClasses: Array<any> = [];\n  isDisplay = false;\n  primaryArray: Array<object> = [];\n  secondaryArray: Array<object> = [];\n  isCreate: boolean;\n  isEdit: boolean;\n  isDisabled: boolean;\n  disbleSubmitBtn = false;\n  isFeeType: boolean;\n  isSchoolBoard: boolean;\n  cloneClassesResponce: any;\n  loaded: boolean;\n  isInvoiceError: boolean;\n  invoiceError = AppSettings.INVOICE_ERROR;\n  selectedFeeTypes: Array<any> = [];\n\n  constructor(\n    private cd: ChangeDetectorRef,\n    private _fb: FormBuilder,\n    public dialog: MatDialog,\n    public classSectionService: ClassSectionService,\n    public manageFeeConfigurationService: ManageFeeConfigurationService,\n    public commonService: CommonService,\n    public snackBar: MatSnackBar\n  ) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.manageFeesForm = new FormGroup({\n      id: new FormControl(''),\n      schoolBoardId: new FormControl('', [Validators.required]),\n      classId: new FormControl({ value: '', disabled: true }, [Validators.required]),\n      feeTypeId: new FormControl('', [Validators.required]),\n      schoolFees: this._fb.array([]),\n    });\n    this.cloneManageFeesForm = new FormGroup({\n      schoolBoardId: new FormControl('', [Validators.required]),\n      classIds: new FormControl('', [Validators.required]),\n    });\n    this.fetchSchoolBoards();\n    this.cloneSchoolFeeView = {\n      sourceClassId: 0,\n      sourceSchoolBoardId: 0,\n      destinationClassIds: [],\n      destinationSchoolBoardId: 0\n    };\n  }\n\n  fetchSchoolBoards(): void {\n    this.schoolBoards = [];\n    this.isSchoolBoard = true;\n    this.commonService.schoolAcademicBoards()\n      .subscribe(res => {\n        this.schoolBoardDetails(res);\n      });\n  }\n  schoolBoardDetails(data: any): void {\n    if (data.listViews) {\n      data.listViews.forEach(element => {\n        this.schoolBoards.push({\n          label: element.name,\n          value: element.id\n        });\n      });\n      this.setDefaultBoard();\n    }\n    if (!this.schoolBoards.length) {\n      this.isSchoolBoard = false;\n      this.fetchClasses(null);\n      this.manageFeesForm.get('schoolBoardId').clearValidators();\n      this.manageFeesForm.controls['schoolBoardId'].updateValueAndValidity();\n      this.openSnackBar(AppSettings.NO_CLASSES_FOR_THE_BOARD, true);\n    }\n  }\n  fetchClasses(data: any): void {\n    this.classes = [];\n    this.schoolBoardId = data;\n    this.manageFeesForm.controls['classId'].enable();\n    this.classSectionService.schoolAcademicClasses(data)\n      .subscribe(res => {\n        if (res.listViews && res.listViews.length) {\n          res.listViews.forEach(element => {\n            this.classes.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n        } else {\n          this.openSnackBar(AppSettings.NO_CLASSES_FOR_THE_BOARD, true);\n        }\n      }, error => {\n        this.errorResponse(error);\n      });\n    this.manageFeesForm.get(['classId']).setValue('');\n    this.schoolFees = [];\n    this.isDisplay = false;\n    this.errorMessage = AppSettings.SELECT_SCHOOLBOARD_OR_CLASSID;\n    this.isErrorMessage = true;\n    this.isUpdateButton = false;\n    this.isAddButton = false;\n  }\n  fetchFeeTypes(schoolBoardId: any, classId: any): void {\n    this.feeTypes = [];\n    this.manageFeeConfigurationService.getFeeTypesByClass(schoolBoardId, classId)\n      .subscribe(res => {\n        if (res.commonViewModels) {\n          this.feeTypes = [];\n          res.commonViewModels.forEach(element => {\n            this.feeTypes.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n        }\n      });\n  }\n  getAll(classId: any): void {\n    this.isInvoiceError = false;\n    this.classId = classId;\n    this.fetchFeeTypes(this.schoolBoardId, this.classId);\n    this.manageFeeConfigurationService.getFeeTypeFeeTerms(this.schoolBoardId, classId).subscribe(res => {\n      this.getAllDetails(res);\n    });\n  }\n  getAllDetails(data: any): void {\n    this.removeItems();\n    this.schoolFees = [];\n    this.schoolFees = data.schoolFees;\n    this.schoolFees.forEach(x => {\n      x.feeAmount = this.getFormattedCurrency(x.feeAmount);\n      x.schoolFeeAssignments.forEach(element => {\n        element.feeAmount = this.getFormattedCurrency(element.feeAmount);\n      });\n    });\n    if (!this.schoolFees.length) {\n      this.errorMessage = AppSettings.MANAGE_FEE_CLONE_OR_ADD_ERROR;\n      this.isAddButton = true;\n      this.isErrorMessage = true;\n      this.isUpdateButton = false;\n      this.isFeeType = false;\n      this.isCreate = false;\n      this.isEdit = false;\n    }\n    else {\n      this.isFeeType = false;\n      this.isDisplay = true;\n      this.isCreate = false;\n      this.isEdit = false;\n      this.isErrorMessage = false;\n      this.isUpdateButton = true;\n      this.isAddButton = false;\n    }\n  }\n  addClick(): void {\n    this.isValidate = false;\n    this.manageFeesForm.get(['feeTypeId']).clearValidators();\n    this.isFeeType = true;\n    this.userManageFeesForm.submitted = false;\n    this.manageFeesForm.get('feeTypeId').setValidators([Validators.required]);\n    this.manageFeesForm.controls['feeTypeId'].updateValueAndValidity();\n    this.isErrorMessage = false;\n    this.isRequired = true;\n    this.isCreate = true;\n    this.isEdit = false;\n    this.disableControls();\n    this.isDisabled = true;\n    this.getFeeTypeData(true);\n  }\n  disableControls(): void {\n    this.manageFeesForm.controls['classId'].disable();\n    this.manageFeesForm.controls['schoolBoardId'].disable();\n  }\n  enableControls(): void {\n    this.manageFeesForm.controls['classId'].enable();\n    this.manageFeesForm.controls['schoolBoardId'].enable();\n  }\n  editClick(): void {\n    this.isValidate = false;\n    this.isFeeType = true;\n    this.removeItems();\n    this.isEdit = true;\n    this.isCreate = false;\n    this.disableControls();\n    this.isDisabled = true;\n    this.manageFeesForm.get('feeTypeId').clearValidators();\n    this.manageFeesForm.controls['feeTypeId'].updateValueAndValidity();\n    this.manageFeeConfigurationService.getAllFeetermsByClass(this.schoolBoardId, this.classId).subscribe(async res => { await this.getFeeTermDetails(res); }, error => {\n      this.errorResponse(error);\n    });\n    this.getFeeTypeData(false);\n  }\n  getFeeTypeData(isRequired): void {\n    this.feeTypeMulticheck = {\n      multiSelect: true, serchBoxPalceholder: 'Fee Types',\n      placeholder: 'Select Fee Types', data: this.feeTypes, noEntryFoundLabel: 'No Data Found', isRequired: isRequired\n    };\n  }\n  removeItems(): void {\n    const control = <FormArray>this.manageFeesForm.controls['schoolFees'];\n    for (let i = control.length - 1; i >= 0; i--) {\n      control.removeAt(i);\n    }\n  }\n  feeTypeFieldss(parent): FormArray {\n    this.formArrayList = new FormArray([]);\n    parent.schoolFeeAssignments.forEach(child => {\n      if (child.isInvoiceGeneratedForFeeTerm) {\n        this.invoiceError = AppSettings.INVOICE_ERROR;\n        this.isInvoiceError = true;\n      }\n      this.formArrayList.push(this._fb.group({\n        id: new FormControl(child.id),\n        feeTermName: new FormControl(child.shortName),\n        schoolFeeId: new FormControl(child.schoolFeeId),\n        feeTypesForFeeTermId: new FormControl(child.feeTypesForFeeTermId),\n        feeAmount: new FormControl({ value: child.feeAmount, disabled: child.isInvoiceGeneratedForFeeTerm },\n          [Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS), Validators.min(0), Validators.max(9999999.99)]),\n        isInvoiceGeneratedForFeeTerm: child.isInvoiceGeneratedForFeeTerm\n      }));\n    });\n    return this.formArrayList;\n  }\n  getTotalAmount(control): number | string {\n    let sum = null;\n    if (control.getRawValue().schoolFeeAssignments.length && control.valid) {\n      control.getRawValue().schoolFeeAssignments.forEach(element => {\n        if (element.feeAmount !== null && element.feeAmount !== '') {\n          sum = parseFloat((sum + Number(element.feeAmount)).toFixed(2));\n        }\n      });\n    }\n    else {\n      sum = control.getRawValue().feeAmount;\n    }\n    control.controls['feeAmount'].setValue(sum);\n    return sum;\n  }\n  setFeeTypeList(data, setDisable = true): FormGroup {\n    this.feeTypeForm = this._fb.group({\n      classId: new FormControl(this.classId),\n      schoolFeeId: new FormControl(data.schoolFeeId),\n      schoolBoardId: new FormControl(this.schoolBoardId),\n      feeTypeId: new FormControl(data.feeTypeId),\n      feeTypeName: new FormControl(data.name),\n      feeAmount: new FormControl({ value: data.feeAmount, disabled: setDisable || data.isInvoiceGeneratedForFeeType },\n        [Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS), Validators.min(0), Validators.max(99999999.99)]),\n      isInvoiceGeneratedForFeeType: data.isInvoiceGeneratedForFeeType,\n      schoolFeeAssignments: this.feeTypeFieldss(data),\n    });\n    return this.feeTypeForm;\n  }\n  getFeeTermDetails(data: any): void {\n    this.isErrorMessage = false;\n    this.selectedFeeTypes.push(data.schoolFees[0]);\n    this.feeTypesInvoiceCheck();\n    this.feeTypeList = [];\n    this.feeTypeList = data.schoolFees;\n    this.feeTypeList.forEach((element, i) => {\n      const control = <FormArray>this.manageFeesForm.get('schoolFees');\n      if (element.schoolFeeAssignments.length) {\n        control.push(this.setFeeTypeList(element));\n      } else {\n        control.push(this.setFeeTypeList(element, false));\n      }\n    });\n    this.isDisplay = false;\n  }\n  feeTypesInvoiceCheck(): void {\n    if (!this.selectedFeeTypes.length) {\n      this.isInvoiceError = false;\n    }\n    else {\n      this.isInvoiceError = this.selectedFeeTypes.some(x => x.isInvoiceGeneratedForFeeType === true);\n      if (!this.isInvoiceError) {\n        this.isInvoiceError = this.selectedFeeTypes.some(x => x.schoolFeeAssignments.some(y => y.isInvoiceGeneratedForFeeTerm === true));\n      }\n    }\n  }\n  schoolBoardChange(id: any): void {\n    this.unassignedClasses(id);\n  }\n  cloneClick(): void {\n    this.loaded = false;\n    this.cloneClasses = [];\n    if (this.schoolBoards.length) {\n      this.classMultiCheck = { multiSelect: true, placeholder: 'Class', data: [], noEntryFoundLabel: 'No Data Found', isRequired: true };\n      this.loaded = true;\n    }\n    else {\n      this.unassignedClasses(null);\n      this.cloneManageFeesForm.get('schoolBoardId').clearValidators();\n      this.cloneManageFeesForm.controls['schoolBoardId'].updateValueAndValidity();\n    }\n    this.popUpCheck();\n  }\n  popUpCheck(): void {\n    if ((this.cloneClasses.length || this.schoolBoards.length)) {\n      this.coustomDialog = this.dialog.open(\n        this.customTemplate, {\n        disableClose: true,\n        width: '350px',\n      }\n      );\n    }\n  }\n  unassignedClasses(id: any): void {\n    this.cloneClasses = [];\n    this.manageFeeConfigurationService.getUnAssignedClasses(id)\n      .subscribe(res => {\n        this.UnAssignedClasses(res);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n  UnAssignedClasses(data: any): void {\n    if (data.listViews) {\n      data.listViews.forEach(element => {\n        this.cloneClasses.push({\n          label: element.name,\n          value: element.id\n        });\n      });\n    }\n    if (this.cloneClasses.length) {\n      this.classMultiCheck = { multiSelect: true, placeholder: 'Class', data: this.cloneClasses, noEntryFoundLabel: 'No Data Found', isRequired: true };\n      if (!this.loaded) { this.popUpCheck(); }\n    }\n    else {\n      this.classMultiCheck = { multiSelect: true, placeholder: 'Class', data: this.cloneClasses, noEntryFoundLabel: 'No Data Found', isRequired: true };\n      this.openSnackBar(data.messages.ResultMessage);\n      this.cloneClassesResponce = data.messages.ResultMessage;\n    }\n  }\n  onSelectFeeType(ids: Array<any>): void {\n    if (ids.length > this.primaryArray.length) {\n      const newFeeTypeIds: Array<number> = [];\n      const idValues = [];\n      ids.forEach(element => idValues.push(element.value));\n      newFeeTypeIds.push(this.primaryArray.length ? idValues.filter(function (n): boolean { return !this.has(n); }, new Set(this.primaryArray)) : ids[0].value);\n      this.manageFeeConfigurationService.getFeeTermsByFeeType(newFeeTypeIds).subscribe(async res => { await this.getFeeTermDetails(res); }, error => {\n        this.errorResponse(error);\n      });\n    }\n    else {\n      const idValues = [];\n      ids.forEach(element => idValues.push(element.value));\n      const removedId = this.primaryArray.filter(function (n): boolean { return !this.has(n); }, new Set(idValues));\n      this.feeTypeIds.splice(this.feeTypeIds.indexOf(Number(removedId)));\n      if (this.manageFeesForm.value.schoolFees.length > 0) {\n        const index = this.manageFeesForm.value.schoolFees.findIndex(x => x.feeTypeId === (removedId[0]));\n        this.selectedFeeTypes = this.selectedFeeTypes.filter(x => x.feeTypeId !== removedId[0]);\n        this.feeTypesInvoiceCheck();\n        const control = <FormArray>this.manageFeesForm.controls['schoolFees'];\n        control.removeAt(index);\n      }\n    }\n    this.feeTypeIds = [];\n    this.primaryArray = [];\n    if (ids.length) {\n      ids.forEach((x: any) => {\n        this.feeTypeIds.push(x.value);\n        this.primaryArray.push(x.value);\n      }\n      );\n    }\n  }\n  onSubmitManageFees(manageFeesForm: any): void {\n    this.isValidate = true;\n    let data = manageFeesForm.getRawValue();\n    if (manageFeesForm.status === AppSettings.VALID) {\n      this.disbleSubmitBtn = true;\n      data = this.manageFeesData(data);\n      if (data.schoolFees.length) {\n        this.manageFeeConfigurationService.schoolFeeAssignment(data.schoolFees).subscribe(res => this.addUpdateResponce(res), error => {\n          this.errorResponse(error);\n        });\n        this.disbleSubmitBtn = false;\n      }\n      else {\n        this.disbleSubmitBtn = false;\n        this.openSnackBar(AppSettings.FEE_CONFIGURATION_DATA_ERROR, true);\n      }\n    }\n  }\n  manageFeesData(manageFeesForm): any {\n    manageFeesForm.schoolFees.forEach(element => {\n      element.schoolFeeAssignments = element.schoolFeeAssignments.filter(child =>\n        child.feeAmount >= 0 && child.feeAmount !== null && child.feeAmount !== ''\n      );\n    });\n    manageFeesForm.schoolFees = manageFeesForm.schoolFees.filter(element =>\n      element.feeAmount >= 0 && element.feeAmount !== null && element.feeAmount !== ''\n    );\n    return manageFeesForm;\n  }\n  onUpdateManageFees(manageFeesForm): void {\n    this.isValidate = true;\n    let data = manageFeesForm.getRawValue();\n    if (manageFeesForm.getRawValue().schoolFees) {\n      if (manageFeesForm.status === AppSettings.VALID) {\n        this.disbleSubmitBtn = true;\n        data = this.manageFeesData(data);\n        this.schoolFeeViewModel = data;\n        if (data.schoolFees.length === 0) {\n          this.manageFeeConfigurationService.deleteAllSchoolFees(data.schoolBoardId, data.classId)\n            .subscribe(res => this.addUpdateResponce(res), error => {\n              this.errorResponse(error);\n            });\n        }\n        else {\n          this.manageFeeConfigurationService.updateSchoolFees(data.schoolFees).subscribe(res => this.addUpdateResponce(res), error => {\n            this.errorResponse(error);\n          });\n        }\n        this.disbleSubmitBtn = false;\n      }\n    }\n  }\n  /**\n     * Responce for Add or update\n     * @param testTypeView \n     */\n  addUpdateResponce(manageView: any): void {\n    this.openSnackBar(manageView.messages.ResultMessage);\n    if (manageView.statusCode === HttpStatus.OK) {\n      this.primaryArray = [];\n      this.disbleSubmitBtn = false;\n      this.isAddButton = false;\n      this.feeTypeList = [];\n      this.getFeeTypeData(false);\n      this.getAll(this.classId);\n      this.isRequired = false;\n      this.manageFeesForm.get(['feeTypeId']).setValue('');\n      this.fetchFeeTypes(this.schoolBoardId, this.classId);\n      this.enableControls();\n      this.isDisabled = false;\n      this.scrollIntoViewById('manage-fee-header');\n    }\n  }\n  closeCloneDialog(data: any): void {\n    this.cloneManageFeesForm.reset();\n    this.dialog.closeAll();\n  }\n  onSubmitCloneManageFees(result: any): void {\n    this.isCloneValidate = true;\n    if (result.status === AppSettings.VALID) {\n      this.cloneSchoolFeeView.destinationClassIds = result.value.classIds.map(x => x.value);\n      this.cloneSchoolFeeView.sourceClassId = this.classId;\n      this.cloneSchoolFeeView.destinationSchoolBoardId = result.value.schoolBoardId;\n      this.cloneSchoolFeeView.sourceSchoolBoardId = this.schoolBoardId;\n      this.manageFeeConfigurationService.cloneFeeStructure(this.cloneSchoolFeeView).subscribe(res => this.cloneResponse(res), error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n  cloneResponse(result: any): void {\n    if (result.status = HttpStatus.OK) {\n      this.dialog.closeAll();\n      this.cloneManageFeesForm.reset();\n    }\n    this.openSnackBar(result.messages.ResultMessage);\n  }\n  delete(id: any): void {\n    const dialogRef = this.commonService.dialog(AppSettings.WARNING_ON_SINGLE_DELETE, true, AppSettings.NO, AppSettings.YES);\n    dialogRef.afterClosed().subscribe(action => {\n      if (action === AppSettings.YES) {\n        this.manageFeeConfigurationService.deleteSchoolFee(id).subscribe(res => {\n          if (res.statusCode = HttpStatus.OK) {\n            this.openSnackBar(res.messages.ResultMessage);\n          }\n          this.getAll(this.classId);\n        }, error => {\n          this.errorResponse(error);\n        });\n      }\n    });\n  }\n  closePanel(): void {\n    this.userManageFeesForm.submitted = false;\n    this.getAll(this.classId);\n    this.isCreate = false;\n    this.isEdit = false;\n    this.primaryArray = [];\n    this.enableControls();\n    this.isDisabled = false;\n    this.manageFeesForm.controls['feeTypeId'].reset();\n  }\n\n  setDefaultBoard(): void {\n    this.setFormControl('manageFeesForm', 'schoolBoardId', this.schoolBoards[0].value);\n    this.fetchClasses(this.schoolBoards[0].value);\n  }\n}\n","export * from './invoice-adjustment-type.service';\nimport { InvoiceAdjustmentTypeService } from './invoice-adjustment-type.service';\nexport * from './fee-account.service';\nimport { FeeAccountService } from './fee-account.service';\nimport { ManageFeeConfigurationService } from './manage-fee-configuration.service';\nexport const APIS = [InvoiceAdjustmentTypeService, FeeAccountService, ManageFeeConfigurationService];\n","/**\n * Fee\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\nimport { CustomHttpUrlEncodingCodec } from 'app/service/base/encoder';\n\nimport { Observable } from 'rxjs/Observable';\n\nimport { FeeAccountDataView } from 'app/modules/configuration/finance/models/fee-account-data-view';\nimport { FeeAccountView } from 'app/modules/configuration/finance/models/fee-account-view';\n\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { Configuration, BASE_PATH } from 'app/service/academic-service';\nimport { BaseUrlConfig, ModuleConfig, FeeModuleConfig } from 'app/url.config';\n\n\n@Injectable()\nexport class FeeAccountService {\n\n    // protected basePath = 'http://localhost:8011';\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Fee;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string,\n        @Optional() configuration: Configuration, private commonComponent: CommonComponent) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * To Create FeeAccounts details  under  school\n     * \n     * @param feeAccountView \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createFeeAccountDetails(feeAccountView?: FeeAccountView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createFeeAccountDetails(feeAccountView?: FeeAccountView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createFeeAccountDetails(feeAccountView?: FeeAccountView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createFeeAccountDetails(feeAccountView?: FeeAccountView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + FeeModuleConfig._CreateFeeAccountDetails,\n            feeAccountView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * To delete multiple feeAccounts details  based on fee account ids\n     * \n     * @param ids \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteFeeAccountDetails(ids: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteFeeAccountDetails(ids: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteFeeAccountDetails(ids: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteFeeAccountDetails(ids: Array<string>, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        if (ids === null || ids === undefined) {\n            throw new Error('Required parameter ids was null or undefined when calling deleteFeeAccountDetails.');\n        }\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        queryParameters = this.commonComponent.setQueryParams(ids, 'Ids', queryParameters);\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}` + FeeModuleConfig._DeleteFeeAccountDetailsbyId,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all FeeAccountsDetails by SubSystemId (schoolId)\n     * \n     * @param sortBy Gets or Sets SortBy\n     * @param accountName Gets or Sets AccountName\n     * @param code Gets or Sets Code\n     * @param displayName Gets or Sets DisplayName\n     * @param description Gets or Sets Description\n     * @param sortOrder Gets or Sets SortOrder\n     * @param failedRecords Gets or Sets FailedRecords\n     * @param pageNumber \n     * @param pageSize \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public feeAccountDetails(sortBy?: string, accountName?: Array<string>,\n        code?: Array<string>, displayName?: Array<string>,\n        description?: Array<string>, sortOrder?: number,\n        failedRecords?: Array<string>, pageNumber?: number, pageSize?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public feeAccountDetails(sortBy?: string, accountName?: Array<string>,\n        code?: Array<string>, displayName?: Array<string>,\n        description?: Array<string>, sortOrder?: number,\n        failedRecords?: Array<string>, pageNumber?: number, pageSize?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public feeAccountDetails(sortBy?: string, accountName?: Array<string>,\n        code?: Array<string>, displayName?: Array<string>, description?: Array<string>, sortOrder?: number, failedRecords?: Array<string>, pageNumber?: number,\n        pageSize?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public feeAccountDetails(sortBy?: string, accountName?: Array<string>,\n        code?: Array<string>, displayName?: Array<string>,\n        description?: Array<string>, sortOrder?: number,\n        failedRecords?: Array<string>, pageNumber?: number, pageSize?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(accountName, 'AccountName', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(code, 'Code', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(displayName, 'DisplayName', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(description, 'Description', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(failedRecords, 'FailedRecords', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + FeeModuleConfig._FeeAccountDetailsList,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get FeeAccountDetailsById\n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public feeAccountDetailsById(id: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public feeAccountDetailsById(id: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public feeAccountDetailsById(id: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public feeAccountDetailsById(id: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling feeAccountDetailsById.');\n        }\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        queryParameters = this.commonComponent.setQueryParams(id, 'Id', queryParameters);\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + FeeModuleConfig._FeeAccountDetailsbyId,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * To update fee account details by fee acoount id\n     * \n    \n     * @param feeAccountDataView \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateFeeAccountDetails(feeAccountDataView?: FeeAccountDataView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateFeeAccountDetails(feeAccountDataView?: FeeAccountDataView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateFeeAccountDetails(feeAccountDataView?: FeeAccountDataView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateFeeAccountDetails(feeAccountDataView?: FeeAccountDataView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` + FeeModuleConfig._UpdateFeeAccountDetails,\n            feeAccountDataView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Fee\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Configuration, BASE_PATH } from 'app/service/grading-service';\nimport { FeeTypeTrancheView } from 'app/modules/configuration/finance/models/fee-type-tranche-view';\nimport { CustomHttpUrlEncodingCodec } from 'app/service/base/encoder';\nimport { FeeTypeTranchesView } from 'app/modules/configuration/finance/models/fee-type-tranches-view';\nimport { BaseUrlConfig, ModuleConfig, FeeModuleConfig } from 'app/url.config';\nimport { CommonComponent } from 'app/shared/common/common.component';\n\n\n@Injectable()\nexport class FeeTypeTranchesService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Fee;\n    // protected basePath = 'http://localhost:8011';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string,\n        @Optional() configuration: Configuration, private commonComponent: CommonComponent) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * method for create feetype tranches based on FeeType Id\n     * \n     * @param feeTypeTrancheView \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createFeeTypeTranche(feeTypeTrancheView?: FeeTypeTrancheView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createFeeTypeTranche(feeTypeTrancheView?: FeeTypeTrancheView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createFeeTypeTranche(feeTypeTrancheView?: FeeTypeTrancheView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createFeeTypeTranche(feeTypeTrancheView?: FeeTypeTrancheView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + FeeModuleConfig._FeeTypeTranches_CreateFeeTypeTranche,\n            feeTypeTrancheView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * delete FeeType Tranche, returns validation message\n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteFeeTypeTranches(id: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteFeeTypeTranches(id: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteFeeTypeTranches(id: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteFeeTypeTranches(id: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteFeeTypeTranches.');\n        }\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}` + FeeModuleConfig._FeeTypeTranches_DeleteteFeeTypeTranche,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * GetAll fee type tranches based on schoolacademicsessionid\n     * \n     * @param feeTypeIds Gets or Sets FeeTypeId\n     * @param names Gets or Sets Name\n     * @param codes Gets or Sets Code\n     * @param descriptions Gets or Sets Description\n     * @param sortBy Gets or Sets SortBy\n     * @param sortOrder Gets or Sets SortOrder\n     * @param pageNumber \n     * @param pageSize \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllFeeTypeTranches(feeTypeIds?: Array<string>, names?: Array<string>, codes?: Array<string>,\n        descriptions?: Array<string>, sortBy?: string, sortOrder?: 0 | 1 | -1, pageNumber?: number,\n        pageSize?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getAllFeeTypeTranches(feeTypeIds?: Array<string>, names?: Array<string>, codes?: Array<string>,\n        descriptions?: Array<string>, sortBy?: string, sortOrder?: 0 | 1 | -1, pageNumber?: number,\n        pageSize?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getAllFeeTypeTranches(feeTypeIds?: Array<string>, names?: Array<string>, codes?: Array<string>,\n        descriptions?: Array<string>, sortBy?: string, sortOrder?: 0 | 1 | -1, pageNumber?: number,\n        pageSize?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getAllFeeTypeTranches(feeTypeIds?: Array<string>, names?: Array<string>, codes?: Array<string>,\n        descriptions?: Array<string>, sortBy?: string, sortOrder?: 0 | 1 | -1, pageNumber?: number,\n        pageSize?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n\n        queryParameters = this.commonComponent.setQueryParams(feeTypeIds, 'FeeTypeIds', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(names, 'Names', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(codes, 'Codes', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(descriptions, 'Descriptions', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + FeeModuleConfig._FeeTypeTranches_FeeTypeTranchesDetails,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * method for GetAll Fee Types by SchoolAcademicSessionId\n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllFeeTypes(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getAllFeeTypes(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getAllFeeTypes(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getAllFeeTypes(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + FeeModuleConfig._FeeTypeTranches_FeeTypes,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * method for Get Fee Types tranche by FeeTypeTranche Id\n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getFeeTypeTrancheById(id: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getFeeTypeTrancheById(id: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getFeeTypeTrancheById(id: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getFeeTypeTrancheById(id: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling getFeeTypeTrancheById.');\n        }\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + FeeModuleConfig._FeeTypeTranches_FeeTypeTrancheById,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update FeeTypeTranches based on FeeType Id\n     * \n     * @param feeTypeTranchesView \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateFeeTypeTranche(feeTypeTranchesView?: FeeTypeTranchesView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateFeeTypeTranche(feeTypeTranchesView?: FeeTypeTranchesView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateFeeTypeTranche(feeTypeTranchesView?: FeeTypeTranchesView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateFeeTypeTranche(feeTypeTranchesView?: FeeTypeTranchesView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` + FeeModuleConfig._FeeTypeTranches_UpdateteFeeTypeTranche,\n            feeTypeTranchesView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Fee\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { BaseUrlConfig, ModuleConfig, FeeModuleConfig } from 'app/url.config';\nimport { Configuration, BASE_PATH } from 'app/service/academic-service';\nimport { InvoiceAdjustmentTypeView } from 'app/modules/configuration/finance/models/invoice-adjustment-type-view';\nimport { CustomHttpUrlEncodingCodec } from 'app/service/base/encoder';\nimport { InvoiceAdjustmentTypeUpdateView } from 'app/modules/configuration/finance/models/invoice-adjustment-type-update-view';\nimport { InvoiceAdjustmentTypeStatusView } from 'app/modules/configuration/finance/models/invoice-adjustment-type-status-view';\nimport { CommonComponent } from 'app/shared/common/common.component';\n\n\n\n@Injectable()\nexport class InvoiceAdjustmentTypeService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Fee;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH)\n    basePath: string, @Optional() configuration: Configuration, private commonComponent: CommonComponent) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * adds an invoice adjustment type, returns validation message\n     * \n     * @param authorization access token\n     * @param invoiceAdjType \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createInvoiceAdjustmentType(invoiceAdjType?: InvoiceAdjustmentTypeView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createInvoiceAdjustmentType(invoiceAdjType?: InvoiceAdjustmentTypeView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createInvoiceAdjustmentType(invoiceAdjType?: InvoiceAdjustmentTypeView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createInvoiceAdjustmentType(invoiceAdjType?: InvoiceAdjustmentTypeView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + FeeModuleConfig._InvoiceAdjustmentType,\n            invoiceAdjType,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n * deletes invoice adjustment type, returns validation message\n * \n * @param id \n * @param authorization access token\n * @param schoolId SchoolId in Encrypted Form\n * @param instituteId InstituteId in Encrypted Form\n * @param userId UserId in Encrypted Form\n * @param academicSessionId AcademicSessionId in Encrypted Form \n * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n * @param reportProgress flag to report request and response progress.\n */\n    public deleteInvoiceAdjustmentType(id: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteInvoiceAdjustmentType(id: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteInvoiceAdjustmentType(id: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteInvoiceAdjustmentType(id: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deleteInvoiceAdjustmentType.');\n        }\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/InvoiceAdjustmentType/invoice-adjustment-type`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Fetch details of an invoice adjustment details, returns Details on success else validation messsage\n     * \n     * @param id \n     * @param authorization access token\n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public invoiceAdjustmentTypeDetails(id: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public invoiceAdjustmentTypeDetails(id: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public invoiceAdjustmentTypeDetails(id: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public invoiceAdjustmentTypeDetails(id: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling invoiceAdjustmentTypeDetails.');\n        }\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + FeeModuleConfig._InvoiceAdjustmentType,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * fetaches all invoice adjustment types based on filter aplied, returns list\n     * \n     * @param authorization access token\n     * @param names Gets or Sets Name\n     * @param isPositiveAdjustment Gets or Sets IsPositiveAdjustment\n     * @param inActive Gets or Sets InActive\n     * @param sortBy Gets or Sets SortBy\n     * @param sortOrder Gets or Sets SortOrder\n     * @param pageNumber \n     * @param pageSize \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public invoiceAdjustmentTypesList(names?: Array<string>, isPositiveAdjustment?: Array<number>, \n        inActive?: Array<number>, inactiveDate?: string, inactiveDateBegin?: string, inactiveDateEnd?: string, \n        sortBy?: string, sortOrder?: number, pageNumber?: number, pageSize?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public invoiceAdjustmentTypesList(names?: Array<string>, isPositiveAdjustment?: Array<number>, \n        inActive?: Array<number>, inactiveDate?: string, inactiveDateBegin?: string, inactiveDateEnd?: string, \n        sortBy?: string, sortOrder?: number, pageNumber?: number, pageSize?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public invoiceAdjustmentTypesList(names?: Array<string>, isPositiveAdjustment?: Array<number>, \n        inActive?: Array<number>, inactiveDate?: string, inactiveDateBegin?: string, inactiveDateEnd?: string, \n        sortBy?: string, sortOrder?: number, pageNumber?: number, pageSize?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public invoiceAdjustmentTypesList(names?: Array<string>, isPositiveAdjustment?: Array<number>, \n        inActive?: Array<number>, inactiveDate?: string, inactiveDateBegin?: string, inactiveDateEnd?: string, \n        sortBy?: string, sortOrder?: number, pageNumber?: number, pageSize?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n\n        queryParameters = this.commonComponent.setQueryParams(names, 'Names', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(isPositiveAdjustment, 'IsPositiveAdjustment', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(inActive, 'InActive', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(inactiveDate, 'InActiveDate', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(inactiveDateBegin, 'InActiveDateBegin', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(inactiveDateEnd, 'InActiveDateEnd', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + FeeModuleConfig._InvoiceAdjustmentTypes,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Updates an invoice adjustment type, returns validation message\n     * \n     * @param authorization access token\n     * @param invoiceAdjType \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateInvoiceAdjustmentType(invoiceAdjType?: InvoiceAdjustmentTypeUpdateView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateInvoiceAdjustmentType(invoiceAdjType?: InvoiceAdjustmentTypeUpdateView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateInvoiceAdjustmentType(invoiceAdjType?: InvoiceAdjustmentTypeUpdateView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateInvoiceAdjustmentType(invoiceAdjType?: InvoiceAdjustmentTypeUpdateView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` + FeeModuleConfig._InvoiceAdjustmentType,\n            invoiceAdjType,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * makes an invoice adjustment type active or in-active, returns validation message\n     * \n     * @param authorization access token\n     * @param statusView \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateInvoiceAdjustmentTypeStatus(statusView?: InvoiceAdjustmentTypeStatusView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateInvoiceAdjustmentTypeStatus(statusView?: InvoiceAdjustmentTypeStatusView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateInvoiceAdjustmentTypeStatus(statusView?: InvoiceAdjustmentTypeStatusView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateInvoiceAdjustmentTypeStatus(statusView?: InvoiceAdjustmentTypeStatusView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` + FeeModuleConfig._InvoiceAdjustmentTypeStatusUpdate,\n            statusView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Fee\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { Configuration, BASE_PATH } from 'app/service/grading-service';\nimport { LateFeeViewModel } from 'app/modules/configuration/finance/models/late-fee-viewmodel';\nimport { CustomHttpUrlEncodingCodec } from 'app/service/base/encoder';\nimport { LateFeeView } from 'app/modules/configuration/finance/models/late-fee-view';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { BaseUrlConfig, ModuleConfig, FeeModuleConfig } from 'app/url.config';\n\n@Injectable()\nexport class LateFeeRulesService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Fee;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH)\n    basePath: string, @Optional() configuration: Configuration, private commonComponent: CommonComponent) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * adds an latefeerule, returns validation message\n     * \n     * @param lateFeeViewModel \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createLateFeeRule(lateFeeViewModel?: LateFeeViewModel, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createLateFeeRule(lateFeeViewModel?: LateFeeViewModel, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createLateFeeRule(lateFeeViewModel?: LateFeeViewModel, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createLateFeeRule(lateFeeViewModel?: LateFeeViewModel, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + FeeModuleConfig._Add_LateFeeRules,\n            lateFeeViewModel,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * This method will Delete TestType based on latefeeid\n     * \n     * @param ids  \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteAll(ids: Array<string>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteAll(ids: Array<string>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteAll(ids: Array<string>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteAll(ids: Array<string>, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        if (ids === null || ids === undefined) {\n            throw new Error('Required parameter ids was null or undefined when calling deleteAll.');\n        }\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (ids) {\n            ids.forEach((element) => {\n                queryParameters = queryParameters.append('Ids', <any>element);\n            });\n        }\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}` + FeeModuleConfig._Delete_LateFeeRules,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Method to get All latefeerules based on SchoolAcademicSessionId\n     * \n     * @param delayFromDaysCount Gets or sets of DelayFromDayCount\n     * @param delayToDaysCount Gets or sets of DelayToDayCount\n     * @param lateFeePenaltyTypeIds Gets or sets of DelayToDayCount\n     * @param penaltyAmounts Gets or sets of PenaltyAmount\n     * @param isPenaltyFromDueDates \n     * @param sortBy Gets or Sets SortBy\n     * @param sortOrder Gets or Sets SortOrde\n     * @param failedRecords Gets or Sets of MarksCount\n     * @param pageNumber \n     * @param pageSize\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllDetails(delayFromDaysCount?: Array<number>, delayToDaysCount?: Array<number>,\n        lateFeePenaltyTypeIds?: Array<string>, penaltyAmounts?: Array<number>, isPenaltyFromDueDates?: Array<number>,\n        sortBy?: string, sortOrder?: number, failedRecords?: Array<string>, pageNumber?: number, pageSize?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getAllDetails(delayFromDaysCount?: Array<number>, delayToDaysCount?: Array<number>,\n        lateFeePenaltyTypeIds?: Array<string>, penaltyAmounts?: Array<number>, isPenaltyFromDueDates?: Array<number>,\n        sortBy?: string, sortOrder?: number, failedRecords?: Array<string>,\n        pageNumber?: number, pageSize?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getAllDetails(delayFromDaysCount?: Array<number>, delayToDaysCount?: Array<number>,\n        lateFeePenaltyTypeIds?: Array<string>, penaltyAmounts?: Array<number>, isPenaltyFromDueDates?: Array<number>,\n        sortBy?: string, sortOrder?: number, failedRecords?: Array<string>,\n        pageNumber?: number, pageSize?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getAllDetails(delayFromDaysCount?: Array<number>, delayToDaysCount?: Array<number>,\n        lateFeePenaltyTypeIds?: Array<string>, penaltyAmounts?: Array<number>, isPenaltyFromDueDates?: Array<number>,\n        sortBy?: string, sortOrder?: number, failedRecords?: Array<string>,\n        pageNumber?: number, pageSize?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        queryParameters = this.commonComponent.setQueryParams(delayFromDaysCount, 'DelayFromDaysCount', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(delayToDaysCount, 'DelayToDaysCount', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(lateFeePenaltyTypeIds, 'LateFeePenaltyTypeIds', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(penaltyAmounts, 'PenaltyAmounts', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(isPenaltyFromDueDates, 'IsPenaltyFromDueDates', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(failedRecords, 'FailedRecords', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + FeeModuleConfig._Get_All_Details,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets Generic List of latefeepenaltypes\n     * \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getLateFeePenaltyTypes(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getLateFeePenaltyTypes(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getLateFeePenaltyTypes(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getLateFeePenaltyTypes(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + FeeModuleConfig._Get_LateFee_PenaltyType,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * method for checking fee category exist or not\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public isExistLateFeeCategeory(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public isExistLateFeeCategeory(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public isExistLateFeeCategeory(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public isExistLateFeeCategeory(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + FeeModuleConfig._IsExist_LateFeeCategeory,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Fetch details of an LateFeeRule details, returns Details on success else validation messsage\n     * \n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public lateFeeDetails(id: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public lateFeeDetails(id: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public lateFeeDetails(id: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public lateFeeDetails(id: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling lateFeeDetails.');\n        }\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + FeeModuleConfig._GetBy_Id,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Updates an latefeerule, returns validation message\n     * \n     * @param lateFeeView\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public updateLateFeeRule(lateFeeView?: LateFeeView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateLateFeeRule(lateFeeView?: LateFeeView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateLateFeeRule(lateFeeView?: LateFeeView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateLateFeeRule(lateFeeView?: LateFeeView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` + FeeModuleConfig._Update_LateFeeRule,\n            lateFeeView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * Fee\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Configuration, BASE_PATH } from 'app/service/grading-service';\nimport { BaseUrlConfig, ModuleConfig, FeeModuleConfig } from 'app/url.config';\nimport { CustomHttpUrlEncodingCodec } from 'app/service/base/encoder';\nimport { ManageFeeConfigurationView } from 'app/modules/configuration/finance/models/manage-fee-configuration-view';\nimport { CloneSchoolFeeView } from 'app/modules/configuration/finance/models/clone-school-fee-view';\nimport { SchoolFeeViewModel } from 'app/modules/configuration/finance/models/school-fee-view-model';\n\n\n@Injectable()\nexport class ManageFeeConfigurationService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Fee;\n    // protected basePath = 'http://localhost:8011';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n * Clone Fee Structure\n * \n * @param model \n * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n * @param reportProgress flag to report request and response progress.\n */\n    public cloneFeeStructure(model?: CloneSchoolFeeView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public cloneFeeStructure(model?: CloneSchoolFeeView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public cloneFeeStructure(model?: CloneSchoolFeeView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public cloneFeeStructure(model?: CloneSchoolFeeView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + FeeModuleConfig._Clone_FeeStructure,\n            model,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n    * Delete School Fee if it not used in invoice details\n    * \n    * @param id \n    * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n    * @param reportProgress flag to report request and response progress.\n    */\n    public deleteSchoolFee(id?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteSchoolFee(id?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteSchoolFee(id?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteSchoolFee(id?: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}` + FeeModuleConfig._Delete_SchoolFee_Structure,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n    * FeeTypes and All FeeTerms of Fee types based on class id\n    * \n    * @param schoolBoardId Gets or Sets SchoolBoardId\n    * @param classId Gets or Sets ClassId\n    * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n    * @param reportProgress flag to report request and response progress.\n    */\n    public getAllFeetermsByClass(schoolBoardId?: number, classId?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getAllFeetermsByClass(schoolBoardId?: number, classId?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getAllFeetermsByClass(schoolBoardId?: number, classId?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getAllFeetermsByClass(schoolBoardId?: number, classId?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (schoolBoardId !== undefined && schoolBoardId !== null) {\n            queryParameters = queryParameters.set('SchoolBoardId', <any>schoolBoardId);\n        }\n        if (classId !== undefined && classId !== null) {\n            queryParameters = queryParameters.set('ClassId', <any>classId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + FeeModuleConfig._Get__All_FeeTypes_FeeTerms_By_Class,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n    * Get fee terms for a fee type\n    * \n    * @param ids \n    * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n    * @param reportProgress flag to report request and response progress.\n    */\n    public getFeeTermsByFeeType(ids?: Array<number>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getFeeTermsByFeeType(ids?: Array<number>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getFeeTermsByFeeType(ids?: Array<number>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getFeeTermsByFeeType(ids?: Array<number>, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (ids) {\n            ids.forEach((element) => {\n                queryParameters = queryParameters.append('Ids', <any>element);\n            });\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + FeeModuleConfig._Get_FeeTerms_By_FeeTypes,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n    * Get Fee types and fee terms of academic session\n    * \n    * @param schoolBoardId Gets or Sets SchoolBoardId\n    * @param classId Gets or Sets ClassId\n    * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n    * @param reportProgress flag to report request and response progress.\n    */\n    public getFeeTypeFeeTerms(schoolBoardId?: number, classId?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getFeeTypeFeeTerms(schoolBoardId?: number, classId?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getFeeTypeFeeTerms(schoolBoardId?: number, classId?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getFeeTypeFeeTerms(schoolBoardId?: number, classId?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (schoolBoardId !== undefined && schoolBoardId !== null) {\n            queryParameters = queryParameters.set('SchoolBoardId', <any>schoolBoardId);\n        }\n        if (classId !== undefined && classId !== null) {\n            queryParameters = queryParameters.set('ClassId', <any>classId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + FeeModuleConfig._Get__FeeTypes_FeeTerms_By_ClassId,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n    * Fee types based on class, it&#39;ll return unassigned fee types for class\n    * \n    * @param schoolBoardId Gets or Sets SchoolBoardId\n    * @param classId Gets or Sets ClassId\n    * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n    * @param reportProgress flag to report request and response progress.\n    */\n    public getFeeTypesByClass(schoolBoardId?: number, classId?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getFeeTypesByClass(schoolBoardId?: number, classId?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getFeeTypesByClass(schoolBoardId?: number, classId?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getFeeTypesByClass(schoolBoardId?: number, classId?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (schoolBoardId !== undefined && schoolBoardId !== null) {\n            queryParameters = queryParameters.set('SchoolBoardId', <any>schoolBoardId);\n        }\n        if (classId !== undefined && classId !== null) {\n            queryParameters = queryParameters.set('ClassId', <any>classId);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + FeeModuleConfig._Get_FeeTypes_By_Class,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n    * Get school fee UnAssigned classes based on school board\n    * \n    * @param id \n    * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n    * @param reportProgress flag to report request and response progress.\n    */\n    public getUnAssignedClasses(id?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getUnAssignedClasses(id?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getUnAssignedClasses(id?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getUnAssignedClasses(id?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + FeeModuleConfig._Get_Unassigned_Classes,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n    * School fees and school fee terms assisgnment\n    * \n    * @param model \n    * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n    * @param reportProgress flag to report request and response progress.\n    */\n    public schoolFeeAssignment(model?: ManageFeeConfigurationView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public schoolFeeAssignment(model?: ManageFeeConfigurationView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public schoolFeeAssignment(model?: ManageFeeConfigurationView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public schoolFeeAssignment(model?: ManageFeeConfigurationView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + FeeModuleConfig._Assign_SchoolFees,\n            model,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n    * Update school fees\n    * \n    * @param schoolFeesView \n    * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n    * @param reportProgress flag to report request and response progress.\n    */\n    public updateSchoolFees(schoolFeesView?: Array<SchoolFeeViewModel>, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public updateSchoolFees(schoolFeesView?: Array<SchoolFeeViewModel>, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public updateSchoolFees(schoolFeesView?: Array<SchoolFeeViewModel>, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public updateSchoolFees(schoolFeesView?: Array<SchoolFeeViewModel>, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` + FeeModuleConfig._Update_SchoolFees,\n            schoolFeesView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * deletes all class/board school fees/ tranches if invoice not generated\n     * \n     * @param schoolBoardId Gets or Sets SchoolBoardId\n     * @param classId Gets or Sets ClassId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deleteAllSchoolFees( schoolBoardId?: number, classId?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteAllSchoolFees(schoolBoardId?: number, classId?: number,  observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteAllSchoolFees( schoolBoardId?: number, classId?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteAllSchoolFees( schoolBoardId?: number, classId?: number,  observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (schoolBoardId !== undefined && schoolBoardId !== null) {\n            queryParameters = queryParameters.set('SchoolBoardId', <any>schoolBoardId);\n        }\n        if (classId !== undefined && classId !== null) {\n            queryParameters = queryParameters.set('ClassId', <any>classId);\n        }\n\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/ManageFeeConfiguration/delete-all-school-fees`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n"],"sourceRoot":""}