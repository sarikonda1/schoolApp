{"version":3,"sources":["webpack:///./src/app/modules/academics/syllabus/syllabus-entry-details/syllabus-entry-details.component.html","webpack:///./src/app/modules/academics/syllabus/syllabus-entry-details/syllabus-entry-details.component.scss","webpack:///./src/app/modules/academics/syllabus/syllabus-entry-details/syllabus-entry-details.component.ts","webpack:///./src/app/modules/academics/syllabus/syllabus-routing.module.ts","webpack:///./src/app/modules/academics/syllabus/syllabus-schedule/syllabus-schedule.component.html","webpack:///./src/app/modules/academics/syllabus/syllabus-schedule/syllabus-schedule.component.scss","webpack:///./src/app/modules/academics/syllabus/syllabus-schedule/syllabus-schedule.component.ts","webpack:///./src/app/modules/academics/syllabus/syllabus-view/syllabus-view.component.html","webpack:///./src/app/modules/academics/syllabus/syllabus-view/syllabus-view.component.scss","webpack:///./src/app/modules/academics/syllabus/syllabus-view/syllabus-view.component.ts","webpack:///./src/app/modules/academics/syllabus/syllabus.module.ts","webpack:///./src/app/service/staff/staffCommon.service.ts"],"names":[],"mappings":"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","file":"app-modules-academics-syllabus-syllabus-module.js","sourcesContent":["module.exports = \"<div class=\\\"px-sm-40 py-sm-20\\\">\\n  <div class=\\\"font-size-18 px-12 pb-4 text-uppercase\\\">Syllabus Entry Details</div>\\n  <div class=\\\"mat-elevation-z3 simple-table-container radius-t-20\\\">\\n    <div fxLayoutAlign=\\\"end center\\\" class=\\\"py-12 px-20 border-bottom\\\">    \\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onBackClick()\\\" class=\\\"text-uppercase\\\">Back</button>\\n      <button mat-icon-button class=\\\"ml-4\\\">\\n        <mat-icon>info</mat-icon>\\n      </button>\\n    </div>\\n   <form [formGroup]=\\\"syllabusEntryDetailsForm\\\">\\n    <div class=\\\"p-20\\\">\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pb-12\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"pr-sm-20\\\">\\n          <mat-label translate #className>Board</mat-label>\\n          <input formControlName=\\\"board\\\"  matInput readonly   >    \\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\" class=\\\"pr-sm-20\\\">\\n          <mat-label translate #className>Class</mat-label>\\n          <input formControlName=\\\"className\\\" matInput readonly   >    \\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"pr-sm-20\\\">\\n          <mat-label translate #className>Section</mat-label>\\n          <input formControlName=\\\"section\\\" matInput readonly   >    \\n        </mat-form-field>\\n        <div *ngIf=\\\"syllabusDetails?.syllabusAttachment\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\" fxLayoutAlign=\\\"center start\\\">\\n          <a target=\\\"_blank\\\"  [href]=\\\"storeService.getFilePath(syllabusDetails?.syllabusAttachment)\\\" class=\\\"pb-12 font-size-16\\\">Attachment</a>\\n        </div>\\n      </div>\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pb-12\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"pr-sm-20\\\">\\n          <mat-label translate #className>Course</mat-label>\\n          <input formControlName=\\\"course\\\" matInput readonly   >    \\n        </mat-form-field>     \\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"55\\\" class=\\\"pr-sm-20\\\">\\n          <mat-label translate #className>Teacher</mat-label>\\n          <input formControlName=\\\"teacher\\\" matInput readonly   >    \\n        </mat-form-field>      \\n      </div>\\n      <ng-container *ngIf=\\\"syllabusEntryDetailsForm?.value?.checkpointName; else chapters\\\">\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pb-12\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"80\\\" class=\\\"pr-sm-20\\\">\\n            <mat-label translate #className>Check Point Name</mat-label>\\n            <input formControlName=\\\"checkpointName\\\" matInput readonly   >    \\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pb-12\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"80\\\" class=\\\"pr-sm-20\\\">\\n            <mat-label translate #className>TestType</mat-label>\\n            <input formControlName=\\\"testType\\\" matInput readonly   >    \\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pb-12\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"80\\\" class=\\\"pr-sm-20\\\">\\n            <mat-label translate #className>Cumulative</mat-label>\\n            <input matInput readonly  [value]=\\\"syllabusEntryDetailsForm?.value?.isCumulative? 'Yes' : 'No'\\\" >    \\n          </mat-form-field>\\n        </div>\\n      </ng-container>\\n      <ng-template #chapters>\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pb-12\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"80\\\" class=\\\"pr-sm-20\\\">\\n            <mat-label translate #className>Chapter</mat-label>\\n            <input formControlName=\\\"chapter\\\" matInput readonly   >    \\n          </mat-form-field>\\n        \\n          <div *ngIf=\\\"syllabusDetails?.chapterAttachment\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\" fxLayoutAlign=\\\"center start\\\">\\n            <a target=\\\"_blank\\\" [href]=\\\"storeService.getFilePath(syllabusDetails?.chapterAttachment)\\\" class=\\\"pb-12 font-size-16\\\">Attachment</a>\\n          </div>\\n        </div>\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pb-12\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"80\\\" class=\\\"pr-sm-20\\\">\\n            <mat-label translate #className>Topic</mat-label>\\n            <input formControlName=\\\"topic\\\" matInput readonly   >    \\n          </mat-form-field>\\n        \\n          <div *ngIf=\\\"syllabusDetails?.topicAttachment\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\" fxLayoutAlign=\\\"center start\\\">\\n            <a target=\\\"_blank\\\" [href]=\\\"storeService.getFilePath(syllabusDetails?.topicAttachment)\\\" class=\\\"pb-12 font-size-16\\\">Attachment</a>\\n          </div>\\n        </div>\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pb-12\\\">\\n          <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"80\\\" class=\\\"pr-sm-20\\\">\\n            <mat-label translate #className>Sub Topic</mat-label>\\n            <input formControlName=\\\"subTopic\\\" matInput readonly   >    \\n          </mat-form-field>\\n        \\n          <div *ngIf=\\\"syllabusDetails?.subTopicAttachment\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"20\\\" fxLayoutAlign=\\\"center start\\\">\\n            <a target=\\\"_blank\\\" [href]=\\\"storeService.getFilePath(syllabusDetails?.subTopicAttachment)\\\" class=\\\"pb-12 font-size-16\\\">Attachment</a>\\n          </div>\\n        </div>\\n      </ng-template>\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pb-12\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"pr-sm-20\\\">\\n          <mat-label translate #className>Scheduled Date</mat-label>\\n          <input formControlName=\\\"scheduledCompletionDate\\\" matInput readonly   >    \\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"pr-sm-20\\\">\\n          <mat-label translate #className>status</mat-label>\\n          <input formControlName=\\\"status\\\" matInput readonly   >    \\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"pr-sm-20\\\">\\n          <mat-label translate #className>Start Date</mat-label>\\n          <input formControlName=\\\"startDate\\\" matInput readonly   >    \\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"pr-sm-20\\\">\\n          <mat-label translate #className>Completion Date</mat-label>\\n          <input formControlName=\\\"actualCompletionDate\\\" matInput readonly   >    \\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"secondary-text font-size-16\\\">Last Modified by {{syllabusDetails?.LastModifiedUserName ? syllabusDetails?.LastModifiedUserName : '---'}} on {{syllabusEntryDetailsForm?.value?.lastModifiedDate}}</div>\\n    </div>\\n    </form>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N5bGxhYnVzL3N5bGxhYnVzLWVudHJ5LWRldGFpbHMvc3lsbGFidXMtZW50cnktZGV0YWlscy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { SyllabusSchedulesService } from 'app/service/syllabus/syllabus-schedules.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { CommonService } from 'app/service/common.service';\nimport { StoreService } from 'app/service/file-management/store.service';\n\n@Component({\n  selector: 'app-syllabus-entry-details',\n  templateUrl: './syllabus-entry-details.component.html',\n  styleUrls: ['./syllabus-entry-details.component.scss'],\n  providers: [SyllabusSchedulesService, StoreService]\n})\nexport class SyllabusEntryDetailsComponent extends CommonComponent implements OnInit {\n  syllabusDetails: any;\n  syllabusEntryDetailsForm: FormGroup;\n  constructor( public syllabusSchedulesService: SyllabusSchedulesService, public route: ActivatedRoute, public _fb: FormBuilder, public commonService: CommonService, public storeService: StoreService) {\n    super();\n   }\n\n  ngOnInit(): void {\n    this.intializeForm();\n    if (this.route.params) {\n      this.route.params.subscribe((params) => {\n        if (params.id) {\n          this.getProcessData(params.id);\n        }\n      });\n    }\n  }\n  intializeForm(): void{\n    this.syllabusEntryDetailsForm = this._fb.group({\n      board: null,\n      className: null,\n      section: null,\n      course: null,\n      teacher: null,\n      chapter: null,\n      chapterAttachment: null,\n      topic: null,\n      topicAttachment: null,\n      subTopic: null,\n      subTopicAttachment: null,\n      scheduledCompletionDate: null,\n      status: null,\n      startDate: null,\n      actualCompletionDate: null,\n      checkpointName: null,\n      testType: null,\n      isCumulative: null,\n      lastModifiedDate: null\n    });\n  }\n  getProcessData(id): void{\n    this.syllabusSchedulesService.syllabusScheduleProcessDetails(id)\n    .subscribe(res => this.setProcessDetails(res), err => this.errorResponse(err));\n  }\n  setProcessDetails(res): void{\n    this.syllabusDetails = res.syllabusEntryDetailsView;\n    res.syllabusEntryDetailsView.scheduledCompletionDate  = this.getFormattedDateBySchoolDateFormat(this.syllabusDetails.scheduledCompletionDate);\n\n    res.syllabusEntryDetailsView.startDate = this.getFormattedDateBySchoolDateFormat(this.syllabusDetails.startDate);\n\n    res.syllabusEntryDetailsView.lastModifiedDate =  this.getFormattedDateBySchoolDateFormat(this.syllabusDetails.lastModifiedDate);\n\n    res.syllabusEntryDetailsView.actualCompletionDate  = this.getFormattedDateBySchoolDateFormat(this.syllabusDetails.actualCompletionDate);\n    this.syllabusEntryDetailsForm.patchValue(res.syllabusEntryDetailsView);\n  }\n  onBackClick(): void{\n    history.back();\n  }\n}\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SyllabusScheduleComponent } from './syllabus-schedule/syllabus-schedule.component';\nimport { SyllabusProgressComponent } from './syllabus-progress/syllabus-progress.component';\nimport { SyllabusEntryDetailsComponent } from './syllabus-entry-details/syllabus-entry-details.component';\nimport { SyllabusViewComponent } from './syllabus-view/syllabus-view.component';\nimport { CommonModule } from '@angular/common';\n\nconst routes: Routes = [\n  { path: 'schedule', component: SyllabusScheduleComponent, data: {title: 'Syllabus-Schedule'} },\n  { path: 'progress', component: SyllabusProgressComponent, data: {title: 'Syllabus Progress'} },\n  { path: 'syllabus-entry-details/:id', component: SyllabusEntryDetailsComponent, data: {title: 'Syllabus Entry Details'} },\n  { path: 'dashboard', component: SyllabusViewComponent, data: {title: 'Syllabus Dash Board'} },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes), CommonModule],\n  exports: [RouterModule]\n})\nexport class SyllabusRoutingModule { }\n","module.exports = \"<div class=\\\"px-sm-40 pt-sm-24\\\">\\n  <div class=\\\"py-8 px-20 font-size-18 text-uppercase\\\" translate>Syllabus Schedule</div>\\n  <div class=\\\"mat-elevation-z3 simple-table-container radius-t-20\\\">\\n    <form [formGroup]=\\\"syllabusSearchForm\\\" (ngSubmit)=\\\"syllabusDropDownList=[];onSyllabusSearch(syllabusSearchForm)\\\">\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end end\\\" class=\\\"p-20\\\">\\n        <button type=\\\"button\\\" mat-icon-button translate (click)=\\\"getHelpText('Syllabus Schedule')\\\">  <mat-icon >info</mat-icon></button>\\n      </div>\\n      <mat-divider></mat-divider>\\n      <div class=\\\"p-20\\\">\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n           <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\"\\n            class=\\\"pr-sm-20\\\">\\n            <mat-label translate #board>Board</mat-label>\\n            <mat-select formControlName=\\\"boardId\\\" (selectionChange)=\\\"boardChanged($event)\\\" required>\\n              <mat-option *ngFor=\\\"let board of availableSchoolBoards\\\" [value]=\\\"board.value\\\">\\n                {{ board.label }}</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]='board.innerText' [validationControl]=\\\"syllabusSearchForm.controls.boardId\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\"\\n            class=\\\"pr-sm-20\\\">\\n            <mat-label translate #class>Class</mat-label>\\n            <mat-select  (selectionChange)=\\\"classChanged($event)\\\" formControlName=\\\"classId\\\" required>\\n              <mat-option *ngFor=\\\"let class of availableClasses\\\" [value]=\\\"class.value\\\">\\n                {{ class.label }}</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]='class.innerText' [validationControl]=\\\"syllabusSearchForm.controls.classId\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\" class=\\\"pr-sm-20\\\">\\n            <mat-label translate #course>Course</mat-label>\\n            <mat-select required formControlName=\\\"courseId\\\" required>\\n              <mat-option *ngFor=\\\"let course of coursesList\\\" [value]=\\\"course.value\\\">\\n                {{ course.label }}</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]='course.innerText' [validationControl]=\\\"syllabusSearchForm.controls.courseId\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\">\\n            <mat-label translate #section>Section</mat-label>\\n            <mat-select formControlName=\\\"sectionId\\\">\\n              <mat-option [value]=\\\"null\\\" *ngIf=\\\"availableSections?.length\\\"> </mat-option>\\n              <mat-option *ngFor=\\\"let section of availableSections\\\" [value]=\\\"section.value\\\">\\n                {{ section.label }}</mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]='section.innerText' [validationControl]=\\\"syllabusSearchForm.controls.sectionId\\\"\\n                [doValidate]=\\\"validate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"my-12\\\">\\n          <button mat-raised-button type=\\\"reset\\\" color=\\\"primary\\\" class=\\\"text-uppercase mx-12\\\" (click)=\\\"onClear()\\\">\\n            {{'Reset' | translate}}\\n          </button>\\n          <button mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n            {{'Search' | translate}}\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n<div class=\\\"px-sm-40 pt-sm-24\\\" *ngIf=\\\"syllabusSearchForm.valid && !tabSettings?.rows?.length\\\">\\n  <div class=\\\"mat-elevation-z3 simple-table-container radius-5\\\" >\\n    <div *ngIf=\\\"onSearchHeader && !syllabusDropDownList?.length\\\" class=\\\"font-size-16 text-center p-20\\\">There is no syllabus schedule for selected options. Click next to assign a Syllabus schedule</div>\\n    <div *ngIf=\\\"onSearchHeader && !syllabusDropDownList?.length\\\" fxLayout=\\\"row\\\"  fxLayoutAlign=\\\"center center\\\" class=\\\"pb-12\\\">\\n      <button (click)=\\\"onNoScheduleNext()\\\" mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n        {{'Next' | translate}}\\n      </button>\\n    </div>\\n    <div class=\\\"p-20\\\" fxLayoutAlign=\\\"center center\\\" *ngIf=\\\"onSearchHeader && syllabusDropDownList?.length > 1\\\">\\n      <div fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"60\\\" fxFlex=\\\"100\\\" class=\\\"border\\\">\\n        <div class=\\\"p-20 primary font-size-18\\\">Syllabus Selection</div>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"100\\\" class=\\\"px-24 pt-28 pb-12\\\">\\n          <mat-label translate #syllabus>Syllabus</mat-label>\\n          <mat-select required [formControl]=\\\"syllabusFormController\\\">\\n            <mat-option *ngFor=\\\"let syllabus of syllabusDropDownList\\\" [value]=\\\"syllabus.id\\\">\\n              {{ syllabus.name }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='syllabus.innerText' [validationControl]=\\\"syllabusFormController\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <div fxLayout=\\\"row\\\"  fxLayoutAlign=\\\"center center\\\" class=\\\"pb-12\\\">\\n          <button (click)=\\\"addSyllabusSchedule()\\\" mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">\\n            {{'Next' | translate}}\\n          </button>\\n        </div>\\n      </div>\\n     \\n    </div>\\n   \\n  </div>\\n</div>\\n\\n<app-table *ngIf=\\\"tabSettings?.rows?.length\\\" [settings]=\\\"tabSettings\\\" \\n  [massActionTemplateRef]=\\\"massActions\\\" (selectedRows)='selectedRows($event)' (rowBasedAction)=\\\"rowWiseActions($event)\\\"\\n  [disabled]=\\\"disbleSubmitBtn\\\" [templateRef]=\\\"addCourseTemplate\\\" [closeAddForm]=\\\"closeAddPanel\\\"\\n   [closeRowForm]='closeAddPanel'>\\n</app-table>\\n\\n\\n<ng-template #massActions>\\n  <form #completionDateForm=\\\"ngForm\\\" (ngSubmit)=\\\"scheduleController?.valid ? onSchedule() : ''\\\">\\n    <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-form-field class=\\\"px-20 w-200\\\">\\n        <mat-label #actions translate>Actions</mat-label>\\n        <mat-select (selectionChange)=\\\"onSchedule()\\\" [formControl]=\\\"scheduleController\\\" required>\\n          <mat-option [value]=\\\"true\\\">\\n           set Schedule Completion Date\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          <app-validation [labelName]='actions.innerText' [validationControl]=\\\"scheduleController\\\"\\n            [doValidate]=\\\"validate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n  </form>\\n</ng-template>\\n\\n\\n<ng-template #scheduleDateTemp>\\n  <div>\\n    <div fxLayoutAlign=\\\"space-between center\\\" class=\\\"font-size-20\\\"><span translate>Enter Scheduled Completion Date</span> <button\\n        mat-icon-button (click)=\\\"closeDialog()\\\">\\n        <mat-icon>close</mat-icon>\\n      </button></div>\\n    <form [formGroup]=\\\"scheduleForm\\\" (ngSubmit)=\\\"onSubmitDate()\\\"\\n      #scheduleDateFormPopUp=\\\"ngForm\\\">\\n      <div fxFlexFill fxLayout=\\\"column\\\" class=\\\"pt-24\\\" fxLayoutAlign=\\\"center center\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill>\\n          <mat-label #scheduleDatee translate>Scheduled Completion Date</mat-label>\\n          <input required matInput (keyup)=\\\"forceValidation('scheduleDate', scheduleForm)\\\" [matDatepicker]=\\\"scheduleDate\\\" [min]=\\\"academicSession?.startDate\\\"  [max]=\\\"academicSession?.endDate\\\"\\n          formControlName=\\\"scheduleDate\\\">\\n          <mat-datepicker-toggle matSuffix [for]=\\\"scheduleDate\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #scheduleDate></mat-datepicker>\\n          <mat-error>\\n            <app-validation [labelName]='scheduleDatee.innerText'\\n              [validationControl]=\\\"scheduleForm.controls.scheduleDate\\\" [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div fxFlexFill fxLayoutAlign=\\\"end center\\\" fxLayout=\\\"row\\\" class=\\\"pb-20\\\">\\n        <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase accent-fg\\\">{{'Submit' | translate}}</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N5bGxhYnVzL3N5bGxhYnVzLXNjaGVkdWxlL3N5bGxhYnVzLXNjaGVkdWxlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, TemplateRef, ChangeDetectorRef } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { SchoolSyllabusService } from 'app/service/syllabus/syllabus.service';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { SyllabusSchedulesService } from 'app/service/syllabus/syllabus-schedules.service';\nimport { ClassTimetableService } from 'app/service/class-schedules/class-time-table.service';\nimport { CommonService } from 'app/service/common.service';\nimport { AppSettings } from 'app/app.constants';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { distinctUntilChanged } from 'rxjs/operators';\n@Component({\n  selector: 'app-syllabus-schedule',\n  templateUrl: './syllabus-schedule.component.html',\n  styleUrls: ['./syllabus-schedule.component.scss'],\n  providers: [SchoolSyllabusService, SyllabusSchedulesService, ClassTimetableService, StoreService]\n})\nexport class SyllabusScheduleComponent extends CommonComponent implements OnInit {\n  @ViewChild('scheduleDateTemp') scheduleDateTemp:  TemplateRef<any>;\n  @ViewChild('scheduleDateFormPopUp') scheduleDateFormPopUp: any;\n\n  syllabusSearchForm: FormGroup;\n  coursesList: any [] = [];\n  filterViewModel: any;\n  syllabusDropDownList: any [] = [];\n  validate = true;\n  currentComponent = 'SyllabusScheduleComponent';\n  // table\n  tabSettings: any = {};\n  closeAddPanel = true;\n  scheduleController = new FormControl(null, [Validators.required]);\n  scheduleForm: FormGroup;\n  cols: any [] = [];\n  rows: Array<any> = [];\n  rowsSelected: any[] = [];\n  onSearchHeader = false;\n  customDialog: any;\n  academicSession: any;\n  syllabusFormController = new FormControl(null, [Validators.required]);\n  constructor(public _fb: FormBuilder, public syllabusService: SchoolSyllabusService,\n     public snackBar: MatSnackBar, public route: ActivatedRoute, public syllabusSchedulesService: SyllabusSchedulesService,\n      // tslint:disable-next-line: max-line-length\n      private classTimetableService: ClassTimetableService, public commonService: CommonService, public dialog: MatDialog, public storeService: StoreService, public changeDetector: ChangeDetectorRef) {\n    super();\n    // this.getAvailableSchoolBoards();\n   }\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.academicSession = JSON.parse(localStorage.getItem('_as'));\n    const modelData = this.getModelComponent(this.currentComponent);\n    if (modelData){\n        this.syllabusSearchForm.patchValue(modelData);\n        if ( modelData.syllabusId){\n          this.syllabusFormController.patchValue(modelData.syllabusId);\n          // this.getSyllabusScheduleGrid();\n        }\n        this.getAvailableClasses(this.syllabusSearchForm.value.boardId);\n        this.getAvailableSections(this.syllabusSearchForm.value.boardId, this.syllabusSearchForm.value.classId);\n        this.getCourses();\n        this.onSyllabusSearch(this.syllabusSearchForm);\n    }\n    this.getAvailableSchoolBoards();\n    this.intializetableSettings();\n  }\n  getAvailableSchoolBoards(): void {\n    this.availableSchoolBoards = [];\n    this.commonService.schoolBoards().subscribe(res => {\n      if (res.listViews !== undefined && res.listViews.length) {\n        res.listViews.forEach(element => {\n          this.availableSchoolBoards.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n        if (!this.syllabusSearchForm.value.boardId){\n          this.syllabusSearchForm.patchValue({\n            boardId: this.availableSchoolBoards[0].value\n          });\n          this.currentBoardId = this.availableSchoolBoards[0].value;\n          this.getAvailableClasses(this.currentBoardId);\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  intializetableSettings(): void{\n    this.cols = [\n      { field: 'chapter', header: 'Chapter', sort: false , innerHTML: true},\n      { field: 'topic', header: 'Topic', sort: false  , innerHTML: true},\n      { field: 'subTopic', header: 'Sub Topic', sort: false  , innerHTML: true},\n      { field: 'formatedScheduledCompletionDate', header: 'Scheduled Completion Date', sort: false },\n      { field: 'FormatedActualCompletionDate', header: 'Actual Completion Date', sort: false },\n      { field: 'actions', header: 'Actions', sort: false }\n    ];\n\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      // model: this.studentsSectionSView,\n      // tablename: '',\n      componentName: this.currentComponent,\n      isMultiDeleteRequired: false\n    };\n  }\n  setFilterViewModel(): void{\n    this.filterViewModel = {\n      boardId: 0, \n      classId: 0, \n      sectionId: 0,\n      courseId: 0, \n    };\n  }\n  initializeForm(): void {\n    this.syllabusSearchForm = this._fb.group({\n      boardId: [null],\n      classId: [null],\n      courseId: [null],\n      sectionId: [null]\n    });\n    this.syllabusSearchForm.valueChanges.pipe(distinctUntilChanged()).subscribe(form => {\n      this.onSearchHeader = false;\n      if (this.tabSettings){\n        this.tabSettings['rows'] = [];\n        this.changeDetector.detectChanges();\n      }\n    });\n    this.scheduleForm = this._fb.group({\n      scheduleDate: [null, Validators.required]\n    });\n  }\n  boardChanged(event, onManualChange = false): void {\n    if (event.value) {\n      if (!onManualChange){\n        this.syllabusSearchForm.patchValue({\n          classId: null,\n          sectionId: null,\n          courseId: null\n        });\n        this.availableClasses = [];\n        this.coursesList = [];\n        this.availableSections = [];\n      }\n      this.getAvailableClasses(event.value);\n    }\n  }\n  classChanged(event, onManualChange= false): void {\n    if (!onManualChange){\n      this.syllabusSearchForm.patchValue({\n        sectionId: null,\n        courseId: null\n      });\n      this.coursesList = [];\n      this.availableSections = [];\n    }\n    this.getCourses();\n    this.getAvailableSections(this.syllabusSearchForm.controls.boardId, this.syllabusSearchForm.controls.classId);\n  }\n  getCourses(): void {\n    this.classTimetableService.classTimetableCoursesGet(this.syllabusSearchForm.value.boardId, this.syllabusSearchForm.value.classId).subscribe(response => {\n      if (response.commonViewModel && response.commonViewModel.length) {\n        response.commonViewModel.forEach(element => {\n          this.coursesList.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  onClear(): void{\n      this.syllabusSearchForm.reset();\n      this.setModelDataTableComponent(this.currentComponent, null);\n  }\n  onSyllabusSearch(form): void{\n    if (form.valid){\n      this.syllabusFormController.reset();\n      this.tabSettings.rows = [];\n      this.onSearchHeader = false;\n      this.getSyllabusScheduleGrid(true);\n    }\n  }\n  onNoScheduleNext(): void{\n    this.syllabusService.getSyllabusList(this.syllabusSearchForm.value.boardId, this.syllabusSearchForm.value.classId, this.syllabusSearchForm.value.courseId)\n    .subscribe(res => this.onGetSyllabusList(res), err => this.errorResponse(err));\n  }\n  onGetSyllabusList(res): void{\n    if (res.syllabus && res.syllabus.length){\n      this.syllabusDropDownList = res.syllabus;\n      if (res.syllabus.length === 1){\n        this.syllabusFormController.patchValue(res.syllabus[0].id);\n        this.addSyllabusSchedule();\n      } \n    } else{\n      this.openSnackBar('No Syllabus is configured to class, section, course', true);\n    }\n  }\n  addSyllabusSchedule(): void{\n    if (this.syllabusFormController.valid){\n      const modelData = this.syllabusSearchForm.value;\n      modelData['syllabusId'] = this.syllabusFormController.value;\n      modelData['schoolBoardId'] = this.syllabusSearchForm.value.boardId;\n      this.syllabusSchedulesService.scheduleAcademicSyllabus(modelData)\n      .subscribe(res => this.onPostSchedule(res), err => this.errorResponse(err));\n    }\n  } \n  onPostSchedule(res): void{\n    this.getSyllabusScheduleGrid();\n  }\n  getSyllabusScheduleGrid(fromHeaderSearch = false): void{\n      if (this.syllabusSearchForm.valid ){\n        this.filterViewModel = this.syllabusSearchForm.value;\n        this.setModelDataTableComponent(this.currentComponent, this.filterViewModel);\n        this.syllabusSchedulesService.syllabusScheduleGet(\n          this.filterViewModel.classId,\n          this.filterViewModel.sectionId,\n          this.filterViewModel.courseId,\n          this.filterViewModel.boardId)\n        .subscribe(res => this.setSyllabusScheduleDetails(res, fromHeaderSearch), err => this.errorResponse(err)); \n      }\n  }\n  setSyllabusScheduleDetails(res, fromHeaderSearch): void{\n    if (res.academicSesssionSyllabus){\n      let syllabusDataList = [];\n      res.academicSesssionSyllabus.academicSessionSyllabusSchedules.map(e => {\n        if (e.syllabusCheckPointId){\n          e.isCheckPoint = true;\n          e.chapter = e.syllabusCheckPoint;\n          e.topic = e.checkPointTestType;\n          e.subTopic = e.isCumulative ? 'Cummulative' : 'Incremental';\n        } else{\n           e.chapter  = e.chapter ?  ('<p>' + e.chapter + this.getInnerHtmlForAttachment(e.chapterFileName) + '</p>') : '';  \n           e.topic  = e.topic ? ('<p>' + e.topic + this.getInnerHtmlForAttachment(e.topicFileName) + '</p>') : '';  \n           e.subTopic  =  e.subTopic ? ('<p>' + e.subTopic + this.getInnerHtmlForAttachment(e.subTopicFileName) + '</p>') : '';  \n        }\n      });\n      syllabusDataList = res.academicSesssionSyllabus.academicSessionSyllabusSchedules;\n      syllabusDataList.forEach(e => {\n        e.formatedScheduledCompletionDate = this.getFormattedDateBySchoolDateFormat(e.scheduledCompletionDate);\n        e.FormatedActualCompletionDate = this.getFormattedDateBySchoolDateFormat(e.actualCompletionDate);\n        e.operations = [\n          {\n            name: 'Set Scheduled Completion Date',\n            icon: AppSettings.EDIT,\n            operationName: 'set'\n          }\n        ];\n      });\n      this.tabSettings = {\n        columns: this.cols,\n        // model: this.studentsSectionSView,\n        rows: syllabusDataList,\n        tablename: 'Schedule Details',\n        componentName: this.currentComponent,\n        visibleSelectAll: true,\n        isSelectRowRequired: true,\n        isMultiDeleteRequired: false,\n        isPaginationRequired: false\n      };\n    } else if (res.messages && res.messages.ResultMessage){\n      this.openSnackBar(res.messages.ResultMessage, true);\n    }\n    this.onSearchHeader = true;\n  }\n\n  \n  rowWiseActions(event): void{\n    this.rowsSelected = [];\n    this.rowsSelected.push(event.clickedRow);\n    this.onSchedule();\n  }\n  selectedRows(data): void{\n    if (data.length === 0){\n      this.scheduleController.reset();\n    }\n    this.rowsSelected = [];\n    data.forEach(element => {\n      this.rowsSelected.push(element);\n    });\n  }\n  onSubmitDate(): void{\n    if (this.scheduleForm.valid){\n      const scheduleUpdateArray = {\n        scheduledCompletionDate: this.scheduleForm.value.scheduleDate,\n        academicSessionSyllabusScheduleIds: []\n      };\n      this.rowsSelected.map(e => {\n        scheduleUpdateArray.academicSessionSyllabusScheduleIds.push(e.academicSessionSyllabusScheduleId);\n      });\n      this.syllabusService.updateSyllabusSchedule(scheduleUpdateArray)\n      .subscribe(res => this.onUpdateSyllabusSchedule(res), err => this.errorResponse(err));\n    }\n  }\n  onUpdateSyllabusSchedule(res): void{\n    this.getSyllabusScheduleGrid();\n    this.closeDialog();\n  }\n  onSchedule(): void{\n    if (this.rowsSelected && this.rowsSelected.length === 1){\n      this.scheduleForm.patchValue({\n        scheduleDate: this.rowsSelected[0].scheduledCompletionDate \n      });\n    }\n    this.customDialog = this.dialog.open(this.scheduleDateTemp, {\n      disableClose: true,\n      width: '500px',\n    });\n  }\n  closeDialog(): void{\n    this.scheduleDateFormPopUp.submitted = false;\n    this.scheduleController.reset();\n    this.scheduleForm.reset();\n    this.dialog.closeAll();\n  }\n  getInnerHtmlForAttachment(filename): any{\n   return filename ? ('<span class=\"pl-8\"><a target=\"_blank\" href=\"' + this.storeService.getFilePath(filename) + '\">Attachment</a></span>')  : '';\n  }\n}\n","module.exports = \"<div class=\\\"content p-sm-24\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center \\\" class=\\\"pb-8 px-12\\\">\\n    <div class=\\\"text-uppercase font-size-18\\\" translate>Syllabus Dashboard</div>\\n    <div>\\n      <button mat-raised-button color=\\\"primary\\\" translate (click)=\\\"back()\\\"\\n        class=\\\"text-uppercase mr-4\\\">{{'Back' | translate}}</button>\\n        <button mat-button (click)=\\\"getHelpText('Syllabus Dashboards')\\\">\\n          <mat-icon>info</mat-icon>\\n        </button>\\n    </div>\\n  </div>\\n  <div class=\\\"mat-elevation-z3 simple-table-container radius-t-20 p-20\\\" fxLayout=\\\"column\\\">\\n    <mat-tab-group  mat-stretch-tabs (selectedIndexChange)=\\\"onLoad=false;\\\">\\n      <mat-tab label=\\\"{{'Progress By Class & Section' | translate}}\\\">\\n          <form [formGroup]=\\\"classSectionProgressForm\\\" fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"100\\\" fxFlex=\\\"100\\\">\\n            <div fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"font-size-18 px-16 pt-20\\\">\\n              <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\"\\n                class=\\\"pr-sm-12\\\">\\n                <mat-label #board translate>Bord</mat-label>\\n                <mat-select formControlName=\\\"boardId\\\" (selectionChange)=\\\"boardChanged($event)\\\" >\\n                  <mat-option *ngFor=\\\"let board of availableSchoolBoards\\\" [value]=\\\"board.value\\\">\\n                    {{ board.label }}</mat-option>\\n                </mat-select>\\n                <mat-error>\\n                  <app-validation [labelName]='board.innerText'\\n                    [validationControl]=\\\"classSectionProgressForm.controls.sectionId\\\" [doValidate]=\\\"validate\\\">\\n                  </app-validation>\\n                </mat-error>\\n              </mat-form-field>\\n              <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\"\\n                class=\\\"pr-sm-12\\\">\\n                <mat-label #class translate>Class</mat-label>\\n                <mat-select (selectionChange)=\\\"classChanged($event)\\\" formControlName=\\\"classId\\\" >\\n                  <mat-option *ngFor=\\\"let class of availableClasses\\\" [value]=\\\"class.value\\\">\\n                    {{ class.label }}</mat-option>\\n                </mat-select>\\n                <mat-error>\\n                  <app-validation [labelName]='class.innerText'\\n                    [validationControl]=\\\"classSectionProgressForm.controls.classId\\\" [doValidate]=\\\"validate\\\">\\n                  </app-validation>\\n                </mat-error>\\n              </mat-form-field>\\n              <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"36\\\">\\n                <mat-label #section translate>Section</mat-label>\\n                <mat-select formControlName=\\\"sectionId\\\" >\\n                  <mat-option *ngFor=\\\"let section of availableSections\\\" [value]=\\\"section.value\\\">\\n                    {{ section.label }}</mat-option>\\n                </mat-select>\\n                <mat-error>\\n                  <app-validation [labelName]='section.innerText'\\n                    [validationControl]=\\\"classSectionProgressForm.controls.sectionId\\\" [doValidate]=\\\"validate\\\">\\n                  </app-validation>\\n                </mat-error>\\n              </mat-form-field>\\n            </div>\\n            <div fxLayoutAlign=\\\"end center\\\" class=\\\"px-20 pb-20\\\">\\n              <button type=\\\"reset\\\" mat-raised-button color=\\\"primary\\\" class=\\\"text-uppercase mr-8\\\" (click)=\\\"onClear(false)\\\">Clear</button>\\n              <button type=\\\"submit\\\" mat-raised-button color=\\\"accent\\\" class=\\\"text-uppercase\\\"\\n                (click)=\\\"onClickClassSection()\\\">Search</button>\\n            </div>\\n          </form>\\n      </mat-tab>\\n      <mat-tab label=\\\"{{'Progress By Teacher' | translate}}\\\">\\n            <form fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxFlex=\\\"100\\\">\\n              <div fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"font-size-18 px-16 pt-20\\\">\\n                <af-select appearance=\\\"outline\\\" label=\\\"Teacher\\\" [optionGroupRequired]=\\\"false\\\" fxFlex=\\\"100\\\" [required]=\\\"false\\\"\\n                  [formControl]=\\\"teachersControl\\\" [options]=\\\"staffList | async\\\" placeholder=\\\"Select Teacher\\\">\\n                </af-select>\\n              </div>\\n              <div fxLayoutAlign=\\\"end center\\\" class=\\\"px-20 pb-20\\\">\\n                <button mat-raised-button type=\\\"reset\\\" color=\\\"primary\\\" class=\\\"text-uppercase mr-8\\\" (click)=\\\"onClear()\\\">Clear</button>\\n                <button mat-raised-button type=\\\"submit\\\" color=\\\"accent\\\" (click)=\\\"onClickTeacher()\\\"\\n                  class=\\\"text-uppercase\\\">Search</button>\\n              </div>\\n            </form>\\n      </mat-tab>\\n     </mat-tab-group>\\n\\n     <div *ngIf=\\\"onLoad && !syllabusData?.syllabusClassSectionView?.length && !teachersData?.teachersSyllabusProgresses?.length\\\" class=\\\"errorMsg\\\">\\n      <p class=\\\"red-text text-center mb-0 font-weight-bold p-24\\\" translate>No Syllabus Found</p>\\n    </div>\\n    <div *ngIf=\\\"onLoad && (teachersData?.teachersSyllabusProgresses?.length || syllabusData?.syllabusClassSectionView?.length)\\\" fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\"  class=\\\"p-16 px-12\\\">\\n      <div appearance=\\\"outline\\\" class=\\\"icon-center\\\">Academic Session (Duration %)\\n      </div>\\n      <div appearance=\\\"outline\\\" class=\\\"example-full-width\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"px-sm-20\\\">\\n        <progress-bar [progress]=\\\"teachersData?.academicSessionCompletedPercentage || syllabusData?.academicSessionCompletedPercentage\\\" [color]=\\\"completedColor\\\">\\n        </progress-bar>\\n      </div>\\n    </div>\\n\\n    <mat-accordion multi class=\\\"mat-table border\\\" *ngIf=\\\"onLoad && syllabusData?.syllabusClassSectionView?.length\\\">\\n      <section matSort class=\\\"mat-header-row border-bottom accent\\\">\\n        <span class=\\\"mat-header-cell\\\">Board</span>\\n        <span class=\\\"mat-header-cell\\\">Class</span>\\n        <span class=\\\"mat-header-cell\\\">Section</span>\\n        <span class=\\\"mat-header-cell\\\">Overall Progress</span>\\n      </section>\\n      <mat-expansion-panel *ngFor=\\\"let item of syllabusData?.syllabusClassSectionView\\\" [disabled]=\\\"!item?.classSectionProgressView?.length\\\">\\n        <mat-expansion-panel-header class=\\\"mat-row\\\">\\n          <span class=\\\"mat-cell text-truncate pr-4\\\">{{item.schoolBoard}}</span>\\n          <span class=\\\"mat-cell text-truncate pr-4\\\">{{item.className}}</span>\\n          <span class=\\\"mat-cell text-truncate pr-4\\\">{{item.section}}</span>\\n          <span class=\\\"mat-cell text-truncate pr-4\\\">\\n            <progress-bar [progress]=\\\"item?.completedPercentage\\\" [color]=\\\"completedColor\\\">\\n            </progress-bar>\\n          </span>\\n        </mat-expansion-panel-header>\\n        <!-- course details -->\\n        <div class=\\\"border header-height\\\">\\n          <section matSort class=\\\"mat-header-row primary\\\">\\n            <span class=\\\"mat-header-cell\\\">Course</span>\\n            <span class=\\\"mat-header-cell\\\">Teacher</span>\\n            <span class=\\\"mat-header-cell\\\">Course Progress</span>\\n          </section>\\n\\n          <mat-expansion-panel *ngFor=\\\"let teacher of item.classSectionProgressView\\\">\\n            <mat-expansion-panel-header class=\\\"mat-row\\\">\\n              <span class=\\\"mat-cell text-truncate pr-4\\\">{{teacher.courseName}}</span>\\n              <span class=\\\"mat-cell text-truncate pr-4\\\">{{teacher.teacherName ? teacher.teacherName : '---'}}</span>\\n              <span class=\\\"mat-cell text-truncate pr-4\\\">\\n                <progress-bar [progress]=\\\"teacher?.progress?.completedCount\\\" [color]=\\\"completedColor\\\">\\n                </progress-bar>\\n              </span>\\n            </mat-expansion-panel-header>\\n            <!-- chapter details -->\\n            <div class=\\\"border\\\">\\n              <section matSort class=\\\"mat-header-row primary\\\">\\n                <span class=\\\"mat-header-cell\\\">Item</span>\\n                <span class=\\\"mat-header-cell\\\">Completed</span>\\n                <span class=\\\"mat-header-cell\\\">Pending</span>\\n              </section>\\n\\n              <mat-expansion-panel *ngFor=\\\"let chapter of teacher?.syllabusSubView; let f = first\\\" [disabled]=\\\"!f || !chapter?.syllabusSubProgressView?.length\\\">\\n                <mat-expansion-panel-header class=\\\"mat-row\\\">\\n                  <span class=\\\"mat-cell text-truncate pr-4\\\">{{chapter.item}}</span>\\n                  <span class=\\\"mat-cell text-truncate pr-4\\\">{{chapter.completeCount}}</span>\\n                  <span class=\\\"mat-cell text-truncate pr-4\\\">{{chapter.pendingcount}}</span>\\n                </mat-expansion-panel-header>\\n                <!-- topics details -->\\n                <div class=\\\"border\\\">\\n                  <section matSort class=\\\"mat-header-row\\\">\\n                    <span class=\\\"mat-header-cell\\\">Chapter</span>\\n                    <span class=\\\"mat-header-cell\\\">Status</span>\\n                    <span class=\\\"mat-header-cell\\\">Topics Completed</span>\\n                    <span class=\\\"mat-header-cell\\\">Topics Pending</span>\\n                  </section>\\n                  <mat-expansion-panel *ngFor=\\\"let topics of chapter?.syllabusSubProgressView\\\" disabled>\\n                    <mat-expansion-panel-header class=\\\"mat-row\\\">\\n                      <span class=\\\"mat-cell text-truncate pr-4\\\">{{topics.name}}</span>\\n                      <span class=\\\"mat-cell text-truncate pr-4\\\">{{topics.status}}</span>\\n                      <span class=\\\"mat-cell text-truncate pr-4\\\">{{topics.topicCompletedCount}}</span>\\n                      <span class=\\\"mat-cell text-truncate pr-4\\\">{{topics.topicPendingCount}}</span>\\n                    </mat-expansion-panel-header>\\n                    <!-- topics details -->\\n                  </mat-expansion-panel>\\n                </div>\\n              </mat-expansion-panel>\\n            </div>\\n          </mat-expansion-panel>\\n        </div>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n\\n\\n    <mat-accordion multi class=\\\"mat-table border\\\" *ngIf=\\\"onLoad && teachersData?.teachersSyllabusProgresses?.length\\\">\\n      <section matSort class=\\\"mat-header-row border-bottom accent\\\">\\n        <span class=\\\"mat-header-cell\\\">Teacher</span>\\n        <span class=\\\"mat-header-cell\\\">Teacher Progress</span>\\n      </section>\\n    \\n      <mat-expansion-panel *ngFor=\\\"let teacher of teachersData?.teachersSyllabusProgresses\\\">\\n        <mat-expansion-panel-header class=\\\"mat-row\\\">\\n          <span class=\\\"mat-cell text-truncate pr-4\\\">{{teacher.teacherName}}</span>\\n          <span class=\\\"mat-cell text-truncate pr-4\\\">\\n            <progress-bar [progress]=\\\"teacher?.completedPercentage\\\" [color]=\\\"completedColor\\\">\\n            </progress-bar>\\n          </span>\\n        </mat-expansion-panel-header>\\n        <!-- chapter details -->\\n            <!-- chapter details -->\\n            <div class=\\\"border header-height\\\">\\n              <section matSort class=\\\"mat-header-row accent\\\">\\n                <span class=\\\"mat-header-cell\\\">Class</span>\\n                <span class=\\\"mat-header-cell\\\">Section</span>\\n                <span class=\\\"mat-header-cell\\\">Subject</span>\\n                <span class=\\\"mat-header-cell\\\">Course Progress</span>\\n              </section>\\n              <mat-expansion-panel *ngFor=\\\"let chapter of teacher.syllabusDashboardList\\\">\\n                <mat-expansion-panel-header class=\\\"mat-row\\\">\\n                  <span class=\\\"mat-cell text-truncate pr-4\\\">{{chapter.className}}</span>\\n                  <span class=\\\"mat-cell text-truncate pr-4\\\">{{chapter.section}}</span>\\n                  <span class=\\\"mat-cell text-truncate pr-4\\\">{{chapter.subject}}</span>\\n                  <span class=\\\"mat-cell text-truncate pr-4\\\">\\n                    <progress-bar [progress]=\\\"chapter?.progress?.completedCount\\\" [color]=\\\"completedColor\\\">\\n                    </progress-bar>\\n                  </span>\\n                </mat-expansion-panel-header>\\n                <!-- topics details -->\\n                <div class=\\\"border\\\">\\n                  <section matSort class=\\\"mat-header-row accent\\\">\\n                    <span class=\\\"mat-header-cell\\\">Item</span>\\n                    <span class=\\\"mat-header-cell\\\">Completed</span>\\n                    <span class=\\\"mat-header-cell\\\">Pending</span>\\n                  </section>\\n                  <mat-expansion-panel *ngFor=\\\"let topics of chapter?.syllabusSubView; let f = first\\\" [disabled]=\\\"!f || !topics?.syllabusSubProgressView?.length\\\" >\\n                    <mat-expansion-panel-header class=\\\"mat-row\\\">\\n                      <span class=\\\"mat-cell text-truncate pr-4\\\">{{topics.item}}</span>\\n                      <span class=\\\"mat-cell text-truncate pr-4\\\">{{topics.completeCount}}</span>\\n                      <span class=\\\"mat-cell text-truncate pr-4\\\">{{topics.pendingcount}}</span>\\n                    </mat-expansion-panel-header>\\n                    <div class=\\\"border\\\">\\n                      <section matSort class=\\\"mat-header-row accent\\\">\\n                        <span class=\\\"mat-header-cell\\\">Chapter</span>\\n                        <span class=\\\"mat-header-cell\\\">Status</span>\\n                        <span class=\\\"mat-header-cell\\\">Topics Completed</span>\\n                        <span class=\\\"mat-header-cell\\\">Topics Pending</span>\\n                      </section>\\n                      <mat-expansion-panel *ngFor=\\\"let topic of topics?.syllabusSubProgressView\\\" disabled>\\n                        <mat-expansion-panel-header class=\\\"mat-row\\\">\\n                          <span class=\\\"mat-cell text-truncate pr-4\\\">{{topic.name}}</span>\\n                          <span class=\\\"mat-cell text-truncate pr-4\\\">{{topic.status}}</span>\\n                          <span class=\\\"mat-cell text-truncate pr-4\\\">{{topic.topicCompletedCount}}</span>\\n                          <span class=\\\"mat-cell text-truncate pr-4\\\">{{topic.topicPendingCount}}</span>\\n                        </mat-expansion-panel-header>\\n                        <!-- topics details -->\\n                      </mat-expansion-panel>\\n                    </div>\\n                  </mat-expansion-panel>\\n                </div>\\n              </mat-expansion-panel>\\n            </div>\\n      </mat-expansion-panel>\\n    </mat-accordion>\\n\\n    <div *ngIf=\\\"onLoad && (teachersData?.teachersSyllabusProgresses?.length || syllabusData?.syllabusClassSectionView?.length)\\\" fxlayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"px-16 pt-12\\\">\\n      <div class=\\\"pr-28\\\" fxLayoutAlign=\\\"center center\\\">\\n        <mat-icon class=\\\"green-fg green-bg mr-8 mat-elevation-z3 border-radius-2\\\">crop_din</mat-icon> Completed\\n      </div>\\n  \\n      <div fxLayoutAlign=\\\"cnter center\\\">\\n        <mat-icon class=\\\"grey-400-fg grey-400-bg mr-8 mat-elevation-z3 border-radius-2\\\">crop_din</mat-icon> Pending\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n   \"","module.exports = \".mat-accordion .mat-header-row {\\n  padding-left: 1.5rem;\\n  padding-right: 2rem; }\\n\\n.mat-expansion-panel {\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n\\n.mat-expansion-panel-header.mat-row {\\n  border-bottom: none; }\\n\\n.mat-table {\\n  display: block; }\\n\\n.mat-expansion-panel-spacing {\\n  margin: 0px; }\\n\\n.mat-header-row {\\n  min-height: 56px;\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n\\n.mat-row {\\n  min-height: 48px; }\\n\\n.mat-row, .mat-header-row {\\n  display: -webkit-box;\\n  display: flex;\\n  border-bottom-width: 1px;\\n  border-bottom-style: solid;\\n  -webkit-box-align: center;\\n          align-items: center;\\n  padding: 0 24px;\\n  box-sizing: border-box; }\\n\\n.mat-row::after, .mat-header-row::after {\\n    display: inline-block;\\n    min-height: inherit;\\n    content: ''; }\\n\\n.mat-header-cell {\\n  color: currentColor !important; }\\n\\n.mat-cell, .mat-header-cell {\\n  -webkit-box-flex: 1;\\n          flex: 1;\\n  overflow: hidden;\\n  word-wrap: break-word;\\n  font-size: 16px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N5bGxhYnVzL3N5bGxhYnVzLXZpZXcvc3lsbGFidXMtdmlldy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG9CQUFvQjtFQUNwQixtQkFBbUIsRUFBQTs7QUFFckI7RUFDRSw0Q0FBd0MsRUFBQTs7QUFHMUM7RUFDRSxtQkFBbUIsRUFBQTs7QUFRckI7RUFDRSxjQUFjLEVBQUE7O0FBRWhCO0VBQ0EsV0FBVyxFQUFBOztBQUVYO0VBQ0UsZ0JBWDBCO0VBWTFCLDRDQUE0QyxFQUFBOztBQUc5QztFQUNFLGdCQWZtQixFQUFBOztBQWtCckI7RUFDRSxvQkFBYTtFQUFiLGFBQWE7RUFDYix3QkFBd0I7RUFDeEIsMEJBQTBCO0VBQzFCLHlCQUFtQjtVQUFuQixtQkFBbUI7RUFDbkIsZUF0QitCO0VBdUIvQixzQkFBc0IsRUFBQTs7QUFOeEI7SUFZSSxxQkFBcUI7SUFDckIsbUJBQW1CO0lBQ25CLFdBQVcsRUFBQTs7QUFHZjtFQUNFLDhCQUE4QixFQUFBOztBQUVoQztFQUNFLG1CQUFPO1VBQVAsT0FBTztFQUNQLGdCQUFnQjtFQUNoQixxQkFBcUI7RUFDckIsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hY2FkZW1pY3Mvc3lsbGFidXMvc3lsbGFidXMtdmlldy9zeWxsYWJ1cy12aWV3LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1hY2NvcmRpb24gLm1hdC1oZWFkZXItcm93IHtcbiAgcGFkZGluZy1sZWZ0OiAxLjVyZW07XG4gIHBhZGRpbmctcmlnaHQ6IDJyZW07XG59XG4ubWF0LWV4cGFuc2lvbi1wYW5lbHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMCwwLDAsLjEyKTtcbn1cblxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLm1hdC1yb3cge1xuICBib3JkZXItYm90dG9tOiBub25lO1xufVxuXG4vL2NvcGllZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9hbmd1bGFyL21hdGVyaWFsMi9ibG9iL21hc3Rlci9zcmMvbGliL3RhYmxlL3RhYmxlLnNjc3NcbiRtYXQtaGVhZGVyLXJvdy1oZWlnaHQ6IDU2cHg7XG4kbWF0LXJvdy1oZWlnaHQ6IDQ4cHg7XG4kbWF0LXJvdy1ob3Jpem9udGFsLXBhZGRpbmc6IDI0cHg7XG5cbi5tYXQtdGFibGUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5tYXQtZXhwYW5zaW9uLXBhbmVsLXNwYWNpbmd7XG5tYXJnaW46MHB4IDtcbn1cbi5tYXQtaGVhZGVyLXJvdyB7XG4gIG1pbi1oZWlnaHQ6ICRtYXQtaGVhZGVyLXJvdy1oZWlnaHQ7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpXG59XG5cbi5tYXQtcm93IHtcbiAgbWluLWhlaWdodDogJG1hdC1yb3ctaGVpZ2h0O1xufVxuXG4ubWF0LXJvdywgLm1hdC1oZWFkZXItcm93IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMXB4O1xuICBib3JkZXItYm90dG9tLXN0eWxlOiBzb2xpZDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgcGFkZGluZzogMCAkbWF0LXJvdy1ob3Jpem9udGFsLXBhZGRpbmc7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgLy8gV29ya2Fyb3VuZCBmb3IgaHR0cHM6Ly9nb28uZ2wvcEZtakpEIGluIElFIDExLiBBZGRzIGEgcHNldWRvXG4gIC8vIGVsZW1lbnQgdGhhdCB3aWxsIHN0cmV0Y2ggdGhlIHJvdyB0aGUgY29ycmVjdCBoZWlnaHQuIFNlZTpcbiAgLy8gaHR0cHM6Ly9jb25uZWN0Lm1pY3Jvc29mdC5jb20vSUUvZmVlZGJhY2svZGV0YWlscy84MDI2MjVcbiAgJjo6YWZ0ZXIge1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBtaW4taGVpZ2h0OiBpbmhlcml0O1xuICAgIGNvbnRlbnQ6ICcnO1xuICB9XG59XG4ubWF0LWhlYWRlci1jZWxse1xuICBjb2xvcjogY3VycmVudENvbG9yICFpbXBvcnRhbnQ7XG59XG4ubWF0LWNlbGwsIC5tYXQtaGVhZGVyLWNlbGwge1xuICBmbGV4OiAxO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AppSettings } from 'app/app.constants';\nimport { StaffCommonService } from 'app/service/staff/staffCommon.service';\nimport { CommonService } from 'app/service/common.service';\nimport { SyllabusSchedulesService } from 'app/service/syllabus/syllabus-schedules.service';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-syllabus-view',\n  templateUrl: './syllabus-view.component.html',\n  styleUrls: ['./syllabus-view.component.scss'],\n  providers: [StaffCommonService, SyllabusSchedulesService]\n})\nexport class SyllabusViewComponent extends CommonComponent implements OnInit {\n  classSectionProgressForm: FormGroup;\n  teachersControl = new FormControl(null);\n  validate = true;\n  staffList = Promise.resolve([]);\n  onLoad = false;\n  teachersData: any;\n  syllabusData: any;\n  completedColor = '#4caf50';\n  // tslint:disable-next-line: max-line-length\n  constructor(public _fb: FormBuilder, public staffCommonService: StaffCommonService, public commonService: CommonService, public scheduleService: SyllabusSchedulesService, public snackBar: MatSnackBar){\n    super();\n  }\n  ngOnInit(): void {\n    this.initializeForms();\n    this.getAvailableSchoolBoards();\n    this.getStaffList();\n  }\n  initializeForms(): void{\n    this.classSectionProgressForm = this._fb.group({\n      boardId: [null],\n      classId: [null],\n      sectionId: [null]\n    });\n  }\n  getStaffList(): void {\n    this.staffCommonService.fetchStaffs(AppSettings.TEACHING_STAFF_CODE)\n      .subscribe(res => this.setStaffData(res));\n  }\n  setStaffData(staffData): void {\n    const dropDownData = staffData.map(x => ({\n      label: x.name,\n      value: x.id\n    }));\n    this.staffList = Promise.resolve(dropDownData);\n  }\n  getAvailableSchoolBoards(): void {\n    this.availableSchoolBoards = [];\n    this.commonService.schoolBoards().subscribe(res => {\n      if (res.listViews !== undefined && res.listViews.length) {\n        res.listViews.forEach(element => {\n          this.availableSchoolBoards.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n        if (!this.classSectionProgressForm.value.boardId){\n          this.currentBoardId = this.availableSchoolBoards[0].value;\n          this.getAvailableClasses(this.currentBoardId);\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  boardChanged(event, onManualChange = false): void {\n    if (event.value) {\n      if (!onManualChange){\n        this.classSectionProgressForm.patchValue({\n          classId: null,\n          sectionId: null\n        });\n        this.availableClasses = [];\n        this.availableSections = [];\n      }\n      this.getAvailableClasses(event.value);\n    }\n  }\n  classChanged(event, onManualChange= false): void {\n    if (!onManualChange){\n      this.classSectionProgressForm.patchValue({\n        sectionId: null\n      });\n      this.availableSections = [];\n    }\n    this.getAvailableSections(this.classSectionProgressForm.controls.boardId, this.classSectionProgressForm.controls.classId);\n  }\n  onClickTeacher(): void{\n    if (this.teachersControl.valid){\n        this.scheduleService.adminTeacherSyllabusProgress(this.teachersControl.value)\n        .subscribe(res => this.onGetProgress(res, true), err => this.errorResponse(err));\n    }\n  }\n  onClickClassSection(): void{\n      if (this.classSectionProgressForm.valid){\n        // tslint:disable-next-line: max-line-length\n        this.scheduleService.adminClassSyllabusProgress(this.classSectionProgressForm.value.boardId, this.classSectionProgressForm.value.classId, this.classSectionProgressForm.value.sectionId)\n        .subscribe(res => this.onGetProgress(res), err => this.errorResponse(err));\n      }\n  }\n  onGetProgress(res, teacher = false): void{\n    this.teachersData = null;\n    this.syllabusData = null;\n    if (teacher){\n      this.teachersData = res;\n    } else{\n      this.syllabusData = res;\n    } \n    this.onLoad = true;\n  }\n  back(): void{\n    history.back();\n  }\n  onClear(fromTeacher = true): void{\n    this.onLoad = false;\n    if (fromTeacher){\n      this.teachersControl.reset();\n    }else{\n      this.classSectionProgressForm.reset();\n    }\n  }\n}","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SyllabusRoutingModule } from './syllabus-routing.module';\nimport { SyllabusScheduleComponent } from './syllabus-schedule/syllabus-schedule.component';\nimport { SyllabusProgressComponent } from './syllabus-progress/syllabus-progress.component';\nimport { SyllabusViewComponent } from './syllabus-view/syllabus-view.component';\nimport { MatSelectModule } from '@angular/material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatcomponentsModule } from 'app/main/matcomponents.module';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { SharedManagementModule } from 'app/shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ProgressBarModule } from 'angular-progress-bar';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from 'app/interceptors/token-interceptor';\nimport { SyllabusEntryDetailsComponent } from './syllabus-entry-details/syllabus-entry-details.component';\n\n@NgModule({\n  declarations: [SyllabusScheduleComponent, SyllabusProgressComponent, SyllabusEntryDetailsComponent, SyllabusViewComponent],\n  imports: [\n    CommonModule,\n    MatSelectModule,\n    FormsModule, MatcomponentsModule, FuseSharedModule,\n    ReactiveFormsModule,\n    SharedManagementModule,\n    SyllabusRoutingModule,\n    TranslateModule,\n    DragDropModule,\n    ProgressBarModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true,\n    },\n  ],    \n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n\n})\nexport class SyllabusModule { }\n","/**\n * Teacher API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { BASE_PATH } from '../base/variables';\nimport { Configuration } from '../base/configuration';\nimport { BaseUrlConfig, ModuleConfig, BaseModuleConfig } from '../../url.config';\n\n@Injectable()\nexport class StaffCommonService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Teacher;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Fetch Staff Types\n     * \n     * @param authorization access token\n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public fetchStaffTypes(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchStaffTypes(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchStaffTypes(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchStaffTypes(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n        \n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Staff_Types,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Fetch Staffs\n     * \n     * @param authorization access token\n     * @param staffTypeCode \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public fetchStaffs(staffTypeCode?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public fetchStaffs(staffTypeCode?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public fetchStaffs(staffTypeCode?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public fetchStaffs(staffTypeCode?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        \n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (staffTypeCode !== undefined && staffTypeCode !== null) {\n            queryParameters = queryParameters.set('staffTypeCode', <any>staffTypeCode);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Staff_Based_On_Code,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n"],"sourceRoot":""}