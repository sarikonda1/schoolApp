{"version":3,"sources":["webpack:///./src/app/modules/finance/invoice/invoice-details/invoice-details.component.html","webpack:///./src/app/modules/finance/invoice/invoice-details/invoice-details.component.scss","webpack:///./src/app/modules/finance/invoice/invoice-details/invoice-details.component.ts"],"names":[],"mappings":"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","file":"default~app-modules-finance-invoice-invoice-module~app-modules-student-student-module.js","sourcesContent":["module.exports = \"<app-af-details [keyValues]=\\\"studentDetails\\\" [title]=\\\"'Student Information'\\\" [header]=\\\" 'INVOICE DETAILS' \\\"\\n  [isBackButtonRequired]=true>\\n</app-af-details>\\n\\n<div *ngIf=\\\"showPayment\\\">\\n  <app-af-payments [inputData]=\\\"feeAccount\\\" (outPutValue)='savePayment($event)' [isRefNumberRequired]=\\\"true\\\"></app-af-payments>\\n</div>\\n\\n<app-af-details [keyValues]=\\\"invoiceInformation\\\" [title]=\\\"'Invoice Information'\\\" [expand]=\\\"closeInvoiceForm\\\" [templateRef]=\\\"onCancelInvoice ? isCancel : adjustmentTemplate\\\" [actions]=\\\"actions\\\"\\n  (action)=operations($event)></app-af-details>\\n\\n<div class=\\\"px-sm-40 py-12\\\">\\n  <div class=\\\"mat-elevation-z2 simple-table-container radius-t-20 pt-12\\\" fxLayout=\\\"column\\\">\\n    <div class=\\\"text-uppercase font-size-18 border-bottom p-20\\\"><span translate>INVOICE PARTICULARS</span></div>\\n    <app-table [settings]=\\\"particurlarsSettings\\\" [dynamicClass]=\\\"'row-class'\\\"></app-table>\\n  </div>\\n</div>\\n\\n<div class=\\\"px-sm-40 py-12\\\">\\n  <div class=\\\"mat-elevation-z2 simple-table-container radius-t-20 pt-12\\\" fxLayout=\\\"column\\\">\\n    <app-table [settings]=\\\"adjustmentSettings\\\" [templateRef]=\\\"adjustmentTemplate\\\" [closeRowForm]='closeAddPanel'\\n      (openAddForm)=\\\"openForm()\\\">\\n    </app-table>\\n  </div>\\n</div>\\n\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"px-sm-40 pt-16\\\">\\n  <mat-checkbox class=\\\"mr-20\\\" [checked] = \\\"true\\\" (change)=\\\"changeValue($event)\\\"><span translate>Hide Corrected Payments</span></mat-checkbox> \\n</div>\\n\\n<div *ngIf=\\\"isValid\\\" class=\\\"px-sm-40 py-12\\\">\\n  <div class=\\\"mat-elevation-z2 simple-table-container radius-t-20 pt-12\\\" fxLayout=\\\"column\\\">\\n    <app-table [settings]=\\\"adjustmentSettings\\\" [templateRef]=\\\"isCancel\\\" [closeRowForm]='closeAddPanel'\\n      (openAddForm)=\\\"openForm()\\\">\\n    </app-table>\\n  </div>\\n</div>\\n\\n<ng-template #adjustmentTemplate>\\n  <form [formGroup]=\\\"adjustmentList\\\" (ngSubmit)=\\\"onSumbit(adjustmentList)\\\" #form=\\\"ngForm\\\" class=\\\"pt-20\\\">\\n    <ng-container formArrayName=\\\"adjustmentLists\\\"\\n      *ngFor=\\\"let itemrow of addnewInvoiceadjustmentForm.controls; let i=index, let l = last;let f = first\\\">\\n      <div [formGroupName]=\\\"i\\\" fxFlexFill fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxLayout.gt-sm=\\\"row\\\"\\n        class=\\\"pt-12\\\">\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"23\\\" fxFlex=\\\"100\\\">\\n          <mat-label #invoiceAdjustmentTypeId translate>Adjustment Type</mat-label>\\n          <mat-select formControlName=\\\"invoiceAdjustmentTypeId\\\" required\\n            (selectionChange)=\\\"dropdownDisable($event,itemrow.controls.invoiceAdjustmentTypeId)\\\">\\n            <mat-option [disabled]=\\\"item.disable\\\" value=\\\"option1\\\" *ngFor=\\\"let item of invoiceAdjustmentTypes\\\"\\n              [value]=\\\"item.id\\\" ngDefaultControl>\\n              {{item.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='invoiceAdjustmentTypeId.innerText'\\n              [validationControl]=\\\"itemrow.controls.invoiceAdjustmentTypeId\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" class=\\\"pl-sm-16\\\" fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"23\\\"\\n          fxFlex=\\\"100\\\">\\n          <mat-label #adjustmentAmount translate>Adjustment Amount</mat-label>\\n          <input #adjAmount required matInput id=\\\"form-{{i}}\\\" formControlName=\\\"adjustmentAmount\\\" autocomplete=\\\"off\\\">\\n          <mat-error>\\n            <app-validation [labelName]=\\\"adjustmentAmount.innerText\\\"\\n              [validationControl]=\\\"itemrow.controls.adjustmentAmount\\\" [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" class=\\\"pl-sm-16 icon-center\\\" fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"23\\\"\\n          fxFlex=\\\"100\\\">\\n          <mat-label #adjustmentDate translate>Adjustment Date</mat-label>\\n          <input matInput [matDatepicker]=\\\"adjustmentDatePicker\\\" [max]=\\\"currentDate\\\" formControlName=\\\"adjustmentDate\\\"\\n            required >\\n          <mat-datepicker-toggle matSuffix [for]=\\\"adjustmentDatePicker\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #adjustmentDatePicker></mat-datepicker>\\n          <mat-error>\\n            <app-validation [labelName]='adjustmentDate.innerText' [validationControl]=\\\"itemrow.controls.adjustmentDate\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" class=\\\"pl-sm-16\\\" fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"23\\\"\\n          fxFlex=\\\"100\\\">\\n          <mat-label #reason translate>reason</mat-label>\\n          <input matInput formControlName=\\\"reason\\\" autocomplete=\\\"off\\\" (keyup)=\\\"preventSpaceForArray($event,itemrow.controls.reason)\\\">\\n          <mat-error>\\n            <app-validation [labelName]='reason.innerText' [validationControl]=\\\"itemrow.controls.reason\\\"\\n              [doValidate]=\\\"validate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <button *ngIf=\\\"addnewInvoiceadjustmentForm?.controls?.length > 1\\\" mat-icon-button type=\\\"button\\\" class=\\\"mb-16 red-fg\\\"\\n          (click)=\\\"deleteRow(itemrow,i)\\\">\\n          <mat-icon>remove_circle</mat-icon>\\n        </button>\\n        <button *ngIf=\\\"l\\\" mat-icon-button class=\\\"mb-16 accent-fg\\\" type=\\\"button\\\"\\n          [disabled]=\\\"isDisabled\\\" (click)=\\\"addNewRow(itemrow)\\\">\\n          <mat-icon>add_circle</mat-icon>\\n        </button>\\n      </div>\\n    </ng-container>\\n    <div *ngIf=\\\"isDisabled\\\" class=\\\"red-fg\\\">{{errorMsg}}</div>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"py-16\\\">\\n      <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\" (click)=\\\"cancel()\\\">{{'Cancel' | translate}}</button>\\n      <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\" [disabled]=\\\"isDisabled\\\">{{'Submit' | translate}}</button>\\n    </div>\\n  </form>\\n</ng-template>\\n\\n<app-table [settings]=\\\"paymentSettings\\\" [closeRowForm]=closeAddPanels (openAddForm)=\\\"openPaymentForm()\\\"  (rowBasedAction)='rowActions($event)' [newButtonDisable]=\\\"buttonDisable\\\">\\n</app-table>\\n\\n<ng-template #isCancel>\\n  <form [formGroup]=\\\"cancellationForm\\\" (ngSubmit)=\\\"InvoiceCancel(cancellationForm)\\\" #appForm=\\\"ngForm\\\">\\n    <div fxLayout=\\\"column\\\">\\n      <div class=\\\"py-16\\\" translate>\\n        Please Confirm the Cancellation of this invoice by including the Reason for Cancellation.\\n      </div>\\n      <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n        <mat-label #cancelledReason translate>Reason For Cancellation</mat-label>\\n        <input autocomplete=\\\"off\\\" matInput formControlName=\\\"cancelledReason\\\" required\\n        (keyup)=\\\"preventSpaceForArray($event,cancellationForm.controls.cancelledReason)\\\" (blur)=\\\"trimTextBoxSpaces('cancellationForm','cancelledReason')\\\">\\n\\n        <mat-error>\\n          <app-validation [labelName]=\\\"cancelledReason.innerText\\\"\\n            [validationControl]=\\\"cancellationForm.controls.cancelledReason\\\"\\n            class=\\\"error-msg messages text-left text-danger\\\" [doValidate]=\\\"validateForm\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\n      <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\" (click)=\\\"closeForm()\\\">{{'Cancel' | translate}}</button>\\n      <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button color=\\\"accent\\\" [disabled]=\\\"disbleSubmitBtn\\\">{{'Submit' | translate}}</button>\\n    </div>\\n  </form>\\n</ng-template>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZmluYW5jZS9pbnZvaWNlL2ludm9pY2UtZGV0YWlscy9pbnZvaWNlLWRldGFpbHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ViewChild, ChangeDetectorRef, TemplateRef, QueryList, ViewChildren } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators, FormArray } from '@angular/forms';\nimport { InvoiceService } from 'app/service/invoice/invoice.service';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { InvoiceAdjustmentDataView } from 'app/models/invoice/invoice-adustment-data-view';\nimport { AppSettings, Pattern } from 'app/app.constants';\nimport { CommonService } from 'app/service/common.service';\nimport { RouteConfig, FeeModuleConfig } from 'app/url.config';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { StudentDBService } from 'app/service/student-information-system/student-db.service';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { InvoiceSearchCriteriaView } from 'app/models/invoice/invoice-search-criteria-view';\nimport { PaymentCorrectionService } from 'app/service/payments/payment-correction.service';\nimport { PaymentViewModel } from 'app/models/invoice/payment-view-model';\nimport * as HttpStatus from 'http-status-codes';\nimport { Subscription } from 'rxjs';\nimport { OnlinePaymentService } from 'app/service/online-payments/online-payment.service';\nimport { RazorpayViewModel } from 'app/shared/payment-gateway/razorpay/config';\nimport { PaypalViewModel } from 'app/shared/payment-gateway/paypal/config';\nimport { OAuthService } from 'angular-oauth2-oidc';\nimport { PayemtGatewayOptionsComponent } from 'app/shared/payment-gateway/payemt-gateway-options/payemt-gateway-options.component';\n\n\n@Component({\n  selector: 'app-invoice-details',\n  templateUrl: './invoice-details.component.html',\n  styleUrls: ['./invoice-details.component.scss'],\n  providers: [OnlinePaymentService]\n})\nexport class InvoiceDetailsComponent extends CommonComponent implements OnInit {\n  @ViewChild('appForm') aForm;\n  invoiceInformation: Array<{ Label: string, Value: string }> = [];\n  @ViewChild('form') form;\n  @ViewChild('adjustmentTemplate') customTemplate: TemplateRef<any>;\n  @ViewChild('isCancel') customTemplates: TemplateRef<any>;\n  @ViewChildren('adjAmount') adjAmount: QueryList<any>;\n\n  adjustmentShow: boolean;\n  adjustmentList: FormGroup;\n  invoiceAdjustmentTypes: any;\n  studentDetails: Array<{ Label: string, Value: string }> = [];\n  invoiceParticulars: Array<any> = [];\n  invoicePayments: Array<any> = [];\n  invoiceAdjustments: Array<any> = [];\n  invoiceData: Array<any> = [];\n  adjustmentCols: { field: string; header: string; sort: boolean; }[];\n  paymentCols: { field: string; header: string; sort: boolean; }[];\n  adjustmentSettings: any = {};\n  paymentSettings: any = {};\n  currentComponent: 'InvoiceDetails';\n  invoiceParticularHeadders: any;\n  invoiceInformationHeadders: any;\n  studentDetailsHeadders: any;\n  particurlarsCols: { field: string; header: string; sort: boolean; }[];\n  particurlarsSettings: any = {};\n  invoiceAdjustmentDataView: InvoiceAdjustmentDataView;\n  validate: boolean;\n  isDisabled: boolean;\n  closeAddPanel: boolean;\n  ids: any = [];\n  isData = false;\n  searchForm: FormGroup;\n  invoiceCols: {}[];\n  invoiceSettings: {};\n  invoiceIds: any = [];\n  invoiceId: any;\n  isCancelled: boolean;\n  isCancel: boolean;\n  actions: Array<any> = [];\n  studentId: any;\n  isValid: any;\n  cancellationForm: FormGroup;\n  invoiceCriteriaViewModel: InvoiceSearchCriteriaView;\n  validateForm: boolean;\n  HttpStatus: any;\n  showPayment: boolean;\n  paymentViewModel: PaymentViewModel;\n  feeAccountId: number;\n  feeAccount: {};\n  clearSubscription: Subscription;\n  closeAddPanels = false;\n  onCancelInvoice = false;\n  closeInvoiceForm = true;\n  academicSessionId: any;\n  fromParent = false;\n  responseSubscription: Subscription;\n  buttonDisable = false;\n  isCorrected = true;\n  isSchoolhasActiveServices = false;\n  currentInvoiceDetails: any;\n  razorpayViewModel: RazorpayViewModel;\n  paypalViewModel: PaypalViewModel;\n  currency = 'INR';\n  constructor(public dialogRef: MatDialog, private _fb: FormBuilder, private invoiceService: InvoiceService,\n    public commonService: CommonService, private studentDBService: StudentDBService, private cd: ChangeDetectorRef,\n    private router: Router, private route: ActivatedRoute, private paymentCorrectionService: PaymentCorrectionService,\n    public snackBar: MatSnackBar, public onlinePaymentService: OnlinePaymentService, private oauthService: OAuthService) {\n    super();\n    this.clearSubscription = this.commonService.isCorrectionClear().subscribe(res => {\n      if (!res.isClear) {\n        this.showPayment = res.isClear;\n        this.closeAddPanels = false;\n        this.buttonDisable = false;\n      }\n    });\n\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.invoiceIds.push(params.id);\n        this.invoiceId = params.id;\n      }\n    });\n    this.HttpStatus = require('http-status-codes');\n    this.prepareInvoiceDetailsTable(this.invoiceData, true);\n    this.prepareAdjustmentTable(this.invoiceAdjustments, true);\n    this.preparePaymentTable(this.invoicePayments, true);\n    this.prepareParticularsTable(this.invoiceParticulars);\n    this.invoiceDetails();\n    this.adjustmentForm();\n    this.invoiceAdjustmentDataView = {\n      invoiceId: null,\n      invoiceAdjustmentListView: [{\n        adjustmentAmount: 0,\n        adjustmentDate: '',\n        invoiceAdjustmentTypeId: 0,\n        reason: null\n      }]\n    };\n    this.cancellationForm = new FormGroup({\n      cancelledReason: new FormControl('', [Validators.required, Validators.maxLength(180)]),\n      id: new FormControl(''),\n    });\n    this.invoiceCriteriaViewModel = {\n      ids: [],\n      cancelledReason: ''\n    };\n    if (this.fromParent) {\n      this.getActiveServices();\n    }\n  }\n  getActiveServices(): void {\n    this.onlinePaymentService.activeSchoolServices(null, 'Online')\n      .subscribe(res => this.setActivesServices(res), error => this.errorResponse(error));\n  }\n  setActivesServices(res): void {\n    if (res.resultModelList && res.resultModelList.length) {\n      this.isSchoolhasActiveServices = true;\n    }\n  }\n  adjustmentForm(): void {\n    this.adjustmentList = this._fb.group({\n      adjustmentLists: this._fb.array([this.initItemRows(true, false)]),\n    });\n  }\n\n  // list all your form controls here, which belongs to your form array\n  initItemRows(addVisable: boolean, removeVisable: boolean): FormGroup {\n    return this._fb.group({\n      invoiceAdjustmentTypeId: new FormControl(null, [Validators.required]),\n      adjustmentDate: new FormControl(null, [Validators.required]),\n      adjustmentAmount: new FormControl(null, [Validators.required, Validators.max(9999999.99), Validators.min(0.1), Validators.pattern(Pattern.DECIMAL_WITH_TWO_PRECISIONS)]),\n      reason: new FormControl(null, [Validators.maxLength(135)]),\n    });\n  }\n\n  // return type for educaion details form\n  get addnewInvoiceadjustmentForm(): FormArray {\n    return <FormArray>this.adjustmentList.get('adjustmentLists');\n  }\n\n  // Adding assessmentSubCategory details onClick ADD\n  addNewRow(data: any): void {\n    // control refers to your formarray\n    const control = <FormArray>this.adjustmentList.controls['adjustmentLists'];\n    // add new formgroup\n    control.push(this.initItemRows(true, true));\n\n    this.adjIds();\n    this.cd.detectChanges();\n    this.adjAmount.last.nativeElement.focus();\n  }\n\n  adjIds(): void {\n    this.ids = [];\n    this.adjustmentList.value.adjustmentLists.forEach(element => {\n      this.ids.push(element.invoiceAdjustmentTypeId);\n    });\n    this.invoiceAdjustmentTypes.forEach(element1 => {\n      if (this.ids.indexOf(element1.id) > -1) {\n        element1.disable = true;\n      } else {\n        element1.disable = false;\n      }\n    });\n\n  }\n\n\n  dropdownDisable(event: any, test): void {\n    this.adjIds();\n  }\n\n  // Deleting a row of assessmentSubCategory details onClick ReMove\n  deleteRow(subCategoryArray: any, index: number): void {\n    // control refers to your formarray\n    const control = <FormArray>this.adjustmentList.controls['adjustmentLists'];\n\n    this.invoiceAdjustmentTypes.forEach((element) => {\n      if (element.id === subCategoryArray.controls['invoiceAdjustmentTypeId'].value) {\n        element.disable = false;\n      }\n    });\n\n    // remove the chosen row\n    control.removeAt(index);\n\n    if (this.adjustmentList.status === AppSettings.VALID) {\n      this.validate = false;\n      this.isDisabled = false;\n    }\n    this.cd.detectChanges();\n    this.adjAmount.last.nativeElement.focus();\n  }\n\n \n\n  openForm(): void {\n    this.adjustmentTypes();\n    this.closeAddPanel = false;\n    this.isDisabled = false;\n    this.scrollIntoViewById('form-0');\n  }\n\n  AdjustForm(): void {\n    this.isDisabled = false;\n    this.adjustmentTypes();\n    // this.dialogRef.open(CustomDialogComponent, {\n    //   data: { template: this.customTemplate }\n    // });\n  }\n\n  CancelForm(): void {\n    this.isDisabled = false;\n    // this.dialogRef.open(CustomDialogComponent, {\n    //   data: { template: this.customTemplates }\n    // });\n  }\n\n  adjustmentTypes(): void {\n    this.invoiceService.invoiceAdjustmentTypes().subscribe(res => {\n      this.invoiceAdjustmentTypes = res.resultModelList;\n      this.invoiceAdjustmentTypes.forEach((element) => {\n        element.disable = false;\n      });\n    });\n  }\n\n  invoiceDetails(): void {\n    this.invoiceService.invoiceDetails(\n      this.invoiceId, this.isCorrected).subscribe(\n        res => this.invoiceDataAssignment(res), error => this.errorResponse(error));\n  }\n  // tslint:disable-next-line:member-ordering\n  adjAmount1: any;\n  invoiceDataAssignment(data: any): void {\n    if (data.currencyView !== undefined && data.currencyView !== null) {\n      this.currency = data.currencyView.code;\n    }\n    Object.assign(this.currentInvoiceDetails = {}, data.invoiceInformation);\n    data.invoiceInformation.invoiceAmount = this.getFormattedCurrency(data.invoiceInformation.invoiceAmount);\n\n    data.invoiceInformation.balanceAmount = this.getFormattedCurrency(data.invoiceInformation.balanceAmount);\n\n    data.invoiceInformation.realizedAmount = this.getFormattedCurrency(data.invoiceInformation.realizedAmount);\n\n    // if (data.invoiceInformation.adjustmentAmount < 0) {\n    //   // data.invoiceInformation.adjustmentAmount.slice(1, this.getFormattedCurrency);\n    //    this.adjAmount1 = data.invoiceInformation.adjustmentAmount;\n    //   data.invoiceInformation.adjustmentAmount = this.adjAmount1.slice(1, this.getFormattedCurrency);\n    // } else {\n    //   data.invoiceInformation.adjustmentAmount = data.invoiceInformation.adjustmentAmount === null || undefined\n    //     ? this.getFormattedCurrency(0) : this.getFormattedCurrency(data.invoiceInformation.adjustmentAmount);\n    // }\n\n    data.invoiceInformation.adjustmentAmount = data.invoiceInformation.adjustmentAmount === null || undefined\n    ? this.getFormattedCurrency(0) : this.getFormattedCurrency(data.invoiceInformation.adjustmentAmount);\n\n    this.invoiceParticulars = data.invoiceParticulars;\n    this.invoiceParticulars.forEach(x => {\n      x.feeAmount = this.getFormattedCurrency(x.feeAmount);\n      x.amountPayable = this.getFormattedCurrency(x.amountPayable);\n      x.consession = x.consession > 0 ? this.getFormattedCurrency(x.consession) : x.consession;\n      x.concessionGroup = x.concessionGroup !== null ? x.concessionGroup : null;\n    });\n    this.academicSessionId = data.invoiceInformation.schoolAcademicSessionId;\n    this.studentId = data.studentId;\n    this.studentDBService.studentDetails(data.studentId).subscribe(\n      res => this.assignStudentDetails(res), error => this.errorResponse(error));\n    this.isCancelled = data.isCancelled;\n    this.invoiceInformation = (this.setDateFormat(data.invoiceInformation));\n    this.invoiceInformation = this.getKeyValuesOfObject(data.invoiceInformation).filter(x => x.Label !== 'id' && x.Label !== 'schoolAcademicSessionId');\n    if (data.isCancelled) {\n      this.actions = [];\n    }\n    else {\n      this.actions = ['Cancel', 'Adjustment'];\n    }\n\n    this.invoicePayments = data.invoicePayment;\n    this.invoiceAdjustments = data.invoiceAdjustment;\n    this.invoiceInformationHeadders = Object.keys(this.invoiceInformation);\n    this.prepareParticularsTable(data.invoiceParticulars);\n    this.prepareAdjustmentTable(this.setDateFormat(data.invoiceAdjustment), !data.isCancelled);\n    this.preparePaymentTable(this.setDateFormat(data.invoicePayment), !data.isCancelled);\n  }\n  operations(action: any): void {\n    this.closeInvoiceForm = false;\n    switch (action) {\n      case 'Cancel':\n        this.onCancelInvoice = true;\n        this.CancelForm();\n        break;\n      case 'Adjustment':\n        this.onCancelInvoice = false;\n        this.AdjustForm();\n        this.commonService.setOverlay(AppSettings.SHOW);\n        break;\n    }\n  }\n\n  InvoiceCancel(cancellationForm: any): void {\n    this.validateForm = true;\n    if (this.cancellationForm.invalid) {\n      return;\n    }\n    else {\n      this.invoiceCriteriaViewModel.ids = this.invoiceIds;\n      this.invoiceCriteriaViewModel.cancelledReason = cancellationForm.value.cancelledReason;\n      this.invoiceService.feeInvoice(this.invoiceCriteriaViewModel).subscribe(res => this.response(res), error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n  // response\n  response(data: any): void {\n    this.validateForm = false;\n    if (data.statusCode === this.HttpStatus.OK) {\n      this.closeForm();\n      this.cancellationForm.reset();\n      // this.ngOnInit();\n      this.invoiceDetails();\n    }\n    else {\n      this.closeAddPanel = false;\n    }\n    this.openSnackBar(data.messages.ResultMessage);\n  }\n\n  // method for when click cancel panel it will open\n  closeForm(): void {\n    this.dialogRef.closeAll();\n    this.aForm.resetForm();\n    this.validateForm = false;\n    this.closeAddPanel = true;\n    this.closeInvoiceForm = true;\n  }\n\n  prepareAdjustmentTable(data: Array<any>, buttonRequired: boolean): void {\n\n    this.adjustmentCols = [\n      { field: 'adjustmentType', header: 'Adjustment Type', sort: false },\n      { field: 'date', header: 'Date', sort: false },\n      { field: 'reason', header: 'Reason', sort: false },\n      { field: 'amount', header: 'Amount', sort: false },\n    ];\n    data.forEach(x => {\n      x.amount = this.getFormattedCurrency(x.amount);\n    });\n\n    this.adjustmentSettings = {\n      rows: data,\n      columns: this.adjustmentCols,\n      componentName: this.currentComponent,\n      visibleSelectAll: false,\n      isPaginationRequired: false,\n      // tablename: 'Adjustments' ,\n      padding: true,\n      headerOperations: {\n        addingForm: {\n          required: this.fromParent ? false : buttonRequired,\n          btnName: 'New Adjustment'\n        },\n        sideHeader: {\n          heading: 'Adjustments'\n        }\n      },\n    };\n\n  }\n\n  preparePaymentTable(data: Array<any>, buttonRequired: boolean): void {\n\n    this.paymentCols = [\n      { field: 'receptNumber', header: 'Receipt Number', sort: false },\n      { field: 'expiryDate', header: 'Payment Date', sort: false },\n      { field: 'paymentType', header: 'Payment Type', sort: false },\n      { field: 'paymentAmount', header: 'Payment Amount', sort: false },\n      { field: 'utilizedAmount', header: 'Utilized Amount', sort: false },\n      { field: 'status', header: 'Status', sort: false },\n      { field: 'view', header: 'Action', sort: false }\n    ];\n\n    data.forEach(e => {\n      e.paymentAmount = this.getFormattedCurrency(e.paymentAmount);\n      e.utilizedAmount = this.getFormattedCurrency(e.utilizedAmount);\n      e.operations = [\n        {\n          name: this.commonService.getTranslation(AppSettings.VIEW_OPERATION),\n          icon: AppSettings.VIEW_ICON,\n          operationName: AppSettings.VIEW_OPERATION\n        }\n      ];\n    });\n\n    this.paymentSettings = {\n      rows: data,\n      columns: this.paymentCols,\n      componentName: this.currentComponent,\n      visibleSelectAll: false,\n      isPaginationRequired: false,\n      headerOperations: {\n        addingForm: {\n          required: this.fromParent ? false : buttonRequired,\n          btnName: 'New Payment'\n        },\n        sideHeader: {\n          heading: 'Payments'\n        }\n      },\n    };\n\n  }\n\n  openPaymentForm(): void {\n    this.invoiceParticulars.forEach(data => {\n      if (data.feeAccountId > 0) {\n        if (this.feeAccountId > 0) {\n          if (this.feeAccountId === data.feeAccountId) {\n            this.feeAccountId = 0;\n            this.feeAccountId = data.feeAccountId;\n            this.feeAccount = {\n              feeAccountId: this.feeAccountId,\n              correctionDate: new Date()\n            };\n          }\n        }\n        else {\n          this.feeAccountId = data.feeAccountId;\n          this.feeAccount = {\n            feeAccountId: this.feeAccountId,\n            correctionDate: new Date()\n          };\n        }\n      }\n    });\n    this.buttonDisable = true;\n    this.closeAddPanels = true;\n    this.showPayment = true;\n  }\n\n  prepareParticularsTable(data: Array<any>): void {\n    this.particurlarsCols = [\n      { field: 'feeType', header: 'Fee Type', sort: false },\n      { field: 'feeAmount', header: 'Fee Amount', sort: false },\n      { field: 'consession', header: 'Concession', sort: false },\n      { field: 'concessionGroup', header: 'Concession Group', sort: false },\n      { field: 'amountPayable', header: 'Amount Payable', sort: false },\n    ];\n    this.particurlarsSettings = {\n      rows: data,\n      columns: this.particurlarsCols,\n      componentName: this.currentComponent,\n      visibleSelectAll: false,\n      isPaginationRequired: false,\n      padding: true,\n      hideHeader: true,\n      headerOperations: {\n        addingForm: {\n          required: false\n        }\n      },\n    };\n\n  }\n\n  assignStudentDetails(data: any): void {\n    this.studentDetailsHeadders = Object.keys(data.resultModel);\n    this.studentDetails = this.setDateFormat(data.resultModel);\n    this.studentDetails = this.getKeyValuesOfObject(data.resultModel).filter(x => x.Label !== 'id');\n    const studentIndex = this.studentDetails.findIndex((e: any) => e.Label === 'name');\n    this.studentDetails.unshift(this.studentDetails.splice(studentIndex, 1)[0]);\n  }\n\n  //   checkInValid(): void {\n  //     this.validate = this.isDisabled = (this.adjustmentList.status === AppSettings.INVALID);\n  //   }\n\n  onSumbit(data: any): any {\n\n    if (data.status === AppSettings.INVALID) {\n      this.validate = true;\n      return false;\n    }\n    else {\n      this.invoiceAdjustmentDataView.invoiceAdjustmentListView = [];\n      this.validate = false;\n      this.isDisabled = false;\n      data.value.adjustmentLists.forEach(element => {\n        element.adjustmentDate = this.getFormattedDateByAPIPattern(element.adjustmentDate);\n      });\n\n      this.invoiceAdjustmentDataView.invoiceId =\n        this.invoiceId;\n      Object.assign(this.invoiceAdjustmentDataView.invoiceAdjustmentListView, data.value.adjustmentLists);\n      this.invoiceService.addInvoiceAdjustment(this.invoiceAdjustmentDataView).subscribe((res: any) => this.addUpdateResponse(res), error => {\n        this.errorResponse(error);\n      });\n    }\n  }\n\n  addUpdateResponse(result: any): void {\n    if (result.statusCode === this.HttpStatus.OK) {\n      this.openSnackBar(result.messages.ResultMessage);\n      this.cancel();\n      this.invoiceDetails();\n      this.invoiceAdjustmentDataView.invoiceAdjustmentListView = [];\n    }\n  }\n\n  dialogMethod(dialogData: any, disableClose: boolean, button1Text: string, button2Text?: string): any {\n    return this.dialogRef.open(CustomDialogComponent, {\n      disableClose: disableClose,\n      data: { text: this.commonService.getTranslation(dialogData), action: true, btn1Text: button1Text, btn2Text: button2Text },\n    });\n  }\n\n\n  cancel(): void {\n    this.dialogRef.closeAll();\n    this.resetForm();\n    this.closeInvoiceForm = true;\n  }\n\n  resetForm(): void {\n    this.dialogRef.closeAll();\n    this.adjustmentShow = false;\n    this.closeAddPanel = true;\n    this.form.resetForm();\n    this.adjustmentForm();\n  }\n\n  prepareInvoiceDetailsTable(data: Array<any>, buttonRequired: boolean): void {\n\n    this.invoiceCols = [\n      { field: 'feeTerm', header: 'Fee Term', sort: true },\n      { field: 'studentName', header: 'Student Name', sort: true },\n      { field: 'classSection', header: 'Class-Section', sort: true },\n      { field: 'invoiceNumber', header: 'Invoice Number', sort: true },\n      { field: 'invoiceDate', header: 'Invoice Date', sort: true },\n      { field: 'issueDate', header: 'Issue Date', sort: true },\n      { field: 'dueDate', header: 'Due Date', sort: true },\n      { field: 'invoiceAmount', header: 'Invoice Amount', sort: true },\n      { field: 'dueAmount', header: 'Due Amount', sort: true },\n      { field: 'panalityAmount', header: 'Panality Amount', sort: true },\n      { field: 'realizedAmount', header: 'Realized Amount', sort: true },\n      { field: 'balanceAmount', header: 'Balance Amount', sort: true },\n      { field: 'actions', header: 'Actions', sort: false }\n    ];\n\n    this.invoiceSettings = {\n      rows: data,\n      columns: this.invoiceCols,\n      componentName: this.currentComponent,\n      visibleSelectAll: false,\n      isPaginationRequired: true,\n      headerOperations: {\n        addingForm: {\n          required: buttonRequired,\n          btnName: 'New Payment'\n        }\n      },\n    };\n  }\n\n  savePayment(paymentForm: any): void {\n    this.invoiceIds = [];\n    this.invoiceIds.push(this.invoiceId);\n    paymentForm.studentId = this.studentId;\n    paymentForm.invoiceIds = this.invoiceIds;\n    paymentForm.schoolAcademicSessionId = this.academicSessionId;\n    this.paymentViewModel = paymentForm;\n    this.invoiceService.createPayment(this.paymentViewModel).subscribe(data => {\n      if (data.statusCode === HttpStatus.OK) {\n        this.invoiceDetails();\n        this.showPayment = false;\n        this.closeAddPanels = false;\n        this.buttonDisable = false;\n      }\n      else {\n        this.showPayment = true;\n      }\n      this.openSnackBar(data.messages.ResultMessage);\n    });\n    this.paymentCorrectionService.setCorrectionResponse(true);\n  }\n\n  rowActions(data): void {\n    if (this.fromParent) {\n      this.router.navigate([FeeModuleConfig._Student_Payment_Details + data.clickedRow.paymentId]);\n    } else {\n      this.router.navigate([FeeModuleConfig._Payment_Details_App_Routing + data.clickedRow.paymentId]);\n    }\n  }\n\n  changeValue(data: any): void {\n    this.isCorrected = data.checked;\n    this.invoiceDetails();\n  }\n  resetModelValues(): void {\n    this.razorpayViewModel = {\n      email: '',\n      invoiceNumber: '',\n      currency: '',\n      receipt: '',\n      mobilenumber: null,\n      amount: null\n    };\n    this.paypalViewModel = {\n      intent: '',\n      purchase_units: []\n    };\n  }\n  onClickPayOnline(event): void {\n    this.resetModelValues();\n    const dialogRef = this.dialogRef.open(PayemtGatewayOptionsComponent, {\n      disableClose: true,\n      width: '650px',\n      panelClass: 'payment-model',\n      data: {\n        id: this.invoiceId,\n        razorpayViewModel: this.updatePaymentInformation(this.currentInvoiceDetails, 'razorpay'),\n        paypalViewModel: this.updatePaymentInformation(this.currentInvoiceDetails, 'paypal')\n      },\n    });\n    dialogRef.afterClosed().subscribe(value => {\n      if (value) {\n        this.ngOnInit();\n      }\n    });\n  }\n  updatePaymentInformation(invoice: any, paymentMethod: string): any {\n    const claims: any = this.oauthService.getIdentityClaims();\n    let returnViewModel: any;\n    switch (paymentMethod) {\n      case 'razorpay':\n        if (claims) {\n          this.razorpayViewModel.email = claims.email;\n        }\n        this.razorpayViewModel.amount = invoice.balanceAmount;\n        this.razorpayViewModel.mobilenumber = invoice.mobileNumber;\n        this.razorpayViewModel.currency = this.currency;\n        this.razorpayViewModel.invoiceNumber = invoice.invoiceNumber;\n        this.razorpayViewModel.receipt = invoice.invoiceNumber;\n        returnViewModel = this.razorpayViewModel;\n        break;\n      case 'paypal':\n        this.paypalViewModel.intent = 'CAPTURE';\n        this.paypalViewModel.invoiceNumber = invoice.invoiceNumber;\n        this.paypalViewModel.purchase_units = [{\n          amount: {\n            currency_code: this.currency,\n            value: invoice.balanceAmount\n          }\n        }];\n        this.paypalViewModel.payer = {\n          email_address: claims.email\n        };\n        returnViewModel = this.paypalViewModel;\n        break;\n    }\n\n    return returnViewModel;\n  }\n}\n"],"sourceRoot":""}