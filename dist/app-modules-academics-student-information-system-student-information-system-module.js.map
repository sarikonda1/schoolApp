{"version":3,"sources":["webpack:///./src/app/modules/academics/student-information-system/dropouts/dropouts.component.html","webpack:///./src/app/modules/academics/student-information-system/dropouts/dropouts.component.scss","webpack:///./src/app/modules/academics/student-information-system/dropouts/dropouts.component.ts","webpack:///./src/app/modules/academics/student-information-system/preview-student-request/preview-student-request.component.html","webpack:///./src/app/modules/academics/student-information-system/preview-student-request/preview-student-request.component.scss","webpack:///./src/app/modules/academics/student-information-system/preview-student-request/preview-student-request.component.ts","webpack:///./src/app/modules/academics/student-information-system/section-assignment/section-assignment.component.html","webpack:///./src/app/modules/academics/student-information-system/section-assignment/section-assignment.component.scss","webpack:///./src/app/modules/academics/student-information-system/section-assignment/section-assignment.component.ts","webpack:///./src/app/modules/academics/student-information-system/student-course-selections/student-course-selections.component.html","webpack:///./src/app/modules/academics/student-information-system/student-course-selections/student-course-selections.component.scss","webpack:///./src/app/modules/academics/student-information-system/student-course-selections/student-course-selections.component.ts","webpack:///./src/app/modules/academics/student-information-system/student-database/student-database.component.html","webpack:///./src/app/modules/academics/student-information-system/student-database/student-database.component.scss","webpack:///./src/app/modules/academics/student-information-system/student-database/student-database.component.ts","webpack:///./src/app/modules/academics/student-information-system/student-facility-assignment/student-facility-assignment.component.html","webpack:///./src/app/modules/academics/student-information-system/student-facility-assignment/student-facility-assignment.component.scss","webpack:///./src/app/modules/academics/student-information-system/student-facility-assignment/student-facility-assignment.component.ts","webpack:///./src/app/modules/academics/student-information-system/student-group-details/student-group-details.component.html","webpack:///./src/app/modules/academics/student-information-system/student-group-details/student-group-details.component.scss","webpack:///./src/app/modules/academics/student-information-system/student-group-details/student-group-details.component.ts","webpack:///./src/app/modules/academics/student-information-system/student-groups/student-groups.component.html","webpack:///./src/app/modules/academics/student-information-system/student-groups/student-groups.component.scss","webpack:///./src/app/modules/academics/student-information-system/student-groups/student-groups.component.ts","webpack:///./src/app/modules/academics/student-information-system/student-information-details/student-information-details.component.html","webpack:///./src/app/modules/academics/student-information-system/student-information-details/student-information-details.component.scss","webpack:///./src/app/modules/academics/student-information-system/student-information-details/student-information-details.component.ts","webpack:///./src/app/modules/academics/student-information-system/student-information-system-routing.module.ts","webpack:///./src/app/modules/academics/student-information-system/student-information-system.module.ts","webpack:///./src/app/modules/academics/student-information-system/student-requests/student-requests.component.html","webpack:///./src/app/modules/academics/student-information-system/student-requests/student-requests.component.scss","webpack:///./src/app/modules/academics/student-information-system/student-requests/student-requests.component.ts","webpack:///./src/app/modules/academics/student-information-system/student-rollnumber-management/student-rollnumber-management.component.html","webpack:///./src/app/modules/academics/student-information-system/student-rollnumber-management/student-rollnumber-management.component.scss","webpack:///./src/app/modules/academics/student-information-system/student-rollnumber-management/student-rollnumber-management.component.ts","webpack:///./src/app/modules/academics/student-information-system/student-sibling/student-sibling.component.html","webpack:///./src/app/modules/academics/student-information-system/student-sibling/student-sibling.component.scss","webpack:///./src/app/modules/academics/student-information-system/student-sibling/student-sibling.component.ts","webpack:///./src/app/service/academic-service/api/rollnumber-assignment.service.ts","webpack:///./src/app/service/academic-service/api/status.service.ts","webpack:///./src/app/service/academic-service/api/studentsFacility.service.ts","webpack:///./src/app/service/student-information-system/sibling.service.ts","webpack:///./src/app/service/student-information-system/student-action.service.ts","webpack:///./src/app/service/student-information-system/student-course-selection.service.ts","webpack:///./src/app/service/student-information-system/student-request.service.ts","webpack:///./src/app/service/student-information-system/students-section-service.ts"],"names":[],"mappings":"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","file":"app-modules-academics-student-information-system-student-information-system-module.js","sourcesContent":["module.exports = \"<app-table [settings]=\\\"tableSettings\\\" [closeRowForm]=\\\"closeForm\\\" \\n  (getTableData)='tableData($event)' (rowBasedAction)='actions($event)' (openAddForm)='openForm()'>\\n</app-table>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N0dWRlbnQtaW5mb3JtYXRpb24tc3lzdGVtL2Ryb3BvdXRzL2Ryb3BvdXRzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { MatDialog, MatDialogRef, MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { AppSettings } from 'app/app.constants';\nimport { RouteConfig } from 'app/url.config';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { StudentActionService } from 'app/service/student-information-system/student-action.service';\nimport { StudentDropoutFilterView } from '../model/student-dropout-filter-view';\n\n@Component({\n  selector: 'app-dropouts',\n  templateUrl: './dropouts.component.html',\n  styleUrls: ['./dropouts.component.scss'],\n  providers: [StudentActionService]\n})\nexport class DropoutsComponent extends CommonComponent implements OnInit {\n  tableSettings: {};\n  closeForm: boolean;\n  currentComponent = 'DropoutsComponent';\n  rows: Array<any>;\n  totalRowsCount: number;\n  pageCnt: number;\n  columns: any[];\n  preSelectIds: Array<string> = [];\n  filterViewModel: StudentDropoutFilterView;\n  constructor(public dialogRef: MatDialog, private router: Router, private studentAction: StudentActionService, public snackBar: MatSnackBar) {\n    super();\n    this.setColumnHeaders();\n    this.initializeFilterView();\n    this.initializeTableSettings();\n  }\n  ngOnInit(): void {\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.filterViewModel = modelTableComponent;\n    }\n    this.getStudentDropouts();\n  }\n  getStudentDropouts(): void {\n    this.studentAction.studentActionGrid(this.filterViewModel.studentActionTypeIds,\n      this.filterViewModel.academicSessions,\n      this.filterViewModel.classIds, this.filterViewModel.classNames,\n      this.filterViewModel.studentName, this.filterViewModel.admissionNumber,\n      this.filterViewModel.details, this.filterViewModel.sortOrder,\n      this.filterViewModel.sortBy,\n      this.filterViewModel.failedRecords,\n      this.filterViewModel.pageNumber,\n      this.filterViewModel.pageSize\n    )\n      .subscribe(res => {\n        this.setStudentDropouts(res);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n  setStudentDropouts(data): void {\n    if (!data.pagedStudentActionViewModels) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n    } else {\n      this.rows = data.pagedStudentActionViewModels.list;\n      this.totalRowsCount = data.pagedStudentActionViewModels.totalItems;\n      this.pageCnt = data.pagedStudentActionViewModels.totalPages;\n\n      this.rows.forEach(e => {\n        e.requestDate = (e.requestDate == null) ? null : this.commonService.customDateFormat(e.requestDate, this.getSchoolDateFormat()).date;\n      });\n      this.preSelectIds = [];\n    }\n    if (data.pagedStudentActionViewModels) {\n      this.filterViewModel.pageNumber = data.pagedStudentActionViewModels.pageNumber;\n    }\n\n    this.tableSettings = {\n      model: this.filterViewModel,\n      rows: this.rows,\n      columns: this.columns,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      tablename: 'Dropouts',\n      componentName: this.currentComponent,\n      visibleSelectAll: false,\n      isSelectRowRequired: false,\n      isPaginationRequired: true,\n      filtersList: data.filters,\n      headerOperations: {\n        addingForm: {\n          required: false\n        },\n        infoButton: {\n          required: true,\n          text: 'Dropouts'\n        }\n\n      }\n    };\n  }\n  initializeFilterView(): void {\n    this.filterViewModel = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n  }\n  setColumnHeaders(): void {\n    this.columns = [\n      { field: 'studentName', header: 'Student Name', sort: true },\n      { field: 'academicSession', header: 'Academic Session', sort: true },\n      { field: 'admissionNumber', header: 'admissionNumber', sort: true },\n      { field: 'className', header: 'Class', sort: true },\n      { field: 'details', header: 'Reason', sort: true }\n\n    ];\n  }\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.columns,\n      tablename: 'Dropouts',\n      componentName: this.currentComponent,\n      model: this.filterViewModel,\n      headerOperations: {\n        addingForm: {\n          required: false\n        }\n      }\n    };\n  }\n  actions(operationData: any): void {\n    if (operationData.operation === AppSettings.APPROVE.toLowerCase()) {\n    } else if (operationData.operation === AppSettings.REJECT.toLowerCase()) {\n\n    }\n  }\n  getFormatedName(data): void {\n    if (data) {\n      if (data.middleName) {\n        const fullName: any = data.firstName + ' ' + data.middleName + ' ' + data.lastName;\n        return fullName.replace(/  +/g, ' ').trim();\n      }\n      else {\n        const fullName: any = data.firstName + ' ' + data.lastName;\n        return fullName.replace(/  +/g, ' ').trim();\n      }\n    }\n  }\n\n  tableData(_event: any): void {\n    this.filterViewModel = _event;\n    this.getStudentDropouts();\n  }\n  openForm(): void {\n    this.closeForm = false;\n  }\n  onCancel(event): void {\n    this.closeForm = event;\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" class=\\\"pt-16 font-size-18 text-uppercase\\\">\\n    Preview student request\\n</div>\\n\\n<div id=\\\"previewHtml\\\" #dataContainer></div>\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"p-16\\\">\\n  <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\" (click)=\\\"onCancel()\\\" translate>{{'Cancel' | translate}}</button>\\n  <button mat-raised-button (click)=\\\"onSubmit()\\\" type=\\\"submit\\\" class=\\\"mr-12 text-uppercase theme-test\\\" color=\\\"accent\\\" >{{ 'generateCertificate' | translate}}</button>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N0dWRlbnQtaW5mb3JtYXRpb24tc3lzdGVtL3ByZXZpZXctc3R1ZGVudC1yZXF1ZXN0L3ByZXZpZXctc3R1ZGVudC1yZXF1ZXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { MatSnackBar, MatDialog } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\nimport { StudentRequestService } from 'app/service/student-information-system/student-request.service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { ApproveStudentRequestView } from '../model/approve-Student-Request';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { RouteConfig } from 'app/url.config';\n\n\n@Component({\n  selector: 'app-preview-student-request',\n  templateUrl: './preview-student-request.component.html',\n  styleUrls: ['./preview-student-request.component.scss'],\n  providers: [StudentRequestService]\n})\n\nexport class PreviewStudentRequestComponent extends CommonComponent implements OnInit {\n\n  @ViewChild('dataContainer') dataContainer: ElementRef;\n  approveStudentRequestView: ApproveStudentRequestView;\n  myTemplate: any;\n\n  constructor(\n    public dialogRef: MatDialog,\n    private router: Router,\n    private route: ActivatedRoute,\n    private studentRequestService: StudentRequestService,\n    public commonService: CommonService,\n    public snackBar: MatSnackBar\n  ) {\n    super();\n    this.route.params.subscribe((params: Params) => {\n      if (params['id']) {\n        this.approveStudentRequestView = {\n          isPreview: true,\n          id: params['id'],\n          customFields: {}\n        };\n      }\n    });\n    this.getPreview();\n  }\n\n  ngOnInit() {\n  }\n\n  // inputs StudentRequestId\n  // API service call as preview with studentRequestId\n  getPreview(): void {\n    this.studentRequestService.approveRequest(this.approveStudentRequestView).subscribe(\n      res => {\n        this.openSnackBar(res.messages.ResultMessage);\n        this.dataContainer.nativeElement.innerHTML = res['messages']['Preview'];\n      }, error => {\n        this.errorResponse(error);\n      });\n\n  }\n  // bind the Html Preview as is from the API along with submit button\n  // onSubmit send another request with all CustomAttributes\n  onSubmit(): void {\n    console.log(document.getElementById('previewHtml').querySelectorAll('*[id]'));\n    debugger;\n\n    Array.from(document.getElementById('previewHtml').querySelectorAll('*[id]')).map((x: HTMLInputElement) => {\n      this.approveStudentRequestView.customFields[x.id] = x.value;\n    });\n    this.approveStudentRequestView.isPreview = false;\n\n    this.studentRequestService.approveRequest(this.approveStudentRequestView).subscribe(\n      res => {\n        // show result in snack bar and redirect to student Requests list\n        this.openSnackBar(res.messages.ResultMessage);\n        // Redirect to the student Request List page\n        this.router.navigate([RouteConfig._Student_Requests]);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  onCancel(): void {\n    // redirect to Student Requests List Page\n    this.router.navigate([RouteConfig._Student_Requests]);\n  }\n\n}\n","module.exports = \"<div class=\\\"p-32\\\">\\n  <div class=\\\"p-12 font-size-18 text-uppercase\\\" translate=\\\"\\\">SECTION ASSIGNMENT</div>\\n  <div class=\\\"mat-elevation-z8 simple-table-container radius-t-20\\\">\\n    <form [formGroup]=\\\"sectionForm\\\" (ngSubmit)=\\\"onSelectClassBoard(sectionForm)\\\" #SectionForm=\\\"ngForm\\\">\\n      <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n        <div fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\" class=\\\"p-20\\\">\\n          <mat-form-field *ngIf=\\\"isSchoolBoard\\\" appearance=\\\"outline\\\">\\n            <mat-label #classId translate>Board</mat-label>\\n            <mat-select formControlName=\\\"boardId\\\" (selectionChange)=\\\"onBoardSelect($event)\\\" required>\\n              <mat-option *ngFor=\\\"let board of schoolBoardsList\\\" [value]=\\\"board.value\\\">\\n                {{board.label}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field appearance=\\\"outline\\\" class=\\\"pt-12\\\">\\n            <mat-label #classId translate>Class</mat-label>\\n            <mat-select formControlName=\\\"classId\\\" (selectionChange)=\\\"onClassSelect($event)\\\" required>\\n              <mat-option *ngFor=\\\"let class of classNames\\\" [value]=\\\"class.value\\\">\\n                {{class.label}}\\n              </mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <div fxLayoutAlign=\\\"end\\\">\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" class=\\\"text-uppercase\\\" (click)=\\\"reset()\\\">{{'Reset' | translate}}</button>\\n          </div>\\n        </div>\\n        <div fxLayout=\\\"column\\\" fxFlexFill fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"70\\\" class=\\\"border-left section-assignament px-8\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"p-16 border-bottom\\\">\\n            <div *ngIf=\\\"sectionsInfo && loadData | async\\\" class=\\\"pr-8\\\">{{'Total Assigned' | translate}} {{assignedStudents}} of {{totalstudentsCount}}</div>\\n            <button mat-button type='button' (click)=\\\"getHelpText('Section Assigmnent')\\\">\\n              <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n            </button>\\n          </div>\\n          <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\" *ngIf=\\\"sectionsInfo && loadData | async\\\" class=\\\"py-12\\\">\\n            <div fxLayout=\\\"column\\\" fxFlex=\\\"30\\\" class=\\\"mat-elevation-z3 m-w m-12 radius-10\\\"\\n              [@animate]=\\\"{value:'*',params:{y:'100%'}}\\\">\\n              <p class=\\\"text-center text-uppercase font-size-16\\\" translate>Not Assigned</p>\\n              <mat-divider></mat-divider>\\n              <span class=\\\"text-center font-size-24 py-8 red-fg\\\">{{notAssignedStudents}}</span>\\n            </div>\\n\\n            <div *ngFor=\\\"let i of sectionsDetails\\\" [@animate]=\\\"{value:'*',params:{delay:'100ms', y:'25px'}}\\\">\\n              <div fxLayout=\\\"column\\\" fxFlex=\\\"30\\\" class=\\\"mat-elevation-z3 m-w m-12 radius-10\\\">\\n                <p class=\\\"text-center text-uppercase font-size-16\\\">{{i.sectionName}}</p>\\n                <mat-divider></mat-divider>\\n                <span class=\\\"text-center font-size-24 py-8\\\">{{i.sectionCount}}</span>\\n                <small class=\\\"text-center font-size-13 pb-4\\\" *ngIf=\\\"i.maximumCapacity!=0&&i.maximumCapacity!=null\\\">Max-Capacity({{i.maximumCapacity}})</small>\\n              </div>\\n            </div>\\n          </div>\\n          <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start start\\\" *ngIf=\\\"!sectionsInfo && sectionForm.controls.classId.value && loadData | async\\\" class=\\\"py-12\\\">\\n              <p class=\\\"text-center text-uppercase font-size-16\\\" translate>There are no students currently admitted in the selected class.</p>\\n          </div>\\n          <div *ngIf=\\\"sectionForm.invalid\\\" class=\\\"py-16 text-center font-size-16\\\">\\n            {{'PLEASE SELECT REQUIRED FIELDS.' | translate}}\\n          \\n        </div>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n\\n\\n<app-table *ngIf=\\\"tableData\\\" [settings]=\\\"tabSettings\\\" (getTableData)='studentsData($event, true)'\\n  [massActionTemplateRef]=\\\"massActions\\\" (selectedRows)='selectedRows($event)' (rowBasedAction)=\\\"rowWiseActions($event)\\\"\\n  [disabled]=\\\"disbleSubmitBtn\\\" [templateRef]=\\\"addCourseTemplate\\\" [closeAddForm]=\\\"closeAddPanel\\\"\\n  (openAddForm)=\\\"onAddFormClick()\\\" [closeRowForm]='closeAddPanel'>\\n</app-table>\\n\\n\\n<ng-template #massActions>\\n  <form [formGroup]=\\\"sectionDropForm\\\" (ngSubmit)=\\\"sectionAssign(sectionDropForm.value)\\\">\\n    <div fxLayout=\\\"row\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-form-field class=\\\"px-20 w-200\\\">\\n        <mat-label #sectionId translate>Section</mat-label>\\n        <mat-select (selectionChange)=\\\"onSectionSelect($event)\\\" formControlName=\\\"sectionId\\\" required>\\n          <mat-option *ngFor=\\\"let section of sectionNames\\\" [value]=\\\"section.value\\\">\\n            {{section.label}}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          <app-validation [labelName]='sectionId.innerText' [validationControl]=\\\"sectionDropForm.controls.sectionId\\\"\\n            [doValidate]=\\\"sectiionValidate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n      <div fxLayout=\\\"column\\\">\\n        <button mat-raised-button class=\\\"text-uppercase mr-8\\\" type=\\\"submit\\\" color=\\\"accent\\\">{{'Assign' | translate}}</button>\\n      </div>\\n    </div>\\n  </form>\\n</ng-template>\"","module.exports = \".section-assignament {\\n  min-height: 300px; }\\n  .section-assignament .m-w {\\n    max-width: 180px !important;\\n    width: 180px !important;\\n    height: 133px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N0dWRlbnQtaW5mb3JtYXRpb24tc3lzdGVtL3NlY3Rpb24tYXNzaWdubWVudC9zZWN0aW9uLWFzc2lnbm1lbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBaUIsRUFBQTtFQURyQjtJQUdRLDJCQUEyQjtJQUMzQix1QkFBdUI7SUFDdkIsYUFBYSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9hY2FkZW1pY3Mvc3R1ZGVudC1pbmZvcm1hdGlvbi1zeXN0ZW0vc2VjdGlvbi1hc3NpZ25tZW50L3NlY3Rpb24tYXNzaWdubWVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zZWN0aW9uLWFzc2lnbmFtZW50e1xuICAgIG1pbi1oZWlnaHQ6IDMwMHB4O1xuICAgIC5tLXd7XG4gICAgICAgIG1heC13aWR0aDogMTgwcHggIWltcG9ydGFudDtcbiAgICAgICAgd2lkdGg6IDE4MHB4ICFpbXBvcnRhbnQ7XG4gICAgICAgIGhlaWdodDogMTMzcHg7XG5cbiAgICB9XG59Il19 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { GradeSetupService } from 'app/service/grading-service/api/grade-setup.service';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { SchoolService } from 'app/service/manage-school/school.service';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { StudentsSectionsView } from '../model/students-sections-view';\nimport { AppSettings } from 'app/app.constants';\nimport { CommonService } from 'app/service/common.service';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { StudentSectionsService } from 'app/service/student-information-system/students-section-service';\nimport { StudentSectionAssignView } from '../model/students-section-assign-view';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { ClassSectionService } from 'app/service/academic-service/api/class-section.service';\nimport { fuseAnimations } from '@fuse/animations';\n\n@Component({\n  selector: 'app-section-assignment',\n  templateUrl: './section-assignment.component.html',\n  styleUrls: ['./section-assignment.component.scss'],\n  animations: fuseAnimations,\n  providers: [SchoolService]\n})\nexport class SectionAssignmentComponent extends CommonComponent implements OnInit {\n  @ViewChild('SectionForm') _sectionForm;\n  studentsSectionSView: StudentsSectionsView;\n  studentSectionAssignView: StudentSectionAssignView;\n  sectionsInfo = true;\n  loadData = Promise.resolve(false);\n  classNames: Array<any> = [];\n  filterClasses: Array<any> = [];\n  boards: Array<any> = [];\n  schoolBoardsList: Array<any> = [];\n  sectionForm: FormGroup;\n  sectionDropForm: FormGroup;\n  isClassBoardValid: boolean;\n  boardId: number;\n  currentComponent = 'SectionAssignmentComponent';\n  HttpStatus: any;\n  cols: any[];\n  rows: Array<any> = [];\n  tabSettings: {};\n  tableData: boolean;\n  custRowsPerPageOptions: Array<number> = [];\n  sectionNames: Array<any> = [];\n  classId: number;\n  totalItems: number;\n  pageCnt: any;\n  sectionsDetails: Array<any> = [];\n  notAssignedStudents: number;\n  assignedStudents: number;\n  totalstudentsCount: number;\n  studentIds: Array<any> = [];\n  formData: any;\n  sectionId: number;\n  sectiionValidate: boolean;\n  isSchoolBoard: boolean;\n\n  constructor(\n    public commonService: CommonService,\n    public dialog: MatDialog,\n    private _fb: FormBuilder,\n    private gradeSetupService: GradeSetupService,\n    private schoolService: SchoolService,\n    private studentsSectionService: StudentSectionsService,\n    public classSectionService: ClassSectionService,\n    public snackBar: MatSnackBar\n  ) {\n    super();\n    this.setViewModel();\n    this.studentSectionAssignView = {\n      sectionId: 0,\n      classId: 0,\n      schoolBoardId: 0,\n      ids: []\n    };\n  }\n  setViewModel(): void {\n    this.studentsSectionSView = {\n      classId: 0,\n      schoolBoardId: 0,\n      classIds: [],\n      sectionIds: [],\n      studentNames: [],\n      admissionNumbers: [],\n      sortBy: '',\n      sortOrder: AppSettings.SORT_ORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE\n    };\n  }\n\n  ngOnInit(): void {\n    this.HttpStatus = require('http-status-codes');\n    this.sectionForm = this._fb.group({\n      classId: new FormControl('', [Validators.required]),\n      boardId: new FormControl('', [Validators.required]),\n    });\n\n    this.sectionDropForm = this._fb.group({\n      sectionId: new FormControl('', [Validators.required]),\n    });\n\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.studentsSectionSView = modelTableComponent;\n      if (this.studentsSectionSView['boardId']){\n        this.boardId = this.studentsSectionSView['boardId'];\n        this.sectionForm.patchValue({\n          boardId: this.studentsSectionSView['boardId']\n        });\n      }\n      if (this.studentsSectionSView.classId){\n        this.classId = this.studentsSectionSView.classId;\n        this.sectionForm.patchValue({\n          classId: this.studentsSectionSView.classId\n        });\n        this.onClassSelect({value: this.studentsSectionSView.classId});\n      }\n    }  \n    this.schoolBoards();\n  }\n\n  // Get SChool Boards\n  schoolBoards(): void {\n    this.boards = [];\n    this.isSchoolBoard = true;\n    this.commonService.schoolAcademicBoards().subscribe(\n      response => {\n        if (response.listViews != null) {\n          if (response.listViews.length) {\n            response.listViews.forEach(element => {\n              this.boards.push({\n                label: element.name,\n                value: element.id\n              });\n              this.schoolBoardsList = this.boards;\n            });\n            if (this.sectionForm.value.boardId){\n              this.onBoardSelect({value: this.sectionForm.value.boardId}, true);\n            }else{\n              this.setDefaultBoard();\n            }\n          } else {\n            this.isSchoolBoard = false;\n            this.boardId = null;\n            this.getClassesList(null);\n            this.sectionForm.get('boardId').clearValidators();\n            this.sectionForm.controls['boardId'].updateValueAndValidity();\n          }\n        }\n      },\n      error => {\n        this.errorResponse(error);\n      }\n    );\n  }\n\n  onBoardSelect(data: any, manual = false): void {\n    if (!manual){\n      this.tableData = false;\n      this.sectionsInfo = false;\n      this.loadData = Promise.resolve(false);\n      this.classNames = [];\n      this.boardId = data.value;\n      this.classId = null;\n      this.sectionForm.controls.classId.patchValue('');\n    }\n    this.getClassesList(this.boardId, manual);\n  }\n\n  // Get Classes to filter table data\n  getClassesList(boardId: any,  manual = false): void {\n    this.classNames = [];\n    this.filterClasses = [];\n    if (!manual){\n     this.classId = null;\n    }\n    this.gradeSetupService.schoolAcademicClasses(boardId).subscribe(\n      response => {\n        if (response.listViews != null) {\n          if (response.listViews.length) {\n            response.listViews.forEach(element => {\n              this.filterClasses.push({\n                label: element.name,\n                value: element.id\n              });\n              this.classNames = this.filterClasses;\n            });\n          }\n        } else {\n          this.openSnackBar(AppSettings.SCHOOL_BOARD_HAS_CLASSES, true);\n        }\n      },\n      error => {\n        this.errorResponse(error);\n      }\n    );\n  }\n  // End\n\n\n\n  onClassSelect(data: any): void {\n    this.setViewModel();\n    this.classId = data.value;\n    this.tableData = true;\n    this.loadData = Promise.resolve(false);\n    this.sections(this.classId);\n    this.cols = [\n      { field: 'studentNames', header: 'Student Name', sort: true },\n      { field: 'admissionNumbers', header: 'Admission Number', sort: true },\n      { field: 'classNames', header: 'Class', sort: true },\n      { field: 'sectionNames', header: 'Section', sort: true },\n    ];\n\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.studentsSectionSView,\n      tablename: 'Section Assigned Students',\n      componentName: this.currentComponent,\n      isMultiDeleteRequired: false\n    };\n    this.studentsData(this.studentsSectionSView);\n  }\n\n  // on selection of class\n  sections(classId: number): void {\n    this.sectionNames = [];\n    this.gradeSetupService.schoolAcademicClassSections(this.boardId, classId).subscribe(response => {\n      if (response.listViews.length) {\n        response.listViews.forEach(element => {\n          this.sectionNames.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n  // End\n\n\n  // Get all Students\n  studentsData(studentsSectionSView: any, onFilter = false): void {\n    this.studentsSectionSView = studentsSectionSView;\n    Object.assign(this.studentsSectionSView, {\n      classId: this.classId,\n      boardId: this.boardId\n    });\n    this.setModelDataTableComponent(this.currentComponent, this.studentsSectionSView);\n    this.studentsSectionService.studentData(studentsSectionSView.sortBy, this.classId, this.boardId, studentsSectionSView.classIds, this.studentsSectionSView.sectionIds,\n      this.studentsSectionSView.studentNames, this.studentsSectionSView.admissionNumbers,\n      this.studentsSectionSView.sortOrder, studentsSectionSView.pageNumber, studentsSectionSView.pageSize).subscribe(res => this.studentsDetails(res, onFilter), error => {\n        this.errorResponse(error);\n      });\n  }\n\n  // Binding Data To Table\n  studentsDetails(data: any, onFilter): void {\n    this.loadData = Promise.resolve(true);\n    this.custRowsPerPageOptions = [];\n    if (data.studentDataView == null) {\n      this.rows = [];\n      if (!onFilter) {\n        this.sectionsInfo = false;\n      }\n    } else {\n      this.rows = data.studentDataView.list;\n      this.totalItems = data.studentDataView.totalItems;\n      this.sectionsInfo = true;\n      this.sectionsDetails = data.sectionsCountView;\n      this.assignedStudents = data.totalAssignedCount;\n      this.notAssignedStudents = data.notAssignedStudentsCount;\n      this.totalstudentsCount = data.totalStudentsCount;\n    }\n    if (data.studentDataView) {\n      this.studentsSectionSView.pageNumber = data.studentDataView.pageNumber;\n    }\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.studentsSectionSView,\n      rows: this.rows,\n      tablename: 'Section Assigned Students',\n      componentName: this.currentComponent,\n      visibleSelectAll: true,\n      isSelectRowRequired: true,\n      isMultiDeleteRequired: false,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      filtersList: data.filters,\n      headerOperations: {\n        infoButton: {\n          required: true,\n          text: 'Section Assignment'\n        }\n      },\n    };\n  }\n\n  selectedRows(data: any): void {\n    if (data.length === 0) {\n      this.sectionDropForm.reset();\n    }\n    this.studentIds = [];\n    data.forEach(element => {\n      this.studentIds.push(element.id);\n    });\n  }\n\n  onSectionSelect(data: any): void {\n    this.sectiionValidate = false;\n    this.sectionId = data.value;\n  }\n\n  sectionAssign(data: any): void {\n    if (this.sectionDropForm.valid) {\n      this.studentSectionAssignView.sectionId = data.sectionId;\n      this.studentSectionAssignView.classId = this.classId;\n      this.studentSectionAssignView.schoolBoardId = this.boardId;\n      this.studentSectionAssignView.ids = this.studentIds;\n      this.studentsSectionService.studentsSectionAssignment(this.studentSectionAssignView).subscribe(res => this.updateResponse(res), error => {\n        this.errorResponse(error);\n      });\n    }\n    else {\n      this.sectiionValidate = true;\n    }\n  }\n\n  // updateStudent Response\n  updateResponse(response: any): void {\n    this.sectionId = null;\n    this.sectionDropForm.reset();\n    if (response.statusCode === this.HttpStatus.OK) {\n      this.studentsData(this.studentsSectionSView);\n    }\n    this.openSnackBar(response.messages.ResultMessage);\n  }\n  // End\n\n  reset(): void {\n    this.tableData = false;\n    this._sectionForm.resetForm();\n    this.loadData = Promise.resolve(false);\n    this.sectionsInfo = false;\n    this.classNames = [];\n    this.setModelDataTableComponent(this.currentComponent, null);\n  }\n\n  onSelectClassBoard(data: any): void {\n    this.formData = data;\n  }\n\n  setDefaultBoard(): void {\n    this.setFormControl('sectionForm', 'boardId', this.schoolBoardsList[0].value);\n    this.onBoardSelect(this.schoolBoardsList[0]);\n  }\n}\n\n","module.exports = \"<div class=\\\"px-sm-40 pt-sm-24\\\">\\n  <div class=\\\"p-12 font-size-18 text-uppercase\\\" translate>Student Course Selections</div>\\n  <form [formGroup]=\\\"studentCourseSelectionForm\\\" (ngSubmit)=\\\"search(studentCourseSelectionForm)\\\"\\n    #studentCourseSearchForm=\\\"ngForm\\\">\\n    <div class=\\\"mat-elevation-z3 radius-t-20 simple-table-container\\\" fxLayout=\\\"column\\\">\\n      <div fxFlexFill fxLayoutAlign=\\\"start center\\\" fxLayout.gt-xs=\\\"row\\\" fxLayout=\\\"column\\\" class=\\\"p-20 mt-16\\\">\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"25\\\" fxFlex=\\\"100\\\"\\n          class=\\\"pr-sm-20\\\">\\n          <mat-label translate #class>Class</mat-label>\\n          <mat-select required formControlName=\\\"classId\\\"\\n            (selectionChange)=\\\"getSections($event.value)\\\">\\n            <mat-option *ngFor=\\\"let class of classes\\\" [value]=\\\"class.value\\\">\\n              {{ class.label }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"class.innerText\\\"\\n              [validationControl]=\\\"studentCourseSelectionForm.controls.classId\\\" [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"25\\\" fxFlex=\\\"100\\\"\\n          class=\\\"pr-sm-20\\\">\\n          <mat-label translate #section>Sections</mat-label>\\n          <mat-select required formControlName=\\\"sectionId\\\"\\n            (selectionChange)=\\\"getCourseCategories('','')\\\" [compareWith]=\\\"compareWithFunc\\\">\\n            <mat-option *ngFor=\\\"let section of sections\\\" [value]=\\\"section.value\\\">\\n              {{ section.label }} <span *ngIf=\\\"section.boardName!=null\\\">({{section.boardName}})</span></mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"section.innerText\\\"\\n              [validationControl]=\\\"studentCourseSelectionForm.controls.sectionId\\\" [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"25\\\" fxFlex=\\\"100\\\"\\n          class=\\\"pr-sm-20\\\">\\n          <mat-label translate #courseCategory translate>Course Category</mat-label>\\n          <mat-select formControlName=\\\"courseCategoryId\\\">\\n            <mat-option *ngIf=\\\"courseCategoriesList?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let courseCategory of courseCategoriesList\\\" [value]=\\\"courseCategory.id\\\">\\n              {{ courseCategory.name }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"courseCategory.innerText\\\"\\n              [validationControl]=\\\"studentCourseSelectionForm.controls.courseCategoryId\\\" [doValidate]=\\\"true\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <div fxFlexFill fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"55\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"end\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mb-24\\\">\\n            <button type=\\\"button\\\" mat-raised-button color=\\\"primary\\\" class=\\\"text-uppercase\\\" (click)=\\\"reset()\\\">{{'Reset' | translate}}</button>\\n            <button type=\\\"submit\\\" mat-raised-button class=\\\"text-uppercase mx-12\\\" color=\\\"accent\\\">{{'Search' | translate}}</button>\\n            <button mat-button type='button' (click)=\\\"getHelpText('Student Course Selections')\\\">\\n              <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n  </form>\\n</div>\\n\\n<app-custom-card *ngIf=\\\"!isValid\\\" [title]=\\\"'Students'\\\" [inputMessage]=\\\"'Please enter the required search criteria to perform the search'\\\">\\n</app-custom-card>\\n\\n<app-table *ngIf=\\\"isValid\\\" [settings]=\\\"tabSettings\\\" (rowBasedAction)='rowActions($event)' [massActionTemplateRef]=\\\"massActions\\\"\\n  (getTableData)='stdentCourseCategoryTableData($event)' (selectedRows)='selectedRows($event)'></app-table>\\n\\n<ng-template #massActions>\\n  <button type=\\\"button\\\" mat-raised-button class=\\\"text-uppercase mx-8\\\" color=\\\"accent\\\"\\n    (click)=\\\"onAssignMultipleStudents()\\\">{{'Assign Course Selection' | translate}}</button>\\n</ng-template>\\n\\n<!--clone-->\\n<ng-template #studentCoursesForm>\\n  <form fxLayout=\\\"column\\\">\\n    <div class=\\\"font-size-18 pb-16\\\"><span translate>Select Course Category and Course</span></div>\\n    <mat-form-field appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\n      <mat-label translate #courseCategory translate>Course Category</mat-label>\\n      <mat-select [(ngModel)]=\\\"studentCourseSelectionView.courseCategoryId\\\"\\n        name=\\\"courseCategoryId\\\" (selectionChange)=\\\"onCourseCategoryChange($event.value)\\\" [disabled]=\\\"!isMultiSelect\\\" required>\\n        <mat-option *ngFor=\\\"let courseCategory of courseCategoriesList\\\" [value]=\\\"courseCategory.id\\\">\\n          {{ courseCategory.name }}</mat-option>\\n      </mat-select>\\n      <mat-error>\\n      </mat-error>\\n    </mat-form-field>\\n    <div *ngIf=\\\"courseCategoryData.courses?.length\\\" class=\\\"pb-8\\\">\\n    <span *ngIf=\\\"courseCategoryData.requiredCount!=null &&courseCategoryData.requiredCount!=0\\\">\\n      <span class=\\\"font-size-12\\\" translate>Required Count</span>: {{courseCategoryData.requiredCount}}\\n    </span>\\n\\n      <span *ngIf=\\\"courseCategoryData.optionalCount!=null&&courseCategoryData.optionalCount!=0\\\"><span\\n          class=\\\"font-size-12 mx-12\\\" translate>Optional Count</span>: {{courseCategoryData.optionalCount}}</span>\\n      <span *ngIf=\\\"courseCategoryData.areAllOptional =='Yes'\\\">\\n        <span class=\\\"font-size-12\\\" translate>Are All Optional</span>: {{courseCategoryData.areAllOptional}}\\n      </span>\\n    </div>\\n    <mat-list fxLayout.gt-sm=\\\"row wrap\\\" fxFlex=\\\"100\\\" class=\\\"pt-0 confirm-table border mh-300\\\"\\n      *ngIf=\\\"courseCategoryData.courses?.length\\\">\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"30\\\" class=\\\"stickyx\\\"><strong translate>Select</strong></mat-list-item>\\n      <mat-list-item fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"70\\\" class=\\\"stickyx\\\"><strong translate>Course Name</strong></mat-list-item>\\n      <div *ngFor=\\\"let course of courseCategoryData.courses\\\" fxFlex=\\\"100\\\" class=\\\"border-top\\\">\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"30\\\" fxLayoutAlign=\\\"center center\\\">\\n          <mat-checkbox value=\\\"course.courseId\\\" [checked]=\\\"course.isChecked\\\"\\n            (change)=\\\"course.isChecked = !course.isChecked;onCheckBoxChange()\\\"></mat-checkbox>\\n        </mat-list-item>\\n        <mat-list-item fxLayout=\\\"column\\\" fxFlex=\\\"70\\\"> {{course.name}}</mat-list-item>\\n      </div>\\n    </mat-list>\\n    <mat-error class=\\\"pt-8\\\">{{errorMessage | translate}}</mat-error>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"pt-20\\\">\\n      <div fxFlex=\\\"100\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"end\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n          <button type=\\\"button\\\" mat-raised-button class=\\\"mr-16 text-uppercase\\\" type=\\\"button\\\" (click)=\\\"closeAssignCoursesDialog()\\\">{{'Cancel' | translate}}</button>\\n          <button type=\\\"submit\\\" mat-raised-button color=\\\"accent\\\" class=\\\"text-uppercase\\\" (click)=\\\"assignStudentCourses()\\\" translate>{{'Submit' | translate}}</button>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\\n\\n</ng-template>\"","module.exports = \".mh-300.confirm-table {\\n  overflow-y: auto;\\n  max-height: 300px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N0dWRlbnQtaW5mb3JtYXRpb24tc3lzdGVtL3N0dWRlbnQtY291cnNlLXNlbGVjdGlvbnMvc3R1ZGVudC1jb3Vyc2Utc2VsZWN0aW9ucy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGdCQUFnQjtFQUNoQiw0QkFBNEIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N0dWRlbnQtaW5mb3JtYXRpb24tc3lzdGVtL3N0dWRlbnQtY291cnNlLXNlbGVjdGlvbnMvc3R1ZGVudC1jb3Vyc2Utc2VsZWN0aW9ucy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuXG4ubWgtMzAwLmNvbmZpcm0tdGFibGV7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICBtYXgtaGVpZ2h0OiAzMDBweCAhaW1wb3J0YW50OyBcbn0iXX0= */\"","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { ClassTimetableService } from 'app/service/class-schedules/class-time-table.service';\nimport { CommonService } from 'app/service/common.service';\nimport { MatDialog, MatDialogRef, MatSnackBar } from '@angular/material';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { GradeSetupService } from 'app/service/grading-service/api/grade-setup.service';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { StudentCourseSelectionService } from 'app/service/student-information-system/student-course-selection.service';\nimport { SchoolAcademicStudentView } from '../model/school-academic-student-view';\nimport { StudentCourseSelectionView } from '../model/student-course-selection-view';\nimport { AppSettings } from 'app/app.constants';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { StudentCourseFilterViewModel } from '../model/student-course-filter-view-model';\nimport { CourseCategory } from '../model/course-category';\n\n@Component({\n  selector: 'app-student-course-selections',\n  templateUrl: './student-course-selections.component.html',\n  styleUrls: ['./student-course-selections.component.scss']\n})\nexport class StudentCourseSelectionsComponent extends CommonComponent implements OnInit {\n  @ViewChild('studentCoursesForm') customTemplate: TemplateRef<any>;\n  @ViewChild('studentCourseSearchForm') studentCourseSearchForm;\n\n  studentCourseFilterViewModel: StudentCourseFilterViewModel;\n  // dropdown array declarations\n  classes: Array<any> = [];\n  sections: Array<any> = [];\n  courseCategories: Array<any> = [];\n  courseCategoriesList: any;\n  tableData: Array<any> = [];\n  rows: Array<any>;\n  cols: any[];\n  currentComponentName = 'StudentCourseSelectionComponet';\n  pageCnt: number;\n  totalItems: number;\n  custRowsPerPageOptions: Array<number> = [];\n  tabSettings: {};\n  filterRowData: any = [];\n  studentId: Array<any> = [];\n\n  // forms and models\n  studentCourseSelectionForm: FormGroup;\n  schoolAcademicStudentView: SchoolAcademicStudentView;\n  studentCourseSelectionView: StudentCourseSelectionView;\n\n  // variables\n  isValid: boolean;\n  isPopUpValid: boolean;\n  studentIds: Array<string> = [];\n  courseIds: Array<string> = [];\n  courses: Array<any> = [];\n  coustomDialog: MatDialogRef<any, any>;\n  schoolBoardId: number;\n  isDataValid: boolean;\n  isMultiSelect: boolean;\n  errorMessage: any;\n  courseCategoryData: CourseCategory;\n  filters: any;\n  isSingleClick = false;\n  constructor(private gradeSetupService: GradeSetupService, public commonService: CommonService,\n    public dialog: MatDialog, private classTimetableService: ClassTimetableService, private studentCourseSelectionService: StudentCourseSelectionService,\n    public snackBar: MatSnackBar) {\n    super();\n    this.initializeStudentCourseModel();\n    this.isDataValid = true;\n\n  }\n  initializeStudentCourseModel(): void{\n    this.studentCourseFilterViewModel = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER, pageSize: AppSettings.PAGESIZE_500,\n      classId: 0,\n      courseCategoryId: 0,\n      sectionId: 0,\n      studentNames: [],\n      admissionNumbers: [],\n      rollNumbers: [],\n      courseIds: [],\n      schoolBoardId: 0\n    };\n  }\n  initializeTabSettings(): void{\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.studentCourseFilterViewModel,\n      tablename: 'Students',\n      componentName: this.currentComponentName,\n      isPaginationRequired: false,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      isMultiDeleteRequired: false,\n    };\n  }\n  compareWithFunc = (a: any, b: any) => JSON.stringify(a) === JSON.stringify(b);\n  ngOnInit(): void {\n    this.getClasses();\n    this.studentCourseSelectionForm = new FormGroup({\n      classId: new FormControl('', [Validators.required]),\n      sectionId: new FormControl('', [Validators.required]),\n      courseCategoryId: new FormControl('')\n    });\n\n    this.initializeModel();\n    this.cols = [\n      { field: 'studentName', header: 'Student Name' },\n      { field: 'admissionNumber', header: 'Admission Number' },\n      { field: 'rollNumber', header: 'Roll Number' },\n      { field: 'courseCategory', header: 'Course Category' },\n      { field: 'course', header: 'Course' },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n\n    const modelTableComponent = this.getModelComponent(this.currentComponentName);\n    if (modelTableComponent) {\n      this.studentCourseFilterViewModel = modelTableComponent;\n      this.studentCourseSelectionForm.patchValue(modelTableComponent);\n      this.studentCourseSelectionForm.get('sectionId').patchValue({\n        sectionId: modelTableComponent.sectionId,\n        boardId: modelTableComponent.schoolBoardId\n      });\n      this.getSections(this.studentCourseSelectionForm.value.classId, true);\n      this.getCourseCategories('', '', true);\n      this.search(this.studentCourseSelectionForm);\n    }\n    // / initializing table settings /\n    this.initializeTabSettings();\n  }\n\n  // model initialization\n  initializeModel(): void {\n    this.studentCourseSelectionView = {\n      courseCategoryId: 0,\n      courseIds: [],\n      schoolAcademicSessionStudentIds: [],\n      classId: 0,\n    };\n\n    this.courseCategoryData = {\n      courses: []\n    };\n  }\n\n  // get students and courses data\n  loadStudentCourseCategoryData(): void {\n    this.setModelDataTableComponent(this.currentComponentName, this.studentCourseFilterViewModel);\n    this.studentCourseSelectionService.studentCourseSelectionStudentCoursecategoriesGet(this.studentCourseFilterViewModel.sortBy, this.studentCourseFilterViewModel.sortOrder,\n      this.studentCourseFilterViewModel.classId, this.studentCourseFilterViewModel.sectionId, this.studentCourseFilterViewModel.courseCategoryId,\n      this.studentCourseFilterViewModel.studentNames, this.studentCourseFilterViewModel.admissionNumbers, this.studentCourseFilterViewModel.rollNumbers,\n      this.studentCourseFilterViewModel.courseIds, this.studentCourseFilterViewModel.pageNumber,\n      this.studentCourseFilterViewModel.pageSize, this.studentCourseFilterViewModel.schoolBoardId)\n      .subscribe(data => this.response(data), error => {\n        this.errorResponse(error);\n      });\n\n  }\n\n  // on row actions\n  rowActions(response: any): void {\n    const filteredCourses = this.rows.reduce((ac, cu) => (cu.id === response.clickedRow.id && ac.push(cu.course), ac), []);\n    this.courseCategoryData = {};\n    this.getCourseCategories(response.clickedRow.id, response.clickedRow.courseCategoryId);\n    this.courseCategoryData.courses.map((e: any) => {\n      if (filteredCourses.includes(e.name)){\n        e.isChecked = true;\n      } else {\n        e.isChecked = false;\n      }\n    });\n    if (this.courseCategoryData.courses && this.courseCategoryData.courses.length){\n      this.courseCategoryData.courses.sort((a: any, b: any) => b.isChecked - a.isChecked);\n    }\n    this.openPopUp();\n    this.studentCourseSelectionView.courseCategoryId = response.clickedRow.courseCategoryId;\n    this.studentIds = [response.clickedRow.id];\n  }\n\n  // process the response for table\n  response(data: any): void {\n\n    if (data.studentCourseListViewModel) {\n      this.rows = data.studentCourseListViewModel.list;\n      this.totalItems = data.studentCourseListViewModel.totalItems;\n    } else {\n      this.rows = [];\n    }\n\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.studentCourseFilterViewModel,\n      rows: this.rows,\n      tablename: 'Students',\n      componentName: this.currentComponentName,\n      isSelectRowRequired: true,\n      visibleSelectAll: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      filtersList: data.filters,\n      isMultiDeleteRequired: false,\n      rowGroupingColumns: ['admissionNumber', 'rollNumber', 'studentName', 'courseCategory', 'course', 'select'],\n\n    };\n\n    this.filterRowData = this.rows;\n\n    const x = [];\n    this.filterRowData.forEach(elnt => {\n      if (x.length === 0) {\n        x.push(elnt);\n      }\n      else {\n        this.filterRowData.forEach((element: any) => {\n          const foundIndex = x.findIndex((value: any) => {\n            if (value.courseCategory === element.courseCategory && value.studentName === element.studentName && value.admissionNumber === element.admissionNumber &&\n              value.rollNumber === element.rollNumber) {\n              return value;\n            }\n          });\n          if (foundIndex === -1) {\n            x.push(element);\n          }\n        });\n      }\n    });\n    this.filterRowData = x;\n    if (this.filterRowData.length > 0) {\n      // apply edit and delete\n      this.filterRowData.forEach(element => {\n\n        this.rows.forEach(element1 => {\n          if (element.courseCategoryId === element1.courseCategoryId && element.courseId === element1.courseId && element.admissionNumber === element1.admissionNumber &&\n            element.rollNumber === element1.rollNumber) {\n\n            element1.operations = [\n              {\n                name: AppSettings.ASSIGN_COURSE_SELECTION,\n                icon: AppSettings.APPROVE_ICON,\n                operationName: AppSettings.ASSIGN_COURSE_SELECTION\n              }];\n          }\n        });\n      });\n    }\n  }\n  // get table data\n  stdentCourseCategoryTableData(_event: StudentCourseFilterViewModel): void {\n    this.studentCourseFilterViewModel = _event;\n    this.studentCourseSelectionForm.patchValue(this.studentCourseFilterViewModel);\n    this.studentCourseFilterViewModel.classId = this.studentCourseSelectionForm.value.classId;\n    this.studentCourseFilterViewModel.sectionId = this.studentCourseSelectionForm.value.sectionId.sectionId;\n    this.studentCourseFilterViewModel.schoolBoardId = this.studentCourseSelectionForm.value.sectionId.boardId;\n    this.studentCourseFilterViewModel.courseCategoryId = this.studentCourseSelectionForm.value.courseCategoryId;\n    this.loadStudentCourseCategoryData();\n  }\n\n  // get classes of school academic session\n  getClasses(): void {\n    this.gradeSetupService.schoolAcademicClasses().subscribe(response => {\n      if (response.listViews != null) {\n        if (response.listViews.length) {\n          response.listViews.forEach(element => {\n            this.classes.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n  // get sections of selected class\n  getSections(classId: number, onManualChange = false): void {\n    this.sections = [];\n    if (!onManualChange){\n      this.courseCategoriesList = [];\n      this.studentCourseSelectionForm.controls['sectionId'].setValue(null);\n      this.studentCourseSelectionForm.controls['courseCategoryId'].setValue(null);\n    } \n    this.classTimetableService.classTimetableSectionsGet(classId).subscribe(response => {\n      if (response.classTimetableSectionsView != null) {\n        if (response.classTimetableSectionsView.length) {\n          response.classTimetableSectionsView.map(x => {\n            this.sections.push({ value: { sectionId: x.sectionId, boardId: x.boardId }, label: x.sectionName, boardId: x.boardId, boardName: x.boardName });\n          });\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n  // get course categories of given class, section and student\n  getCourseCategories(schoolAcademicStudentId: string, courseCategoryId: number | string, isManualChange = false): void {\n    if (courseCategoryId) {\n      this.onCourseCategoryChange(courseCategoryId);\n    } else {\n      if (!isManualChange){\n        this.studentCourseSelectionForm.controls['courseCategoryId'].setValue(null);\n      }\n      this.courseCategoriesList = [];\n      this.studentCourseSelectionService.studentCourseSelectionCoursecategoriesCoursesGet(schoolAcademicStudentId, this.studentCourseSelectionForm.\n        controls['sectionId'].value.boardId,\n        this.studentCourseSelectionForm.controls['classId'].value).subscribe(response => {\n          if (response.courseCategoryCourses != null) {\n            if (response.courseCategoryCourses.length) {\n              this.courseCategoriesList = response.courseCategoryCourses;\n            } else {\n              this.openSnackBar(AppSettings.NO_COURSE_CATEGORIES, true);\n            }\n            if (courseCategoryId) {\n              this.onCourseCategoryChange(courseCategoryId);\n            }\n\n          }\n        }, error => {\n          this.errorResponse(error);\n        });\n    }\n  }\n\n  // get courseCategory on change\n  onCourseCategoryChange(courseCategoryId: number | string): void {\n    if (courseCategoryId) {\n      this.errorMessage = '';\n      this.courseCategoryData = <CourseCategory>this.courseCategoriesList.filter(x => x.id === courseCategoryId)[0];\n      this.courseCategoryData.courses.sort((a: any, b: any) => b.isChecked - a.isChecked);\n    }\n  }\n\n  // search students based on filter applied\n  search(data: any): void {\n    if (data.status === 'INVALID') {\n      return;\n    }\n    this.isValid = true;\n    this.studentCourseFilterViewModel.classId = data.value.classId;\n    this.studentCourseFilterViewModel.sectionId = data.value.sectionId.sectionId;\n    this.studentCourseFilterViewModel.courseCategoryId = data.value.courseCategoryId;\n    this.studentCourseFilterViewModel.schoolBoardId = data.value.sectionId.boardId;\n    this.studentCourseFilterViewModel.pageNumber = 1;\n    if (this.studentCourseSelectionForm.valid) {\n      this.loadStudentCourseCategoryData();\n    }\n  }\n\n  // reset data\n  reset(): void {\n    this.isValid = false;\n    this.studentCourseSelectionForm.reset();\n    this.studentCourseSearchForm.submitted = false;\n    this.sections = [];\n    this.courseCategoriesList = [];\n   // this.setModelDataTableComponent(this.currentComponentName, null);\n    this.clearStorageComponent(this.currentComponentName);\n    this.initializeStudentCourseModel();\n    this.initializeTabSettings();\n  }\n\n  // on select/unselect event to get selected id's\n  selectedRows(_event: Array<any>): void {\n    this.studentIds = Array.from(new Set(_event.map((item: any) => item.id)));\n\n  }\n\n  // assign courses for single/multiples students\n  assignStudentCourses(): void {\n    if (this.studentCourseSelectionView.courseCategoryId) {\n      this.onCheckBoxChange();\n      if (this.isDataValid) {\n        this.studentCourseSelectionView.schoolAcademicSessionStudentIds = this.studentIds;\n        this.studentCourseSelectionView.classId = this.studentCourseSelectionForm.value.classId;\n        this.studentCourseSelectionView.schoolBoardId = this.studentCourseSelectionForm.value.sectionId.boardId;\n        this.studentCourseSelectionView.courseIds = this.courseCategoryData.courses.filter((e: any) => e.isChecked).map((x: any) => x.courseId);\n        this.isPopUpValid = true;\n        if (!this.isSingleClick){\n          this.isSingleClick = true;\n          this.studentCourseSelectionService.studentCourseSelectionAssignStudentCoursesPost(this.studentCourseSelectionView).subscribe(response => {\n            this.openSnackBar(response.messages.ResultMessage);\n            this.closeAssignCoursesDialog();\n            this.loadStudentCourseCategoryData();\n          }, error => {\n            this.errorResponse(error);\n          });\n          setTimeout(() => {\n            this.isSingleClick = false;\n          }, 1000);\n        }\n      }\n    }\n    else {\n      this.errorMessage = AppSettings.COURSE_CATEGORY_REQUIRED;\n    }\n  }\n\n  // open popup\n  openPopUp(): void {\n    this.errorMessage = '';\n    this.studentCourseSelectionView = {};\n    this.coustomDialog = this.dialog.open(\n      this.customTemplate, {\n      disableClose: true,\n      width: '400px',\n    }\n    );\n  }\n\n  // on multiple assigns\n  onAssignMultipleStudents(): void {\n    const dialogValue = this.dialog.open(CustomDialogComponent, {\n      disableClose: true,\n      width: '400px',\n      data: { text: this.commonService.getTranslation(AppSettings.WARNING_ON_MULTIPLE_STUDENT_COURSE_ASSIGN), action: true, btn1Text: AppSettings.No, btn2Text: AppSettings.Yes },\n    });\n    dialogValue.afterClosed().subscribe(action => {\n      if (action === AppSettings.Yes) {\n        this.initializeModel();\n        this.getCourseCategories('', this.studentCourseSelectionForm.value.courseCategoryId);\n        this.isMultiSelect = true;\n        this.openPopUp();\n\n        if (this.studentCourseSelectionForm.value.courseCategoryId) {\n          this.studentCourseSelectionView.courseCategoryId =\n            this.studentCourseSelectionForm.value.courseCategoryId;\n        }\n      }\n    });\n  }\n\n  // close dialogue\n  closeAssignCoursesDialog(): void {\n    this.coustomDialog.close();\n    this.isMultiSelect = false;\n  }\n\n  onCheckBoxChange(): void {\n    this.errorMessage = '';\n    const courseCategory = this.courseCategoriesList.filter(x => x.id === this.studentCourseSelectionView.courseCategoryId)[0];\n    const selectedCoursesCount = this.courseCategoryData.courses.filter((x: any) => x.isChecked).length;\n\n    // (courseCategory.optionalCount !== 0 && courseCategory.areAllOptional === AppSettings.NO && (selectedCoursesCount === 0)) ? \n    // (this.errorMessage = AppSettings.ATLEAST_ONE_SELECTION_MUST_BE_MADE,\n    //    this.isDataValid = false) : \n\n\n    (courseCategory.optionalCount !== 0 && (selectedCoursesCount > courseCategory.optionalCount)) ?\n      (this.errorMessage = AppSettings.SELECTIONS_EXCEEDED, this.isDataValid = false) :\n      (courseCategory.requiredCount !== 0 && courseCategory.requiredCount !== selectedCoursesCount) ?\n        (this.errorMessage = AppSettings.SELECTIONS_NOT_MATCHED_REQ_COUNT, this.isDataValid = false) : this.isDataValid = true;\n  }\n}\n\n","module.exports = \"<div class=\\\"px-sm-40 pt-sm-24\\\">\\n  <div class=\\\"py-8 px-20 font-size-18 text-uppercase\\\" translate>Search Students</div>\\n  <div class=\\\"mat-elevation-z3 simple-table-container radius-t-20\\\">\\n    <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"searchStudent(searchForm.value)\\\">\\n    <!-- <fieldset  class=\\\"border p-20 mx-12\\\">\\n      <legend>Search by student name</legend>\\n     \\n    </fieldset> -->\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"p-24\\\"> \\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\">\\n        <div class=\\\"serch-db border px-16\\\">\\n          <input #studentName matInput placeholder=\\\"{{ 'Search Students' | translate}}\\\" onkeydown=\\\"return(event.keyCode!=13);\\\" formControlName=\\\"studentNames\\\"\\n            aria-label=\\\"StudentName\\\" matInput [matAutocomplete]=\\\"studentNameSearch\\\">\\n          <mat-autocomplete #studentNameSearch=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\"\\n            (optionSelected)='getSelectedStudent($event.option.value)'>\\n            <mat-option *ngFor=\\\"let option of filterdStudents\\\" [value]=\\\"option\\\">\\n              {{option.studentName}}\\n              <span class=\\\"grey-400-fg\\\"> {{option.currentClassName}} {{option.currentSectionName}} </span>\\n            </mat-option>\\n          </mat-autocomplete>\\n        </div>\\n      </div>\\n      <button mat-button type='button' (click)=\\\"getHelpText('Student Database')\\\">\\n          <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n      </button>\\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"after position-relative\\\">\\n     <small class=\\\"position-absolute custom-white\\\">(OR)</small> \\n    </div>\\n      <div class=\\\"p-20\\\">\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"22\\\" class=\\\"pr-sm-20\\\">\\n            <mat-label translate #parentName>Parent Name</mat-label>\\n            <input matInput formControlName=\\\"parentNames\\\" (keyup)=\\\"preventSpace($event,'searchForm','parentNames')\\\" (blur)=\\\"trimTextBoxSpaces('searchForm','parentNames')\\\">\\n          </mat-form-field>\\n\\n            <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"28\\\"\\n            class=\\\"pr-sm-20\\\">\\n            <mat-label translate #class>Academic Session</mat-label>\\n            <mat-select formControlName=\\\"academicSessions\\\">\\n              <mat-option></mat-option>\\n              <mat-option *ngFor=\\\"let academicSession of academicSessions\\\" [value]=\\\"academicSession.value\\\">\\n                {{ academicSession.label }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"28\\\"\\n            class=\\\"pr-sm-20\\\">\\n            <mat-label translate #class>Class</mat-label>\\n            <mat-select formControlName=\\\"classIds\\\">\\n              <mat-option></mat-option>\\n              <mat-option *ngFor=\\\"let class of classes\\\" [value]=\\\"class.value\\\">\\n                {{ class.label }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"28\\\">\\n            <mat-label translate #studentStatus>Status</mat-label>\\n            <mat-select formControlName=\\\"statusIds\\\">\\n              <mat-option></mat-option>\\n              <mat-option *ngFor=\\\"let studentStatus of studentStatuses\\\" [value]=\\\"studentStatus.value\\\">\\n                {{ studentStatus.label }}</mat-option>\\n            </mat-select>\\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\"\\n            class=\\\"pr-sm-20\\\">\\n            <mat-label translate #admissionNumber>Admission Number</mat-label>\\n            <input matInput formControlName=\\\"admissionNumbers\\\" (keyup)=\\\"preventSpace($event,'searchForm','admissionNumbers')\\\"\\n              (blur)=\\\"trimTextBoxSpaces('searchForm','admissionNumbers')\\\">\\n          </mat-form-field>\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n            <input matInput formControlName=\\\"dateOfBirth\\\" [satDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n            <sat-datepicker #picker [rangeMode]=\\\"true\\\"> </sat-datepicker>\\n            <sat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></sat-datepicker-toggle>\\n            <mat-label translate #dob>Date of Birth</mat-label>\\n            <mat-error >\\n              <app-validation [labelName]='dob.innerText'\\n                [validationControl]=\\\"searchForm.controls.dateOfBirth\\\" [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"my-12\\\">\\n          <button type=\\\"button\\\" mat-raised-button\\n            [routerLink]=\\\"['/academics/student-information-system/student-database/add-edit-student-admission']\\\"\\n            routerLinkActive=\\\"router-link-active\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\">{{'New Student' | translate}}\\n          </button>\\n          <button mat-raised-button type=\\\"reset\\\" class=\\\"text-uppercase mx-12\\\" (click)=\\\"onClear()\\\">\\n            {{'Reset' | translate}}\\n          </button>\\n          <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" class=\\\"text-uppercase\\\">\\n            {{'Search' | translate}}\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\\n<app-table id=\\\"student-database-table\\\" *ngIf=\\\"!showCustomCard\\\" [settings]='tableSettings' (getTableData)='tableData($event)'\\n  (rowBasedAction)='actions($event)' (openAddForm)='openForm()' (resetFilter)='onClear()'>\\n</app-table>\\n<app-custom-card *ngIf=\\\"showCustomCard\\\" [title]=customCardDetails.title [inputMessage]=customCardDetails.message>\\n</app-custom-card>\\n\"","module.exports = \".serch-db {\\n  width: 100%;\\n  max-width: 640px;\\n  height: 45px;\\n  line-height: 45px;\\n  border-radius: 28px;\\n  overflow: hidden; }\\n\\n.after::after {\\n  content: \\\"\\\";\\n  border-bottom: 1px solid #e0e0e0;\\n  width: 100%;\\n  overflow: hidden;\\n  z-index: 0; }\\n\\n.after small {\\n  z-index: 99; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N0dWRlbnQtaW5mb3JtYXRpb24tc3lzdGVtL3N0dWRlbnQtZGF0YWJhc2Uvc3R1ZGVudC1kYXRhYmFzZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQVc7RUFDWCxnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLGlCQUFpQjtFQUNqQixtQkFBbUI7RUFDbkIsZ0JBQWdCLEVBQUE7O0FBRXBCO0VBRVEsV0FBVztFQUNYLGdDQUFnQztFQUNoQyxXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLFVBQVUsRUFBQTs7QUFObEI7RUFTUSxXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2FjYWRlbWljcy9zdHVkZW50LWluZm9ybWF0aW9uLXN5c3RlbS9zdHVkZW50LWRhdGFiYXNlL3N0dWRlbnQtZGF0YWJhc2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2VyY2gtZGJ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgbWF4LXdpZHRoOiA2NDBweDtcbiAgICBoZWlnaHQ6IDQ1cHg7XG4gICAgbGluZS1oZWlnaHQ6IDQ1cHg7XG4gICAgYm9yZGVyLXJhZGl1czogMjhweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuOyAgXG59XG4uYWZ0ZXJ7ICAgXG4gICAgJjo6YWZ0ZXJ7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTBlMGUwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgei1pbmRleDogMDtcbiAgICB9XG4gICAgc21hbGx7XG4gICAgICAgIHotaW5kZXg6IDk5O1xuICAgIH1cbiAgXG59Il19 */\"","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { CommonComponent, AF_DATE_FORMATS } from 'app/shared/common/common.component';\nimport { StudentDBSearchView } from '../model/StudentDBSearchView';\nimport { AppSettings } from 'app/app.constants';\nimport { StudentDBService } from 'app/service/student-information-system/student-db.service';\nimport { StudentResultView } from '../model/student-result-view';\nimport { CommonService } from 'app/service/common.service';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from 'saturn-datepicker';\nimport { CustomDateAdapter } from 'app/shared/custom-date-adaptor';\nimport { Router } from '@angular/router';\nimport { RouteConfig } from 'app/url.config';\nimport 'rxjs/add/operator/debounceTime';\nimport { ClassesConfigService } from 'app/service/general/api/classes-config.service';\nimport { StatusService } from '../../../../service/academic-service/api/status.service';\nimport { MatAutocompleteTrigger, MatSnackBar } from '@angular/material';\nimport { AcademicSessionService } from 'app/service/academic-service';\n\n\n@Component({\n  selector: 'app-student-database',\n  templateUrl: './student-database.component.html',\n  styleUrls: ['./student-database.component.scss'],\n  providers: [StudentDBService,\n    { provide: DateAdapter, useClass: CustomDateAdapter, deps: [MAT_DATE_LOCALE] },\n    { provide: MAT_DATE_FORMATS, useValue: AF_DATE_FORMATS }]\n})\nexport class StudentDatabaseComponent extends CommonComponent implements OnInit {\n\n  tableSettings: {};\n  columns: any[];\n  totalRowsCount: number;\n  pageCnt: number;\n  rows: Array<any>;\n  filterViewModel: StudentDBSearchView;\n  currentComponent = 'StudentDatabaseComponent';\n  searchForm: FormGroup;\n  classes: Array<{ label: string, value: string }> = [];\n  studentStatuses: Array<{ label: string, value: string }> = [];\n  filterdStudents: Array<any> = [];\n  customCardDetails: { title: string, message: string } = { title: 'Students', message: 'Search Student' };\n  showCustomCard = true;\n  @ViewChild(MatAutocompleteTrigger) _auto: MatAutocompleteTrigger;\n  @ViewChild('studentName') studentNameAutoInput: any;\n  academicSessions = [];\n  academicSessionId: any;\n\n\n  constructor(public commonService: CommonService,\n    private studentDbService: StudentDBService,\n    private router: Router,\n    private classService: ClassesConfigService,\n    private statusService: StatusService,\n    private cd: ChangeDetectorRef,\n    private academicSessionService: AcademicSessionService, public snackBar: MatSnackBar) {\n    super();\n    this.initializeFilterView();\n    this.setColumnHeaders();\n    this.initializeTableSettings();\n    this.getRequiredDropdownOptions();\n  }\n\n  ngOnInit(): void {\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    this.initializeForm();\n    if (modelTableComponent) {\n      this.filterViewModel = modelTableComponent;\n      // this.searchForm.patchValue(this.filterViewModel);\n      if (modelTableComponent.studentNames && modelTableComponent.studentNames.length) {\n        this.searchForm.controls['studentNames'].patchValue(modelTableComponent.studentNames[0], { emitEvent: false });\n      }\n      this.getAllFilteredStudents();\n    }\n\n\n    this.searchForm.controls['studentNames'].valueChanges.debounceTime(200).subscribe((name) => {\n      name = typeof (name) === 'string' ? name.trim() : name;\n      if (name !== null && name.length >= 3) {\n        this.studentDbService.studentNames(name).subscribe((res) => {\n          this.filterdStudents = (res.students.length > 0) ? res.students : [];\n          this.cd.detectChanges();\n        });\n\n      }\n      else {\n        this.filterdStudents = [];\n      }\n    });\n\n  }\n\n  getRequiredDropdownOptions(): void {\n    this.classService.getFilteredClasses(null, null, null, null, 0, name, null, 1, 1000).subscribe((res) => {\n      this.classes = res.pagedClassViewModels.list.map((obj: any) => ({ value: obj.id, label: obj.name }));\n\n    });\n\n    this.statusService.getAllStatuses('STU').subscribe((res) => {\n      this.studentStatuses = res.statusViewModel.map((obj: any) => ({ value: obj.id, label: obj.name }));\n    });\n    this.getAcademicSession();\n  }\n\n  initializeForm(): void {\n    this.searchForm = new FormGroup({\n      studentNames: new FormControl(null),\n      parentNames: new FormControl(null),\n      classIds: new FormControl(null),\n      statusIds: new FormControl(null),\n      admissionNumbers: new FormControl(null),\n      dateOfBirth: new FormControl(null),\n      academicSessions: new FormControl(null)\n    });\n  }\n\n  initializeFilterView(): void {\n    this.filterViewModel = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n      classIds: [],\n      admissionNumbers: [],\n      studentNames: [],\n      studentId: '',\n      parentNames: [],\n      statusIds: [],\n      academicSessions: []\n    };\n  }\n\n  setColumnHeaders(): void {\n    this.columns = [\n      { field: 'studentName', header: 'Student Name', sort: true },\n      { field: 'academicSession', header: 'Academic Session', sort: true },\n      { field: 'fatherName', header: 'Father Name', sort: true },\n      { field: 'motherName', header: 'Mother Name', sort: true },\n      { field: 'guardianName', header: 'Guardian Name', sort: true },\n      { field: 'class', header: 'Current Class', sort: true },\n      { field: 'admissionNumber', header: 'Admission Number', sort: true },\n      { field: 'status', header: 'Status', sort: true },\n      { field: 'dateOfBirth', header: 'Date Of Birth', sort: true },\n      { field: 'actions', header: 'Actions ', sort: false }\n    ];\n  }\n\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.columns,\n      tablename: 'Students',\n      componentName: this.currentComponent,\n      model: this.filterViewModel,\n      filtersList: [],\n      headerOperations: {\n        addingForm: {\n          required: true\n        }\n      }\n    };\n  }\n\n  tableData(_event: StudentDBSearchView): void {\n    Object.assign(_event, {studentId: this.filterViewModel.studentId});\n    this.filterViewModel = _event;\n    this.updateFilterViewModel();\n    this.getAllFilteredStudents();\n  }\n\n  getAllFilteredStudents(): void {\n    if (this.searchForm === undefined) {\n      return;\n    }\n    // this.updateFilterViewModel();\n\n    this.setModelDataTableComponent(this.currentComponent, this.filterViewModel);\n    this.studentDbService.filteredStudents(this.filterViewModel.studentId,\n      this.filterViewModel.studentNames,\n      this.filterViewModel.academicSessions, this.filterViewModel.parentNames,\n      this.filterViewModel.admissionNumbers,\n      this.filterViewModel.classIds,\n      this.filterViewModel.statusIds, this.filterViewModel.dateOfBirthBegin, this.filterViewModel.dateOfBirthEnd, this.filterViewModel.sortOrder, this.filterViewModel.sortBy,\n      this.filterViewModel.pageNumber, this.filterViewModel.pageSize).\n      subscribe(res => {\n        this.bindStudentResult(res);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  updateFilterViewModel(): void {\n    \n    const data = this.searchForm.value;\n    if (data.parentNames != null) {\n      this.filterViewModel.parentNames = [data.parentNames];\n    } else {\n      this.filterViewModel.parentNames = [];\n    }\n    if (data.studentNames != null) {\n      this.filterViewModel.studentNames = typeof (data.studentNames) === 'object' ? [data.studentNames.studentName] : [data.studentNames];\n    } else {\n      this.filterViewModel.studentNames = [];\n      this.filterViewModel.studentId = '';\n    }\n    this.filterViewModel.classIds = data.classIds;\n    this.filterViewModel.statusIds = data.statusIds;\n    this.filterViewModel.academicSessions = data.academicSessions;\n\n    if (data.admissionNumbers != null) {\n      this.filterViewModel.admissionNumbers = [data.admissionNumbers];\n    } else {\n      this.filterViewModel.admissionNumbers = [];\n    }\n    if (data.dateOfBirth != null) {\n      this.filterViewModel.dateOfBirthBegin = data.dateOfBirth.begin.format(AppSettings.API_DATE_PATTERN);\n      this.filterViewModel.dateOfBirthEnd = data.dateOfBirth.end.format(AppSettings.API_DATE_PATTERN);\n    }\n    else {\n      this.filterViewModel.dateOfBirthBegin = this.filterViewModel.dateOfBirthEnd = null;\n    }\n  }\n\n  bindStudentResult(data: StudentResultView): void {\n    this.showCustomCard = false;\n    if (data !== null && data.filters !== null) {\n      data.filters.forEach(filter => {\n\n        switch (filter.name) {\n          case 'classIds':\n            this.classes = filter.options;\n            break;\n          case 'statusIds':\n            this.studentStatuses = filter.options;\n            break;\n          case 'academicSessions':\n            this.academicSessions = filter.options;\n            break;\n        }\n        if (filter.options && filter.options.find(option => option.isSelected === true) !== undefined) {\n          this.searchForm.controls[filter.name].setValue(\n            filter.options.find(option => option.isSelected === true).value\n          );\n        }\n        else if (this.searchForm.controls[filter.name] !== undefined && filter.value) {\n          if (filter.name === 'studentNames') {\n            this.studentNameAutoInput.nativeElement.value = filter.value;\n          }\n          else if (filter.name === 'dateOfBirth' && this.filterViewModel.dateOfBirthBegin) {\n            const dateRangeObj = { begin: new Date(this.filterViewModel.dateOfBirthBegin), end: new Date(this.filterViewModel.dateOfBirthEnd) };\n            this.searchForm.controls[filter.name].setValue(dateRangeObj);\n          }\n          else {\n            this.searchForm.controls[filter.name].setValue(filter.value);\n          }\n        }\n\n\n      });\n    }\n    if (!data.pagedStudentViewModels) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n    } else {\n\n      data.pagedStudentViewModels.list.forEach(element => {\n        element.dateOfBirth = element.dateOfBirth != null ? this.commonService.customDateFormat(element.dateOfBirth.toString(), this.getSchoolDateFormat()).date : null;\n      });\n      this.rows = data.pagedStudentViewModels.list;\n      this.totalRowsCount = data.pagedStudentViewModels.totalItems;\n      this.pageCnt = data.pagedStudentViewModels.totalPages;\n      this.rows.forEach(e => {\n        e.operations = [\n          {\n            name: AppSettings.EDIT_OPERATION,\n            icon: AppSettings.EDIT,\n            operationName: AppSettings.EDIT\n          }, {\n            name: AppSettings.VIEW,\n            icon: AppSettings.DETAILS_ICON,\n            operationName: AppSettings.VIEW\n          }\n        ];\n      });\n    }\n\n    if (data.pagedStudentViewModels) {\n      this.filterViewModel.pageNumber = data.pagedStudentViewModels.pageNumber;\n    }\n    this.tableSettings = {\n      model: this.filterViewModel,\n      rows: this.rows,\n      columns: this.columns,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      tablename: 'Student Database',\n      componentName: this.currentComponent,\n      isPaginationRequired: true,\n      filtersList: [], // data.filters,\n      hideHeader: true\n    };\n    setTimeout(() => {\n      this.scrollIntoViewById('student-database-table');\n    });\n    this.cd.detectChanges();\n  }\n\n  // Actions Performing on the row\n  actions(operationData: any): void {\n    if (operationData.operation === AppSettings.VIEW.toLowerCase()) {\n      this.router.navigate([RouteConfig._Student_Details + '/' + operationData.clickedRow.id]);\n    } else if (operationData.operation === AppSettings.EDIT.toLowerCase()) {\n      this.router.navigate([RouteConfig._Add_Edit_Student + '/' + operationData.clickedRow.id]);\n    }\n  }\n\n  displayFn(data: any): void {\n    return data ? data.studentName : undefined;\n  }\n\n  getSelectedStudent(value: any): void {\n    if (value.studentName) {\n      this.initializeFilterView();\n      this.filterViewModel.studentNames = [value.studentName];\n      this.filterViewModel.studentId = value.id;\n      this.getAllFilteredStudents();\n      if (value) {\n        this.searchForm.controls['studentNames'].setValue(value);\n      }\n    }\n  }\n\n  searchStudent(data: any): void {\n    if (!this.searchForm.valid) {\n      return;\n    }\n    this.searchForm.controls['studentNames'].patchValue(null);\n    this.updateFilterViewModel();\n    this.getAllFilteredStudents();\n  }\n\n\n  openForm(): void {\n    this.router.navigate([RouteConfig._Add_Edit_Student]);\n  }\n\n  onClear(): void {\n    this.searchForm.reset();\n    this.initializeFilterView();\n    this.filterViewModel.reset = true;\n    this.initializeTableSettings();\n    // this.setModelDataTableComponent(this.currentComponent, null);\n    this.clearStorageComponent(this.currentComponent);\n    this.showCustomCard = true;\n  }\n\n  getAcademicSession(): void {\n    // const currentSchool = JSON.parse(localStorage.getItem('_s'));\n    this.academicSessionService.academicSessionAllAcademicSessionsBySchoolIdGet()\n      .subscribe(\n        response => {\n          if (response.academicSessionView.length) {\n            let setAcdademicSessionId = null;\n            const newAcademicSessions = [];\n            const completedAcademicSessions = [];\n            this.academicSessions = [];\n            response.academicSessionView.forEach(element => {\n              if (element.statusCode === AppSettings.ACADEMICSESSION_ACTIVE) {\n                setAcdademicSessionId = element.id;\n              } else if (element.statusCode === AppSettings.ACADEMICSESSION_NEW) {\n                newAcademicSessions.push(element);\n              }\n              else {\n                completedAcademicSessions.push(element);\n              }\n              this.academicSessions.push({\n                value: element.id, label: element.displayName\n              });\n            });\n            setAcdademicSessionId = setAcdademicSessionId ?\n              setAcdademicSessionId : newAcademicSessions.length ? newAcademicSessions[0].id : completedAcademicSessions.length ? completedAcademicSessions[0].id : null;\n              \n            if (!this.filterViewModel.reset) {\n              this.searchForm.controls['academicSessions'].setValue(setAcdademicSessionId);\n            }\n          }\n        });\n  }\n\n}\n\n","module.exports = \"<div class=\\\"content px-sm-40 pt-sm-24\\\">\\n  <div class=\\\"ml-20 p-8 text-uppercase font-size-18\\\" translate>Search Student Facility Assignments</div>\\n  <div class=\\\"mat-elevation-z2 simple-table-container radius-t-20 pt-4\\\">\\n    <form [formGroup]=\\\"schoolFacilityForm\\\" #studentFacilityForm=\\\"ngForm\\\">\\n      <div fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"p-24\\\">\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"32\\\" fxFlex=\\\"100\\\">\\n          <mat-label #facilityId translate>School Facility</mat-label>\\n          <mat-select formControlName=\\\"facilityId\\\" required>\\n            <mat-option *ngFor=\\\"let facility of facilityDropDown\\\" [value]=\\\"facility.value\\\">\\n              {{facility.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"facilityId.innerText\\\"\\n              [validationControl]=\\\"schoolFacilityForm.controls.facilityId\\\" [doValidate]=\\\"isValidate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"35\\\" fxFlex=\\\"100\\\"\\n          class=\\\"px-sm-20\\\">\\n          <mat-label translate #class>Class</mat-label>\\n          <mat-select placeholder=\\\"Class\\\" formControlName=\\\"classId\\\" (selectionChange)=\\\"classSections($event.value)\\\">\\n            <mat-option *ngIf=\\\"classes?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let class of classes\\\" [value]=\\\"class.value\\\">\\n              {{ class.label }}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"32\\\">\\n          <mat-label #sectionId translate>Section</mat-label>\\n          <mat-select formControlName=\\\"sectionId\\\">\\n            <mat-option *ngIf=\\\"sectionNamesList?.length\\\"></mat-option>\\n            <mat-option *ngFor=\\\"let section of sectionNamesList\\\" [value]=\\\"section.value\\\">\\n              {{section.label}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n        <div fxLayout=\\\"row\\\" class=\\\"mb-20 w-280 pl-24\\\">\\n          <button mat-raised-button translate type=\\\"reset\\\" color=\\\"primary\\\" class=\\\"text-uppercase\\\" (click)=\\\"onFacilityClear()\\\">\\n            {{'Reset' | translate}}\\n          </button>\\n          <button mat-raised-button translate type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase mx-12\\\"\\n            (click)=\\\"searchFacilityData(schoolFacilityForm.value)\\\">\\n            {{'Search' | translate}}\\n          </button>\\n          <button mat-button type='button' (click)=\\\"getHelpText('Student Facility Assignment')\\\">\\n            <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n<app-custom-card *ngIf=\\\"!showTable\\\" [title]=\\\"'Student Facility Assignments'\\\" [inputMessage]=\\\"'Enter the required search criteria to perform the search'\\\">\\n</app-custom-card>\\n\\n\\n<app-table *ngIf=\\\"showTable\\\" [settings]=\\\"tableSettings\\\" (getTableData)='getFacilityData($event)' [templateRef]=\\\"assignFacility\\\"\\n  (openAddForm)='openAddForm()' (rowBasedAction)='actions($event)' [closeRowForm]='closeAddPanel'>\\n</app-table>\\n\\n<ng-template #assignFacility>\\n  <div *ngIf=\\\"isOpenAddForm\\\">\\n\\n    <form [formGroup]=\\\"schoolFacilityAssignmentForm\\\" #facilityAssignmentForm=\\\"ngForm\\\" fxLayout=\\\"column\\\" class=\\\"my-28\\\">\\n      <div fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"py-4 border-bottom\\\">\\n\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"30\\\" fxFlex=\\\"100\\\">\\n            <mat-label translate>Facility name</mat-label>\\n            <input (keyup)=\\\"preventSpace($event,'schoolFacilityAssignmentForm','facilityName')\\\" matInput formControlName=\\\"facilityName\\\">\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex.gt-sm=\\\"25\\\" fxFlex=\\\"100\\\"\\n          class=\\\"px-sm-20\\\">\\n          <mat-label translate #class>Class</mat-label>\\n          <mat-select placeholder=\\\"Class\\\" formControlName=\\\"classId\\\" (selectionChange)=\\\"assignmentSections($event.value)\\\"\\n            required>\\n            <mat-option *ngFor=\\\"let class of assignClasses\\\" [value]=\\\"class.value\\\">\\n              {{ class.label }}</mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"class.innerText\\\"\\n              [validationControl]=\\\"schoolFacilityAssignmentForm.controls.classId\\\" [doValidate]=\\\"assignValidate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"25\\\">\\n          <mat-label #sectionId translate>Section</mat-label>\\n          <mat-select formControlName=\\\"sectionId\\\" required>\\n            <mat-option *ngFor=\\\"let section of assignSectionNamesList\\\" [value]=\\\"section.value\\\">\\n              {{section.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"sectionId.innerText\\\"\\n              [validationControl]=\\\"schoolFacilityAssignmentForm.controls.sectionId\\\" [doValidate]=\\\"assignValidate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"w-240 pb-20\\\">\\n          <button mat-raised-button translate type=\\\"button\\\" color=\\\"primary\\\" class=\\\"text-uppercase  mx-12\\\"\\n            (click)=\\\"onAssignmentFacilityClear()\\\">\\n            {{'Clear' | translate}}\\n          </button>\\n          <button mat-raised-button translate type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\"\\n            (click)=\\\"getAddData(schoolFacilityAssignmentForm)\\\">\\n            {{'Search' | translate}}\\n          </button>\\n        </div>\\n      </div>\\n\\n      <app-table *ngIf=\\\"showFacilityTable\\\" class=\\\"max-height\\\" [settings]=\\\"facilityAddTableSettings\\\" (getTableData)='getAddData($event)'\\n       (selectedRows)='selectedRows($event)' (changeRowDropdown)='selectedRows($event)'>\\n      </app-table>\\n      <app-custom-card *ngIf=\\\"!showFacilityTable\\\"  [inputMessage]=\\\"'Enter the required search criteria and click on search to perform the search'\\\">\\n      </app-custom-card>\\n\\n      <div fxLayout=\\\"column\\\" class=\\\"mt-12\\\" fxFlex.gt-sm=\\\"25\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"edit-info\\\">\\n          <button mat-raised-button translate type=\\\"reset\\\" class=\\\"text-uppercase\\\" (click)=\\\"onAssignmentCancel()\\\">\\n            {{'Cancel' | translate}}\\n          </button>\\n          <button mat-raised-button translate type=\\\"submit\\\" [disabled]=\\\"disabelAssignment\\\" color=\\\"accent\\\"\\n            class=\\\"text-uppercase ml-8\\\" (click)=\\\"onAssignFacility(schoolFacilityAssignmentForm.value)\\\">\\n            {{'Assign' | translate}}\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n\\n</ng-template>\\n<ng-template #editTemplate>\\n        <div class=\\\"p-8 text-uppercase font-size-18\\\" translate>Edit Facility Assignment</div>\\n      <form [formGroup]=\\\"editStudentFacilityForm\\\" #editAssignmentForm=\\\"ngForm\\\"\\n        (ngSubmit)=\\\"editStudentFacility(editStudentFacilityForm)\\\" fxLayout=\\\"column\\\" class=\\\"pt-24\\\">\\n  \\n        <div translate #facilityName class=\\\"160 pb-12\\\" fxLayout=\\\"row\\\"><span translate>Facility</span> : <strong class=\\\"break-word pl-4\\\">{{selectedFacilityName}}</strong>\\n        </div>\\n        <div translate #facilityName class=\\\"160 pb-20\\\" fxLayout=\\\"row\\\"><span translate>Student</span> : <strong class=\\\"break-word pl-4\\\">{{studentName}}</strong></div>\\n     \\n          <mat-form-field fxFlexFill *ngIf=\\\"feeTypeTranches.length > 0\\\" appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\n            <mat-label translate #feeTranch>Fee Tranche</mat-label>\\n            <mat-select placeholder=\\\"Fee Tranche\\\" formControlName=\\\"feeTypeTrancheId\\\" required>\\n              <mat-option *ngFor=\\\"let feeTranch of feeTypeTranches\\\" [value]=\\\"feeTranch.id\\\">\\n                {{feeTranch.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]=\\\"feeTranch.innerText\\\"\\n                [validationControl]=\\\"editStudentFacilityForm.controls.feeTypeTrancheId\\\" [doValidate]=\\\"isEditValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field fxFlexFill *ngIf=\\\"feeTermsList.length > 0\\\" appearance=\\\"outline\\\" fxFlex=\\\"100\\\" fxLayout=\\\"column\\\">\\n            <mat-label translate #feeTerm>Ending Fee Term</mat-label>\\n            <mat-select placeholder=\\\"Fee Term\\\" formControlName=\\\"endFeeTermId\\\">\\n              <mat-option *ngIf=\\\"feeTermsList.length > 0\\\"></mat-option>\\n              <mat-option *ngFor=\\\"let feeTerm of feeTermsList\\\" [value]=\\\"feeTerm.id\\\">\\n                {{feeTerm.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]=\\\"feeTerm.innerText\\\"\\n                [validationControl]=\\\"editStudentFacilityForm.controls.endFeeTermId\\\" [doValidate]=\\\"isEditValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n      \\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"pt-20\\\">\\n            <button type=\\\"button\\\" mat-raised-button class=\\\"mr-16 text-uppercase\\\" (click)=\\\"onEditCancel()\\\">\\n              {{'Cancel' | translate}}</button>\\n            <button type=\\\"submit\\\" mat-raised-button color=\\\"accent\\\" class=\\\"text-uppercase\\\" translate>{{'Submit' | translate}}</button>\\n        </div>\\n  \\n      </form>\\n  </ng-template>\\n\"","module.exports = \".max-height {\\n  max-height: 400px;\\n  overflow-y: auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N0dWRlbnQtaW5mb3JtYXRpb24tc3lzdGVtL3N0dWRlbnQtZmFjaWxpdHktYXNzaWdubWVudC9zdHVkZW50LWZhY2lsaXR5LWFzc2lnbm1lbnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBaUI7RUFDakIsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2FjYWRlbWljcy9zdHVkZW50LWluZm9ybWF0aW9uLXN5c3RlbS9zdHVkZW50LWZhY2lsaXR5LWFzc2lnbm1lbnQvc3R1ZGVudC1mYWNpbGl0eS1hc3NpZ25tZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1heC1oZWlnaHR7XG4gICAgbWF4LWhlaWdodDogNDAwcHg7XG4gICAgb3ZlcmZsb3cteTogYXV0bztcbn0iXX0= */\"","\nimport { Component, OnInit, ViewChild, ChangeDetectorRef } from '@angular/core';\nimport { ClassSectionService } from 'app/service/academic-service/api/class-section.service';\nimport { CommonService } from 'app/service/common.service';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { ClassTimetableService } from 'app/service/class-schedules/class-time-table.service';\nimport { StudentsFacilityService } from 'app/service/academic-service/api/studentsFacility.service';\nimport { FilterViewModel } from '../model/filter-view-model';\nimport { AppSettings } from 'app/app.constants';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { StudentFacilitySelectionModel } from '../model/student-facility-selection-model';\nimport { SchoolFacilityService } from 'app/service/general/api/school-facility.service';\nimport { StudentFacilityAssignmentEdit } from '../model/student-facility-assignment-edit';\nimport { StudentTrancheModel } from '../model/student-tranche-model';\n\n\n@Component({\n  selector: 'app-student-facility-assignment',\n  templateUrl: './student-facility-assignment.component.html',\n  styleUrls: ['./student-facility-assignment.component.scss']\n})\nexport class StudentFacilityAssignmentComponent extends CommonComponent implements OnInit {\n  @ViewChild('editTemplate') editTemplate;\n  @ViewChild('addStudentFacilityTemplate') addStudentFacilityTemplate;\n  @ViewChild('studentFacilityForm') myForm;\n  @ViewChild('facilityAssignmentForm') facilityAssignmentForm;\n  @ViewChild('editAssignmentForm') editAssignmentForm;\n  classes: Array<any> = [];\n  assignClasses: Array<any> = [];\n  schoolFacilityForm: FormGroup;\n  schoolFacilityAssignmentForm: FormGroup;\n  editStudentFacilityForm: FormGroup;\n  sectionNamesList: Array<any> = [];\n  assignSectionNamesList: Array<any> = [];\n  tableSettings: {};\n  facilityAddTableSettings: {};\n  columns: any[];\n  currentComponent = 'StudentFacilityAssignmentComponent';\n  filterViewModel: FilterViewModel;\n  facilityAddColumns: any[];\n  rows: Array<any>;\n  totalItems: number;\n  cols: any[];\n  custRowsPerPageOptions: Array<number> = [];\n  pageCnt: number;\n  isOpenAddForm: boolean;\n  coustomDialog: any;\n  feeTermsList: Array<any> = [];\n  feeTypeTranches: Array<any> = [];\n  studentName: any;\n  isEditValidate: boolean;\n  studentFacilityAssignmentEdit: StudentFacilityAssignmentEdit;\n  id: any;\n  facilityDropDown = [];\n  selectedFacilityName = '';\n  closeAddPanel: boolean;\n  facilityStudentTranchList: Array<StudentTrancheModel> = [];\n  classId: any;\n  sectionId: any;\n  facilityTypeId: any;\n  disabelAssignment = true;\n  isValidate: boolean;\n  assignValidate: boolean;\n  showTable: boolean;\n  showFacilityTable = false;\n\n  constructor(public classSectionService: ClassSectionService, public commonService: CommonService,\n    public classTimetableService: ClassTimetableService, public studentsFacilityService: StudentsFacilityService,\n    public dialog: MatDialog, private schoolFacilityService: SchoolFacilityService, public snackBar: MatSnackBar,\n    private cd: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit(): void {\n\n    this.schoolFacilityForm = new FormGroup({\n      classId: new FormControl(''),\n      sectionId: new FormControl(''),\n      facilityId: new FormControl('', Validators.required),\n    });\n\n    this.schoolFacilityAssignmentForm = new FormGroup({\n      classId: new FormControl('', Validators.required),\n      sectionId: new FormControl('', Validators.required),\n      facilityName: new FormControl({ disabled: true, value: null })\n    });\n\n    this.editStudentFacilityForm = new FormGroup({\n      feeTypeTrancheId: new FormControl(''),\n      endFeeTermId: new FormControl(''),\n    });\n\n    this.schoolFacilityAssignmentForm.valueChanges.subscribe(f => {\n      this.initializeAssignTableSettings();\n      this.showFacilityTable = false;\n    });\n\n    this.columns = [\n      { field: 'studentName', header: 'Student Name', sort: true },\n      { field: 'admissionNumber', header: 'Admission Number', sort: true },\n      { field: 'className', header: 'Class', sort: true },\n      { field: 'sectionName', header: 'Section', sort: true },\n      { field: 'facilityName', header: 'Facility', sort: true },\n      { field: 'feeTypeTranch', header: 'Fee Type Tranche', sort: true },\n      { field: 'endFeeTermName', header: 'Ending Fee Term', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n    this.facilityAddColumns = [\n      { field: 'studentName', header: 'Student Name', sort: false },\n      { field: 'admissionNumber', header: 'Admission Number', sort: false },\n    ];\n\n\n    this.initializeFilterModel();\n    this.initializeTableSettings();\n    this.initializeAssignTableSettings();\n    this.fetchClasses();\n    this.getFacilities();\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.filterViewModel = modelTableComponent;\n      if (this.filterViewModel.classId){\n        this.classId = this.filterViewModel.classId;\n        this.classSections(this.classId, true);\n      }\n      if (this.filterViewModel.sectionId){\n        this.sectionId = this.filterViewModel.sectionId;\n      }\n      if (this.filterViewModel.facilityTypeId){\n        this.facilityTypeId = this.filterViewModel.facilityTypeId;\n      }\n      this.schoolFacilityForm.patchValue(this.filterViewModel);\n      this.schoolFacilityForm.controls.facilityId.patchValue(this.facilityTypeId);\n      this.searchFacilityData(this.schoolFacilityForm.value);\n    }\n  }\n  initializeFilterModel(): void {\n    this.filterViewModel = {\n      studentName: [],\n      admissionNumber: [],\n      feeTypeTranchId: [],\n      feeTermId: [],\n      classId: 0,\n      sectionId: 0,\n      facilityTypeId: 0,\n      sortBy: '',\n      sortOrder: AppSettings.DEFAULT_SORTORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n  }\n\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.columns,\n      tablename: 'Student Facility Assignments',\n      componentName: this.currentComponent,\n      model: this.filterViewModel,\n    };\n  }\n\n  initializeAssignTableSettings(): void {\n    this.facilityAddTableSettings = {\n      columns: this.facilityAddColumns,\n      rows: [],\n      componentName: this.currentComponent,\n      hideHeader: true\n    };\n\n  }\n\n  searchFacilityData(data: any): void {\n    this.facilityAddColumns = this.facilityAddColumns.filter(x => x.field !== 'feeTypeTranch');\n    if (data.facilityId === null || data.facilityId === '') {\n      this.isValidate = true;\n    }\n    else {\n      this.showTable = true;\n      this.isValidate = false;\n      this.classId = data.classId;\n      this.sectionId = data.sectionId;\n      this.facilityTypeId = data.facilityId !== undefined ? data.facilityId : this.filterViewModel.facilityTypeId;\n      this.studentFacilityList();\n    }\n  }\n\n  getFacilityData(data: any): void {\n    this.filterViewModel = data;\n    this.studentFacilityList();\n  }\n\n\n  getAddData(data: any): void {\n    if (this.schoolFacilityAssignmentForm.valid) {\n      this.assignValidate = false;\n      this.studentsFacilityService.studentUnAssignedFacilityList(data.value.classId, data.value.sectionId,\n        this.facilityTypeId).subscribe((res: any) => { this.getData(res, data); }, error => {\n          this.errorResponse(error);\n        });\n    } else {\n      this.initializeAssignTableSettings();\n      this.assignValidate = true;\n    }\n\n  }\n\n  facilityTabSettings(): void {\n    this.facilityAddTableSettings = {\n      columns: this.facilityAddColumns,\n      model: this.filterViewModel,\n      rows: this.rows,\n      componentName: this.currentComponent,\n      isSelectRowRequired: true,\n      visibleSelectAll: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      isMultiDeleteRequired: false,\n      tabTable: true,\n      padding: true,\n      hideHeader: true,\n      showSelectAll: true,\n    };\n    this.showFacilityTable = true;\n  }\n\n  getData(data: any, patchData: any): void {\n    this.rows = [];\n    this.facilityStudentTranchList = [];\n    this.disabelAssignment = true;\n    this.schoolFacilityAssignmentForm.patchValue(patchData);\n\n\n    if (!data.studentFacilityResult) {\n      this.rows = [];\n    }\n    else {\n      this.rows = data.studentFacilityResult;\n      this.totalItems = data.studentFacilityResult;\n      const dataList = data.studentFacilityResult[0].feeTypeTranch.map(x => {\n        return { label: x.name, value: x.id };\n      });\n\n      if (data.studentFacilityResult[0].feeTypeTranch.length > 0 && this.facilityAddColumns.find(x => x.field === 'feeTypeTranch') === undefined) {\n        this.facilityAddColumns.push({\n          field: 'feeTypeTranch', header: 'Fee/Tranche',\n          dropdownInputRequired: true, placeholder: 'Fee Tranches', options: dataList\n        });\n      }\n    }\n\n    this.facilityTabSettings();\n\n  }\n\n  studentFacilityList(): void {\n    this.filterViewModel.classId = this.classId;\n    this.filterViewModel.sectionId = this.sectionId;\n    this.filterViewModel.facilityTypeId = this.facilityTypeId;\n    this.setModelDataTableComponent(this.currentComponent, this.filterViewModel);\n    this.studentsFacilityService.studentFacilityList(this.filterViewModel.studentName, this.filterViewModel.admissionNumber,\n      this.filterViewModel.feeTypeTranchId, this.filterViewModel.feeTermId, this.filterViewModel.classId,\n      this.filterViewModel.sectionId, this.filterViewModel.facilityTypeId,\n      this.filterViewModel.sortOrder, this.filterViewModel.sortBy,\n      this.filterViewModel.pageNumber, this.filterViewModel.pageSize).subscribe((res: any) => { this.getStudentFacilities(res); }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  getStudentFacilities(data: any): void {\n\n    this.custRowsPerPageOptions = [];\n    if (!data.studentFacilityResult) {\n      this.rows = [];\n    } else {\n      this.rows = data.studentFacilityResult.list;\n      this.totalItems = data.studentFacilityResult.totalItems;\n    }\n\n    this.rows.forEach(e => {\n      const testoperations = [\n      ];\n      if (!e.isFeeTermsAvailable) {\n        testoperations.push(\n          {\n            name: AppSettings.DELETE_FACILITY_ASSIGNMENT,\n            icon: AppSettings.DELETE_ICON,\n          });\n      }\n      if (e.isFeeTermsAvailable || e.isFeeTranchesAvailable) {\n        testoperations.push(\n          {\n            name: AppSettings.EDIT_FACILITY_ASSIGNMENT,\n            icon: AppSettings.EDIT_ICON,\n          });\n      }\n      if (!e.isInvoiceGeneratedForFeeTerm) {\n        e.operations = testoperations;\n      }\n    });\n\n    if (data.testTypeListViewModel) {\n      this.filterViewModel.pageNumber = data.studentFacilityResult.pageNumber;\n    }\n\n    this.tableSettings = {\n      columns: this.columns,\n      model: this.filterViewModel,\n      rows: this.rows,\n      tablename: 'Student Facility Assignments',\n      componentName: this.currentComponent,\n      isNewStudentCourseSelectionRequired: true,\n      visibleSelectAll: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          name: this.addStudentFacilityTemplate,\n          btnName: 'Assign'\n        }\n      },\n      filtersList: data.filters\n    };\n  }\n\n  openAddForm(): void {\n    this.showFacilityTable = false;\n    this.rows = [];\n    this.schoolFacilityAssignmentForm.reset();\n    this.closeAddPanel = false;\n    this.isOpenAddForm = true;\n    this.disabelAssignment = true;\n    this.facilityDropDown.map(x => {\n      if (x.value === this.facilityTypeId) {\n        this.selectedFacilityName = x.label;\n        this.schoolFacilityAssignmentForm.controls['facilityName'].setValue(this.selectedFacilityName);\n      }\n    });\n    this.fetchAssignedClasses();\n    if (this.classId != null && this.classId !== undefined && this.classId !== '') {\n      this.assignmentSections(this.classId);\n    }\n    const assignModel = this.schoolFacilityAssignmentForm;\n    assignModel.controls.classId.patchValue(this.classId);\n    assignModel.controls.sectionId.patchValue(this.sectionId);\n    this.getAddData(assignModel);\n    this.assignSectionNamesList = [];\n  }\n\n  getFacilities(): void {\n    this.schoolFacilityService.getAllSchoolFacilities().subscribe((res: any) => this.facilityGet(res), error => {\n      this.errorResponse(error);\n    });\n  }\n\n  facilityGet(data: any): void {\n    this.facilityDropDown = [];\n    if (data.schoolFacilities !== null) {\n      for (let i = 0; i < data.schoolFacilities.length; i++) {\n        this.facilityDropDown.push\n        ({ value: data.schoolFacilities[i].id, label: data.schoolFacilities[i].name });\n      }\n    }\n\n  }\n\n  fetchClasses(): void {\n    this.classes = [];\n    this.classSectionService.schoolAcademicClasses()\n      .subscribe(res => {\n        if (res.listViews) {\n          res.listViews.forEach(element => {\n            this.classes.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n        }\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  fetchAssignedClasses(): void {\n\n    this.assignClasses = [];\n    this.classSectionService.schoolAcademicClasses()\n      .subscribe(res => {\n        if (res.listViews) {\n          res.listViews.forEach(element => {\n            this.assignClasses.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n        }\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  classSections(id: any, onManualChange = false): void {\n    this.sectionNamesList = [];\n    this.assignSectionNamesList = [];\n    if (!onManualChange){\n     this.schoolFacilityForm.controls.sectionId.setValue(null);\n    }\n    if (id !== undefined) {\n      this.classTimetableService.classTimetableSectionsGet(id).subscribe(response => {\n        if (response.classTimetableSectionsView != null) {\n          if (response.classTimetableSectionsView.length) {\n            response.classTimetableSectionsView.map(x => {\n              this.sectionNamesList.push({ value: x.sectionId, label: x.sectionName + ' (' + x.boardName + ')' });\n            });\n          }\n        }\n      }, error => {\n        this.errorResponse(error);\n      });\n    }\n    else {\n      this.schoolFacilityForm.controls['classId'].setValue(null);\n    }\n  }\n\n  assignmentSections(id: any): void {\n    this.schoolFacilityAssignmentForm.controls.sectionId.patchValue('');\n    this.assignSectionNamesList = [];\n    this.classTimetableService.classTimetableSectionsGet(id).subscribe(res => {\n      if (res.classTimetableSectionsView != null) {\n        res.classTimetableSectionsView.map(x => {\n          this.assignSectionNamesList.push({ value: x.sectionId, label: x.sectionName + ' (' + x.boardName + ')' });\n        });\n      }\n    });\n  }\n\n  actions(data: any): void {\n    this.closeAddPanel = true;\n    this.editStudentFacilityForm.reset();\n    this.id = data.clickedRow.id;\n    if (data.operation.toLowerCase() === AppSettings.EDIT_FACILITY_ASSIGNMENT.toLowerCase()) {\n      this.facilityDropDown.map(x => {\n        if (x.value === this.facilityTypeId) {\n          this.selectedFacilityName = x.label;\n        }\n      });\n      this.studentsFacilityService.getStudentFacilityById(this.id).subscribe(res => this.editResult(res), error => {\n        this.errorResponse(error);\n      });\n    }\n    if (data.operation.toLowerCase() === AppSettings.DELETE_FACILITY_ASSIGNMENT.toLowerCase()) {\n      const dialogRef = this.commonService.dialog(AppSettings.WARNING_ON_SINGLE_DELETE, true, AppSettings.NO, AppSettings.YES);\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.studentsFacilityService.deleteStudentFaclitySelection(this.id).subscribe(res => {\n            this.openSnackBar(res.messages.ResultMessage),\n            this.getFacilityData(this.filterViewModel);\n          }, error => {\n            this.errorResponse(error);\n          });\n        }\n      });\n\n    }\n  }\n\n  editResult(data: any): void {\n    this.editStudentFacilityForm.reset();\n    this.isEditValidate = true;\n    this.studentName = data.studentName;\n    this.feeTermsList = data.endFeeTerms;\n    this.feeTypeTranches = data.feeTypeTranches;\n    this.editStudentFacilityForm.patchValue(data);\n    this.coustomDialog = this.dialog.open(\n      this.editTemplate, {\n      disableClose: true,\n      width: '400px',\n    }\n    );\n  }\n\n  selectedRows(data: any): void {\n    this.disabelAssignment = true;\n    this.facilityStudentTranchList = [];\n    const selectedData = data.selectedList !== undefined ? data.selectedList : data;\n\n    selectedData.forEach(element => {\n      this.cd.detectChanges();\n\n      const facilityStudentTranch: StudentTrancheModel = {\n        feeTypeTrancheId: element.feeTypeTranch.length === 0 ? null : element.newValue !== undefined ? element.newValue : 0,\n        schoolAcademicSessionStudentId: element.schoolAcademicSessionStudentId\n      };\n\n      if (element.isCheck) {\n        this.facilityStudentTranchList.push(facilityStudentTranch);\n      }\n    });\n\n    const dataList = this.facilityStudentTranchList.filter(x => {\n      return x.feeTypeTrancheId === 0;\n    });\n\n    if (dataList !== null && dataList.length > 0) {\n      this.facilityStudentTranchList = [];\n    }\n\n    if (this.facilityStudentTranchList.length > 0) {\n      this.disabelAssignment = false;\n    } else {\n      this.disabelAssignment = true;\n    }\n    this.cd.detectChanges();\n  }\n\n  onEditCancel(): void {\n    this.dialog.closeAll();\n    this.schoolFacilityAssignmentForm.reset();\n  }\n\n  onAssignmentCancel(): void {\n    this.isOpenAddForm = false;\n    this.disabelAssignment = true;\n    this.closeAddPanel = true;\n    this.editStudentFacilityForm.reset();\n    this.facilityAssignmentForm.resetForm();\n  }\n\n  onFacilityClear(): void {\n    this.showTable = false;\n    this.initializeTableSettings();\n    this.initializeFilterModel();\n    this.facilityTypeId = '';\n    this.myForm.resetForm();\n    this.sectionNamesList = [];\n  }\n\n  onAssignmentFacilityClear(): void {\n    this.cd.detectChanges();\n    this.facilityAssignmentForm.resetForm();\n    this.initializeAssignTableSettings();\n    this.assignSectionNamesList = [];\n    this.schoolFacilityAssignmentForm.controls['facilityName'].setValue(this.selectedFacilityName);\n    this.rows = [];\n    this.disabelAssignment = true;\n    this.facilityStudentTranchList = [];\n  }\n\n  onAssignFacility(data: any): void {\n\n    const assignFacilty: StudentFacilitySelectionModel = {\n      facilityId: 0,\n      classId: 0,\n      sectionId: 0,\n    };\n\n    assignFacilty.classId = (data.classId != null && data.classId !== '') ? data.classId : this.classId;\n    assignFacilty.sectionId = (data.sectionId != null && data.sectionId !== '') ? data.sectionId : this.sectionId;\n    assignFacilty.facilityId = this.facilityTypeId;\n    assignFacilty.studentTrancheModel = this.facilityStudentTranchList;\n    this.studentsFacilityService.createStudentFacility(assignFacilty).subscribe(res => this.editResponse(res), error => {\n      this.errorResponse(error);\n    });\n  }\n\n  editStudentFacility(editStudentFacilityForm: any): void {\n    if (editStudentFacilityForm.status === AppSettings.VALID) {\n      this.isEditValidate = false;\n      this.studentFacilityAssignmentEdit = editStudentFacilityForm.value;\n      this.studentFacilityAssignmentEdit.facilityTypeId = this.facilityTypeId;\n      this.studentFacilityAssignmentEdit.id = this.id;\n      this.studentsFacilityService.updateStudentFacility(this.studentFacilityAssignmentEdit).subscribe(res => this.editResponse(res), error => {\n        this.errorResponse(error);\n      });\n    } else {\n      this.isEditValidate = true;\n    }\n  }\n\n  editResponse(res: any): void {\n    this.dialog.closeAll();\n    this.isOpenAddForm = false;\n    this.closeAddPanel = true;\n    this.openSnackBar(res.messages.ResultMessage);\n    this.getFacilityData(this.filterViewModel);\n  }\n\n}\n","module.exports = \"<div class=\\\"content px-sm-40 py-sm-20\\\">\\n  <div class=\\\"w-100-p mat-elevation-z2 simple-table-container radius-20 mb-20\\\">\\n    <div class=\\\"p-20\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"font-size-16\\\" translate>Group Details</div>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n        <button mat-raised-button color=\\\"primary\\\" class=\\\"text-uppercase\\\" (click)=\\\"goBack()\\\" translate>{{'Back' | translate}}</button>\\n        <button mat-button (click)=\\\"getHelpText('Student Groups')\\\">\\n            <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n          </button>\\n      </div>\\n    </div>\\n    <mat-divider></mat-divider>\\n\\n    <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" fxLayoutAlign=\\\"center start\\\" class=\\\"p-20 mb-12\\\">\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"60\\\">\\n        <div fxLayout=\\\"row\\\">\\n            <div class=\\\"profile-image border m-24 radius-10\\\">\\n                <img *ngIf=\\\"profileImage\\\" [src]=\\\"profileImage ? profileImage : ''\\\" class=\\\"w-200 h-200 radius-10\\\" alt=\\\"No Image\\\"/>\\n                <div *ngIf=\\\"!profileImage\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"w-200 h-200\\\">No Image</div>\\n              </div>\\n          <div fxLayout=\\\"column\\\" class=\\\"pl-20 mt-24\\\" fxLayoutAlign=\\\"start start\\\">\\n            <div fxLayout=\\\"row\\\" >\\n              <div class=\\\"w-100 primary-300-fg break-word\\\" translate>Short Name</div>: <div class=\\\"pl-12 break-word\\\"> {{this.studentGroupsDetailsList?.shortName}} </div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" class=\\\"py-16\\\">\\n              <div class=\\\"w-100 primary-300-fg break-word\\\" translate>Full Name</div>: <div class=\\\"pl-12 break-word\\\"> \\n                {{this.studentGroupsDetailsList?.fullName?(this.studentGroupsDetailsList.fullName):\\\"--\\\"}} </div>\\n            </div>\\n            <div fxLayout=\\\"row\\\">\\n                <div class=\\\"w-100 primary-300-fg\\\" translate>Color</div>: <div [class]=\\\"'w-40 h-40 border ml-12 '+ this.color\\\"> </div>\\n              </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"40\\\" class=\\\"mt-24\\\">\\n        <div fxLayout=\\\"row\\\">\\n          <div fxLayout=\\\"column\\\" class=\\\"pl-20\\\" fxLayoutAlign=\\\"center start\\\">\\n            <div fxLayout=\\\"row\\\" class=\\\"pb-16\\\">\\n              <div class=\\\"w-100  primary-300-fg break-word\\\" translate>Symbol Name</div>: <div class=\\\"pl-12 break-word\\\"> {{this.studentGroupsDetailsList?.symbol?(this.studentGroupsDetailsList.symbol):\\\"--\\\"}} </div>\\n            </div>\\n            <div fxLayout=\\\"row\\\">\\n              <div class=\\\"w-100 primary-300-fg break-word\\\" translate>Moto</div>: <div class=\\\"pl-12 break-word\\\">  {{this.studentGroupsDetailsList?.moto?(this.studentGroupsDetailsList.moto):\\\"--\\\"}} </div>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n   \\n\\n    <div class=\\\"border-top border-bottom p-12\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n      <span class=\\\"grey-600-fg\\\" translate>Academic Session</span>\\n          <button mat-icon-button [disabled]=\\\"!academicSessions[selectedAsIndex-1]\\\" (click)=\\\"onYearClick(true)\\\">\\n        <mat-icon>arrow_leftt</mat-icon>\\n      </button>\\n\\n      <div class=\\\"title\\\">\\n        <!-- {{a[selectedIndex]?.label}} -->\\n        {{getSelectedAcademicSession()}}\\n      </div>\\n\\n      <!-- <button mat-icon-button [disabled]=\\\"a?.length == selectedIndex\\\" (click)=\\\"this.selectedIndex = this.selectedIndex + 1\\\"> -->\\n          <button mat-icon-button [disabled]=\\\"!academicSessions[selectedAsIndex+1]\\\" (click)=\\\"onYearClick()\\\">\\n        <mat-icon>arrow_right</mat-icon>\\n      </button>\\n    </div>\\n\\n    <app-table *ngIf=\\\"loadAsync | async\\\" [settings]=\\\"tabSettings\\\" (rowBasedAction)='rowActions($event)' (getTableData)='getStudentGroups($event, true)' [templateRef]='studentGroupTemplate' id=\\\"app-table\\\"\\n      (openAddForm)='openForm()' [closeRowForm]='closeAddPanel'>\\n    </app-table>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N0dWRlbnQtaW5mb3JtYXRpb24tc3lzdGVtL3N0dWRlbnQtZ3JvdXAtZGV0YWlscy9zdHVkZW50LWdyb3VwLWRldGFpbHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { GroupView } from '../model/group-view';\nimport { FormBuilder } from '@angular/forms';\nimport { CommonService } from 'app/service/common.service';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { AppSettings } from 'app/app.constants';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { StudentGroupService } from 'app/service/student-group/student-group.service';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { RouteConfig } from 'app/url.config';\nimport { AcademicSessionService } from 'app/service/academic-service';\n\n@Component({\n  selector: 'app-student-group-details',\n  templateUrl: './student-group-details.component.html',\n  styleUrls: ['./student-group-details.component.scss']\n})\nexport class StudentGroupDetailsComponent extends CommonComponent implements OnInit {\n\n  studentGroupDetails: GroupView;\n  custRowsPerPageOptions: any[];\n  rows: any[];\n  totalItems: any;\n  cols: any;\n  tabSettings: any;\n  pageCnt: any;\n  studentGroupTemplate: any;\n  groupId: any;\n  HttpStatus: any;\n  studentGroupsDetailsList: any;\n  loadAsync = Promise.resolve(false);\n  profileImage: any;\n  year: string;\n  academicSessions: any[] = [];\n  currentAcademicSessionId: any;\n  currentAcademicSession: any;\n  selectedIndex: number;\n  color: any;\n  selectedAsIndex: any;\n  currentComponent = 'StudentGroupDetailsComponent';\n  constructor(private academicSessionService: AcademicSessionService, private _fb: FormBuilder, private studentGroupService: StudentGroupService,\n    public commonService: CommonService,\n    private route: ActivatedRoute, public dialog: MatDialog, private cd: ChangeDetectorRef, private sanitizer: DomSanitizer, private storeService: StoreService,\n    private router: Router, public snackBar: MatSnackBar) {\n    super();\n    this.studentGroupDetails = {\n      studentGroupId: '',\n      representatives: [],\n      studentName: [],\n      staffName: [],\n      schoolAcademicSessionId: 0,\n      sortBy: '',\n      sortOrder: AppSettings.DEFAULT_SORTORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n  }\n\n  ngOnInit(): void {\n    this.currentAcademicSession = JSON.parse(localStorage.getItem('_as'));\n    this.getAcademicSession();\n    this.HttpStatus = require('http-status-codes');\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.groupId = params.id;\n        this.studentGroupDetails.studentGroupId = this.groupId;\n        this.studentGroupService.getGroupsById(params.id)\n          .subscribe(res => {\n            this.response(res);\n          }, error => {\n            this.errorResponse(error);\n          });\n      }\n    });\n    this.cols = [\n      { field: 'representatives', header: 'Representatives', sort: true },\n      { field: 'studentName', header: 'Student Names', sort: true },\n      { field: 'staffName', header: 'Staff Names', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n\n\n\n\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.studentGroupDetails,\n      componentName: this.currentComponent,\n    };\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.studentGroupDetails = modelTableComponent;\n    }\n\n  }\n  response(data: any): void {\n    if (data.statusCode === this.HttpStatus.OK) {\n      this.studentGroupsDetailsList = data.studentGroupData;\n      if (this.studentGroupsDetailsList) {\n        this.color = this.studentGroupsDetailsList.color;\n      }\n\n      if (data.studentGroupData.attachment && data.studentGroupData.attachment.fileName) {\n        this.profileImage = this.storeService.getFilePath(data.studentGroupData.attachment.fileName);\n      }\n      this.getStudentGroups(this.studentGroupDetails);\n    }\n  }\n\n  // get data of student groups\n  getStudentGroups(studentGroupDetails: GroupView, fromFilters = false): void {\n    this.studentGroupDetails = studentGroupDetails;\n    if (fromFilters){\n      this.studentGroupDetails.schoolAcademicSessionId = this.academicSessions[this.selectedAsIndex].value;\n    }\n    if (!this.studentGroupDetails.schoolAcademicSessionId){\n      return;\n    }\n    this.studentGroupService.getAssignedDetails(this.groupId,\n      studentGroupDetails.representatives, studentGroupDetails.staffName, studentGroupDetails.studentName,\n      this.studentGroupDetails.schoolAcademicSessionId,\n      studentGroupDetails.sortBy, studentGroupDetails.sortOrder,\n      studentGroupDetails.pageNumber, studentGroupDetails.pageSize).subscribe((res: any) => { this.getStudentGroupss(res); }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  // response of student group details\n  getStudentGroupss(studentGroupsList: any): void {\n    this.custRowsPerPageOptions = [];\n    if (!studentGroupsList.studentGroupsDetails) {\n      this.rows = [];\n    } else {\n      this.rows = studentGroupsList.studentGroupsDetails.list;\n      this.totalItems = studentGroupsList.studentGroupsDetails.totalItems;\n    }\n    const studentGroupoperations = [\n      {\n        name: AppSettings.DELETE_OPERATION,\n        icon: AppSettings.DELETE_ICON\n      },\n    ];\n    this.rows.forEach(e => {\n      e.operations = studentGroupoperations;\n    });\n    if (studentGroupsList.studentGroupsDetails) {\n      this.studentGroupDetails.pageNumber = studentGroupsList.studentGroupsDetails.pageNumber;\n    }\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.studentGroupDetails,\n      rows: this.rows,\n      componentName: this.currentComponent,\n      visibleSelectAll: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      pageCnt: this.pageCnt,\n      tabTable: true,\n      padding: true,\n      filtersList: studentGroupsList.filters\n    };\n    this.loadAsync = Promise.resolve(true);\n    this.scrollIntoViewById('app-table');\n  }\n\n  rowActions(rowAction: any): void {\n    if (rowAction.operation === AppSettings.DELETE) {\n      const dialogRef = this.dialog.open(CustomDialogComponent, {\n        disableClose: true,\n        data: { text: this.commonService.getTranslation(AppSettings.WARNING_ON_DELETE), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES },\n      });\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          this.studentGroupService.deleteAssignRepresentatives(rowAction.clickedRow.studentGroupRepId).subscribe(res => this.deleteResponse(res), error => {\n            this.errorResponse(error);\n          });\n        }\n        if (action === AppSettings.NO) {\n          this.dialog.closeAll();\n        }\n      });\n    }\n\n\n  }\n\n  // Delete Response\n  deleteResponse(response: any): void {\n    this.getStudentGroups(this.studentGroupDetails);\n    this.openSnackBar(response.messages.ResultMessage);\n  }\n\n  goBack(): void {\n    this.router.navigate([RouteConfig._Student_Groups]);\n  }\n\n  getAcademicSession(): void {\n    // const currentSchool = JSON.parse(localStorage.getItem('_s'));\n    this.academicSessionService.academicSessionAllAcademicSessionsBySchoolIdGet()\n      .subscribe(\n        response => {\n          if (response.academicSessionView.length) {\n            this.academicSessions = [];\n            response.academicSessionView.forEach(element => {\n              this.academicSessions.push({\n                value: element.id,\n                name: element.displayName,\n                code: element.statusCode\n              });\n            });\n            this.currentAcademicSession = JSON.parse(localStorage.getItem('_as'));\n            if (this.currentAcademicSession){\n              this.selectedAsIndex = this.academicSessions.findIndex(e => e.name === this.currentAcademicSession.name);\n            }\n            this.studentGroupDetails.schoolAcademicSessionId = this.currentAcademicSession.id;\n            this.getStudentGroups(this.studentGroupDetails);\n          }\n        });\n  }\n  getSelectedAcademicSession(): any{\n    if (this.academicSessions[this.selectedAsIndex] && this.academicSessions[this.selectedAsIndex].name){\n      return this.academicSessions[this.selectedAsIndex].name;\n    }\n    return '';\n  }\n  onYearClick(isprevious = false): void {\n    if (isprevious){\n      this.selectedAsIndex--;\n    } else{\n      this.selectedAsIndex++;\n    }\n    this.currentAcademicSession = this.academicSessions[this.selectedAsIndex];\n    if (this.currentAcademicSession){\n      this.studentGroupDetails.schoolAcademicSessionId = this.currentAcademicSession.value;\n    } \n    this.getStudentGroups(this.studentGroupDetails);\n  }\n}\n","module.exports = \"<app-table [settings]=\\\"tabSettings\\\" id=\\\"student-groups-table\\\" (getTableData)='getStudentGroups($event)'\\n  [templateRef]='studentGroupTemplate' (openAddForm)='openForm()' (rowBasedAction)='rowActions($event)'\\n  [closeRowForm]=closeAddPanel>\\n</app-table>\\n\\n<ng-template #studentGroupTemplate>\\n  <form [formGroup]=\\\"studentGroupForm\\\" #userStudentGroupForm=\\\"ngForm\\\">\\n    <div class=\\\"pt-20 font-size-18\\\" translate>Student Group</div>\\n    <div fxLayout.gt-xs=\\\"row\\\" fxLayout=\\\"column\\\" class=\\\"p-sm-24\\\">\\n      <div fxLayout=\\\"column\\\" fxFlex.gt-xs=\\\"1 1 auto\\\" fxFlex=\\\"100\\\" fxFlexFill>\\n        <div fxFlexFill fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxLayout.gt-xs=\\\"row\\\">\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\">\\n            <mat-label translate #shortName>Short Name</mat-label>\\n            <input matInput formControlName=\\\"shortName\\\" (keyup)=\\\"preventSpace($event,'studentGroupForm','shortName')\\\" \\n              (blur)=\\\"trimTextBoxSpaces('studentGroupForm','shortName')\\\" required>\\n            <mat-error>\\n              <app-validation [labelName]='shortName.innerText'\\n                [validationControl]=\\\"studentGroupForm.controls.shortName\\\" [doValidate]=\\\"studentGroupSubmitted\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\"\\n            class=\\\"px-sm-20\\\">\\n            <mat-label translate #fullName>Full Name</mat-label>\\n            <input matInput formControlName=\\\"fullName\\\" (keyup)=\\\"preventSpace($event,'studentGroupForm','fullName')\\\" (blur)=\\\"trimTextBoxSpaces('studentGroupForm','fullName')\\\">\\n            <mat-error>\\n              <app-validation [labelName]='fullName.innerText' [validationControl]=\\\"studentGroupForm.controls.fullName\\\"\\n                [doValidate]=\\\"studentGroupSubmitted\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n        </div>\\n        <div fxFlexFill fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxLayout.gt-xs=\\\"row\\\" class=\\\"pt-12\\\">\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\">\\n            <mat-label translate #symbol>Symbol Name</mat-label>\\n            <input matInput formControlName=\\\"symbol\\\" (keyup)=\\\"preventSpace($event,'studentGroupForm','symbol')\\\"\\n            (blur)=\\\"trimTextBoxSpaces('studentGroupForm','symbol')\\\">\\n            <mat-error>\\n              <app-validation [labelName]='symbol.innerText' [validationControl]=\\\"studentGroupForm.controls.symbol\\\"\\n                [doValidate]=\\\"studentGroupSubmitted\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\"\\n            class=\\\"px-sm-20\\\">\\n            <mat-label translate #moto>Moto</mat-label>\\n            <input matInput formControlName=\\\"moto\\\" (keyup)=\\\"preventSpace($event,'studentGroupForm','moto')\\\"\\n            (blur)=\\\"trimTextBoxSpaces('studentGroupForm','moto')\\\">\\n            <mat-error>\\n              <app-validation [labelName]='moto.innerText' [validationControl]=\\\"studentGroupForm.controls.moto\\\"\\n                [doValidate]=\\\"studentGroupSubmitted\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"w-100 pb-16\\\">\\n            <mat-label class=\\\"pr-8\\\" translate>Color</mat-label>\\n            <fuse-material-color-picker *ngIf=\\\"colorCode != ''\\\" [color]=\\\"colorCode\\\" [(selectedClass)]=\\\"colorCode\\\"\\n              (colorChanged)=\\\"onColorChanged($event)\\\" formControlName=\\\"color\\\">\\n            </fuse-material-color-picker>\\n            <fuse-material-color-picker *ngIf=\\\"colorCode == ''\\\" (colorChanged)=\\\"onColorChanged($event)\\\"\\n              formControlName=\\\"color\\\">\\n            </fuse-material-color-picker>\\n          </div>\\n        </div>\\n      </div>\\n      <div fxLayout=\\\"column\\\">\\n        <div fxLayout=\\\"column\\\" class=\\\"w-180 h-180 border\\\">\\n          <span *ngIf=\\\"!flagImageProp?.src\\\" fxLayoutAlign=\\\"center center\\\" fxFlexFill>{{'Upload Image' | translate}}</span>\\n          <img class=\\\"radius-5 w-180 h-180\\\" [src]=\\\"flagImageProp?.src\\\" *ngIf=\\\"flagImageProp?.src\\\" alt=\\\"Launchship\\\" />\\n        </div>\\n        <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"py-12\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"fileInput.value='';fileInput.click()\\\" type=\\\"button\\\">\\n              {{'Upload Image' | translate}}\\n            </button>\\n            <button mat-icon-button [style.display]=\\\"flagImageProp?.src ? 'block' : 'none'\\\" type=\\\"button\\\">\\n              <mat-icon class=\\\"mb-4 grey-600-fg\\\" (click)=\\\"fileInput.value='';clearImages(true)\\\">highlight_off\\n              </mat-icon>\\n            </button>\\n          </div>\\n          <input [accept]=\\\"'image/*'\\\" id=\\\"fileInput\\\" (change)=\\\"imgChanged(fileInput.files,studentGroupForm)\\\" fxHide\\n            type=\\\"file\\\" #fileInput>\\n          <div [style.visibility]=\\\"studentGroupForm?.value?.attachment?.fileName ? 'visible' : 'hidden'\\\"\\n            class=\\\"pt-4 secondary-text font-size-12\\\">\\n            {{studentGroupForm?.value?.attachment?.fileName}}\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <mat-divider></mat-divider>\\n    <div class=\\\"py-20 font-size-18\\\" translate>Assign Representatives</div>\\n    <form [formGroup]=\\\"representativeForm\\\" #userStudentGroupRepForm=\\\"ngForm\\\"\\n      (ngSubmit)=\\\"addStudentGroup(studentGroupForm)\\\">\\n      <div formArrayName=\\\"studentGroupReps\\\" *ngFor=\\\"let itemrow of addNewRowAssaignRepform.controls; let i=index\\\">\\n        <div [formGroupName]=\\\"i\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\" fxLayout.gt-xs=\\\"row\\\" class=\\\"px-sm-24\\\">\\n          <mat-form-field fxFlexFill appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"40\\\">\\n            <mat-label #repRoleId translate>Representative Role</mat-label>\\n            <mat-select id=\\\"form-{{i}}\\\" formControlName=\\\"representativeRoleId\\\" (selectionChange)=\\\"onSelectRepRole(i)\\\"\\n              required>\\n              <mat-option *ngFor=\\\"let repRole of studentRepRoles\\\" [value]=\\\"repRole.value\\\">\\n                {{repRole.label}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <app-validation [labelName]='repRoleId.innerText'\\n                [validationControl]=\\\"itemrow.controls.representativeRoleId\\\" [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <div fxFlexFill fxLayout=\\\"column\\\" class=\\\"px-sm-24 w-244 pb-20\\\">\\n            <mat-label  class=\\\"pb-4 pl-8\\\"><span #assigneeTypeId translate>Assign to</span> <span>*</span></mat-label>\\n            <mat-radio-group aria-label=\\\"Select an option\\\" formControlName=\\\"assigneeTypeId\\\"\\n              (change)=\\\"onChange($event.value,i)\\\">\\n              <mat-radio-button value=\\\"1\\\">{{'Student' | translate}}</mat-radio-button>\\n              <mat-radio-button value=\\\"2\\\" class=\\\"pl-16\\\" translate>{{'Staff' | translate}}</mat-radio-button>\\n            </mat-radio-group>\\n            <mat-error *ngIf=\\\"userStudentGroupRepForm?.submitted\\\">\\n              <app-validation [labelName]='assigneeTypeId.innerText'\\n                [validationControl]=\\\"itemrow.controls.assigneeTypeId\\\" [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </div>\\n\\n          <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-xs=\\\"60\\\">\\n            <mat-label #roleid class=\\\"pr-8\\\" translate>Assignee</mat-label>\\n            <input id=\\\"assign-{{i}}\\\" type=\\\"text\\\" placeholder=\\\"Assignee\\\" aria-label=\\\"Assignee\\\" matInput formControlName=\\\"assignRepRoleName\\\" (keyup)=\\\"preventSpaceForArray($event,itemrow.controls.assignRepRoleName)\\\" (blur)=\\\"trimSpaces(itemrow,'assignRepRoleName')\\\"\\n              [matAutocomplete]=\\\"auto\\\" (input)=\\\"onSelectOptionEvent($event,i)\\\" \\n              [readonly]=\\\"!itemrow?.value?.assigneeTypeId\\\"\\n              required>\\n\\n            <mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\n              <mat-option *ngFor=\\\"let option of filteredAssigness[i]\\\" [value]=\\\"option\\\">\\n                {{option.label}}\\n              </mat-option>\\n            </mat-autocomplete>\\n            <mat-error>\\n              <app-validation [labelName]='roleid.innerText' [validationControl]=\\\"itemrow.controls.assignRepRoleName\\\"\\n                [doValidate]=\\\"true\\\">\\n              </app-validation>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <button mat-icon-button class=\\\"mb-20 ml-4\\\" type=\\\"button\\\" (click)=\\\"deleteRow(i)\\\">\\n            <mat-icon class=\\\"red-300-fg\\\">delete</mat-icon>\\n          </button>\\n        </div>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"px-sm-24\\\">\\n        <button mat-stroked-button color=\\\"accent\\\" class=\\\"text-uppercase\\\" type=\\\"button\\\" (click)=\\\"addNewRow()\\\">\\n          {{'Add Representatives' | translate}}\\n        </button>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"p-24\\\">\\n        <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\" (click)=\\\"closePanel()\\\">\\n          {{'Cancel' | translate}}</button>\\n\\n        <button [disabled]=\\\"disbleSubmitBtn\\\" mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\"\\n          color=\\\"accent\\\">{{(isUpdateData ? 'Update':'Create') | translate}}</button>\\n      </div>\\n    </form>\\n  </form>\\n</ng-template>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N0dWRlbnQtaW5mb3JtYXRpb24tc3lzdGVtL3N0dWRlbnQtZ3JvdXBzL3N0dWRlbnQtZ3JvdXBzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, ElementRef, ChangeDetectorRef } from '@angular/core';\n\nimport { FormGroup, FormBuilder, FormControl, Validators, FormArray } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport * as HttpStatus from 'http-status-codes';\n\nimport { StudentGroupService } from 'app/service/student-group/student-group.service';\nimport { StudentGroupDetailsView } from '../model/student-group-details-view';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { CommonService } from 'app/service/common.service';\nimport { AppSettings } from 'app/app.constants';\nimport { AssignGroupView } from '../model/assign-group-view';\nimport { AttachmentViewModel } from '../model/attachment-view-model';\nimport { AssignRepresentativeView } from '../model/assign-representative-view';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { RouteConfig } from 'app/url.config';\nimport { StudentGroupRepViewModel } from '../model/student-group-rep-view-model';\nimport { StoreService } from 'app/service/file-management/store.service';\n\n\n\n@Component({\n  selector: 'app-student-groups',\n  templateUrl: './student-groups.component.html',\n  styleUrls: ['./student-groups.component.scss']\n})\nexport class StudentGroupsComponent extends CommonComponent implements OnInit {\n  @ViewChild('studentGroupTemplate') studentGroupTemplate;\n  @ViewChild('fileInput') fileInput: ElementRef;\n  @ViewChild('userStudentGroupForm') userStudentGroupForm;\n  @ViewChild('userStudentGroupRepForm') userStudentGroupRepForm;\n  studentGroupDetails: StudentGroupDetailsView;\n  studentGroup: AssignGroupView;\n  attachmentInfo: AttachmentViewModel;\n  groupRepresentatives: AssignRepresentativeView;\n  studentGroupRepView: StudentGroupRepViewModel;\n\n  cols: any[];\n  tabSettings: {};\n  tempData: any;\n  closeAddPanel: boolean;\n  currentComponent = 'StudentGroupsComponent';\n  custRowsPerPageOptions: Array<number> = [];\n  rows: Array<any>;\n  totalItems: number;\n  pageCnt: number;\n  studentGroupForm: FormGroup;\n  representativeForm: FormGroup;\n  studentRepRoles: Array<any> = [];\n  repRoleSubmitted = false;\n  studentGroupSubmitted = true;\n  flagImageProp: any;\n  selectedColor: any;\n  representativesList: Array<any> = [];\n  grpReps: Array<any> = [];\n  grpRepsObj: any = {};\n  nonDuplicatedArray: Array<any> = [];\n  id: any;\n  colorCode: string;\n  disbleSubmitBtn = false;\n  disbleAddRowBtn = false;\n  checkDupliacteList: Array<any> = [];\n  repList: Array<any> = [];\n  displayName: any;\n  selectedBgCode: any;\n  searchAssigneeName: any;\n  selectedAssignee: any;\n  isUpdateData = false;\n  clickedId: any;\n  repRolesList: Array<any> = [];\n  filteredAssigness: Array<any>;\n  notProperAssignee = false;\n  isDuplicateRepresentativeData = false;\n  detailsComponent = 'StudentGroupDetailsComponent';\n\n  constructor(private _fb: FormBuilder, private router: Router,\n    private route: ActivatedRoute, private studentGroupService: StudentGroupService,\n    public commonService: CommonService, public dialog: MatDialog,\n    private cd: ChangeDetectorRef, private sanitizer: DomSanitizer,\n    private storeService: StoreService, public snackBar: MatSnackBar) {\n    super();\n    this.studentGroupDetails = {\n      shortNames: [],\n      fullNames: [],\n      symbols: [],\n      Motos: [],\n      sortBy: '',\n      sortOrder: AppSettings.DEFAULT_SORTORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n  }\n\n  ngOnInit(): void {\n    this.cols = [\n      { field: 'shortName', header: 'Short Name', sort: true },\n      { field: 'fullName', header: 'Full Name', sort: true },\n      { field: 'color', header: 'Color', sort: false, type: 'color' },\n      { field: 'symbol', header: 'Symbol', sort: true },\n      { field: 'moto', header: 'Moto', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n    ];\n\n    this.attachmentInfo = {\n      fileName: null,\n      fileValue: null\n    };\n\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.studentGroupDetails,\n      tablename: 'Student Groups',\n      componentName: this.currentComponent,\n    };\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.studentGroupDetails = modelTableComponent;\n    }\n    this.getStudentRepRoles();\n    this.studentGroupControls();\n    this.repArrayInit();\n    this.getStudentGroups(this.studentGroupDetails);\n  }\n\n  // Initailising form for student group\n  studentGroupControls(): void {\n    this.studentGroupForm = this._fb.group({\n      id: new FormControl(0),\n      shortName: new FormControl(null, [Validators.required, Validators.maxLength(45)]),\n      fullName: new FormControl(null, [Validators.maxLength(135)]),\n      color: new FormControl(null, [Validators.maxLength(45)]),\n      symbol: new FormControl(null, [Validators.maxLength(45)]),\n      moto: new FormControl(null, [Validators.maxLength(45)]),\n      studentGroupReps: this._fb.array([]),\n      attachment: this.attachmentInfo,\n    });\n  }\n\n  getStudentGroups(studentGroupDetails: StudentGroupDetailsView): void {\n    this.closeAddPanel = true;\n    this.studentGroupDetails = studentGroupDetails;\n    this.fetchStudentGroups();\n  }\n\n  fetchStudentGroups(): void {\n    this.studentGroupService.studentGroupsDetails(this.studentGroupDetails.shortNames, this.studentGroupDetails.fullNames,\n      this.studentGroupDetails.symbols, this.studentGroupDetails.Motos,\n      this.studentGroupDetails.flags, this.studentGroupDetails.sortBy,\n      this.studentGroupDetails.sortOrder, this.studentGroupDetails.pageNumber,\n      this.studentGroupDetails.pageSize).subscribe((res: any) => { this.getAllStudentGroups(res); }, error => {\n        this.errorResponse(error);\n      });\n  }\n\n  /**\n   * manipulate response data and sets to app-table\n   * @param testTypeList \n   */\n\n  getAllStudentGroups(studentGroupsList: any): void {\n    this.custRowsPerPageOptions = [];\n    if (!studentGroupsList.studentGroupDetailsView) {\n      this.rows = [];\n    } else {\n      this.rows = studentGroupsList.studentGroupDetailsView.list;\n      this.totalItems = studentGroupsList.studentGroupDetailsView.totalItems;\n    }\n    const studentGroupoperations = [\n      {\n        name: AppSettings.EDIT_OPERATION,\n        icon: AppSettings.EDIT_ICON\n\n      },\n      {\n        name: AppSettings.VIEW_OPERATION,\n        icon: AppSettings.DETAILS_ICON\n\n      },\n      {\n        name: AppSettings.DELETE_OPERATION,\n        icon: AppSettings.DELETE_ICON\n      },\n    ];\n    this.rows.forEach(e => {\n      e.operations = studentGroupoperations;\n    });\n    if (studentGroupsList.studentGroupDetailsView) {\n      this.studentGroupDetails.pageNumber = studentGroupsList.studentGroupDetailsView.pageNumber;\n    }\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.studentGroupDetails,\n      rows: this.rows,\n      tablename: 'Student Groups',\n      componentName: this.currentComponent,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      headerOperations: {\n        addingForm: {\n          required: true,\n          name: this.studentGroupTemplate,\n          btnName: AppSettings.NEW\n        },\n        infoButton: {\n          required: true,\n          text: 'Student Groups'\n        }\n      },\n      filtersList: studentGroupsList.filters\n    };\n  }\n\n  onColorChanged(color: any): void {\n    if (color.bg !== undefined && color.bg !== '') {\n      this.colorCode = color.class;\n      this.selectedColor = color.class;\n      this.studentGroupForm.controls.color.patchValue(this.selectedColor);\n    }\n  }\n\n  imgChanged(files, logo = false): void {\n    if (this.checkFileSize(files[0], 'image', 2097152)) {\n      return;\n    }\n    const reader = new FileReader();\n    reader.readAsDataURL(files[0]);\n    const that = this;\n    reader.onload = (_event) => {\n      let image;\n      image = new Image();\n      image.src = reader.result;\n      image.onload = function (): void {\n        that.flagImageProp = {\n          src: that.sanitizer.bypassSecurityTrustResourceUrl(image.src)\n        };\n        that.studentGroupForm.controls.attachment.patchValue({ fileName: files[0].name, fileValue: (<string>reader.result).split(',')[1] });\n        that.cd.detectChanges();\n      };\n    };\n  }\n\n  clearImages(logo = false): void {\n    if (logo) {\n      this.flagImageProp = {};\n      this.studentGroupForm.controls.attachment.patchValue(this.attachmentInfo);\n    }\n    this.cd.detectChanges();\n  }\n\n  getStudentRepRoles(): void {\n    this.studentRepRoles = [];\n    this.studentGroupService.getStudentGroupRepRoles().subscribe(response => {\n      if (response.listViews.length) {\n        response.listViews.forEach(element => {\n          this.studentRepRoles.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n      }\n    });\n  }\n\n  displayFn(user: any): void {\n    if (user) {\n      this.displayName = user.label === undefined ? user : user.label;\n      return this.displayName;\n    }\n  }\n  onSelectOptionEvent(event: any, index: number): boolean {\n    const data = event.target.value;\n    return this.onSelectOption(data, index);\n  }\n  onSelectOption(data: any, index: number, onSearch = true): boolean {\n    this.searchAssigneeName = data;\n    // if (this.representativeForm.controls['studentGroupReps'].invalid) {\n    //   this.disbleAddRowBtn = true;\n    //   this.repRoleSubmitted = true;\n    //   if (this.filteredAssigness && index !== undefined && this.filteredAssigness[index]) {\n    //     this.filteredAssigness[index] = [];\n    //   }\n    //   return false;\n    // }\n\n    // else\n\n\n    if (onSearch) {\n      this.disbleAddRowBtn = false;\n      if (data.length >= 3) {\n        const tempFilteredAssigness = [];\n        const control = <FormArray>this.representativeForm.controls['studentGroupReps'];\n        if ((control.at(index).value.assigneeTypeId) === '1') {\n          const trimmedData = data ? data.trim() : null;\n          if (!trimmedData) {\n            return;\n          }\n          this.studentGroupService.getStudent(trimmedData, this.clickedId).subscribe((res: any) => {\n            if (res.studentsDataList && res.studentsDataList.length) {\n              res.studentsDataList.forEach(element => {\n                tempFilteredAssigness.push({\n                  label: element.studentName + ' , ' + element.currentClassName + ' ' + element.currentSectionName + ' , ' + element.admissionNumber,\n                  value: element.id\n                });\n              });\n              this.filteredAssigness[index] = tempFilteredAssigness;\n              this.cd.detectChanges();\n            }\n          }, error => {\n            this.errorResponse(error);\n          });\n        } else {\n          this.studentGroupService.getSearchStaff(data).subscribe((res: any) => {\n            if (res.staffSearchViewResult && res.staffSearchViewResult.length) {\n              res.staffSearchViewResult.forEach(element => {\n                if (element.designation === null) {\n                  element.designation = '';\n                }\n                tempFilteredAssigness.push({\n\n                  label: element.staffName + ' ' + element.designation + ' , ' + element.staffCode,\n                  value: element.id\n                });\n              });\n              this.filteredAssigness[index] = tempFilteredAssigness;\n              this.cd.detectChanges();\n            }\n          }, error => {\n            this.errorResponse(error);\n          });\n        }\n      }\n    }\n  }\n\n  get addNewRowAssaignRepform(): FormArray {\n    return <FormArray>this.representativeForm.get('studentGroupReps');\n  }\n\n  repArrayInit(): void {\n    this.representativeForm = this._fb.group({\n      studentGroupReps: this._fb.array([]),\n    });\n  }\n\n  // list all your form controls here, which belongs to your form array\n  initItemRows(): FormGroup {\n    return this._fb.group({\n      id: new FormControl(null),\n      representativeRoleId: new FormControl(null, [Validators.required]),\n      assigneeTypeId: new FormControl(null, [Validators.required]),\n      assigneeId: new FormControl(null),\n      assignRepRoleName: new FormControl(null, [Validators.required, Validators.minLength(3)]),\n    });\n  }\n\n  // Adding representative role details onClick ADD\n  addNewRow(index: any): boolean {\n    if (this.representativeForm.controls['studentGroupReps'].value.length === 0) {\n      this.representativeForm.reset();\n      this.userStudentGroupRepForm.resetForm();\n    }\n    if (this.representativeForm.controls['studentGroupReps'].invalid) {\n      this.repRoleSubmitted = true;\n      return false;\n    } else {\n      if (this.filteredAssigness === undefined) {\n        this.filteredAssigness = [];\n      }\n      if (this.filteredAssigness && index !== undefined && this.filteredAssigness[index]) {\n        this.filteredAssigness[index] = [];\n      }\n\n      this.grpReps = [];\n      if (this.representativeForm.controls['studentGroupReps'].value.length) {\n        this.representativesList = this.representativeForm.controls['studentGroupReps'].value;\n      }\n      this.repRoleSubmitted = false;\n      // control refers to your formarray\n      const control = <FormArray>this.representativeForm.controls['studentGroupReps'];\n      // add new formgroup\n      control.push(this.initItemRows());\n      this.disbleAddRowBtn = true;\n    }\n  }\n\n  onChange(assignee: any, index: number): void {\n    this.selectedAssignee = assignee;\n    if (this.filteredAssigness && index !== undefined && this.filteredAssigness[index]) {\n      this.filteredAssigness[index] = [];\n    }\n\n    let groupReps: any = this.representativeForm.controls.studentGroupReps;\n    groupReps = groupReps.controls[index].patchValue({ assignRepRoleName: null });\n    if (this.representativeForm.controls['studentGroupReps'].invalid) {\n      this.disbleAddRowBtn = true;\n      this.repRoleSubmitted = true;\n    } else {\n      this.disbleAddRowBtn = false;\n    }\n    if (document.getElementById('assign-' + index)) {\n      document.getElementById('assign-' + index).focus();\n    }\n  }\n\n  onSelectRepRole(index: number): void {\n    if (this.searchAssigneeName != null) {\n      this.onSelectOption(this.searchAssigneeName, index, false);\n    } else if (this.filteredAssigness && index !== undefined && this.filteredAssigness[index]) {\n      this.filteredAssigness[index] = [];\n    }\n  }\n\n  // Deleting a row of representatives details onClick Remove\n  deleteRow(index: number): void {\n    this.disbleAddRowBtn = true;\n    // control refers to your formarray\n    const control = <FormArray>this.representativeForm.controls['studentGroupReps'];\n    // remove the chosen row\n    if (control.at(index).value.assignRepRoleName != null) {\n      if (control.at(index).value.assignRepRoleName.value === undefined) {\n        this.notProperAssignee = false;\n      }\n    }\n\n    this.checkDuplicateData();\n    control.removeAt(index);\n    if ((!this.representativeForm.controls['studentGroupReps'].value.length)\n      || (this.representativeForm.controls['studentGroupReps'].value.find(x => x.representativeRoleId !== null))) {\n      this.disbleAddRowBtn = false;\n    }\n  }\n\n  openForm(): void {\n    this.clickedId = null;\n    this.closeAddPanel = false;\n    this.isUpdateData = false;\n    this.studentGroupForm.reset();\n    this.userStudentGroupForm.resetForm();\n    this.userStudentGroupRepForm.resetForm();\n    this.representativeForm.reset();\n    this.repRoleSubmitted = false;\n    this.colorCode = '';\n    this.clearImages(true);\n    this.clearFormArray(this.representativeForm.controls['studentGroupReps']);\n  }\n\n  closePanel(): void {\n    this.closeAddPanel = true;\n    this.studentGroupForm.reset();\n    this.disbleSubmitBtn = false;\n    this.userStudentGroupForm.resetForm();\n    this.userStudentGroupRepForm.resetForm();\n    this.representativeForm.reset();\n    this.repRoleSubmitted = false;\n    this.colorCode = '';\n    this.clearImages(true);\n    this.clearFormArray(this.representativeForm.controls['studentGroupReps']);\n    this.scrollIntoViewById('student-groups-table');\n  }\n\n  clearFormArray(formArray: any): void {\n    const control = <FormArray>formArray;\n    for (let i = control.length - 1; i >= 0; i--) {\n      control.removeAt(i);\n    }\n  }\n\n  addStudentGroup(studentGroupForm: any): boolean {\n    this.grpReps = [];\n    this.representativesList = [];\n    if (studentGroupForm.invalid) {\n      return false;\n    }\n\n    else if (this.representativeForm.controls['studentGroupReps'].value.length && this.representativeForm.controls['studentGroupReps'].invalid) {\n      this.repRoleSubmitted = true;\n      return false;\n    } else {\n      if (this.representativeForm.controls['studentGroupReps'].value.length) {\n        this.representativeForm.controls['studentGroupReps'].value.forEach(e => {\n          this.representativesList.push({\n            representativeRoleId: e.representativeRoleId,\n            assigneeTypeId: e.assigneeTypeId,\n            assignRepRoleName: e.assignRepRoleName,\n            assigneeId: e.assigneeId,\n            id: e.id\n          });\n        });\n        this.notProperAssignee = false;\n        const isNotProperAssignee = this.representativesList.findIndex(x => x.assignRepRoleName.value === undefined);\n        if (isNotProperAssignee !== -1 || isNotProperAssignee === undefined) {\n          this.notProperAssignee = true;\n          this.openSnackBar(AppSettings.NOT_PROPER_ASSIGNEE, true);\n        } else {\n          this.isDuplicateRepresentativeData = false;\n          this.checkDuplicateData();\n          if (!this.isDuplicateRepresentativeData) {\n            this.repList = [];\n            const returnList = Object.assign(this.repList, this.representativesList);\n            returnList.forEach(element => {\n              this.grpReps.push({\n                studentGroupRepRoleId: element.representativeRoleId,\n                studentId: element.assigneeTypeId === '1' ?\n                  element.assignRepRoleName = (element.assignRepRoleName.value === undefined ?\n                    element.assigneeId : element.assignRepRoleName.value) : null,\n                staffId: element.assigneeTypeId === '2' ?\n                  element.assignRepRoleName = (element.assignRepRoleName.value === undefined ?\n                    element.assigneeId : element.assignRepRoleName.value) : null,\n                id: element.id != null ? element.id : null\n              });\n            });\n          } else {\n            this.openSnackBar(AppSettings.DUPLICATE_REPRESENTATIVE_DATA, true);\n            return false;\n          }\n        }\n      }\n\n      if (!this.notProperAssignee && !this.isDuplicateRepresentativeData) {\n        if (this.isUpdateData) {\n          this.disbleSubmitBtn = true;\n          this.studentGroupRepView = studentGroupForm.value;\n          if (this.grpReps && this.grpReps.length) {\n            this.studentGroupRepView.studentGroupReps = this.grpReps;\n          } else {\n            this.studentGroupRepView.studentGroupReps = [];\n          }\n          this.studentGroupRepView.id = this.clickedId;\n          this.studentGroupService.updateStudentGroup(this.studentGroupRepView).subscribe(res => this.addUpdateResponse(res), error => {\n            this.disbleSubmitBtn = false;\n            this.errorResponse(error);\n          });\n        } else {\n          this.disbleSubmitBtn = true;\n          this.studentGroup = studentGroupForm.value;\n          if (this.grpReps && this.grpReps.length) {\n            this.studentGroup.studentGroupReps = this.grpReps;\n          } else {\n            this.studentGroup.studentGroupReps = [];\n          }\n          this.studentGroupService.createStudentGroup(this.studentGroup).subscribe(res => this.addUpdateResponse(res), error => {\n            this.disbleSubmitBtn = false;\n            this.errorResponse(error);\n          });\n        }\n      }\n    }\n  }\n\n  addUpdateResponse(testTypeView: any): void {\n    this.disbleSubmitBtn = false;\n    this.closePanel();\n    if (testTypeView.statusCode !== HttpStatus.CONFLICT) {\n      this.closeAddPanel = true;\n      this.fetchStudentGroups();\n    }\n    this.openSnackBar(testTypeView.messages.ResultMessage);\n    this.scrollIntoViewById('student-groups-table');\n  }\n\n  checkDuplicateData(): boolean {\n    this.checkDupliacteList = this.representativesList;\n    this.checkDupliacteList.map(c => delete c.id && delete c.assigneeId);\n    const o = this.checkDupliacteList.reduce((acc, cv) => {\n      if (!acc[JSON.stringify(cv)]) {\n        acc[JSON.stringify(cv)] = true;\n      }\n      return acc;\n    }, {});\n    const res = Object.keys(o).map(x => JSON.parse(x));\n    if (res.length !== this.representativesList.length) {\n      this.isDuplicateRepresentativeData = true;\n      return false;\n    } else {\n      this.isDuplicateRepresentativeData = false;\n    }\n  }\n  rowActions(rowAction: any): void {\n    this.clickedId = rowAction.clickedRow.id;\n    if (rowAction.operation === AppSettings.EDIT) {\n      this.closeAddPanel = false;\n      this.isUpdateData = true;\n      this.studentGroupService.getGroupsById(rowAction.clickedRow.id).subscribe(res => this.studentGroupsById(res), error => {\n        this.errorResponse(error);\n      });\n    }\n    if (rowAction.operation === AppSettings.DELETE.toLowerCase()) {\n      const dialogValue = this.commonService.dialog(AppSettings.WARNING_ON_SINGLE_DELETE, true, AppSettings.NO, AppSettings.YES);\n      dialogValue.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          const studentGroupId: string = rowAction.clickedRow.id;\n          this.deleteStudentGroups(studentGroupId);\n        }\n      });\n    }\n    if (rowAction.operation === AppSettings.VIEW_DATA) {\n      this.setModelDataTableComponent(this.detailsComponent, null);\n      this.router.navigate([RouteConfig._Student_Group_Details + rowAction.clickedRow.id]);\n    }\n  }\n\n  deleteStudentGroups(studentGroupId: string): void {\n    this.studentGroupService.deleteStudentGroup(studentGroupId).subscribe(response => {\n      this.openSnackBar(response.messages.ResultMessage);\n      this.fetchStudentGroups();\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n  studentGroupsById(groupData: any): void {\n    this.repRolesList = [];\n    if (groupData.studentGroupData != null) {\n      this.studentGroupForm.controls['shortName'].setValue(groupData.studentGroupData.shortName);\n      this.studentGroupForm.controls['fullName'].setValue(groupData.studentGroupData.fullName);\n      this.colorCode = groupData.studentGroupData.color;\n      this.studentGroupForm.controls['color'].setValue(groupData.studentGroupData.color);\n      this.studentGroupForm.controls['symbol'].setValue(groupData.studentGroupData.symbol);\n      this.studentGroupForm.controls['moto'].setValue(groupData.studentGroupData.moto);\n      if (groupData.studentGroupData.attachment && groupData.studentGroupData.attachment.fileName) {\n        const that = this;\n        that.flagImageProp = {\n          src: that.sanitizer.bypassSecurityTrustResourceUrl(this.storeService.getFilePath(groupData.studentGroupData.attachment.fileName))\n        };\n        this.storeService.storeFileEncryptByFileNameGet(groupData.studentGroupData.attachment.fileName)\n          .subscribe(data => {\n            if (data) {\n              that.studentGroupForm.controls.attachment.patchValue({ fileName: data.fileNameWithExtension, fileValue: data.value });\n            }\n          });\n        that.cd.detectChanges();\n      }\n\n      if (groupData.studentGroupData && groupData.studentGroupData.studentGroupReps && groupData.studentGroupData.studentGroupReps.length) {\n\n        this.filteredAssigness = [];\n        // let index = 0;\n        const tempFilteredAssigness = [];\n        groupData.studentGroupData.studentGroupReps.forEach(e => {\n          this.repRolesList.push({\n            representativeRoleId: e.studentGroupRepRoleId,\n            assigneeTypeId: e.studentId != null ? AppSettings.ISSTUDENT : AppSettings.ISSTAFF,\n            assignRepRoleName: {\n              label: e.studentName != null ? e.studentName : e.staffName,\n              value: e.studentId != null ? e.studentId : e.staffId,\n            },\n            assigneeId: e.studentId != null ? e.studentId : e.staffId,\n            id: e.id\n          });\n\n          tempFilteredAssigness.push({\n            label: e.studentName != null ? e.studentName : e.staffName,\n            value: e.studentId != null ? e.studentId : e.staffId,\n          });\n        });\n\n        // this.filteredAssigness[index++] = tempFilteredAssigness;\n      }\n\n      this.representativeForm.controls['studentGroupReps'] = this._fb.array(this.repRolesList.map(i => this._fb.group(i)));\n    }\n  }\n\n  // // prevent spaces at on blur text fields\n  // trimTextBoxSpaces(key: string, form: any): void {\n  //   if (form === 'studentGroupForm') {\n  //     this.studentGroupForm.controls[key].setValue(this.commonService.trimSpaces(this.studentGroupForm.controls[key].value));\n  //   } else {\n  //     this.representativeForm.get('studentGroupReps')['controls'].forEach(controlElt => {\n\n  //       if (controlElt.controls[key] !== null && controlElt.controls[key] !== undefined) {\n  //         if (typeof controlElt.controls[key].value === 'object' && controlElt.controls[key].value !== null) {\n  //           // controlElt.controls[key].setValue(this.commonService.trimSpaces(controlElt.controls[key].value.label));\n  //         }\n  //         else {\n  //           controlElt.controls[key].setValue(this.commonService.trimSpaces(controlElt.controls[key].value));\n  //         }\n\n  //       }\n  //     });\n  //   }\n  // }\n\n  onKeyDown(): void {\n    // this.filteredAssigness = [];\n  }\n\n  preventSpacesAutoComplete(control): void {\n    if (!(control.value && control.value.label)) {\n      control.patchValue(control.value ? control.value.trim() : null);\n    }\n  }\n  preventSpaceAutoComplete(event: any, control): void {\n    this.preventCustomKeys(event);\n    if (!(control.value && control.value.label)) {\n      control.patchValue(control.value ? control.value.trimLeft() : null);\n\n    }\n  }\n}\n","module.exports = \"<div class=\\\"content p-sm-40\\\">\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center \\\" class=\\\"px-20 pb-8\\\">\\n    <div class=\\\"ml-20 p-8 text-uppercase font-size-18\\\" translate>studentDetails</div>\\n    <div>\\n      <button mat-raised-button color=\\\"primary\\\" translate (click)=\\\"back()\\\" class=\\\"text-uppercase\\\">{{'Back' | translate}}</button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"w-100-p mat-elevation-z2 simple-table-container radius-20 mb-20\\\">\\n    <!-- <mat-divider></mat-divider> -->\\n    <form [formGroup]=\\\"dropoutForm\\\" *ngIf=\\\"isDropoutOpen\\\" class=\\\"px-sm-32\\\"\\n      [@animate]=\\\"{value:'*',params:{delay:'100ms',y:'-80px'}}\\\">\\n      <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #action translate>Action</mat-label>\\n          <mat-select formControlName=\\\"studentActionTypeId\\\" required>\\n            <mat-option *ngFor=\\\"let action of dropoutActionTypeList\\\" [value]=\\\"action.id\\\">{{action.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='action.innerText'\\n              [validationControl]=\\\"dropoutForm.controls.studentActionTypeId\\\" [doValidate]=\\\"isValidate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"pl-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #reason translate>Reason</mat-label>\\n          <input matInput formControlName=\\\"details\\\" (keyup)=\\\"preventSpace($event,'dropoutForm','details')\\\"\\n            (blur)=\\\"trimTextBoxSpaces('dropoutForm','details')\\\" required>\\n          <mat-error>\\n            <app-validation [labelName]=\\\"reason.innerText\\\" [validationControl]=\\\"dropoutForm.controls.details\\\"\\n              [doValidate]=\\\"isValidate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end start\\\" class=\\\"mb-32 mt-12\\\">\\n        <button mat-raised-button type=\\\"reset\\\" (click)=\\\"dropoutForm.reset();isDropoutOpen=false\\\" class=\\\"text-uppercase\\\">\\n          {{'Cancel' | translate}}\\n        </button>\\n        <button mat-raised-button type=\\\"submit\\\" (click)=\\\"onSubmitDropout()\\\" color=\\\"accent\\\" class=\\\"text-uppercase ml-20\\\">\\n          {{'Submit' | translate}}\\n        </button>\\n      </div>\\n    </form>\\n\\n    <form [formGroup]=\\\"studentRequestForm\\\" *ngIf=\\\"isStudentRequestOpen\\\" class=\\\"px-sm-32\\\"\\n      [@animate]=\\\"{value:'*',params:{delay:'100ms',y:'-80px'}}\\\">\\n      <div fxFlexFill fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"pt-24\\\" fxLayoutAlign=\\\"start center\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\">\\n          <mat-label #type translate>Request Type</mat-label>\\n          <mat-select required formControlName=\\\"requestTypeId\\\">\\n            <mat-option *ngFor=\\\"let type of requestTypeList\\\" [value]=\\\"type.id\\\">{{type.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <app-validation [labelName]='type.innerText' [validationControl]=\\\"studentRequestForm.controls.requestTypeId\\\"\\n              [doValidate]=\\\"isValidate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n\\n        <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"50\\\" class=\\\"pl-sm-24 pb-sm-20\\\">\\n          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"image.value='';image.click()\\\">{{'Upload File' | translate}}</button>\\n            <button *ngIf=\\\"studentRequestForm.value?.attachment?.fileName\\\" mat-icon-button type=\\\"button\\\">\\n              <mat-icon class=\\\"mb-4 grey-600-fg\\\" (click)=\\\"image.value='';clearImages()\\\">\\n                highlight_off</mat-icon>\\n            </button>\\n          </div>\\n          <input [accept]=\\\"AcceptImagesApplicationType\\\" id=\\\"image\\\" (change)=\\\"imgChanged(image.files)\\\" fxHide type=\\\"file\\\"\\n            #image>\\n          <div [style.visibility]=\\\"studentRequestForm?.value?.attachment?.fileName ? 'visible' : 'hidden'\\\"\\n            class=\\\"pt-4 primary-300-fg font-size-12 text-left pr-36\\\">\\n            {{studentRequestForm?.value?.attachment?.fileName}}\\n          </div>\\n        </div>\\n      </div>\\n      <div fxFlexFill fxLayout=\\\"column\\\" class=\\\"pt-12\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" class=\\\"reject-comment\\\">\\n          <mat-label translate #reasonn>Request Notes</mat-label>\\n          <textarea (keyup)=\\\"preventSpace($event,'studentRequestForm','requestNote')\\\" (blur)=\\\"trimTextBoxSpaces('studentRequestForm','requestNote')\\\"\\n            matInput formControlName=\\\"requestNote\\\" placeholder=\\\"Leave a comment\\\"></textarea>\\n          <mat-error>\\n            <app-validation [labelName]='reasonn.innerText'\\n              [validationControl]=\\\"studentRequestForm.controls.requestNote\\\" [doValidate]=\\\"isValidate\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n      </div>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"mb-32 mt-12\\\">\\n        <button mat-raised-button type=\\\"reset\\\" (click)=\\\"studentRequestForm.reset();isStudentRequestOpen=false\\\"\\n          class=\\\"text-uppercase\\\">\\n          {{'Cancel' | translate}}\\n        </button>\\n        <button mat-raised-button (click)=\\\"onSubmitRequest()\\\" type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase ml-20\\\">\\n          {{'Submit' | translate}}\\n        </button>\\n      </div>\\n    </form>\\n    <div *ngIf=\\\"isUpdateSiblingOpen\\\" [@animate]=\\\"{value:'*',params:{delay:'100ms',y:'-80px'}}\\\">\\n      <app-student-sibling [currentStudentId]=\\\"studentId\\\" (siblingIds)=\\\"siblingsDetails($event)\\\"></app-student-sibling>\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"m-20\\\">\\n        <button mat-raised-button type=\\\"button\\\" class=\\\"text-uppercase mx-16\\\" (click)=\\\"onSiblingCancel()\\\">\\n          {{'Cancel' | translate}}\\n        </button>\\n        <button mat-raised-button type=\\\"button\\\" color=\\\"accent\\\" class=\\\"text-uppercase\\\" (click)=\\\"updateSiblingsSubmit()\\\"\\n          [disabled]=\\\"siblingIds == undefined || siblingIds.length==0\\\">\\n          {{'Update' | translate}}\\n        </button>\\n      </div>\\n\\n    </div>\\n    <mat-divider *ngIf=\\\"studentSettings()\\\"></mat-divider>\\n    <div fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between start\\\" class=\\\"p-24\\\">\\n      <div fxLayout=\\\"column\\\" fxFlex=\\\"60\\\">\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center start\\\">\\n          <div class=\\\"profile-image border m-12 radius-10\\\" fxLayout=\\\"column\\\">\\n            <img *ngIf=\\\"profileImage\\\" [src]=\\\"profileImage ? profileImage : ''\\\" class=\\\"w-200 h-200 radius-10\\\"\\n              alt=\\\"No Image\\\" />\\n            <div *ngIf=\\\"!profileImage\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"w-200 h-200\\\">No Image</div>\\n          </div>\\n\\n          <div fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n            <div class=\\\"h2 primary-900-fg-custom mb-16 break-word\\\">{{applicantInfo?.studentName}}</div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n              <div class=\\\"w-140 py-4 primary-300-fg\\\" translate>Admission Number</div> : <div class=\\\"ml-24 break-word\\\">\\n                {{applicantInfo?.admissionNumber ? applicantInfo.admissionNumber : \\\"-\\\"}}</div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n              <div class=\\\"w-140 py-4 primary-300-fg\\\" translate>mobilenumber</div> : <div class=\\\"ml-24 break-word\\\">\\n                {{applicantInfo?.studentDetails?.mobileTel ? applicantInfo?.studentDetails?.mobileTel : \\\"-\\\"}}</div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n              <div class=\\\"w-140 py-4 primary-300-fg\\\" translate>email</div> : <div class=\\\"ml-24 break-word\\\">\\n                {{applicantInfo?.studentDetails?.email1 ? applicantInfo?.studentDetails?.email1 : \\\"-\\\"}}</div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n              <div class=\\\"w-140 py-4 primary-300-fg\\\" translate>Class</div> : <div class=\\\"ml-24 break-word\\\">\\n                {{applicantInfo?.className ? applicantInfo?.className : \\\"-\\\"}}</div>\\n            </div>\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\n              <div class=\\\"w-140 py-4 primary-300-fg\\\" translate>status</div> : <div class=\\\"ml-24 break-word\\\">\\n                {{ applicantInfo?.statusName ? applicantInfo?.statusName  : \\\"-\\\"}}</div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div fxLayout=\\\"column\\\" class=\\\"mr-sm-32\\\">\\n        <button mat-mini-fab [matMenuTriggerFor]=\\\"moreMenu\\\" aria-label=\\\"More\\\" (click)=\\\"$event.stopPropagation();\\\" [disabled]=\\\"isUpdateSiblingOpen || isStudentRequestOpen || isDropoutOpen\\\">\\n          <mat-icon>more_vert</mat-icon>\\n        </button>\\n        \\n      </div>\\n    </div>\\n  </div>\\n  <mat-menu #moreMenu=\\\"matMenu\\\">\\n    <button mat-menu-item aria-label=\\\"remove\\\" *ngFor=\\\"let operation of operations\\\"\\n      (click)=\\\"actions(operation.name)\\\">{{operation.name}}\\n    </button>\\n  </mat-menu>\\n  <app-student-details [studentDetails]=\\\"applicantInfo\\\"></app-student-details>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N0dWRlbnQtaW5mb3JtYXRpb24tc3lzdGVtL3N0dWRlbnQtaW5mb3JtYXRpb24tZGV0YWlscy9zdHVkZW50LWluZm9ybWF0aW9uLWRldGFpbHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { RouteConfig } from 'app/url.config';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { StudentRequestService } from 'app/service/student-information-system/student-request.service';\nimport { StudentRequestView } from '../model/student-request-view';\nimport { AppSettings } from 'app/app.constants';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CommonService } from 'app/service/common.service';\nimport { StudentActionService } from 'app/service/student-information-system/student-action.service';\nimport { StudentActionView } from '../model/student-action-view';\nimport { StudentAdmissionService } from 'app/service/student-admissions-service/student-admission.service';\nimport { SiblingService } from 'app/service/student-information-system/sibling.service';\nimport { SiblingStudentView } from '../model/siblingStudentView';\nimport { StoreService } from 'app/service/file-management/store.service';\nimport { fuseAnimations } from '@fuse/animations';\n\n@Component({\n  selector: 'app-student-information-details',\n  templateUrl: './student-information-details.component.html',\n  styleUrls: ['./student-information-details.component.scss'],\n  animations: fuseAnimations,\n  providers: [StudentRequestService, StudentActionService, StudentAdmissionService, StoreService, SiblingService]\n})\nexport class StudentInformationDetailsComponent extends CommonComponent implements OnInit {\n  applicantInfo: any;\n  dropoutForm: FormGroup;\n  studentRequestForm: FormGroup;\n  isValidate = true;\n  isDropoutOpen = false;\n  isStudentRequestOpen = false;\n  profileImage: any;\n  requestTypeList: any[] = [];\n  studentRequest: StudentRequestView;\n  studentDropout: StudentActionView;\n  studentId: any;\n  dropoutActionTypeList: any[] = [];\n  isUpdateSiblingOpen = false;\n  siblingIds: any;\n  siblingStudentView: SiblingStudentView;\n  operations = [];\n  constructor(\n    private router: Router, private route: ActivatedRoute,\n    private _formBuilder: FormBuilder, private changeDetect: ChangeDetectorRef,\n    private sanitizer: DomSanitizer, private studentRequestService: StudentRequestService, private dialogRef: MatDialog, public commonService: CommonService,\n    private studentAction: StudentActionService, private studentAdmissionService: StudentAdmissionService, private siblingService: SiblingService,\n    private storeService: StoreService, public snackBar: MatSnackBar, public location: Location) {\n    super();\n  }\n  ngOnInit(): void {\n    this.dropoutForm = this._formBuilder.group({\n      studentActionTypeId: [null, [Validators.required]],\n      details: [null, [Validators.required, Validators.maxLength(180)]]\n    });\n    this.studentRequestForm = this._formBuilder.group({\n      requestTypeId: [null, Validators.required],\n      requestNote: [null, [Validators.maxLength(180)]],\n      attachment: [{ fileName: null, fileValue: null }]\n    });\n\n    this.route.params.subscribe((params) => {\n      if (params.id) {\n        this.studentId = params.id;\n        this.getStudentDetails();\n      }\n    });\n    this.initiateStudentSiblingView();\n\n  }\n\n  initiateStudentSiblingView(): void {\n    this.siblingStudentView = {\n      studentId1: '',\n      studentId2: null,\n      studentId3: null,\n      studentId4: null,\n      studentId5: null\n    };\n  }\n  getStudentDetails(): void {\n    this.studentAdmissionService.studentDetails(this.studentId)\n      .subscribe(res => {\n        this.getStudentApplicationDetails(res);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n  imgChanged(files): void {\n    if (this.checkFileSize(files[0], 'text|docx|pdf|image', 2097152)) {\n      this.clearImages();\n      return;\n    }\n    else if (files && files.length > 0) {\n      const reader = new FileReader();\n      reader.readAsDataURL(files[0]);\n      const that = this;\n      reader.onload = (_event) => {\n        that.studentRequestForm.controls.attachment.patchValue({ fileName: files[0].name, fileValue: (<string>reader.result).split(',')[1] });\n        that.changeDetect.detectChanges();\n      };\n    }\n  }\n  clearImages(): void {\n    this.studentRequestForm.controls.attachment.patchValue({ fileName: null, fileValue: null });\n  }\n  onStudentRequest(): void {\n    this.isStudentRequestOpen = true;\n  }\n  onDropout(): void {\n    this.isDropoutOpen = true;\n  }\n  getStudentApplicationDetails(data): void {\n    this.applicantInfo = data.studentDetailsView;\n    switch (data.studentDetailsView.statusCode) {\n      case AppSettings.STUDENT_DROPOUT_STATUS:\n      case AppSettings.STUDENT_TC_REQUEST:\n        this.operations = [{ name: 'Edit Student' },\n        { name: 'Student Request' }];\n        break;\n      default:\n        this.operations = [{ name: 'Edit Student' },\n        { name: 'Update Sibling' },\n        { name: 'Student Request' },\n        { name: 'Dropout' }];\n        break;\n    }\n\n    if (data.studentDetailsView.studentDetails.attachment) {\n      this.profileImage = this.storeService.getFilePath(data.studentDetailsView.studentDetails.attachment.fileName);\n    }\n    this.studentRequestService.getStudentRequestTypes()\n      .subscribe(res => this.setStudentRequestTypes(res));\n\n    this.studentAction.getStudentRequestTypes()\n      .subscribe(res => this.setStudentActionTypes(res));\n  }\n  setStudentActionTypes(data): void {\n    this.dropoutActionTypeList = data;\n  }\n  setStudentRequestTypes(data): void {\n    this.requestTypeList = data;\n  }\n  onSubmitDropout(): void {\n    if (this.dropoutForm.valid) {\n      this.studentDropout = {};\n      this.studentDropout = this.dropoutForm.value; this.studentDropout.studentId = this.studentId;\n      this.studentAction.createStudentRequest(this.studentDropout)\n        .subscribe(res => this.studentDropoutDetails(res), error => {\n          this.errorResponse(error);\n        });\n    }\n  }\n  studentDropoutDetails(res): void {\n    this.isDropoutOpen = false;\n    this.dropoutForm.reset();\n    this.getStudentDetails();\n    this.openSnackBar(res.messages.ResultMessage);\n  }\n  onSubmitRequest(): void {\n    if (this.studentRequestForm.valid) {\n      this.studentRequest = {};\n      this.studentRequest = this.studentRequestForm.value;\n      this.studentRequest.studentId = this.studentId;\n      if (this.studentRequest.attachment && this.studentRequest.attachment.fileName == null && this.studentRequest.attachment.fileValue == null) {\n        this.studentRequest.attachment = null;\n      }\n      this.studentRequestService.createStudentRequest(this.studentRequest)\n        .subscribe(res => this.studentRequestDetails(res), error => {\n          this.errorResponse(error);\n        });\n    }\n  }\n  studentRequestDetails(res): void {\n    this.isStudentRequestOpen = false;\n    this.studentRequestForm.reset();\n    this.openSnackBar(res.messages.ResultMessage);\n  }\n\n  getFormatedName(data): void {\n    if (data) {\n      if (data.middleName) {\n        const fullName: any = data.firstName + ' ' + data.middleName + ' ' + data.lastName;\n        return fullName.replace(/  +/g, ' ').trim();\n      }\n      else {\n        const fullName: any = data.firstName + ' ' + data.lastName;\n        return fullName.replace(/  +/g, ' ').trim();\n      }\n    }\n  }\n  onUpdateSibling(): void {\n    this.isUpdateSiblingOpen = true;\n  }\n  onSiblingCancel(): void {\n    this.isUpdateSiblingOpen = false;\n  }\n  updateSiblingsSubmit(): void {\n    this.initiateStudentSiblingView();\n    this.siblingStudentView.studentId1 = this.studentId;\n    if (this.siblingIds.length <= AppSettings.MAX_SIBLINGS) {\n      for (let index = 0; index < this.siblingIds.length; index++) {\n        if (this.siblingStudentView.studentId2 == null) {\n          this.siblingStudentView.studentId2 = this.siblingIds[index];\n        }\n        else if (this.siblingStudentView.studentId3 == null) {\n          this.siblingStudentView.studentId3 = this.siblingIds[index];\n        }\n        else if (this.siblingStudentView.studentId4 == null) {\n          this.siblingStudentView.studentId4 = this.siblingIds[index];\n        }\n        else if (this.siblingStudentView.studentId5 == null) {\n          this.siblingStudentView.studentId5 = this.siblingIds[index];\n        }\n      }\n      this.siblingService.studentSibling(this.siblingStudentView).subscribe(res => this.studentSiblingRes(res), error => {\n        this.errorResponse(error);\n      });\n    }\n    else {\n      this.openSnackBar(AppSettings.SIBLING_EXCEEDS, true);\n    }\n  }\n  studentSiblingRes(data: any): void {\n    this.isUpdateSiblingOpen = false;\n    this.studentRequestForm.reset();\n    this.getStudentDetails();\n    this.openSnackBar(data.messages.ResultMessage);\n  }\n  siblingsDetails(data: any): void {\n    this.siblingIds = data;\n  }\n  studentSettings(): boolean {\n    return this.isStudentRequestOpen || this.isDropoutOpen || this.isUpdateSiblingOpen;\n  }\n\n  actions(action: any): void {\n    switch (action) {\n      case 'Edit Student':\n        this.router.navigate([RouteConfig._Add_Edit_Student + '/' + this.studentId]);\n        break;\n      case 'Update Sibling':\n        this.isDropoutOpen = false;\n        this.isStudentRequestOpen = false;\n        this.isUpdateSiblingOpen = true;\n        break;\n      case 'Student Request':\n        this.studentRequestForm = this._formBuilder.group({\n          requestTypeId: [null, Validators.required],\n          requestNote: [null, [Validators.maxLength(180)]],\n          attachment: [{ fileName: null, fileValue: null }]\n        });\n        this.isDropoutOpen = false;\n        this.isStudentRequestOpen = true;\n        this.isUpdateSiblingOpen = false;\n        break;\n      case 'Dropout':\n        this.isUpdateSiblingOpen = false;\n        this.isStudentRequestOpen = false;\n        this.isDropoutOpen = true;\n        break;\n    }\n  }\n\n}\n","import { NgModule, Component } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DropoutsComponent } from './dropouts/dropouts.component';\nimport { StudentRequestsComponent } from './student-requests/student-requests.component';\nimport { StudentDatabaseComponent } from './student-database/student-database.component';\nimport { StudentInformationDetailsComponent } from './student-information-details/student-information-details.component';\nimport { StudentSiblingComponent } from './student-sibling/student-sibling.component';\nimport { StudentGroupsComponent } from './student-groups/student-groups.component';\nimport { StudentGroupDetailsComponent } from './student-group-details/student-group-details.component';\nimport { StudentFacilityAssignmentComponent } from './student-facility-assignment/student-facility-assignment.component';\nimport { StudentCourseSelectionsComponent } from './student-course-selections/student-course-selections.component';\nimport { SectionAssignmentComponent } from './section-assignment/section-assignment.component';\nimport { StudentRollnumberManagementComponent } from './student-rollnumber-management/student-rollnumber-management.component';\nimport { AddEditStudentAdmissionComponent } from '../../../shared/add-edit-student-admission/add-edit-student-admission.component';\nimport { PreviewStudentRequestComponent } from './preview-student-request/preview-student-request.component';\n\n\nconst routes: Routes = [\n  { path: 'student-database', component: StudentDatabaseComponent, data: {title: 'Student Database'}  },\n  { path: 'student-requests', component: StudentRequestsComponent, data: {title: 'Student Requests'}  },\n  { path: 'dropouts' , component: DropoutsComponent, data: {title: 'Student Dropouts'} },\n  { path: 'student-database/student-details/:id' , component: StudentInformationDetailsComponent, data: {title: 'Student Details'} },\n  { path: 'student-siblings', component: StudentSiblingComponent, data: {title: 'Student Siblings'}  },\n  { path: 'student-groups', component: StudentGroupsComponent, data: {title: 'Student Groups'}  },\n  { path: 'student-groups/student-group-details', component: StudentGroupDetailsComponent, data: {title: 'Student Group Details'}  },\n  { path: 'student-groups/student-group-details/:id', component: StudentGroupDetailsComponent, data: {title: 'Student Group Details'}  },\n  { path: 'student-facility-assignment', component: StudentFacilityAssignmentComponent, data: {title: 'Student facility Assignment'}  },\n  { path: 'student-course-selections', component: StudentCourseSelectionsComponent, data: {title: 'Student Course Selections'}  },\n  { path: 'section-assignment', component: SectionAssignmentComponent, data: {title: 'Section Assignment'} },\n  { path: 'student-rollnumber-management', component: StudentRollnumberManagementComponent, data: {title: 'Roll Number Management'}  },\n  { path: 'student-database/add-edit-student-admission', component: AddEditStudentAdmissionComponent, data: {title: 'Add Student Admission'}  },\n  { path: 'student-database/add-edit-student-admission/:studentId', component: AddEditStudentAdmissionComponent, data: {title: 'Edit Student Admission'}  },\n  { path: 'preview-certificate/:id', component: PreviewStudentRequestComponent, data: {title: 'Approve Student Request'}  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class StudentInformationSystemRoutingModule { }\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StudentInformationSystemRoutingModule } from './student-information-system-routing.module';\nimport { StudentRequestsComponent } from './student-requests/student-requests.component';\nimport { DropoutsComponent } from './dropouts/dropouts.component';\nimport { StudentDatabaseComponent } from './student-database/student-database.component';\nimport { StudentInformationDetailsComponent } from './student-information-details/student-information-details.component';\nimport { AcademicsModule } from '../academics.module';\nimport { MatcomponentsModule } from 'app/main/matcomponents.module';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedManagementModule } from 'app/shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from 'app/interceptors/token-interceptor';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { GradeSetupService } from 'app/service/grading-service/api/grade-setup.service';\nimport { StudentGroupsComponent } from './student-groups/student-groups.component';\nimport { StudentGroupService } from 'app/service/student-group/student-group.service';\nimport { FuseMaterialColorPickerModule } from '@fuse/components';\nimport { StudentGroupDetailsComponent } from './student-group-details/student-group-details.component';\nimport { StudentApplicationService } from 'app/service/student-admissions-service/student-application.service';\nimport { SatDatepickerModule } from 'saturn-datepicker';\nimport { StudentSiblingComponent } from './student-sibling/student-sibling.component';\nimport { StudentFacilityAssignmentComponent } from './student-facility-assignment/student-facility-assignment.component';\nimport { StudentCourseSelectionsComponent } from './student-course-selections/student-course-selections.component';\nimport { ClassTimetableService } from 'app/service/class-schedules/class-time-table.service';\nimport { StudentCourseSelectionService } from 'app/service/student-information-system/student-course-selection.service';\nimport { SectionAssignmentComponent } from './section-assignment/section-assignment.component';\nimport { StudentSectionsService } from 'app/service/student-information-system/students-section-service';\nimport { StudentRollnumberManagementComponent } from './student-rollnumber-management/student-rollnumber-management.component';\nimport { RollNumberAssignmentService } from 'app/service/academic-service/api/rollnumber-assignment.service';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { StudentsFacilityService } from 'app/service/academic-service/api/studentsFacility.service';\nimport { FeeTypeService } from 'app/service/configuration/finance/api/fee-type.service';\nimport { SchoolFacilityService } from 'app/service/general/api/school-facility.service';\nimport { ClassesConfigService } from 'app/service/general/api/classes-config.service';\nimport {StatusService} from '../../../service/academic-service/api/status.service';\nimport { SchoolAcademicSessionService } from 'app/service/academic-service/api/school-academic-session.service';\nimport { PreviewStudentRequestComponent } from './preview-student-request/preview-student-request.component';  \n\n@NgModule({\n  declarations: [StudentRequestsComponent, DropoutsComponent, \n    StudentDatabaseComponent, StudentInformationDetailsComponent,\n     StudentGroupsComponent, StudentGroupDetailsComponent, StudentSiblingComponent, StudentFacilityAssignmentComponent, StudentRollnumberManagementComponent\n     , SectionAssignmentComponent, StudentCourseSelectionsComponent, PreviewStudentRequestComponent],\n  imports: [\n    CommonModule,\n    StudentInformationSystemRoutingModule,\n    MatcomponentsModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SharedManagementModule,\n    TranslateModule,\n    FuseSharedModule,\n    Ng2TelInputModule,\n    AcademicsModule,\n    SatDatepickerModule,\n    FuseMaterialColorPickerModule,\n    DragDropModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    },\n    GradeSetupService, StudentGroupService, StudentApplicationService, StudentSectionsService,\n     StudentGroupService, StudentApplicationService, RollNumberAssignmentService,\n     ClassTimetableService, StudentsFacilityService, FeeTypeService, SchoolFacilityService,\n     StudentCourseSelectionService, ClassesConfigService, StatusService,\n     SchoolAcademicSessionService\n  ],\n  schemas: [NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA],\n  exports: [],\n})\nexport class StudentInformationSystemModule { }\n","module.exports = \"<app-table [settings]=\\\"tableSettings\\\" [closeRowForm]=\\\"closeForm\\\" \\n  (getTableData)='tableData($event)' (rowBasedAction)='actions($event)' (openAddForm)='openForm()'>\\n</app-table>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N0dWRlbnQtaW5mb3JtYXRpb24tc3lzdGVtL3N0dWRlbnQtcmVxdWVzdHMvc3R1ZGVudC1yZXF1ZXN0cy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { AppSettings } from 'app/app.constants';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { RouteConfig } from 'app/url.config';\nimport { StudentRequestService } from 'app/service/student-information-system/student-request.service';\nimport { StudentRequestFilterView } from '../model/student-request-filter-view';\nimport { CommonService } from 'app/service/common.service';\nimport { StudentRequestIdView } from '../model/student-request-id-view';\nimport { StoreService } from 'app/service/file-management/store.service';\n\n@Component({\n  selector: 'app-student-requests',\n  templateUrl: './student-requests.component.html',\n  styleUrls: ['./student-requests.component.scss'],\n  providers: [StudentRequestService, StoreService]\n})\nexport class StudentRequestsComponent extends CommonComponent implements OnInit {\n  tableSettings: {};\n  closeForm: boolean;\n  currentComponent = 'StudentRequestsComponent';\n  rows: Array<any>;\n  totalRowsCount: number;\n  pageCnt: number;\n  columns: any[];\n  preSelectIds: Array<string> = [];\n  filterViewModel: StudentRequestFilterView;\n  approveStudentModel: StudentRequestIdView;\n  constructor(\n    public dialogRef: MatDialog,\n    private router: Router,\n    private studentRequestService: StudentRequestService,\n    public commonService: CommonService,\n    public storeService: StoreService,\n    public snackBar: MatSnackBar) {\n    super();\n    this.setColumnHeaders();\n    this.initializeFilterView();\n    this.initializeTableSettings();\n  }\n  ngOnInit(): void {\n    const modelTableComponent = this.getModelComponent(this.currentComponent);\n    if (modelTableComponent) {\n      this.filterViewModel = modelTableComponent;\n    }\n    this.getStudentRequests();\n  }\n\n  getStudentRequests(): void {\n    this.studentRequestService.studentRequestGrid(this.filterViewModel.studentRequestTypeIds,\n      this.filterViewModel.studentName, this.filterViewModel.statusIds,\n      this.filterViewModel.admissionNumber, this.filterViewModel.requestNotes, this.filterViewModel.requestDateBegin,\n      this.filterViewModel.requestDateEnd, this.filterViewModel.sortOrder, this.filterViewModel.sortBy,\n      this.filterViewModel.failedRecords,\n      this.filterViewModel.pageNumber,\n      this.filterViewModel.pageSize)\n      .subscribe(res => {\n        this.setRequestsResult(res);\n      }, error => {\n        this.errorResponse(error);\n      });\n  }\n  setRequestsResult(data): void {\n    if (!data.pagedStudentRequestViewModels) {\n      this.rows = [];\n      this.totalRowsCount = 0;\n      this.pageCnt = 0;\n    } else {\n      this.rows = data.pagedStudentRequestViewModels.list;\n      this.totalRowsCount = data.pagedStudentRequestViewModels.totalItems;\n      this.pageCnt = data.pagedStudentRequestViewModels.totalPages;\n\n      this.rows.forEach(e => {\n        e.requestDate = (e.requestDate == null) ? null : this.commonService.customDateFormat(e.requestDate, this.getSchoolDateFormat()).date;\n        e.operations = e.attachment ? [\n          {\n            name: AppSettings.VIEW_REQUEST_OPERATION,\n            icon: AppSettings.DETAILS_ICON,\n            operationName: AppSettings.VIEW_REQUEST\n          }] : [];\n        if (e.attachmentResponseAttachment) {\n          e.operations.push({\n            name: AppSettings.VIEW_RESPONSE_OPERATION,\n            icon: AppSettings.DETAILS_ICON,\n            operationName: AppSettings.VIEW_RESPONSE\n          });\n        }\n        if (e.statusCode === AppSettings.STUDENT_REQUEST_PENDING_STATUS) {\n          e.operations.push(\n            {\n              name: AppSettings.APPROVE_OPERATION,\n              icon: AppSettings.APPROVE_ICON,\n              operationName: AppSettings.APPROVE\n            }, {\n            name: AppSettings.REJECT_OPERATION,\n            icon: AppSettings.REJECT_ICON,\n            operationName: AppSettings.REJECT\n          });\n        }\n      });\n      this.preSelectIds = [];\n    }\n    if (data.pagedStudentRequestViewModels) {\n      this.filterViewModel.pageNumber = data.pagedStudentRequestViewModels.pageNumber;\n    }\n\n    this.tableSettings = {\n      model: this.filterViewModel,\n      rows: this.rows,\n      columns: this.columns,\n      totalRowsCount: this.totalRowsCount,\n      pageCnt: this.pageCnt,\n      tablename: 'Student Requests',\n      componentName: this.currentComponent,\n      visibleSelectAll: false,\n      isSelectRowRequired: false,\n      isPaginationRequired: true,\n      filtersList: data.filters,\n      headerOperations: {\n        addingForm: {\n          required: false\n        },\n        infoButton: {\n          required: true,\n          text: 'Student Requests'\n        }\n      }\n    };\n  }\n\n  initializeFilterView(): void {\n    this.filterViewModel = {\n      sortBy: '',\n      sortOrder: 0,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE,\n    };\n  }\n\n  setColumnHeaders(): void {\n    this.columns = [\n      { field: 'requestDate', header: 'Request Date', sort: true },\n      { field: 'requestTypeName', header: 'Request Type', sort: true },\n      { field: 'studentName', header: 'Student Name', sort: true },\n      { field: 'admissionNumber', header: 'admissionNumber', sort: true },\n      { field: 'requestNote', header: 'Request Notes', sort: true },\n      { field: 'statusName', header: 'Status', sort: true },\n      { field: 'actions', header: 'Actions', sort: false },\n\n    ];\n  }\n  initializeTableSettings(): void {\n    this.tableSettings = {\n      rows: [],\n      columns: this.columns,\n      tablename: 'Student Requests',\n      isPaginationRequired: true,\n      componentName: this.currentComponent,\n      model: this.filterViewModel\n    };\n  }\n\n  actions(operationData: any): void {\n    \n    switch (operationData.operation.toLowerCase()) {\n      case AppSettings.APPROVE.toLowerCase():\n        {\n          const dialogRef = this.dialogMethod(AppSettings.APPROVE_STUDENT_REQUEST, true, AppSettings.NO, AppSettings.YES);\n          dialogRef.afterClosed().subscribe(action => {\n            if (action === AppSettings.YES) {\n              this.router.navigate([RouteConfig._Preview_Certificate + operationData.clickedRow.id]);\n            }\n          });\n        }\n        break;\n      case AppSettings.REJECT.toLowerCase():\n        {\n          const dialogRef = this.dialogMethod(AppSettings.REJECT_STUDENT_REQUEST, true, AppSettings.NO, AppSettings.YES);\n          dialogRef.afterClosed().subscribe(action => {\n            if (action === AppSettings.YES) {\n              this.approveStudentModel = {\n                id: operationData.clickedRow.id,\n                attachment: operationData.clickedRow.attachment\n              };\n              this.studentRequestService.rejectStudentRequest(this.approveStudentModel)\n                .subscribe(res => this.studentRequestResponse(res));\n            }\n          });\n        }\n        break;\n      case AppSettings.VIEW_REQUEST.toLowerCase():\n        {\n          // Download the Certificate or open it inthe new Tab\n          if (operationData.clickedRow.attachment != null) {\n            window.open(this.storeService.getFilePath(operationData.clickedRow.attachment.fileName));\n          }\n          else {\n            this.openSnackBar(AppSettings.NO_ATTACHMENTS_FOUND, true);\n            return;\n          }\n        }\n        break;\n      case AppSettings.VIEW_RESPONSE.toLowerCase():\n        {\n          // Download the Certificate or open it inthe new Tab\n          if (operationData.clickedRow.attachmentResponseAttachment != null) {\n            window.open(this.storeService.getFilePath(operationData.clickedRow.attachmentResponseAttachment.fileName));\n          }\n          else {\n            this.openSnackBar(AppSettings.NO_ATTACHMENTS_FOUND, true);\n            return;\n          }\n        }\n        break;\n    }\n  }\n  studentRequestResponse(res): void {\n    this.getStudentRequests();\n    this.openSnackBar(res.messages.ResultMessage);\n  }\n  tableData(_event: any): void {\n    this.filterViewModel = _event;\n    this.getStudentRequests();\n  }\n  dialogMethod(dialogData: any, disableClose: boolean, button1Text: string, button2Text?: string): any {\n    return this.dialogRef.open(CustomDialogComponent, {\n      disableClose: disableClose,\n      data: { text: this.commonService.getTranslation(dialogData), action: true, btn1Text: button1Text, btn2Text: button2Text },\n    });\n  }\n\n  openForm(): void {\n    this.closeForm = false;\n  }\n  onCancel(event): void {\n    this.closeForm = event;\n    this.getStudentRequests();\n  }\n\n}\n","module.exports = \"<div class=\\\"px-sm-40 pt-sm-32\\\">\\n    <div class=\\\"px-16 font-size-18 text-uppercase\\\"><span translate>Roll Number Management</span></div>\\n  <div class=\\\"mat-elevation-z3 simple-table-container radius-t-20\\\">\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"p-20\\\">\\n\\n      <button class=\\\"text-uppercase pr-sm-20\\\" mat-raised-button color=\\\"accent\\\" (click)=\\\" assignRollNumber()\\\"\\n        [disabled]=\\\"isValid\\\">{{'Assign RollNumber' | translate}}</button>\\n      <button mat-button type='button' (click)=\\\"getHelpText('Roll Number Management')\\\">\\n        <mat-icon class=\\\"grey-600-fg\\\">info</mat-icon>\\n      </button>\\n    </div>\\n    <mat-divider></mat-divider>\\n    <form [formGroup]=\\\"studentRollFormGroup\\\" fxLayout=\\\"column\\\" name=\\\"form\\\" (ngSubmit)=\\\"assignRollNumber()\\\"\\n      autocomplete=\\\"off\\\" #form=\\\"ngForm\\\" class=\\\"p-20\\\">\\n      <div fxLayout.gt-sm=\\\"row\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start center\\\">\\n\\n        <mat-form-field  *ngIf=\\\"isSchoolBoard\\\" appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\"\\n        fxFlexFil>\\n          <mat-label #board translate>Board</mat-label>\\n          <mat-select formControlName=\\\"boardId\\\" (selectionChange)=\\\"onBoardSelect($event)\\\" required>\\n            <mat-option *ngFor=\\\"let board of schoolBoardsList\\\" [value]=\\\"board.value\\\">\\n              {{board.label}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n              <app-validation [labelName]=\\\"board.innerText\\\" [validationControl]=\\\"studentRollFormGroup.controls.boardId\\\"\\n                [doValidate]=\\\"doValidate\\\">\\n              </app-validation>\\n            </mat-error>\\n        </mat-form-field>\\n\\n\\n        <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\" class=\\\"pr-sm-20\\\">\\n          <mat-label translate #class>Class</mat-label>\\n          <mat-select required name=\\\"classId\\\" formControlName=\\\"classId\\\" (selectionChange)=\\\"onSelectClass($event)\\\" [disabled]=classDisabled>\\n            <mat-option *ngFor=\\\"let class of classNames\\\" [value]=\\\"class.value\\\">\\n              {{class.label}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field *ngIf=\\\"studentRollFormGroup.value.boardId && studentRollFormGroup.value.classId\\\" appearance=\\\"outline\\\" class=\\\"pr-sm-20\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"30\\\">\\n          <mat-label translate #section>Section</mat-label>\\n          <mat-select required name=\\\"sectionId\\\" formControlName=\\\"sectionId\\\" (selectionChange)=\\\"onSelectSection($event)\\\">\\n            <mat-option *ngFor=\\\"let section of sectionNames\\\" [value]=\\\"section.value\\\">\\n              {{section.label}}\\n            </mat-option>\\n          </mat-select>\\n\\n        </mat-form-field>\\n        <mat-checkbox  (change)=\\\"show($event)\\\" [disabled]=\\\"isCheck\\\" [checked] =\\\"isDisable\\\" class=\\\"pb-20\\\"><span translate>Sorting Options</span></mat-checkbox>\\n      </div>\\n      <mat-label *ngIf=\\\"sort\\\"  class=\\\"text-center\\\"  translate>Sort Order Fields</mat-label>\\n    </form>\\n    <!-- <div>\\n      \\n    </div> -->\\n    <div cdkDropList cdkDropListOrientation=\\\"horizontal\\\" *ngIf=\\\"isSortOrderFields\\\" class=\\\"pb-24 h-drag\\\" fxLayout=\\\"row\\\"\\n      fxLayoutAlign=\\\"center center\\\" (cdkDropListDropped)=\\\"drop($event)\\\">\\n      <div class=\\\"p-16 mx-12 primary-50-bg radius-5 fuse-black-fg cursor-move\\\" fxLayoutAlign=\\\"center center\\\"\\n        *ngFor=\\\"let sortOrder of sortOrderFields\\\" cdkDrag>\\n        <mat-icon class=\\\"mr-8\\\">drag_indicator</mat-icon><span translate>{{sortOrder.header}}</span>\\n      </div>\\n    </div>\\n\\n    <!-- Coustom Dialog for Roll Number -->\\n    <ng-template #rollNumberTemplate>\\n      <form [formGroup]=\\\"RollNumberForm\\\" (ngSubmit)=\\\"rollNumberAssign(RollNumberForm)\\\" #RollNumber=\\\"ngForm\\\"\\n        fxLayout=\\\"column\\\">\\n        <mat-form-field appearance=\\\"outline\\\" fxLayout=\\\"column\\\" fxFlex=\\\"100\\\">\\n          <mat-label #RollNumber translate>Roll Number Start From</mat-label>\\n          <input autocomplete=\\\"off\\\" matInput formControlName=\\\"RollNumber\\\" [(ngModel)]=\\\"rollNumberSeq\\\" required\\n          (keyup)=\\\"preventSpace($event,'RollNumberForm','RollNumber')\\\">\\n\\n          <mat-error>\\n            <app-validation [labelName]=\\\"RollNumber.innerText\\\" [validationControl]=\\\"RollNumberForm.controls.RollNumber\\\"\\n              class=\\\"error-msg messages text-left text-danger\\\" [doValidate]=\\\"validateForm\\\">\\n            </app-validation>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\" class=\\\"pt-16\\\">\\n          <button class=\\\"mr-12 text-uppercase\\\" mat-raised-button type=\\\"button\\\" (click)=\\\"onCancel()\\\" matDialogClose>{{'Cancel' | translate}}</button>\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"text-uppercase\\\" color=\\\"accent\\\">{{'Submit' | translate}}</button>\\n        </div>\\n      </form>\\n    </ng-template>\\n    <!-- End Coustom Dialog -->\\n\\n\\n    <mat-divider></mat-divider>\\n\\n  \\n  </div>\\n</div>\\n<app-table *ngIf=\\\"studentRollFormGroup.valid\\\" [settings]=\\\"tabSettings\\\" (getTableData)='loadStudents()'>\\n</app-table>\\n<app-custom-card *ngIf=\\\"!studentRollFormGroup.valid\\\" [title]=\\\"'Student Roll Number Details'\\\" [inputMessage]=\\\"'Please Select Board Class And Section'\\\">\\n</app-custom-card>\\n\"","module.exports = \".h-drag {\\n  overflow: auto; }\\n  .h-drag .cursor-move {\\n    cursor: move;\\n    min-width: 150px;\\n    display: -webkit-box;\\n    display: flex; }\\n  .cdk-drag-placeholder {\\n  opacity: 0; }\\n  .cdk-drag-animating {\\n  -webkit-transition: -webkit-transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: -webkit-transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 250ms cubic-bezier(0, 0, 0.2, 1); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi92YXIvd3d3L2h0bWwvc2Nob29sLW1hbmFnZW1lbnQtZnVzZS9zcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N0dWRlbnQtaW5mb3JtYXRpb24tc3lzdGVtL3N0dWRlbnQtcm9sbG51bWJlci1tYW5hZ2VtZW50L3N0dWRlbnQtcm9sbG51bWJlci1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYyxFQUFBO0VBRGhCO0lBR0ksWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixvQkFBYTtJQUFiLGFBQWEsRUFBQTtFQUdmO0VBQ0UsVUFBVSxFQUFBO0VBR1o7RUFDRSxzRUFBc0Q7RUFBdEQsOERBQXNEO0VBQXRELHNEQUFzRDtFQUF0RCwwR0FBc0QsRUFBQSIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N0dWRlbnQtaW5mb3JtYXRpb24tc3lzdGVtL3N0dWRlbnQtcm9sbG51bWJlci1tYW5hZ2VtZW50L3N0dWRlbnQtcm9sbG51bWJlci1tYW5hZ2VtZW50LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmgtZHJhZ3tcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIC5jdXJzb3ItbW92ZXtcbiAgICBjdXJzb3I6IG1vdmU7XG4gICAgbWluLXdpZHRoOiAxNTBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG59XG4gIC5jZGstZHJhZy1wbGFjZWhvbGRlciB7XG4gICAgb3BhY2l0eTogMDtcbiAgfVxuICBcbiAgLmNkay1kcmFnLWFuaW1hdGluZyB7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDI1MG1zIGN1YmljLWJlemllcigwLCAwLCAwLjIsIDEpO1xuICB9XG4gXG4gICJdfQ== */\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { ClassSectionService } from 'app/service/academic-service/api/class-section.service';\nimport { RollNumberAssignmentService } from 'app/service/academic-service/api/rollnumber-assignment.service';\nimport { StudentDetailsView } from 'app/models/academics/student-details-view';\nimport { AppSettings, Messages, Pattern } from 'app/app.constants';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { CommonService } from 'app/service/common.service';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { RollNumberView } from 'app/models/academics/roll-number-view';\nimport * as HttpStatus from 'http-status-codes';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { GradeSetupService } from 'app/service/grading-service/api/grade-setup.service';\n\n@Component({\n  selector: 'app-student-rollnumber-management',\n  templateUrl: './student-rollnumber-management.component.html',\n  styleUrls: ['./student-rollnumber-management.component.scss']\n})\nexport class StudentRollnumberManagementComponent extends CommonComponent implements OnInit {\n  @ViewChild('rollNumberTemplate') rollNumberTemplate;\n  sectionDisabled: boolean;\n  studentDetailsView: StudentDetailsView;\n  rollNumberView: RollNumberView;\n  studentRollFormGroup: FormGroup;\n  rollNumberSeq = 1;\n  // variables declarations\n  classNames: Array<any> = [];\n  sectionNames: Array<any> = [];\n  classId: number;\n  sectionId: number;\n  cols: any;\n  tabSettings: {};\n  currentComponentName: any = 'StudentRollnumberManagementComponent';\n  totalItems: any;\n  custRowsPerPageOptions: any;\n  pageCnt: any;\n  rows: any[];\n  validateForm: boolean;\n  isValid: boolean;\n  doValidate = true;\n  isSortOrderFields = false;\n  isDisable = false;\n  isHide: boolean;\n  isShow: boolean;\n  RollNumberForm: FormGroup;\n  defaultSortOrder: any[] = [];\n  showBtn: boolean;\n  boardId: number;\n  boards: Array<any> = [];\n  schoolBoardsList: Array<any> = [];\n  isSchoolBoard: boolean;\n  classDisabled: boolean;\n  isCheck = true;\n  sort = false;\n  assignTxt: any;\n\n\n  sortOrderFields = [\n    { field: 'FirstName', header: 'First Name' },\n    { field: 'LastName', header: 'Last Name' },\n    { field: 'AdmissionNumber', header: 'Admission Number' },\n    { field: 'Gender', header: 'Gender' },\n    { field: 'GroupName', header: 'Group Name' },\n  ];\n\n\n\n  constructor(\n    public dialog: MatDialog,\n    public commonService: CommonService,\n    private gradeSetupService: GradeSetupService,\n    private _classSectionService: ClassSectionService,\n    private _rollNumberAssignService: RollNumberAssignmentService,\n    public snackBar: MatSnackBar\n  ) {\n    super();\n    this.isValid = true;\n    this.showBtn = false;\n    this.studentDetailsView = {\n      schoolBoardId: 0,\n      classId: 0,\n      sectionId: 0,\n      rollNumberSortBy: this.defaultSortOrder.map(x => x.field),\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.CUSTOM_PAGESIZE,\n    };\n  }\n\n\n  ngOnInit(): void {\n    this.isCheck = true;\n    this.studentRollFormGroup = new FormGroup({\n      boardId: new FormControl('', [Validators.required]),\n      classId: new FormControl(''),\n      sectionId: new FormControl(''),\n    });\n\n    this.cols = [\n      { field: 'rollNumber', header: 'currentrollnumber', sort: false },\n      { field: 'firstName', header: 'firstname', sort: false },\n      { field: 'lastName', header: 'lastname', sort: false },\n      { field: 'admissionNumber', header: 'admissionNumber', sort: false },\n      { field: 'gender', header: 'gender', sort: false },\n      { field: 'groupName', header: 'groupName', sort: false },\n    ];\n    // / initializing table settings /\n    this.tabSettings = {\n      rows: [],\n      columns: this.cols,\n      model: this.studentDetailsView,\n      componentName: this.currentComponentName,\n      tablename: 'Student Roll Number Details',\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      //  tabTable: true,\n      // padding: true,\n      // hideHeader: true,\n    };\n    this.rollNumberView = {\n      classId: 0,\n      sectionId: 0,\n      isRearrange: 0,\n      startingNumber: 0\n\n    };\n\n    this.RollNumberForm = new FormGroup({\n      RollNumber: new FormControl('', [Validators.required, Validators.pattern(Pattern.NUMBER_PATTERN),\n      Validators.pattern(Pattern.PREVENT_SPACES), Validators.maxLength(4)]),\n      id: new FormControl(''),\n    });\n    const localData = this.getModelComponent(this.currentComponentName);\n    if (localData){\n      this.studentDetailsView = localData;\n      this.studentRollFormGroup.patchValue(localData);\n      this.studentRollFormGroup.patchValue({\n       boardId: localData.schoolBoardId\n      });\n      this.boardId = localData.schoolBoardId;\n      this.onSelectClass({value: localData.classId}, true);\n      this.onSelectSection({value: localData.sectionId});\n    }\n    this.schoolBoards();\n  }\n\n  drop(event: CdkDragDrop<string[]>): void {\n    this.defaultSortOrder = this.sortOrderFields;\n    moveItemInArray(this.defaultSortOrder, event.previousIndex, event.currentIndex);\n    this.loadStudents();\n  }\n\n\n  // Get SChool Boards\n  schoolBoards(): void {\n    this.boards = [];\n    this.isSchoolBoard = true;\n    this.commonService.schoolAcademicBoards().subscribe(\n      response => {\n        if (response.listViews != null) {\n          if (response.listViews.length) {\n            response.listViews.forEach(element => {\n              this.boards.push({\n                label: element.name,\n                value: element.id\n              });\n              this.schoolBoardsList = this.boards;\n            });\n            if (this.studentRollFormGroup.value.boardId){\n              this.onBoardSelect({value: this.studentRollFormGroup.value.boardId}, true);\n            } else{\n              this.setDefaultBoard();\n            }\n          }\n        }\n      },\n      error => {\n        this.errorResponse(error);\n      }\n    );\n  }\n\n  onBoardSelect(data: any, manual = false): void {\n    this.isSortOrderFields = false;\n    this.isCheck = true;\n    this.sort = false;\n    if (!manual){\n      this.rows = [];\n      this.loadGridData();\n    } \n    this.isValid = true;\n    this.isDisable = false;\n    this.boardId = data.value;\n    this.loadClassesList(this.boardId);\n    if (!manual){\n      this.studentRollFormGroup.controls.classId.patchValue('');\n    } else{\n      this.isCheck = false;\n      this.isValid = false;\n    }\n    this.sortOrderFields = [\n      { field: 'FirstName', header: 'First Name' },\n      { field: 'LastName', header: 'Last Name' },\n      { field: 'AdmissionNumber', header: 'Admission Number' },\n      { field: 'Gender', header: 'Gender' },\n      { field: 'GroupName', header: 'Group Name' },\n    ];\n  }\n\n  loadClassesList(boardId: any): void {\n    this.classNames = [];\n    this._classSectionService.schoolAcademicClasses(boardId).subscribe(response => {\n      if (response.listViews != null) {\n        if (response.listViews.length) {\n          response.listViews.forEach(element => {\n            this.classNames.push({\n              label: element.name,\n              value: element.id\n            });\n          });\n        }\n      }\n    }, error => {\n      this.errorResponse(error);\n    });\n  }\n\n  // on selection of class\n  onSelectClass(data: any, manual = false): void {\n    this.isSortOrderFields = false;\n    this.isCheck = true;\n    this.sort = false;\n    if (!manual){\n      this.studentRollFormGroup.controls.sectionId.patchValue('');\n    }\n    this.classDisabled = false;\n    this.isValid = true;\n    this.isDisable = false;\n    if (!manual){\n      this.rows = [];\n      this.loadGridData();\n    }\n    this.rollNumberView.classId = data.value;\n    this.sectionDisabled = true;\n    this.sectionNames = [];\n    this.classId = data.value;\n    this.gradeSetupService.schoolAcademicClassSections(this.boardId, data.value).subscribe(response => {\n      if (response.listViews.length) {\n        this.sectionDisabled = false;\n        response.listViews.forEach(element => {\n          this.sectionNames.push({\n            label: element.name,\n            value: element.id\n          });\n        });\n      }\n    });\n    this.defaultSortOrder = this.sortOrderFields;\n\n  }\n  // End\n\n  onSelectSection(data: any): void {\n    this.isSortOrderFields = false;\n    this.isCheck = true;\n    this.sort = false;\n    this.isDisable = false;\n    this.isValid = false;\n    this.doValidate = true;\n    this.sectionId = data.value;\n    this.rollNumberView.sectionId = data.value;\n    this.loadStudents();\n  }\n  // response of student group details\n  getResponse(data: any): void {\n    this.rows = [];\n    this.custRowsPerPageOptions = [];\n    if (!data.studentRollNumberListViewModel) {\n      this.isSortOrderFields = false;\n      this.isValid = true;\n    } else {\n      this.isCheck = false;\n      this.isValid = false;\n      this.rows = data.studentRollNumberListViewModel.list;\n      if (this.rows.some(x => x.rollNumber !== null)) {\n        this.assignTxt = AppSettings.RE_ASSIGN;\n      } else {\n        this.assignTxt = AppSettings.ASSIGN;\n      }\n\n      this.totalItems = data.studentRollNumberListViewModel.totalItems;\n    }\n\n    if (data.studentRollNumberListViewModel) {\n      this.studentDetailsView.pageNumber = data.studentRollNumberListViewModel.pageNumber;\n    }\n    this.loadGridData();\n  }\n\n  loadGridData(): void {\n    this.tabSettings = {\n      columns: this.cols,\n      model: this.studentDetailsView,\n      rows: this.rows,\n      componentName: this.currentComponentName,\n      tablename: 'Student Roll Number Details',\n      visibleSelectAll: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      pageCnt: this.pageCnt,\n      //  tabTable: true,\n      // padding: true,\n      // hideHeader: true,\n    };\n  }\n\n  loadStudents(): void {\n    this.studentDetailsView.schoolBoardId = this.boardId;\n    this.studentDetailsView.classId = this.classId;\n    this.studentDetailsView.sectionId = this.sectionId;\n    this.studentDetailsView.rollNumberSortBy = this.defaultSortOrder.map(x => x.field);\n    this.setModelDataTableComponent(this.currentComponentName, this.studentDetailsView);\n    this._rollNumberAssignService.getStudent(this.studentDetailsView.schoolBoardId, this.studentDetailsView.classId,\n      this.studentDetailsView.sectionId, this.studentDetailsView.rollNumberSortBy,\n      this.studentDetailsView.sortOrder, this.studentDetailsView.pageNumber, this.studentDetailsView.pageSize).subscribe(response => {\n        this.getResponse(response);\n      });\n  }\n\n  assignRollNumber(): void {\n    if (this.classId !== null && this.sectionId !== null) {\n      const dialogRef = this.dialog.open(CustomDialogComponent, {\n        width: '400px',\n        data:\n        {\n          text:\n            this.commonService.getTranslation(Messages.ASSIGN_ROLLNUMBER), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES\n        },\n      });\n\n      dialogRef.afterClosed().subscribe(action => {\n        if (action === AppSettings.YES) {\n          const params = { assign: this.assignTxt };\n          const confirmDialog = this.dialog.open(CustomDialogComponent, {\n            width: '400px',\n            data: {\n              text:\n                this.commonService.getTranslation(Messages.DIALOG_CONFIRMATION, params), action: true, btn1Text: AppSettings.NO, btn2Text: AppSettings.YES\n            },\n          });\n\n          confirmDialog.afterClosed().subscribe(response => {\n            if (response === AppSettings.YES) {\n              const customInputDialogRef = this.dialog.open(CustomDialogComponent, {\n                width: '300px',\n                data: { template: this.rollNumberTemplate, inputData: this.rollNumberSeq },\n              });\n\n              customInputDialogRef.afterClosed().subscribe(result => {\n                if (result !== undefined || result !== '') {\n                  this.rollNumberView.isRearrange = 1;\n                  this.rollNumberView.startingNumber = 0;\n                }\n\n              });\n            }\n            else {\n              this.dialog.closeAll();\n              if (response === AppSettings.NO) {\n                this.rollNumber();\n                this.rollNumberView.isRearrange = 0;\n              }\n            }\n          });\n          this.rollNumberSeq = 1;\n        }\n      });\n    }\n  }\n\n  rollNumber(): void {\n    this.validateForm = true;\n    this.rollNumberView.isRearrange = 0;\n    this.rollNumberView.rollNumberSortBy = this.defaultSortOrder.map(x => x.field);\n    this._rollNumberAssignService.assigningRollNUmber(this.rollNumberView).subscribe(res => this.response(res), error => {\n      this.errorResponse(error);\n    });\n  }\n\n\n  rollNumberAssign(RollNumberForm: any): void {\n    this.validateForm = true;\n    if (RollNumberForm.invalid) {\n      return;\n    }\n    this.rollNumberView.startingNumber = this.RollNumberForm.value.RollNumber;\n    this.rollNumberView.isRearrange = 1;\n    this.rollNumberView.rollNumberSortBy = this.defaultSortOrder.map(x => x.field);\n    this._rollNumberAssignService.assigningRollNUmber(this.rollNumberView).subscribe(res => this.response(res), error => {\n      this.errorResponse(error);\n    });\n  }\n  response(data: any): void {\n    this.dialog.closeAll();\n    this.loadStudents();\n    this.openSnackBar(data.messages.ResultMessage);\n  }\n\n  show(event): void {\n    this.defaultSortOrder = [];\n    this.isSortOrderFields = false;\n    this.sort = false;\n    event.checked = !(event.checked);\n    if (event.checked === false) {\n      this.isSortOrderFields = true;\n      this.defaultSortOrder = this.sortOrderFields;\n      this.sort = true;\n    }\n    this.isDisable = true;\n    this.loadStudents();\n  }\n\n  onCancel(): void {\n    this.RollNumberForm.reset();\n    this.validateForm = false;\n    this.rollNumberSeq = 1;\n  }\n\n  setDefaultBoard(): void {\n    this.setFormControl('studentRollFormGroup', 'boardId', this.schoolBoardsList[0].value);\n    this.onBoardSelect(this.schoolBoardsList[0]);\n  }\n}\n","module.exports = \"\\n  <form  [formGroup]=\\\"siblingSearchForm\\\"  (ngSubmit)=\\\"siblingSearch(siblingSearchForm)\\\" >\\n  <div fxLayout=\\\"column\\\" fxLayout.gt-sm=\\\"row\\\" class=\\\"p-20 border-bottom\\\" fxFlex=\\\"100\\\" fxLayoutAlign=\\\"center center\\\">\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"40\\\">\\n        <mat-label #studentName translate>Student Name</mat-label>\\n        <input (keyup)=\\\"preventSpace($event,'siblingSearchForm','studentName')\\\" matInput  #studentName formControlName=\\\"studentName\\\" autocomplete=\\\"off\\\">\\n        <mat-error>\\n          <app-validation [labelName]='studentName.innerText' [validationControl]=\\\"siblingSearchForm.controls.studentName\\\"\\n            [doValidate]=\\\"validate\\\">\\n          </app-validation>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field appearance=\\\"outline\\\" fxFlexFill fxLayout=\\\"column\\\" fxFlex=\\\"100\\\" fxFlex.gt-sm=\\\"40\\\"\\n        class=\\\"px-sm-24\\\">\\n        <mat-label translate #admissionNumber>admissionNumber</mat-label>\\n        <input matInput #studentName (keyup)=\\\"preventSpace($event,'siblingSearchForm','admissionNumber')\\\"  formControlName=\\\"admissionNumber\\\">\\n      </mat-form-field>\\n      <div fxLayout=\\\"row\\\" class=\\\"mb-20\\\">\\n        <button mat-raised-button\\n      type=\\\"submit\\\" color=\\\"accent\\\" class=\\\"text-uppercase my-16\\\">\\n      {{'search' | translate}}\\n    </button>\\n      </div>\\n      \\n    </div>\\n  </form>\\n<app-table [settings]=\\\"tabSettings\\\" (getTableData)='tableData($event)' \\n    (selectedRows)='selectedRows($event)'>\\n  </app-table>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvYWNhZGVtaWNzL3N0dWRlbnQtaW5mb3JtYXRpb24tc3lzdGVtL3N0dWRlbnQtc2libGluZy9zdHVkZW50LXNpYmxpbmcuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { Subscription } from 'rxjs';\nimport { SiblingStudentView } from '../model/siblingStudentView';\nimport { StudentSearchView } from '../model/student-search-view';\nimport { AppSettings } from 'app/app.constants';\nimport { SiblingService } from 'app/service/student-information-system/sibling.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MatDialog, MatSnackBar } from '@angular/material';\nimport { CustomDialogComponent } from 'app/shared/custom-dialog/custom-dialog.component';\nimport { CommonService } from 'app/service/common.service';\nimport * as moment from 'moment';\n\n\n\n\n@Component({\n  selector: 'app-student-sibling',\n  templateUrl: './student-sibling.component.html',\n  styleUrls: ['./student-sibling.component.scss'],\n  providers: [SiblingService]\n})\nexport class StudentSiblingComponent extends CommonComponent implements OnInit {\n  tabSettings: {};\n  rows: Array<any>;\n  studentCols: any[];\n  pageCnt: number;\n  totalItems: number;\n  subscription: Subscription;\n  siblingStudentView: SiblingStudentView;\n  studentSearchView: StudentSearchView;\n  currentComponent = 'StudentSiblingComponent';\n  studentIds: any[];\n  @Output() siblingIds: EventEmitter<any> = new EventEmitter<any>();\n  @Input() currentStudentId: any;\n  siblingSearchForm: FormGroup;\n  custRowsPerPageOptions: any[];\n  validate: boolean;\n\n  constructor(public commonService: CommonService, private siblingService: SiblingService, public dialog: MatDialog,  public snackBar: MatSnackBar) {\n    super();\n  }\n\n  ngOnInit(): void {\n\n    this.siblingSearchForm = new FormGroup({\n      studentName: new FormControl(''),\n      admissionNumber: new FormControl()\n    });\n\n    // Student Sibling Columns\n    this.studentCols = [\n      { field: 'studentName', header: 'Student Name', sort: true },\n      { field: 'className', header: 'Class', sort: true, },\n      { field: 'sectionName', header: 'Section', sort: true },\n      { field: 'admissionNumber', header: 'admissionNumber', sort: true },\n      { field: 'dateOfBirth', header: 'dateofbirth', sort: true },\n    ];\n    this.tabSettings = {\n      rows: [],\n      columns: this.studentCols,\n      model: this.studentSearchView,\n      componentName: this.currentComponent,\n      isSelectRowRequired: true,\n      padding: true,\n      hideHeader: true,\n    };\n\n    this.studentSearchView = {\n      sortBy: 'Name',\n      sortOrder: AppSettings.SORT_ORDER,\n      pageNumber: AppSettings.PAGENUMBER,\n      pageSize: AppSettings.PAGESIZE\n    };\n    this.siblingSearch(this.studentSearchView);\n  }\n  tableData(_event: StudentSearchView): void {\n    this.studentSearchView = _event;\n    this.siblingSearch(this.studentSearchView);\n  }\n  siblingSearch(event: any): void {    \n    this.validate = true;\n        this.studentSearchView.studentName = this.siblingSearchForm.value.studentName;\n        this.studentSearchView.admissionNumber = this.siblingSearchForm.value.admissionNumber;\n        this.siblingService.studentDetails(\n          this.studentSearchView.studentName,\n          this.studentSearchView.admissionNumber,\n          this.currentStudentId,\n          this.studentSearchView.sortBy, this.studentSearchView.sortOrder, this.studentSearchView.pageNumber, this.studentSearchView.pageSize).subscribe((responce: any) =>\n            this.studentDetailsRes(responce), error => {\n              this.errorResponse(error);\n            });\n  }\n  studentDetailsRes(data: any): void {\n    \n    this.custRowsPerPageOptions = [];\n    if (!data.siblingStudentDetailsView) {\n      this.rows = [];\n      this.studentIds = [];\n      this.siblingIds.emit(this.studentIds);\n    }\n    else {\n      this.rows = data.siblingStudentDetailsView.list;\n      this.studentIds = [];\n      this.rows.forEach(row => {\n        row.dateOfBirth = this.getFormattedDateBySchoolDateFormat(row.dateOfBirth);\n        if (row.isCheck) {\n          this.studentIds.push(row.id);\n        }\n      });\n      this.siblingIds.emit(this.studentIds);\n      this.totalItems = data.siblingStudentDetailsView.totalItems;\n    }\n\n    if (data.siblingStudentDetailsView) {\n      this.studentSearchView.pageNumber = data.siblingStudentDetailsView.pageNumber;\n    }\n    this.tabSettings = {\n      columns: this.studentCols,\n      model: this.studentSearchView,\n      rows: this.rows,\n      componentName: this.currentComponent,\n      isSelectRowRequired: true,\n      isPaginationRequired: true,\n      totalRowsCount: this.totalItems,\n      custRowsPerPageOptions: this.custRowsPerPageOptions,\n      pageCnt: this.pageCnt,\n      padding: true,\n      hideHeader: true,\n    };\n  }\n  // Selected Student siblings Ids\n  selectedRows(data: any): void {\n    this.studentIds = [];\n    for (let index = 0; index < data.length; index++) {\n      this.studentIds.push(data[index].id);\n    }\n    this.siblingIds.emit(this.studentIds);\n  }\n}\n","/**\n * BaseWebAPI\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders,\n    HttpResponse, HttpParams, HttpEvent\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { CustomHttpUrlEncodingCodec } from '../../base/encoder';\n\n\n\nimport { BASE_PATH } from '../../base/variables';\nimport { Configuration } from '../../base/configuration';\nimport { RollNumberView } from 'app/models/academics/roll-number-view';\nimport { BaseUrlConfig, ModuleConfig, BaseModuleConfig } from 'app/url.config';\nimport { CommonComponent } from 'app/shared/common/common.component';\n\n\n\n@Injectable()\nexport class RollNumberAssignmentService {\n\n  \n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Base;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration,\n    private commonComponent: CommonComponent) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Assign AssigningRollNUmber\n     * \n     * @param lstAssignRollNumberView \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assigningRollNUmber(lstAssignRollNumberView?: RollNumberView, schoolId?: string, instituteId?: string, userId?: string, \n        academicSessionId?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public assigningRollNUmber(lstAssignRollNumberView?: RollNumberView, schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string,\n         observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public assigningRollNUmber(lstAssignRollNumberView?: RollNumberView, schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string,\n         observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public assigningRollNUmber(lstAssignRollNumberView?: RollNumberView,\n         schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n  \n        if (schoolId !== undefined && schoolId !== null) {\n            headers = headers.set('SchoolId', String(schoolId));\n        }\n        if (instituteId !== undefined && instituteId !== null) {\n            headers = headers.set('InstituteId', String(instituteId));\n        }\n        if (userId !== undefined && userId !== null) {\n            headers = headers.set('UserId', String(userId));\n        }\n        if (academicSessionId !== undefined && academicSessionId !== null) {\n            headers = headers.set('AcademicSessionId', String(academicSessionId));\n        }\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        return this.httpClient.put<any>(`${this.basePath}` + BaseModuleConfig._RollNumber_Assignment,\n            lstAssignRollNumberView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets All Student Details\n     * \n     * @param classId Gets or Sets ClassId\n     * @param sectionId Gets or Sets SectionId\n     * @param rollNumberSortBy Gets or sets RollNumberSortBy (Default SortOrder :FirstName ,LastName ,AdmissionNumber,Gender,GroupName)\n     * @param sortOrder Gets or sets SortOrder\n     * @param pageNumber \n     * @param pageSize \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStudent(schoolBoardId?: number, classId?: number, sectionId?: number, rollNumberSortBy?: Array<string>, sortOrder?: number, pageNumber?: number, pageSize?: number,\n        observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getStudent(schoolBoardId?: number, classId?: number, sectionId?: number, rollNumberSortBy?: Array<string>, sortOrder?: number, pageNumber?: number, pageSize?: number,\n        observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getStudent(schoolBoardId?: number, classId?: number, sectionId?: number, rollNumberSortBy?: Array<string>, sortOrder?: number, pageNumber?: number, pageSize?: number,\n        observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getStudent(schoolBoardId?: number, classId?: number, sectionId?: number, rollNumberSortBy?: Array<string>, sortOrder?: number, pageNumber?: number, pageSize?: number,\n        observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        queryParameters = this.commonComponent.setQueryParams(schoolBoardId, 'SchoolBoardId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(classId, 'ClassId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sectionId, 'SectionId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(rollNumberSortBy, 'RollNumberSortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n       \n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Get_Student_Details,\n    \n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * BaseWebAPI\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Configuration } from 'app/service/base/configuration';\nimport { BASE_PATH } from 'app/service/base/variables';\nimport { CustomHttpUrlEncodingCodec } from 'app/service/base/encoder';\nimport { BaseUrlConfig, ModuleConfig } from 'app/url.config';\n\n@Injectable()\nexport class StatusService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Base;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * GetAllStatuses\n     * @param code Gets or sets code\n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getAllStatuses(code: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getAllStatuses(code: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getAllStatuses(code: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getAllStatuses(code: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        if (code === null || code === undefined) {\n            throw new Error('Required parameter code was null or undefined when calling getAllStatuses.');\n        }\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (code !== undefined && code !== null) {\n            queryParameters = queryParameters.set('Code', <any>code);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/Status/GetStatuses`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n\n    /**\n     * Payment Statuses\n     * \n     * @param code Gets or sets code\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n   \n    public paymentStatuses(code: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        if (code === null || code === undefined) {\n            throw new Error('Required parameter code was null or undefined when calling paymentStatuses.');\n        }\n\n        let queryParameters = new HttpParams({encoder: new CustomHttpUrlEncodingCodec()});\n        if (code !== undefined && code !== null) {\n            queryParameters = queryParameters.set('Code', <any>code);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/Payment/statuses`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * BaseWebAPI\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { BASE_PATH, Configuration } from '.';\nimport { StudentFacilitySelectionModel } from 'app/modules/academics/student-information-system/model/student-facility-selection-model';\nimport { CustomHttpUrlEncodingCodec } from 'app/service/base/encoder';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { BaseUrlConfig, ModuleConfig, BaseModuleConfig } from 'app/url.config';\nimport { StudentFacility } from 'app/modules/academics/student-information-system/model/student-facility';\nimport { StudentFacilityAssignmentEdit } from 'app/modules/academics/student-information-system/model/student-facility-assignment-edit';\n\n\n\n@Injectable()\nexport class StudentsFacilityService {\n\n    //    protected basePath = 'http://localhost:8013';\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Base;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string,\n        @Optional() configuration: Configuration, private commonComponent: CommonComponent) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Method to create TestType\n     * \n     * @param studentFacilitySelectionModel \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createStudentFacility(studentFacilitySelectionModel?: StudentFacilitySelectionModel, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + BaseModuleConfig._Student_Facility,\n            studentFacilitySelectionModel,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Method to get Student Facility\n     * \n     * @param model \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStudentFacility(model?: StudentFacility, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Student_Facility_Assignment,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all for student facilities\n     * \n     * @param studentNames Gets or Sets StudentNames\n     * @param admissionNumber Gets or Sets AdmissionNumber\n     * @param feeTypeTranchId Gets or sets FeeTypeTranchId\n     * @param feeTermId Gets or sets FeeTermId\n     * @param classId Gets or Sets ClassId\n     * @param sectionId Gets or Sets ClassId\n     * @param facilityTypeId Gets or Sets ClassId\n     * @param sortOrder Gets or Sets SortColumn\n     * @param sortBy Gets or Sets SortBy\n     * @param pageNumber \n     * @param pageSize \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n\n    public studentFacilityList(studentNames?: Array<string>, admissionNumber?: Array<string>,\n        feeTypeTranchId?: Array<string>, feeTermId?: Array<string>, classId?: number,\n        sectionId?: number, facilityTypeId?: number, sortOrder?: number, sortBy?: string,\n        pageNumber?: number, pageSize?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        queryParameters = this.commonComponent.setQueryParams(studentNames, 'StudentNames', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(admissionNumber, 'AdmissionNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(feeTypeTranchId, 'FeeTypeTranchId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(feeTermId, 'FeeTermId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(classId, 'ClassId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sectionId, 'SectionId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(facilityTypeId, 'FacilityTypeId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Student_Facility_List,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get all for student unassigned facilities\n     * \n     * @param classId Gets or Sets ClassId\n     * @param sectionId Gets or Sets SectionId\n     * @param facilityTypeId Gets or Sets FacilityTypeId\n     * @param pageNumber \n     * @param pageSize \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n\n    public studentUnAssignedFacilityList(classId?: number, sectionId?: number, facilityTypeId?: number,\n        pageNumber?: number, pageSize?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n\n        queryParameters = this.commonComponent.setQueryParams(classId, 'ClassId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sectionId, 'SectionId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(facilityTypeId, 'FacilityTypeId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Student_Unassigned_Facility_List,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Method to create TestType\n     * \n     * @param model \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n\n    public updateStudentFacility(model?: StudentFacilityAssignmentEdit, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` + BaseModuleConfig._Student_Facility_Assignment,\n            model,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Method to get studentfacilities by id\n     * \n     * @param id Gets or Sets SectionId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStudentFacilityById(id?: string,  observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Student_Facility_Assignment,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n* \n* \n* @param id \n* @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n* @param reportProgress flag to report request and response progress.\n*/\n    public deleteStudentFaclitySelection(id?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public deleteStudentFaclitySelection(id?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public deleteStudentFaclitySelection(id?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public deleteStudentFaclitySelection(id?: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (id !== undefined && id !== null) {\n            queryParameters = queryParameters.set('Id', <any>id);\n        }\n\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.delete<any>(`${this.basePath}/StudentsFacility/student-facility-selection`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * BaseWebAPI\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\n// import { CustomHttpUrlEncodingCodec }                        from '../encoder';\n\nimport { Observable } from 'rxjs/Observable';\n\n// import { SiblingStudentView } from '../model/siblingStudentView';\n\n// import { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\n// import { Configuration }                                     from '../configuration';\nimport { BaseUrlConfig, ModuleConfig } from 'app/url.config';\nimport { Configuration, BASE_PATH } from '../grading-service';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { SiblingStudentView } from 'app/modules/academics/student-information-system/model/siblingStudentView';\n\n\n@Injectable()\nexport class SiblingService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Base;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Get student details by Name and Admission Number\n     * \n     * @param studentName Gets or sets StudentName\n     * @param admissionNumber Gets or Sets AdmissionNumber\n     * @param currentStudentId Gets or Sets currentStudentId\n     * @param sortBy Gets or Sets SortBy\n     * @param sortOrder Gets or Sets SortOrder\n     * @param pageNumber \n     * @param pageSize\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public studentDetails(studentName?: string, admissionNumber?: string, currentStudentId?: string,\n         sortBy?: string, sortOrder?: number, pageNumber?: number, pageSize?: number, observe?: 'body', reportProgress?: boolean): Observable<any> {\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (studentName !== undefined && studentName !== null) {\n            queryParameters = queryParameters.set('StudentName', <any>studentName);\n        }\n        if (admissionNumber !== undefined && admissionNumber !== null) {\n            queryParameters = queryParameters.set('AdmissionNumber', <any>admissionNumber);\n        }\n        if (currentStudentId !== undefined && currentStudentId !== null) {\n            queryParameters = queryParameters.set('StudentId', <any>currentStudentId);\n        }\n\n        if (sortBy !== undefined && sortBy !== null) {\n            queryParameters = queryParameters.set('SortBy', <any>sortBy);\n        }\n        if (sortOrder !== undefined && sortOrder !== null) {\n            queryParameters = queryParameters.set('SortOrder', <any>sortOrder);\n        }\n        if (pageNumber !== undefined && pageNumber !== null) {\n            queryParameters = queryParameters.set('PageNumber', <any>pageNumber);\n        }\n        if (pageSize !== undefined && pageSize !== null) {\n            queryParameters = queryParameters.set('PageSize', <any>pageSize);\n        }\n\n        let headers = this.defaultHeaders;\n\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/Sibling/student-details`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Siblings Post and Update\n     * \n     * @param siblingsView \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public studentSibling(siblingsView?: SiblingStudentView, observe?: 'body', reportProgress?: boolean): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/Sibling/siblings-post-update`,\n            siblingsView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * BaseWebAPI\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\n\n\nimport { Configuration } from '../base/configuration';\nimport { BASE_PATH } from '../base/variables';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { BaseUrlConfig, ModuleConfig, BaseModuleConfig } from 'app/url.config';\nimport { StudentActionView } from 'app/modules/academics/student-information-system/model/student-action-view';\nimport { CommonComponent } from 'app/shared/common/common.component';\n\n\n@Injectable()\nexport class StudentActionService {\n\n   // protected basePath = 'http://localhost:8013';\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Base;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH)\n    basePath: string, @Optional() configuration: Configuration, private commonComponent: CommonComponent) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Create Student Action\n     * \n     * @param authorization access token\n     * @param studentActionView \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createStudentRequest(studentActionView?: StudentActionView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createStudentRequest(studentActionView?: StudentActionView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createStudentRequest(studentActionView?: StudentActionView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createStudentRequest(studentActionView?: StudentActionView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + BaseModuleConfig._Student_Action_Create,\n            studentActionView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets Generic List of Student Action Types\n     * \n     * @param authorization access token\n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStudentRequestTypes(observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getStudentRequestTypes(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getStudentRequestTypes(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getStudentRequestTypes(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Student_Action_Types,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Student Action Grid\n     * \n     * @param authorization access token\n     * @param studentActionTypeIds Gets or Sets StudentRequestTypeIds\n     * @param classIds Gets or Sets Class\n     * @param classNames Gets or Sets ClassName\n     * @param studentName Gets or Sets StudentName\n     * @param admissionNumber Gets or Sets AdmissionNumber\n     * @param details Gets or Sets Details\n     * @param sortOrder Gets or Sets SortColumn\n     * @param sortBy Gets or Sets SortBy- \\&quot;ClassReference Name Code Description\\&quot;\n     * @param failedRecords Gets or Sets FailedRecords\n     * @param pageNumber \n     * @param pageSize \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * \n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public studentActionGrid(studentActionTypeIds?: Array<string>, academicSessions?: Array<string>, classIds?: Array<string>, classNames?: Array<string>, \n        studentName?: Array<string>,\n        admissionNumber?: Array<string>, details?: Array<string>, sortOrder?: 0 | 1 | -1, sortBy?: string, failedRecords?: Array<string>, pageNumber?: number,\n        pageSize?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public studentActionGrid(studentActionTypeIds?: Array<string>,\n         academicSessions?: Array<string>, classIds?: Array<string>, classNames?: Array<string>, studentName?: Array<string>,\n        admissionNumber?: Array<string>, details?: Array<string>, sortOrder?: 0 | 1 | -1, sortBy?: string, failedRecords?: Array<string>, pageNumber?: number,\n        pageSize?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public studentActionGrid(studentActionTypeIds?: Array<string>, academicSessions?: Array<string>,\n         classIds?: Array<string>, classNames?: Array<string>, studentName?: Array<string>,\n        admissionNumber?: Array<string>, details?: Array<string>, sortOrder?: 0 | 1 | -1, sortBy?: string, failedRecords?: Array<string>, pageNumber?: number,\n        pageSize?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public studentActionGrid(studentActionTypeIds?: Array<string>, academicSessions?: Array<string>, classIds?: Array<string>, classNames?: Array<string>, \n        studentName?:  Array<string>,\n        admissionNumber?: Array<string>, details?: Array<string>, sortOrder?: 0 | 1 | -1, sortBy?: string, failedRecords?: Array<string>, pageNumber?: number,\n        pageSize?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        queryParameters = this.commonComponent.setQueryParams(studentActionTypeIds, 'StudentActionTypeIds', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(academicSessions, 'AcademicSessions', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(classIds, 'ClassIds', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(classNames, 'ClassNames', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(studentName, 'studentName', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(admissionNumber, 'AdmissionNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(details, 'Details', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(failedRecords, 'FailedRecords', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n\n\n        let headers = this.defaultHeaders;\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Student_Action_Grid,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { StudentCourseSelectionView } from 'app/modules/academics/student-information-system/model/student-course-selection-view';\nimport { Configuration } from '../base/configuration';\nimport { BASE_PATH } from '../base/variables';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { BaseUrlConfig, ModuleConfig } from 'app/url.config';\n\n\n\n\n@Injectable()\nexport class StudentCourseSelectionService {\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Course;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration,\n        private commonComponent: CommonComponent) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Assigning student course selections\n     * \n     * @param studentCourseSelectionView \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public studentCourseSelectionAssignStudentCoursesPost(studentCourseSelectionView?: StudentCourseSelectionView,\n        observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public studentCourseSelectionAssignStudentCoursesPost(studentCourseSelectionView?: StudentCourseSelectionView,\n        observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public studentCourseSelectionAssignStudentCoursesPost(studentCourseSelectionView?: StudentCourseSelectionView, observe?: 'events',\n        reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public studentCourseSelectionAssignStudentCoursesPost(studentCourseSelectionView?: StudentCourseSelectionView,\n        observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}/StudentCourseSelection/assign-student-courses`,\n            studentCourseSelectionView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Get non mandetory course categories\n     * \n     * @param authorization access token\n     * @param schoolAcademicSessionStudentId Gets or Sets SchoolAcademicSessionStudentId\n     * @param classId Gets or Sets ClassId\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public studentCourseSelectionCoursecategoriesCoursesGet(schoolAcademicSessionStudentId?: string,\n        schoolBoardId?: number, classId?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public studentCourseSelectionCoursecategoriesCoursesGet(schoolAcademicSessionStudentId?: string,\n        schoolBoardId?: number, classId?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public studentCourseSelectionCoursecategoriesCoursesGet(schoolAcademicSessionStudentId?: string,\n        schoolBoardId?: number, classId?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public studentCourseSelectionCoursecategoriesCoursesGet(schoolAcademicSessionStudentId?: string,\n        schoolBoardId?: number, classId?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        queryParameters = this.commonComponent.setQueryParams(schoolAcademicSessionStudentId, 'SchoolAcademicSessionStudentId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(schoolBoardId, 'SchoolBoardId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(classId, 'ClassId', queryParameters);\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/StudentCourseSelection/coursecategories-courses`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n    /**\n        * \n        * \n        * @param sortBy Gets or Sets of SortBy\n        * @param sortOrder Gets or Sets of SortOrder\n        * @param classId Gets Or Sets ClassId\n        * @param sectionId Gets Or Sets SectionId\n        * @param courseCategoryId Gets Or Sets CourseCategoryId\n        * @param studentNames Gets or Sets of StudentNames\n        * @param admissionNumbers Gets or Sets of AdmissionNumbers\n        * @param rollNumbers Gets or Sets of RollNumbers\n        * @param courseIds Gets or Sets of Courses\n        * @param pageNumber \n        * @param pageSize \n        * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n        * @param reportProgress flag to report request and response progress.\n        */\n    public studentCourseSelectionStudentCoursecategoriesGet(sortBy?: string, sortOrder?: 0 | 1 | -1, classId?: number,\n        sectionId?: number, courseCategoryId?: number, studentNames?: Array<string>, admissionNumbers?: Array<string>,\n        rollNumbers?: Array<string>, courseIds?: Array<string>, pageNumber?: number,\n        pageSize?: number, schoolBoardId?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public studentCourseSelectionStudentCoursecategoriesGet(sortBy?: string, sortOrder?: 0 | 1 | -1, classId?: number,\n        sectionId?: number, courseCategoryId?: number, studentNames?: Array<string>, admissionNumbers?: Array<string>,\n        rollNumbers?: Array<string>, courseIds?: Array<string>, pageNumber?: number,\n        pageSize?: number, schoolBoardId?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public studentCourseSelectionStudentCoursecategoriesGet(sortBy?: string, sortOrder?: 0 | 1 | -1, classId?: number,\n        sectionId?: number, courseCategoryId?: number, studentNames?: Array<string>, admissionNumbers?: Array<string>,\n        rollNumbers?: Array<string>, courseIds?: Array<string>, pageNumber?: number,\n        pageSize?: number, schoolBoardId?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public studentCourseSelectionStudentCoursecategoriesGet(sortBy?: string, sortOrder?: 0 | 1 | -1, classId?: number,\n        sectionId?: number, courseCategoryId?: number, studentNames?: Array<string>, admissionNumbers?: Array<string>,\n        rollNumbers?: Array<string>, courseIds?: Array<string>, pageNumber?: number,\n        pageSize?: number, schoolBoardId?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(classId, 'ClassId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sectionId, 'SectionId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(courseCategoryId, 'CourseCategoryId', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(studentNames, 'StudentNames', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(admissionNumbers, 'AdmissionNumbers', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(rollNumbers, 'RollNumbers', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(courseIds, 'CourseIds', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(schoolBoardId, 'SchoolBoardId', queryParameters);\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/StudentCourseSelection/student-coursecategories`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * BaseWebAPI\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\n\nimport { BaseUrlConfig, ModuleConfig, BaseModuleConfig } from 'app/url.config';\nimport { StudentRequestIdView } from 'app/modules/academics/student-information-system/model/student-request-id-view';\nimport { StudentRequestView } from 'app/modules/academics/student-information-system/model/student-request-view';\nimport { Configuration } from '../base/configuration';\nimport { BASE_PATH } from '../base/variables';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { CommonComponent } from 'app/shared/common/common.component';\nimport { ApproveStudentRequestView } from 'app/modules/academics/student-information-system/model/approve-Student-Request';\n\n\n@Injectable()\nexport class StudentRequestService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Base;\n    // protected basePath = \"http://localhost:8013\";\n\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH)\n    basePath: string, @Optional() configuration: Configuration, private commonComponent: CommonComponent) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Approve Student Request\n     * \n     * @param authorization access token\n     * @param approveStudent \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public approveStudentRequest(approveStudent?: StudentRequestIdView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public approveStudentRequest(approveStudent?: StudentRequestIdView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public approveStudentRequest(approveStudent?: StudentRequestIdView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public approveStudentRequest(approveStudent?: StudentRequestIdView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n        // BaseModuleConfig._Approve_Student_Application\n        return this.httpClient.put<any>(`${this.basePath}` + BaseModuleConfig._Student_Request_Approve,\n            approveStudent,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Create Student Request\n     * \n     * @param authorization access token\n     * @param studentRequestView \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public createStudentRequest(studentRequestView?: StudentRequestView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public createStudentRequest(studentRequestView?: StudentRequestView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public createStudentRequest(studentRequestView?: StudentRequestView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public createStudentRequest(studentRequestView?: StudentRequestView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<any>(`${this.basePath}` + BaseModuleConfig._Student_Request_Create,\n            studentRequestView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Gets Generic List of Student Request Types\n     * \n     * @param authorization access token\n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public getStudentRequestTypes(schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string,\n        observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public getStudentRequestTypes(schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string,\n        observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public getStudentRequestTypes(schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string,\n        observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public getStudentRequestTypes(schoolId?: string, instituteId?: string, userId?: string, academicSessionId?: string,\n        observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n        if (schoolId !== undefined && schoolId !== null) {\n            headers = headers.set('SchoolId', String(schoolId));\n        }\n        if (instituteId !== undefined && instituteId !== null) {\n            headers = headers.set('InstituteId', String(instituteId));\n        }\n        if (userId !== undefined && userId !== null) {\n            headers = headers.set('UserId', String(userId));\n        }\n        if (academicSessionId !== undefined && academicSessionId !== null) {\n            headers = headers.set('AcademicSessionId', String(academicSessionId));\n        }\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Student_Request_Types,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Reject Student Request\n     * \n     * @param authorization access token\n     * @param rejectStudent \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public rejectStudentRequest(rejectStudent?: StudentRequestIdView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public rejectStudentRequest(rejectStudent?: StudentRequestIdView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public rejectStudentRequest(rejectStudent?: StudentRequestIdView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public rejectStudentRequest(rejectStudent?: StudentRequestIdView, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` + BaseModuleConfig._Student_Request_Reject,\n            rejectStudent,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Student Request Grid\n     * \n     * @param authorization access token\n     * @param studentRequestTypeIds Gets or Sets StudentRequestTypeIds\n     * @param studentName Gets or Sets StudentName\n     * @param status Gets or Sets Status\n     * @param admissionNumber Gets or Sets AdmissionNumber\n     * @param requestNotes Gets or Sets RequestNotes\n     * @param requestDateBegin Gets or Sets RequestDateBegin\n     * @param requestDateEnd Gets or Sets RequestDateEnd\n     * @param sortOrder Gets or Sets SortColumn\n     * @param sortBy Gets or Sets SortBy- \\&quot;ClassReference Name Code Description\\&quot;\n     * @param failedRecords Gets or Sets FailedRecords\n     * @param pageNumber \n     * @param pageSize \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId A\n     * ademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public studentRequestGrid(studentRequestTypeIds?: Array<string>, studentName?: Array<string>,\n        statusIds?: Array<string>, admissionNumber?: Array<string>, requestNotes?: Array<string>, requestDateBegin?: Date, requestDateEnd?: Date, sortOrder?: 0 | 1 | -1,\n        sortBy?: string, failedRecords?: Array<string>, pageNumber?: number, pageSize?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public studentRequestGrid(studentRequestTypeIds?: Array<string>, studentName?: Array<string>,\n        statusIds?: Array<string>, admissionNumber?: Array<string>, requestNotes?: Array<string>, requestDateBegin?: Date, requestDateEnd?: Date, sortOrder?: 0 | 1 | -1,\n        sortBy?: string, failedRecords?: Array<string>, pageNumber?: number, pageSize?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public studentRequestGrid(studentRequestTypeIds?: Array<string>, studentName?: Array<string>,\n        statusIds?: Array<string>, admissionNumber?: Array<string>, requestNotes?: Array<string>, requestDateBegin?: Date, requestDateEnd?: Date, sortOrder?: 0 | 1 | -1,\n        sortBy?: string, failedRecords?: Array<string>, pageNumber?: number, pageSize?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public studentRequestGrid(studentRequestTypeIds?: Array<string>, studentName?: Array<string>,\n        statusIds?: Array<string>, admissionNumber?: Array<string>, requestNotes?: Array<string>, requestDateBegin?: Date, requestDateEnd?: Date, sortOrder?: 0 | 1 | -1,\n        sortBy?: string, failedRecords?: Array<string>, pageNumber?: number, pageSize?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n\n\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        queryParameters = this.commonComponent.setQueryParams(studentRequestTypeIds, 'StudentRequestTypeIds', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(studentName, 'StudentName', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(statusIds, 'StatusIds', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(admissionNumber, 'AdmissionNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(requestNotes, 'RequestNotes', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(requestDateBegin, 'RequestDateBegin', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(requestDateEnd, 'RequestDateEnd', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortOrder, 'SortOrder', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(sortBy, 'SortBy', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(failedRecords, 'FailedRecords', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageNumber, 'PageNumber', queryParameters);\n        queryParameters = this.commonComponent.setQueryParams(pageSize, 'PageSize', queryParameters);\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}` + BaseModuleConfig._Student_Request_Grid,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n\n    /**\n     * Approve Student Request and Generate Certificate\n     * \n     * @param approveStudentRequestView \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public approveRequest(approveStudentRequestView?: ApproveStudentRequestView, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    // tslint:disable-next-line: max-line-length\n    public approveRequest(approveStudentRequestView?: ApproveStudentRequestView, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public approveRequest(approveStudentRequestView?: ApproveStudentRequestView, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public approveRequest(approveStudentRequestView?: ApproveStudentRequestView, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [        ];\n\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}` + BaseModuleConfig._Student_Request_Approve1,\n            approveStudentRequestView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * BaseWebAPI\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\n\n\nimport { Observable } from 'rxjs/Observable';\nimport { Configuration, BASE_PATH } from '../grading-service';\nimport { CustomHttpUrlEncodingCodec } from '../base/encoder';\nimport { BaseUrlConfig, ModuleConfig } from 'app/url.config';\nimport { StudentSectionAssignView } from 'app/modules/academics/student-information-system/model/students-section-assign-view';\n\n\n\n@Injectable()\nexport class StudentSectionsService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Base;\n    //  protected basePath = 'http://localhost:8013';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Student Data list\n     * \n     * @param sortBy Gets or Sets SortBy\n     * @param classId Gets or sets column ClassId\n     * @param schoolBoardId Gets or sets column SchoolBoardId\n     * @param classIds Gets or sets column ClassIds\n     * @param sectionIds Gets or sets column SectionIds\n     * @param studentNames Gets or sets column StudentNames\n     * @param admissionNumbers Gets or sets column AdmissionNumbers\n     * @param sortOrder Gets or Sets SortOrder\n     * @param pageNumber \n     * @param pageSize \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public studentData(sortBy?: string, classId?: number, schoolBoardId?: number,\n        classIds?: Array<string>, sectionIds?: Array<string>,\n        studentNames?: Array<string>, admissionNumbers?: Array<string>,\n        sortOrder?: 0 | 1 | -1, pageNumber?: number, pageSize?: number, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public studentData(sortBy?: string, classId?: number, schoolBoardId?: number,\n        classIds?: Array<string>, sectionIds?: Array<string>,\n        studentNames?: Array<string>, admissionNumbers?: Array<string>,\n        sortOrder?: 0 | 1 | -1, pageNumber?: number, pageSize?: number, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public studentData(sortBy?: string, classId?: number, schoolBoardId?: number,\n        classIds?: Array<string>, sectionIds?: Array<string>,\n        studentNames?: Array<string>, admissionNumbers?: Array<string>,\n        sortOrder?: 0 | 1 | -1, pageNumber?: number, pageSize?: number, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public studentData(sortBy?: string, classId?: number, schoolBoardId?: number,\n        classIds?: Array<string>, sectionIds?: Array<string>,\n        studentNames?: Array<string>, admissionNumbers?: Array<string>,\n        sortOrder?: 0 | 1 | -1, pageNumber?: number, pageSize?: number, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (sortBy !== undefined && sortBy !== null) {\n            queryParameters = queryParameters.set('SortBy', <any>sortBy);\n        }\n        if (classId !== undefined && classId !== null) {\n            queryParameters = queryParameters.set('ClassId', <any>classId);\n        }\n        if (schoolBoardId !== undefined && schoolBoardId !== null) {\n            queryParameters = queryParameters.set('SchoolBoardId', <any>schoolBoardId);\n        }\n        if (classIds) {\n            classIds.forEach((element) => {\n                queryParameters = queryParameters.append('ClassIds', <any>element);\n            });\n        }\n        if (sectionIds) {\n            sectionIds.forEach((element) => {\n                queryParameters = queryParameters.append('SectionIds', <any>element);\n            });\n        }\n        if (studentNames) {\n            studentNames.forEach((element) => {\n                queryParameters = queryParameters.append('StudentNames', <any>element);\n            });\n        }\n        if (admissionNumbers) {\n            admissionNumbers.forEach((element) => {\n                queryParameters = queryParameters.append('AdmissionNumbers', <any>element);\n            });\n        }\n        if (sortOrder !== undefined && sortOrder !== null) {\n            queryParameters = queryParameters.set('SortOrder', <any>sortOrder);\n        }\n        if (pageNumber !== undefined && pageNumber !== null) {\n            queryParameters = queryParameters.set('PageNumber', <any>pageNumber);\n        }\n        if (pageSize !== undefined && pageSize !== null) {\n            queryParameters = queryParameters.set('PageSize', <any>pageSize);\n        }\n\n        let headers = this.defaultHeaders;\n\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/StudentSections/student-list`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n     /**\n     * StudentsSectionAssignment\n     * \n     * @param authorization access token\n     * @param studentSectionAssignView \n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public studentsSectionAssignment( studentSectionAssignView?: StudentSectionAssignView,  observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public studentsSectionAssignment( studentSectionAssignView?: StudentSectionAssignView,  observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public studentsSectionAssignment( studentSectionAssignView?: StudentSectionAssignView,  observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public studentsSectionAssignment( studentSectionAssignView?: StudentSectionAssignView,  observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n\n        let headers = this.defaultHeaders;\n     \n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json-patch+json',\n            'application/json',\n            'text/json',\n            'application/_*+json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.basePath}/StudentSections/students-section-assignment`,\n            studentSectionAssignView,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n }\n"],"sourceRoot":""}