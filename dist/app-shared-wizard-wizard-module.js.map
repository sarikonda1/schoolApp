{"version":3,"sources":["webpack:///./src/app/shared/wizard/wizard.component.html","webpack:///./src/app/shared/wizard/wizard.component.scss","webpack:///./src/app/shared/wizard/wizard.component.ts","webpack:///./src/app/shared/wizard/wizard.module.ts","webpack:///./src/app/shared/wizard/wizard.service.ts"],"names":[],"mappings":"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","file":"app-shared-wizard-wizard-module.js","sourcesContent":["module.exports = \"<mat-tab-group [(selectedIndex)]=\\\"selectedIndex\\\" (selectionChange)=\\\"selectionChanged($event)\\\" (selectedIndexChange)=\\\"selected($event)\\\"\\n    class=\\\"mat-elevation-z6 m-16 radius-10 wizard-form tabs-to-spteps\\\">\\n    <mat-tab>\\n        <ng-template mat-tab-label>\\n            <div class=\\\"tab-label-status\\\">1</div>\\n            <div class=\\\"tab-title font-size-14 text-capitalized\\\" translate>Start</div>\\n        </ng-template>\\n        <ng-template matTabContent>\\n            <div [innerHTML]=\\\"wizardInfo\\\" class=\\\"mt-32 text-center\\\"></div>\\n            <div fxLayoutAlign=\\\"center center\\\">\\n                <button mat-raised-button type=\\\"button\\\" color=\\\"accent\\\" class=\\\"my-24\\\" (click)=\\\"startWizard()\\\"\\n                    ><span translate>Start</span></button>\\n            </div>\\n        </ng-template>\\n    </mat-tab>\\n\\n    <mat-tab *ngFor=\\\"let step of steps;  let i = index\\\">\\n        <ng-template mat-tab-label>\\n            <div class=\\\"tab-label-status\\\"\\n                [ngClass]=\\\"(wizardStatus[step.component] == 'complete') ? 'complete' : 'pending'\\\">\\n                <mat-icon *ngIf=\\\"wizardStatus[step.component] == 'complete'; else mat_tab_number;\\\" class=\\\"font-size-16 pt-8\\\">check</mat-icon>\\n                <ng-template #mat_tab_number>{{i + 2}}</ng-template>\\n            </div>\\n            <div class=\\\"tab-title font-size-14 text-capitalized\\\" translate>{{step.title | titlecase}}</div>\\n        </ng-template>\\n        <ng-template matTabContent>\\n            <mat-checkbox fxLayoutAlign=\\\"end\\\" class=\\\"mr-36 mt-24\\\"\\n                [checked]=\\\"(wizardStatus[step.component] == 'complete')\\\"\\n                (change)=\\\"markAsCompleted($event,step.component)\\\">\\n                {{'Mark as Completed' | translate}}\\n            </mat-checkbox>\\n            <div>\\n                <ng-container *ngComponentOutlet=\\\"step.componentObj\\\"></ng-container>\\n            </div>\\n        </ng-template>\\n    </mat-tab>\\n\\n    <mat-tab>\\n        <ng-template mat-tab-label>\\n            <div class=\\\"tab-label-status\\\">{{steps?.length + 2}}</div>\\n            <div class=\\\"tab-title font-size-14 text-capitalized\\\" translate>Done</div>\\n        </ng-template>\\n        <ng-template matTabContent>\\n            <div class=\\\"text-center h2 mt-32\\\" translate>You have reached the end of this setup wizard.</div>\\n            <div class=\\\"text-center h2 mb-32\\\" translate>You may review the steps again or use other setup wizards for additional functions.</div>\\n        </ng-template>\\n    </mat-tab>\\n\\n</mat-tab-group>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC93aXphcmQvd2l6YXJkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { AfterViewChecked, AfterViewInit, Component, OnInit, ViewChild, HostListener } from '@angular/core';\n\nimport { MatStepper } from '@angular/material';\nimport { ActivatedRoute } from '@angular/router';\nimport { WizardService } from './wizard.service';\nimport { ClassesComponent } from '../../modules/configuration/general/classes/classes.component';\nimport { SectionComponent } from '../../modules/configuration/general/section/section.component';\nimport { CoursesComponent } from '../../modules/configuration/general/courses/courses.component';\nimport { ManageSchoolComponent } from '../../modules/school-admin/manage-school/manage-school.component';\nimport { SchoolInfrastructureComponent } from '../../modules/school-admin/school-infrastructure/school-infrastructure.component';\nimport { SequenceConfigurationComponent } from '../../modules/school-admin/sequence-configuration/sequence-configuration.component';\nimport { CourseCategoriesComponent } from '../../modules/configuration/general/course-categories/course-categories.component';\nimport { ClassperiodtypesComponent } from '../../modules/configuration/general/classperiodtypes/class-period-types.component';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { StudentApplicationCategoriesComponent } from '../../modules/configuration/general/student-application-categories/student-application-categories.component';\nimport { EventTypesComponent } from '../../modules/configuration/general/event-types/event-types.component';\nimport { SchoolFacilitiesComponent } from '../../modules/configuration/general/school-facilities/school-facilities.component';\nimport { SchoolFacilityRepresentativesComponent } from '../../modules/staff/staff-information-system/school-facility-representatives/school-facility-representatives.component';\nimport { StudentGroupRepresentativeRoleComponent } from '../../modules/configuration/general/student-group-representative-role/student-group-representative-role.component';\nimport { AssessmentGroupsComponent } from '../../modules/configuration/assessment/assessment-groups/assessment-groups.component';\nimport { AssessmentCategoriesComponent } from '../../modules/configuration/assessment/assessment-categories/assessment-categories.component';\nimport { AssessmentParametersComponent } from '../../modules/configuration/assessment/assessment-parameters/assessment-parameters.component';\nimport { ClassAssessmentConfigurationComponent } from '../../modules/configuration/assessment/class-assessment-configuration/class-assessment-configuration.component';\nimport { AcademicGradesComponent } from '../../modules/configuration/grading/academic-grades/academic-grades.component';\nimport { AssessmentGradesComponent } from '../../modules/configuration/grading/assessment-grades/assessment-grades.component';\nimport { TestTypeComponent } from '../../modules/configuration/grading/test-type/test-type.component';\nimport { GradingTermsComponent } from '../../modules/configuration/grading/grading-terms/grading-terms.component';\nimport { FeeTermsComponent } from '../../modules/configuration/finance/fee-terms/fee-terms.component';\nimport { FeeTypeComponent } from '../../modules/configuration/finance/fee-type/fee-type.component';\nimport { FeeTypeTranchesComponent } from '../../modules/configuration/finance/fee-type-tranches/fee-type-tranches.component';\nimport { FeeConcessionGroupComponent } from '../../modules/configuration/finance/fee-concession-group/fee-concession-group.component';\nimport { LateFeeRulesComponent } from '../../modules/configuration/finance/late-fee-rules/late-fee-rules.component';\nimport { ManageFeesComponent } from '../../modules/configuration/finance/manage-fees/manage-fees.component';\nimport { ManageFeeTranchesComponent } from '../../modules/configuration/finance/manage-fee-tranches/manage-fee-tranches.component';\nimport { SchoolScheduleTemplatesComponent } from '../../modules/configuration/class-schedules/school-schedule-templates/school-schedule-templates.component';\nimport { ClassTimetableComponent } from '../../modules/configuration/class-schedules/class-timetable/class-timetable.component';\nimport { HolidaysComponent } from '../../modules/configuration/class-schedules/holidays/holidays.component';\nimport { SchoolServiceProviderConfigView } from '../../modules/school-admin/models/school-service-provider-config-view';\nimport { ServiceConfigurationComponent } from '../../modules/school-admin/service-configuration/service-configuration.component';\nimport { CommunicationTypesComponent } from '../../modules/configuration/communication/communication-types/communication-types.component';\nimport { FeeAccountsComponent } from 'app/modules/configuration/finance/fee-accounts/fee-accounts.component';\n\nimport { SchoolRepRoleComponent } from 'app/modules/configuration/general/school-rep-role/schoolreprole/schoolreprole.component';\nimport { Location } from '@angular/common';\nimport { CommonComponent } from '../common/common.component';\nimport { AcademicSessionComponent } from 'app/modules/configuration/academic/academic-session/academic-session.component';\nimport { ClassTimetablesComponent } from 'app/modules/configuration/class-schedules/class-timetables/class-timetables.component';\n@Component({\n  selector: 'app-wizard',\n  templateUrl: './wizard.component.html',\n  styleUrls: ['./wizard.component.scss']\n})\nexport class WizardComponent extends CommonComponent  implements AfterViewInit, AfterViewChecked, OnInit {\n  @ViewChild('wizardStepper')\n  wizardStepper: MatStepper;\n  currentSetup: string;\n  wizardInfo: any;\n  steps = [];\n  wizardStatus: {};\n  public selectedIndex = 0;\n  @HostListener('window:popstate', ['$event'])\n\n\n  components = {\n    'ClassesComponent': ClassesComponent,\n    'SectionComponent': SectionComponent,\n    'CoursesComponent': CoursesComponent,\n    'ManageSchoolComponent': ManageSchoolComponent,\n    'SchoolInfrastructureComponent': SchoolInfrastructureComponent,\n    'SequenceConfigurationComponent': SequenceConfigurationComponent,\n    'CourseCategoriesComponent': CourseCategoriesComponent,\n    'ClassperiodtypesComponent': ClassperiodtypesComponent,\n    'StudentApplicationCategoriesComponent': StudentApplicationCategoriesComponent,\n    'AcademicSessionsComponent': AcademicSessionComponent,\n    'EventTypesComponent': EventTypesComponent,\n    'SchoolFacilitiesComponent': SchoolFacilitiesComponent,\n    'SchoolRepRoleComponentComponent': SchoolRepRoleComponent,\n    'StudentGroupRepresentativeRoleComponent': StudentGroupRepresentativeRoleComponent,\n    'AssessmentGroupsComponent': AssessmentGroupsComponent,\n    'AssessmentCategoriesComponent': AssessmentCategoriesComponent,\n    'AssessmentParametersComponent': AssessmentParametersComponent,\n    'ClassAssessmentConfigurationComponent': ClassAssessmentConfigurationComponent,\n    'AcademicGradesComponent': AcademicGradesComponent,\n    'AssessmentGradesComponent': AssessmentGradesComponent,\n    'TestTypeComponent': TestTypeComponent,\n    'GradingTermsComponent': GradingTermsComponent,\n    'FeeTermsComponent': FeeTermsComponent,\n    'FeeTypeComponent': FeeTypeComponent,\n    'FeeTypeTranchesComponent': FeeTypeTranchesComponent,\n    'FeeConcessionGroupComponent': FeeConcessionGroupComponent,\n    'LateFeeRulesComponent': LateFeeRulesComponent,\n    'ManageFeesComponent': ManageFeesComponent,\n    'ManageFeeTranchesComponent': ManageFeeTranchesComponent,\n    'SchoolScheduleTemplatesComponent': SchoolScheduleTemplatesComponent,\n    'ClassTimetableComponent': ClassTimetablesComponent,\n    'HolidaysComponent': HolidaysComponent,\n    'ServiceConfigurationComponent': ServiceConfigurationComponent,\n    'CommunicationTypesComponent': CommunicationTypesComponent,\n    'FeeAccountsComponent': FeeAccountsComponent,\n\n  };\n\n  loadedSteps = [];\n  setIndex: number;\n  constructor(activatedRoute: ActivatedRoute,\n    public wizardService: WizardService,\n    private sanitizer: DomSanitizer,\n    public location: Location\n  ) {\n    super();\n    this.currentSetup = activatedRoute.snapshot.url[0].path;  // to print only path eg:\"/login\n    this.getWizardSettings();\n  }\n  // onPopState(event): void {\n  //   this.switchTabs(window.location.hash);\n  // }\n\n  ngOnInit(): void {\n    if (!window.location.hash) {\n      this.selected(this.selectedIndex);\n    }\n    else {\n      this.switchTabs(window.location.hash);\n    }\n  }\n\n  public selectionChanged(event: any): void {\n    this.selectedIndex = event.selectedIndex;\n    this.setIndex = event.selectedIndex - 1;\n    this.loadedSteps[event.selectedIndex] = true;\n  }\n\n  public stepLoaded(step): boolean {\n\n    return (this.loadedSteps[step] !== undefined && this.loadedSteps[step]) ? true : false;\n\n  }\n  public ngAfterViewInit(): void {\n\n  }\n\n  public ngAfterViewChecked(): void {\n    // this.wizardStepper.selectedIndex = this.selectedIndex;\n  }\n\n  public startWizard(): void {\n    // this.wizardStepper.next();\n    this.selectedIndex = this.selectedIndex + 1;\n  }\n\n  public getWizardSettings(): any {\n    this.wizardService.wizardGet(this.currentSetup)\n      .subscribe(\n        response => {\n          this.selectedIndex = 0;\n          const stepsInfo = JSON.parse(response.wizardConfigData.config);\n          this.wizardInfo =  this.sanitizer.bypassSecurityTrustHtml(response.wizardConfigData.description);\n          const stepsStatus = (response.wizardConfigData.status == null) ? {} : JSON.parse(response.wizardConfigData.status);\n          let i = 1;\n          let completedIndex = null;\n          stepsInfo.forEach(componentDetails => {\n            const ComponentType = this.components[componentDetails.component];\n            componentDetails.componentObj = ComponentType;\n            if (stepsStatus[componentDetails.component] === undefined) {\n              stepsStatus[componentDetails.component] = 'pending';\n            }\n            if (stepsStatus[componentDetails.component] === 'pending' && !this.selectedIndex) {\n              this.selectedIndex = i;\n            }\n            if (stepsStatus[componentDetails.component] === 'complete') {\n              completedIndex = i + 1;\n            }\n            this.selectedIndex = (response.wizardConfigData.status == null) ? 0 : this.selectedIndex;\n            i++;\n          });\n          if (completedIndex && !this.selectedIndex){\n            this.selectedIndex = completedIndex;\n          }\n          this.steps = stepsInfo;\n          this.wizardStatus = [];\n          this.wizardStatus = stepsStatus;\n          if (!window.location.hash) {\n            this.selected(this.selectedIndex);\n          }\n          else {\n            this.switchTabs(window.location.hash);\n          }\n        }, error => {\n          this.errorResponse(error);\n        }\n      );\n  }\n\n  public markAsCompleted(event, component): any {\n    const currentStatus = (!event.checked) ? 'pending' : 'complete';\n    this.updateStatus(currentStatus, component);\n  }\n\n  public updateStatus(status: string, component: string): any {\n    this.wizardStatus[component] = status;\n    this.wizardService.update(this.currentSetup, JSON.stringify(this.wizardStatus))\n      .subscribe(\n        response => {\n          if (status === 'complete') {\n            let nextIndex = null;\n            Object.keys(this.wizardStatus).forEach((key, index) => {\n              if (component === key) {\n                nextIndex = index + 1;\n              }\n            });\n            if (this.steps.length !== nextIndex && this.wizardStatus[this.steps[nextIndex].component] === 'pending') {\n              this.selectedIndex = this.selectedIndex + 1;\n            } else {\n              let i = null;\n              for (let index = 0; index < this.steps.length; index++) {\n                if (this.wizardStatus[this.steps[index].component] === 'pending') {\n                  i = index;\n                  break;\n                }\n              }\n              if (this.selectedIndex === this.steps.length && i !== null) {\n                this.selectedIndex = i + 1;\n              } else if (this.selectedIndex !== this.steps.length && i !== null) {\n                this.selectedIndex = i + 1;\n              } else {\n                this.selectedIndex = this.steps.length + 1;\n              }\n            }\n          }\n        }\n      );\n  }\n\n  selected(value: number): void {\n    if (value > this.steps.length) {\n      window.location.hash = 'Done';\n    } else if (value === 0) {\n      window.location.hash = 'Start';\n    }\n    else {\n      const i = value > 0 ? value - 1 : value;\n      window.location.hash = this.steps[i].title;\n    }\n\n  }\n\n  switchTabs(value): void {\n    if (decodeURIComponent(value).split('#')[1]) {\n      this.selectedIndex = this.steps.findIndex(x => x.title === decodeURIComponent(value).split('#')[1]) + 1;\n      if (this.selectedIndex === 0) {\n        this.selectedIndex = (decodeURIComponent(value).split('#')[1] === 'Done') ? this.steps.length + 2 : 0;\n      }\n    }\n  }\n\n  @HostListener('window:popstate', ['$event'])\n  onPopState(event): void {\n    this.switchTabs(window.location.hash);\n  }\n}\n","import { NgModule, NO_ERRORS_SCHEMA, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedManagementModule } from 'app/shared/shared.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from 'app/interceptors/token-interceptor';\nimport { ApplicationCategoryService } from 'app/service/academic-service/api/application-category.service';\nimport { AssessmentCategoriesService } from 'app/service/assessment-service/api/assessment-categories.service';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoursesConfigurationService } from 'app/service/general/api/courses_configuration.service';\nimport { StatusService } from 'app/service/academic-service/api/status.service';\nimport {ConfigurationModule} from '../../modules/configuration/configuration.module';\nimport {WizardComponent} from './wizard.component';\n\nimport { Routes } from '@angular/router';\nimport {MatcomponentsModule} from '../../main/matcomponents.module';\nimport {GeneralModule} from '../../modules/configuration/general/general.module';\nimport {WizardService} from './wizard.service';\nimport {SchoolAdminModule} from '../../modules/school-admin/school-admin.module';\nimport {SchoolInfrastructureComponent} from '../../modules/school-admin/school-infrastructure/school-infrastructure.component';\nimport { FuseSharedModule } from '@fuse/shared.module';\nimport {AcademicModule} from '../../modules/configuration/academic/academic.module';\nimport {StaffInformationSystemModule} from '../../modules/staff/staff-information-system/staff-information-system.module';\nimport {AssessmentModule} from '../../modules/configuration/assessment/assessment.module';\nimport {GradingModule} from '../../modules/configuration/grading/grading.module';\nimport {FinanceModule} from '../../modules/configuration/finance/finance.module';\nimport {ClassSchedulesModule} from '../../modules/configuration/class-schedules/class-schedules.module';\nimport {CommunicationTypesComponent} from '../../modules/configuration/communication/communication-types/communication-types.component';\nimport {CommunicationModule} from '../../modules/configuration/communication/communication.module';\nimport { AcademicSessionComponent } from 'app/modules/configuration/academic/academic-session/academic-session.component';\nimport { AcademicSessionDetailsComponent } from 'app/modules/configuration/academic/academic-session-details/academic-session-details.component';\n\n\n\nconst routes: Routes = [\n    {\n        path: 'required-school-configuration',\n        component: WizardComponent,\n        data: {title: 'School Configuration'} \n    },\n    {\n        path: 'optional-school-configuration',\n        component: WizardComponent,\n        data: {title: 'Optional School Configuration'} \n    },\n    {\n        path: 'grading-configuration',\n        component: WizardComponent,\n        data: {title: 'Grading Configuration'} \n    },\n    {\n        path: 'finance-configuration',\n        component: WizardComponent,\n        data: {title: 'Finance Configuration'} \n    },\n    {\n        path: 'class-schedule-configuration',\n        component: WizardComponent,\n        data: {title: 'Class Schedule Configuration'} \n    },\n    {\n        path: 'school-communication-configuration',\n        component: WizardComponent,\n        data: {title: 'School Communication Configuration'} \n    },\n    { path: 'required-school-configuration/academic-sessions/:id',\n      component: AcademicSessionComponent,\n      data: {title: 'Edit Academic Sessions'} \n    },\n    { path: 'required-school-configuration/academic-sessions-details/:id', \n      component: AcademicSessionDetailsComponent,\n      data: {title: 'Academic Sessions Details'} \n    },\n];\n\n@NgModule({\n    declarations: [],\n    imports: [RouterModule.forChild(routes)],\n    exports: [\n        RouterModule\n    ]\n})\nexport class WizardRoutingModule {\n\n}\n@NgModule({\n    declarations: [\n        WizardComponent,\n    ],\n    imports: [\n        CommonModule,\n        RouterModule,\n        FormsModule,\n        ReactiveFormsModule,\n        SharedManagementModule,\n        TranslateModule,\n        ConfigurationModule,\n        WizardRoutingModule,\n        MatcomponentsModule,\n        GeneralModule,\n        SchoolAdminModule,\n        StaffInformationSystemModule,\n        AssessmentModule,\n        AcademicModule,\n        GradingModule,\n        FinanceModule,\n        ClassSchedulesModule,\n        FuseSharedModule,\n        CommunicationModule\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: TokenInterceptor,\n            multi: true\n        },\n        ApplicationCategoryService,\n        CoursesConfigurationService,\n        AssessmentCategoriesService,\n        StatusService,\n        WizardService\n    ],\n    entryComponents : [\n        WizardComponent,\n        SchoolInfrastructureComponent,\n        CommunicationTypesComponent\n    ],\n    schemas: [NO_ERRORS_SCHEMA]\n})\nexport class WizardModule {\n    constructor() {\n    }\n}\n\n","/**\n * BaseWebAPI\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: v1\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n    HttpClient, HttpHeaders, HttpParams,\n    HttpResponse, HttpEvent\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport { BASE_PATH } from '../../service/base/variables';\nimport { CustomHttpUrlEncodingCodec } from '../../service/base/encoder';\nimport { Configuration } from '../../service/base/configuration';\nimport { BaseUrlConfig, ModuleConfig } from '../../url.config';\n\n\n@Injectable()\nexport class WizardService {\n\n    protected basePath = BaseUrlConfig.BasePath + ModuleConfig.Base;\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n\n    constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = basePath || configuration.basePath || this.basePath;\n        }\n    }\n\n    /**\n     * @param consumes string[] mime-types\n     * @return true: consumes contains 'multipart/form-data', false: otherwise\n     */\n    private canConsumeForm(consumes: string[]): boolean {\n        const form = 'multipart/form-data';\n        for (const consume of consumes) {\n            if (form === consume) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n\n    /**\n     * Get Wizard based on the Type given\n     * \n     * @param Code\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public wizardGet(Code?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public wizardGet(Code?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public wizardGet(Code?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public wizardGet(Code?: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (Code !== undefined && Code !== null) {\n            queryParameters = queryParameters.set('Code', <any>Code);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.get<any>(`${this.basePath}/Wizard`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Update Wizard based on the Type given\n     *\n     * @param code gets or sets Code\n     * @param status gets or sets Code\n     * @param schoolId SchoolId in Encrypted Form\n     * @param instituteId InstituteId in Encrypted Form\n     * @param userId UserId in Encrypted Form\n     * @param academicSessionId AcademicSessionId in Encrypted Form\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public update(code?: string, status?: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public update(code?: string, status?: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public update(code?: string, status?: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public update(code?: string, status?: string, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n\n        let queryParameters = new HttpParams({ encoder: new CustomHttpUrlEncodingCodec() });\n        if (code !== undefined && code !== null) {\n            queryParameters = queryParameters.set('Code', <any>code);\n        }\n        if (status !== undefined && status !== null) {\n            queryParameters = queryParameters.set('Status', <any>status);\n        }\n\n        let headers = this.defaultHeaders;\n\n\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n        ];\n\n        return this.httpClient.put<any>(`${this.basePath}/Wizard`,\n            null,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n"],"sourceRoot":""}